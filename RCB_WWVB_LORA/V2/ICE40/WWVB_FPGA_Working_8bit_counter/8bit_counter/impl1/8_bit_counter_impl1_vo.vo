
// Verilog netlist produced by program backanno, Version Radiant Software (64-bit) 2023.2.1.288.0

// backanno -o 8_bit_counter_impl1_vo.vo -sp High-Performance_1.2V -w -neg -gui -msgset C:/Users/julianstj/Desktop/WorkNotes/Projects/PTP/WWVB_SDR/ICE40/Projects/8bit_counter/promote.xml 8_bit_counter_impl1.udb 
// Netlist created on Mon Jul  1 11:00:54 2024
// Netlist written on Mon Jul  1 11:01:00 2024
// Design is for device iCE40UP5K
// Design is for package SG48
// Design is for performance grade High-Performance_1.2V

`timescale 1 ns / 1 ps

module top ( spi2_mosi, spi1_mosi, spi1_sck, spi2_sck, stm_fpga_spare5, 
             spi6_miso, sx1257_nss, sx1257_mosi, sx1257_i_in, sx1257_q_in, 
             sx1257_sck, sx1257_clk_out, sx1257_q_out, sx1257_miso, 
             sx1257_i_out, spi6_mosi, spi6_sck, spi6_nss, stm_fpga_spare4, 
             led1, led0, led2, tim1_ch1, i2c4_scl, i2c4_sda, hrtim_chb1, 
             sx1276_dio0, sx1257_clk1, hrtim_che2, spi2_miso, spi1_miso, 
             sx_rf_sw_ctrl, hrtim_eev7, tim8_c1, fpga_clk2, stm_fpga_spare1, 
             stm_fpga_spare2, stm_fpga_spare3, fpga_clk );
  input  stm_fpga_spare5, sx1257_clk_out, sx1257_q_out, sx1257_miso, 
         sx1257_i_out, spi6_mosi, spi6_sck, spi6_nss, stm_fpga_spare4, 
         tim1_ch1, i2c4_scl, i2c4_sda, hrtim_chb1, sx1276_dio0, sx1257_clk1, 
         hrtim_che2, spi2_miso, spi1_miso, sx_rf_sw_ctrl, hrtim_eev7, tim8_c1, 
         fpga_clk2, stm_fpga_spare1, stm_fpga_spare2, stm_fpga_spare3, 
         fpga_clk;
  output spi2_mosi, spi1_mosi, spi1_sck, spi2_sck, spi6_miso, sx1257_nss, 
         sx1257_mosi, sx1257_i_in, sx1257_q_in, sx1257_sck, led1, led0, led2;
  wire   \q_serializer.n5532 , VCC_net, \q_serializer.bit_counter[0] , 
         \q_serializer.n37[0] , \q_serializer.n2082 , \q_serializer.n5535 , 
         \q_serializer.bit_counter[2] , \q_serializer.bit_counter[1] , 
         \q_serializer.n37[1] , \q_serializer.n37[2] , \q_serializer.n2084 , 
         \q_serializer.n5538 , \q_serializer.bit_counter[4] , 
         \q_serializer.bit_counter[3] , \q_serializer.n37[3] , 
         \q_serializer.n37[4] , \q_serializer.n2086 , \q_serializer.n5541 , 
         \q_serializer.bit_counter[5] , \q_serializer.n37[5] , 
         \q_demod.n69[6] , \q_demod.n69[5] , \q_demod.n5256 , 
         \q_demod.int_reg[1][6] , \q_demod.int_reg[0][6] , \q_demod.n1971 , 
         \q_demod.int_reg[1][5] , \q_demod.int_reg[0][5] , stm_fpga_spare4_c, 
         sx1257_clk_out_c, \q_demod.n1973 , \q_demod.n69[4] , \q_demod.n69[3] , 
         \q_demod.n5253 , \q_demod.int_reg[1][4] , \q_demod.int_reg[0][4] , 
         \q_demod.n1969 , \q_demod.int_reg[1][3] , \q_demod.int_reg[0][3] , 
         \q_demod.n69[2] , \q_demod.n69[1] , \q_demod.n5250 , 
         \q_demod.int_reg[1][2] , \q_demod.int_reg[0][2] , \q_demod.n1967 , 
         \q_demod.int_reg[1][1] , \q_demod.int_reg[0][1] , \q_demod.n69[0] , 
         \q_demod.n5247 , \q_demod.int_reg[1][0] , \q_demod.int_reg[0][0] , 
         \q_demod.n92[13] , \q_demod.n92[12] , \q_demod.n5325 , \q_demod.n336 , 
         \q_demod.int_reg[0][12] , \q_demod.n2201 , \q_demod.int_reg[0][11] , 
         \q_demod.n92[11] , \q_demod.n92[10] , \q_demod.n5322 , 
         \q_demod.int_reg[0][10] , \q_demod.n2199 , \q_demod.int_reg[0][9] , 
         \q_demod.n92[9] , \q_demod.n92[8] , \q_demod.n5319 , 
         \q_demod.int_reg[0][8] , \q_demod.n2197 , \q_demod.int_reg[0][7] , 
         \q_demod.n69_adj_509[12] , \q_demod.n69_adj_509[11] , \q_demod.n5433 , 
         \q_demod.int_reg[2][12] , \q_demod.int_reg[1][12] , \q_demod.n2008 , 
         \q_demod.int_reg[2][11] , \q_demod.int_reg[1][11] , \q_demod.n69[12] , 
         \q_demod.n69[11] , \q_demod.n5265 , \q_demod.n1977 , \q_demod.n29[4] , 
         \q_demod.n29[3] , \q_demod.n5508 , \q_demod.cycle_reg[4] , 
         \q_demod.n1986 , \q_demod.cycle_reg[3] , \q_demod.n1379 , 
         \q_demod.n1988 , \q_demod.n92[7] , \q_demod.n92[6] , \q_demod.n5316 , 
         \q_demod.n2195 , \q_demod.n92[5] , \q_demod.n92[4] , \q_demod.n5313 , 
         \q_demod.n2193 , \q_demod.n92[3] , \q_demod.n92[2] , \q_demod.n5310 , 
         \q_demod.n2191 , \q_demod.n92[1] , \q_demod.n5298 , q_out_synced, 
         \q_demod.n742[12] , \q_demod.n5352 , \q_demod.n2145 , 
         \q_demod.n1_adj_508[12] , \q_demod.comb_reg[0][12] , \q_demod.n453 , 
         \q_demod.comb_reg[1][12] , \q_demod.n742[11] , \q_demod.n742[10] , 
         \q_demod.n5349 , \q_demod.n1_adj_508[11] , \q_demod.comb_reg[0][11] , 
         \q_demod.n2143 , \q_demod.n1_adj_508[10] , \q_demod.comb_reg[0][10] , 
         \q_demod.comb_reg[1][10] , \q_demod.comb_reg[1][11] , 
         \q_demod.n742[9] , \q_demod.n742[8] , \q_demod.n5346 , 
         \q_demod.n1_adj_508[9] , \q_demod.comb_reg[0][9] , \q_demod.n2141 , 
         \q_demod.n1_adj_508[8] , \q_demod.comb_reg[0][8] , 
         \q_demod.comb_reg[1][8] , \q_demod.comb_reg[1][9] , \q_demod.n742[7] , 
         \q_demod.n742[6] , \q_demod.n5343 , \q_demod.n1_adj_508[7] , 
         \q_demod.comb_reg[0][7] , \q_demod.n2139 , \q_demod.n1_adj_508[6] , 
         \q_demod.comb_reg[0][6] , \q_demod.comb_reg[1][6] , 
         \q_demod.comb_reg[1][7] , \q_demod.n742[5] , \q_demod.n742[4] , 
         \q_demod.n5340 , \q_demod.n1_adj_508[5] , \q_demod.comb_reg[0][5] , 
         \q_demod.n2137 , \q_demod.n1_adj_508[4] , \q_demod.comb_reg[0][4] , 
         \q_demod.comb_reg[1][4] , \q_demod.comb_reg[1][5] , \q_demod.n742[3] , 
         \q_demod.n742[2] , \q_demod.n5337 , \q_demod.n1_adj_508[3] , 
         \q_demod.comb_reg[0][3] , \q_demod.n2135 , \q_demod.n1_adj_508[2] , 
         \q_demod.comb_reg[0][2] , \q_demod.comb_reg[1][2] , 
         \q_demod.comb_reg[1][3] , \q_demod.n742[1] , \q_demod.n742[0] , 
         \q_demod.n5277 , \q_demod.n1_adj_508[1] , \q_demod.comb_reg[0][1] , 
         \q_demod.n1_adj_508[0] , \q_demod.comb_reg[0][0] , 
         \q_demod.comb_reg[1][0] , \q_demod.comb_reg[1][1] , 
         \q_demod.n1313[12] , \q_demod.n5469 , \q_demod.n2132 , 
         \q_demod.n1_adj_507[12] , \q_demod.n1313[11] , \q_demod.n1313[10] , 
         \q_demod.n5466 , \q_demod.n1_adj_507[11] , \q_demod.n2130 , 
         \q_demod.n1_adj_507[10] , \q_demod.int_reg[2][10] , 
         \q_demod.n1313[9] , \q_demod.n1313[8] , \q_demod.n5463 , 
         \q_demod.n1_adj_507[9] , \q_demod.int_reg[2][9] , \q_demod.n2128 , 
         \q_demod.n1_adj_507[8] , \q_demod.int_reg[2][8] , \q_demod.n1313[7] , 
         \q_demod.n1313[6] , \q_demod.n5460 , \q_demod.n1_adj_507[7] , 
         \q_demod.int_reg[2][7] , \q_demod.n2126 , \q_demod.n1_adj_507[6] , 
         \q_demod.int_reg[2][6] , \q_demod.n1313[5] , \q_demod.n1313[4] , 
         \q_demod.n5457 , \q_demod.n1_adj_507[5] , \q_demod.int_reg[2][5] , 
         \q_demod.n2124 , \q_demod.n1_adj_507[4] , \q_demod.int_reg[2][4] , 
         \q_demod.n1313[3] , \q_demod.n1313[2] , \q_demod.n5454 , 
         \q_demod.n1_adj_507[3] , \q_demod.int_reg[2][3] , \q_demod.n2122 , 
         \q_demod.n1_adj_507[2] , \q_demod.int_reg[2][2] , \q_demod.n1313[1] , 
         \q_demod.n1313[0] , \q_demod.n5355 , \q_demod.n1_adj_507[1] , 
         \q_demod.int_reg[2][1] , \q_demod.n1_adj_507[0] , 
         \q_demod.int_reg[2][0] , \q_demod.n77[13] , \q_demod.n5379 , 
         \q_demod.n2119 , \q_demod.n1[12] , \q_demodulated_data[12] , 
         \q_demod.n77[12] , \q_demod.n77[11] , \q_demod.n5376 , 
         \q_demod.n1[11] , \q_demod.n2117 , \q_demod.n1[10] , 
         \q_demodulated_data[10] , \q_demodulated_data[11] , \q_demod.n77[10] , 
         \q_demod.n77[9] , \q_demod.n5373 , \q_demod.n1[9] , \q_demod.n2115 , 
         \q_demod.n1[8] , \q_demodulated_data[8] , \q_demodulated_data[9] , 
         \q_demod.n77[8] , \q_demod.n77[7] , \q_demod.n5370 , \q_demod.n1[7] , 
         \q_demod.n2113 , \q_demod.n1[6] , \q_demodulated_data[6] , 
         \q_demodulated_data[7] , \q_demod.n77[6] , \q_demod.n77[5] , 
         \q_demod.n5367 , \q_demod.n1[5] , \q_demod.n2111 , \q_demod.n1[4] , 
         \q_demodulated_data[4] , \q_demodulated_data[5] , \q_demod.n77[4] , 
         \q_demod.n77[3] , \q_demod.n5364 , \q_demod.n1[3] , \q_demod.n2109 , 
         \q_demod.n1[2] , \q_demodulated_data[2] , \q_demodulated_data[3] , 
         \q_demod.n77[2] , \q_demod.n77[1] , \q_demod.n5274 , \q_demod.n1[1] , 
         \q_demod.n1[0] , \q_demodulated_data[0] , \q_demodulated_data[1] , 
         \q_demod.n69_adj_509[10] , \q_demod.n69_adj_509[9] , \q_demod.n5430 , 
         \q_demod.int_reg[1][10] , \q_demod.n2006 , \q_demod.int_reg[1][9] , 
         \q_demod.n69_adj_509[8] , \q_demod.n69_adj_509[7] , \q_demod.n5427 , 
         \q_demod.int_reg[1][8] , \q_demod.n2004 , \q_demod.int_reg[1][7] , 
         \q_demod.n69[10] , \q_demod.n69[9] , \q_demod.n5262 , \q_demod.n1975 , 
         \q_demod.n29[5] , \q_demod.n5511 , \q_demod.cycle_reg[5] , 
         \q_demod.n29[2] , \q_demod.n29[1] , \q_demod.n5505 , 
         \q_demod.cycle_reg[2] , \q_demod.n1984 , \q_demod.cycle_reg[1] , 
         \q_demod.n29[0] , \q_demod.n5502 , \q_demod.cycle_reg[0] , 
         \q_demod.n69_adj_509[6] , \q_demod.n69_adj_509[5] , \q_demod.n5424 , 
         \q_demod.n2002 , \q_demod.n69_adj_509[4] , \q_demod.n69_adj_509[3] , 
         \q_demod.n5421 , \q_demod.n2000 , \q_demod.n69_adj_509[2] , 
         \q_demod.n69_adj_509[1] , \q_demod.n5418 , \q_demod.n1998 , 
         \q_demod.n69_adj_509[0] , \q_demod.n5331 , \q_demod.n69[8] , 
         \q_demod.n69[7] , \q_demod.n5259 , \i_demod.n69[12] , 
         \i_demod.n69[11] , \i_demod.n5415 , \i_demod.int_reg[1][12] , 
         \i_demod.int_reg[0][12] , \i_demod.n2058 , \i_demod.int_reg[1][11] , 
         \i_demod.int_reg[0][11] , \i_demod.n69[10] , \i_demod.n69[9] , 
         \i_demod.n5412 , \i_demod.int_reg[1][10] , \i_demod.int_reg[0][10] , 
         \i_demod.n2056 , \i_demod.int_reg[1][9] , \i_demod.int_reg[0][9] , 
         \i_demod.n69[8] , \i_demod.n69[7] , \i_demod.n5409 , 
         \i_demod.int_reg[1][8] , \i_demod.int_reg[0][8] , \i_demod.n2054 , 
         \i_demod.int_reg[1][7] , \i_demod.int_reg[0][7] , \i_demod.n69[6] , 
         \i_demod.n69[5] , \i_demod.n5406 , \i_demod.int_reg[1][6] , 
         \i_demod.int_reg[0][6] , \i_demod.n2052 , \i_demod.int_reg[1][5] , 
         \i_demod.int_reg[0][5] , \i_demod.n69_adj_451[2] , 
         \i_demod.n69_adj_451[1] , \i_demod.n5436 , \i_demod.int_reg[2][2] , 
         \i_demod.int_reg[1][2] , \i_demod.n2065 , \i_demod.int_reg[2][1] , 
         \i_demod.int_reg[1][1] , \i_demod.n2067 , \i_demod.n69_adj_451[4] , 
         \i_demod.n69_adj_451[3] , \i_demod.n5439 , \i_demod.int_reg[2][4] , 
         \i_demod.int_reg[1][4] , \i_demod.int_reg[2][3] , 
         \i_demod.int_reg[1][3] , \i_demod.n2069 , \i_demod.n69_adj_451[6] , 
         \i_demod.n69_adj_451[5] , \i_demod.n5442 , \i_demod.int_reg[2][6] , 
         \i_demod.int_reg[2][5] , \i_demod.n2071 , \i_demod.n69[4] , 
         \i_demod.n69[3] , \i_demod.n5403 , \i_demod.int_reg[0][4] , 
         \i_demod.n2050 , \i_demod.int_reg[0][3] , \i_demod.n69_adj_451[8] , 
         \i_demod.n69_adj_451[7] , \i_demod.n5445 , \i_demod.int_reg[2][8] , 
         \i_demod.int_reg[2][7] , \i_demod.n2073 , \i_demod.n727[12] , 
         \i_demod.n5295 , \i_demod.n2188 , \i_demod.n1_adj_453[12] , 
         \i_demod.comb_reg[0][12] , \i_demod.n441 , \i_demod.comb_reg[1][12] , 
         \i_demod.n727[11] , \i_demod.n727[10] , \i_demod.n5292 , 
         \i_demod.n1_adj_453[11] , \i_demod.comb_reg[0][11] , \i_demod.n2186 , 
         \i_demod.n1_adj_453[10] , \i_demod.comb_reg[0][10] , 
         \i_demod.comb_reg[1][10] , \i_demod.comb_reg[1][11] , 
         \i_demod.n727[9] , \i_demod.n727[8] , \i_demod.n5289 , 
         \i_demod.n1_adj_453[9] , \i_demod.comb_reg[0][9] , \i_demod.n2184 , 
         \i_demod.n1_adj_453[8] , \i_demod.comb_reg[0][8] , 
         \i_demod.comb_reg[1][8] , \i_demod.comb_reg[1][9] , \i_demod.n727[7] , 
         \i_demod.n727[6] , \i_demod.n5286 , \i_demod.n1_adj_453[7] , 
         \i_demod.comb_reg[0][7] , \i_demod.n2182 , \i_demod.n1_adj_453[6] , 
         \i_demod.comb_reg[0][6] , \i_demod.comb_reg[1][6] , 
         \i_demod.comb_reg[1][7] , \i_demod.n727[5] , \i_demod.n727[4] , 
         \i_demod.n5283 , \i_demod.n1_adj_453[5] , \i_demod.comb_reg[0][5] , 
         \i_demod.n2180 , \i_demod.n1_adj_453[4] , \i_demod.comb_reg[0][4] , 
         \i_demod.comb_reg[1][4] , \i_demod.comb_reg[1][5] , \i_demod.n727[3] , 
         \i_demod.n727[2] , \i_demod.n5280 , \i_demod.n1_adj_453[3] , 
         \i_demod.comb_reg[0][3] , \i_demod.n2178 , \i_demod.n1_adj_453[2] , 
         \i_demod.comb_reg[0][2] , \i_demod.comb_reg[1][2] , 
         \i_demod.comb_reg[1][3] , \i_demod.n727[1] , \i_demod.n727[0] , 
         \i_demod.n5268 , \i_demod.n1_adj_453[1] , \i_demod.comb_reg[0][1] , 
         \i_demod.n1_adj_453[0] , \i_demod.comb_reg[0][0] , 
         \i_demod.comb_reg[1][0] , \i_demod.comb_reg[1][1] , \i_demod.n92[13] , 
         \i_demod.n92[12] , \i_demod.n5529 , \i_demod.n305 , \i_demod.n2171 , 
         \i_demod.n92[11] , \i_demod.n92[10] , \i_demod.n5526 , 
         \i_demod.n2169 , \i_demod.n92[9] , \i_demod.n92[8] , \i_demod.n5523 , 
         \i_demod.n2167 , \i_demod.n69_adj_451[10] , \i_demod.n69_adj_451[9] , 
         \i_demod.n5448 , \i_demod.int_reg[2][10] , \i_demod.int_reg[2][9] , 
         \i_demod.n2075 , \i_demod.n92[7] , \i_demod.n92[6] , \i_demod.n5520 , 
         \i_demod.n2165 , \i_demod.n92[5] , \i_demod.n92[4] , \i_demod.n5517 , 
         \i_demod.n2163 , \i_demod.n92[3] , \i_demod.n92[2] , \i_demod.n5514 , 
         \i_demod.int_reg[0][2] , \i_demod.n2161 , \i_demod.int_reg[0][1] , 
         \i_demod.n92[1] , \i_demod.n5361 , i_out_synced, 
         \i_demod.int_reg[0][0] , \i_demod.n1328[12] , \i_demod.n5397 , 
         \i_demod.n2158 , \i_demod.n1[12] , \i_demod.int_reg[2][12] , 
         \i_demod.n1328[11] , \i_demod.n1328[10] , \i_demod.n5394 , 
         \i_demod.n1[11] , \i_demod.int_reg[2][11] , \i_demod.n2156 , 
         \i_demod.n1[10] , \i_demod.n1328[9] , \i_demod.n1328[8] , 
         \i_demod.n5391 , \i_demod.n1[9] , \i_demod.n2154 , \i_demod.n1[8] , 
         \i_demod.n1328[7] , \i_demod.n1328[6] , \i_demod.n5388 , 
         \i_demod.n1[7] , \i_demod.n2152 , \i_demod.n1[6] , \i_demod.n1328[5] , 
         \i_demod.n1328[4] , \i_demod.n5385 , \i_demod.n1[5] , \i_demod.n2150 , 
         \i_demod.n1[4] , \i_demod.n1328[3] , \i_demod.n1328[2] , 
         \i_demod.n5382 , \i_demod.n1[3] , \i_demod.n2148 , \i_demod.n1[2] , 
         \i_demod.n1328[1] , \i_demod.n1328[0] , \i_demod.n5271 , 
         \i_demod.n1[1] , \i_demod.n1[0] , \i_demod.int_reg[2][0] , 
         \i_demod.n69_adj_451[12] , \i_demod.n69_adj_451[11] , \i_demod.n5451 , 
         \i_demod.n77[13] , \i_demod.n5499 , \i_demod.n2106 , 
         \i_demod.n1_adj_452[12] , \i_demodulated_data[12] , \i_demod.n77[12] , 
         \i_demod.n77[11] , \i_demod.n5496 , \i_demod.n1_adj_452[11] , 
         \i_demod.n2104 , \i_demod.n1_adj_452[10] , \i_demodulated_data[10] , 
         \i_demodulated_data[11] , \i_demod.n77[10] , \i_demod.n77[9] , 
         \i_demod.n5493 , \i_demod.n1_adj_452[9] , \i_demod.n2102 , 
         \i_demod.n1_adj_452[8] , \i_demodulated_data[8] , 
         \i_demodulated_data[9] , \i_demod.n77[8] , \i_demod.n77[7] , 
         \i_demod.n5490 , \i_demod.n1_adj_452[7] , \i_demod.n2100 , 
         \i_demod.n1_adj_452[6] , \i_demodulated_data[6] , 
         \i_demodulated_data[7] , \i_demod.n77[6] , \i_demod.n77[5] , 
         \i_demod.n5487 , \i_demod.n1_adj_452[5] , \i_demod.n2098 , 
         \i_demod.n1_adj_452[4] , \i_demodulated_data[4] , 
         \i_demodulated_data[5] , \i_demod.n77[4] , \i_demod.n77[3] , 
         \i_demod.n5484 , \i_demod.n1_adj_452[3] , \i_demod.n2096 , 
         \i_demod.n1_adj_452[2] , \i_demodulated_data[2] , 
         \i_demodulated_data[3] , \i_demod.n69_adj_451[0] , \i_demod.n5334 , 
         \i_demod.int_reg[1][0] , \i_demod.n69[2] , \i_demod.n69[1] , 
         \i_demod.n5400 , \i_demod.n2048 , \i_demod.n69[0] , \i_demod.n5328 , 
         \i_demod.n29[0] , \i_demod.n5472 , \i_demod.cycle_reg[0] , 
         \i_demod.n1378 , \i_demod.n2089 , \i_demod.n29[2] , \i_demod.n29[1] , 
         \i_demod.n5475 , \i_demod.cycle_reg[2] , \i_demod.cycle_reg[1] , 
         \i_demod.n2091 , \i_demod.n29[4] , \i_demod.n29[3] , \i_demod.n5478 , 
         \i_demod.cycle_reg[4] , \i_demod.cycle_reg[3] , \i_demod.n2093 , 
         \i_demod.n29[5] , \i_demod.n5481 , \i_demod.cycle_reg[5] , 
         \i_demod.n77[2] , \i_demod.n77[1] , \i_demod.n5358 , 
         \i_demod.n1_adj_452[1] , \i_demod.n1_adj_452[0] , 
         \i_demodulated_data[0] , \i_demodulated_data[1] , 
         \led_blink.n133[31] , \led_blink.n5547 , \led_blink.n2045 , 
         \counter[31] , \led_blink.n1365 , \led_blink.n133[30] , 
         \led_blink.n133[29] , \led_blink.n5244 , \counter[30] , 
         \led_blink.n2043 , \counter[29] , \led_blink.n133[28] , 
         \led_blink.n133[27] , \led_blink.n5241 , \counter[28] , 
         \led_blink.n2041 , \counter[27] , \led_blink.n133[26] , 
         \led_blink.n133[25] , \led_blink.n5238 , \counter[26] , 
         \led_blink.n2039 , \counter[25] , \led_blink.n133[24] , 
         \led_blink.n133[23] , \led_blink.n5235 , \counter[24] , 
         \led_blink.n2037 , \counter[23] , \led_blink.n133[22] , 
         \led_blink.n133[21] , \led_blink.n5232 , \counter[22] , 
         \led_blink.n2035 , \counter[21] , \led_blink.n133[20] , 
         \led_blink.n133[19] , \led_blink.n5229 , \counter[20] , 
         \led_blink.n2033 , \counter[19] , \led_blink.n133[18] , 
         \led_blink.n133[17] , \led_blink.n5226 , \counter[18] , 
         \led_blink.n2031 , \counter[17] , \led_blink.n133[16] , 
         \led_blink.n133[15] , \led_blink.n5223 , \led_blink.counter[16]_2 , 
         \led_blink.n2029 , \led_blink.counter[15]_2 , \led_blink.n133[14] , 
         \led_blink.n133[13] , \led_blink.n5220 , \led_blink.counter[14]_2 , 
         \led_blink.n2027 , \led_blink.counter[13]_2 , \led_blink.n133[12] , 
         \led_blink.n133[11] , \led_blink.n5217 , \led_blink.counter[12]_2 , 
         \led_blink.n2025 , \led_blink.counter[11]_2 , \led_blink.n133[10] , 
         \led_blink.n133[9] , \led_blink.n5214 , \led_blink.counter[10]_2 , 
         \led_blink.n2023 , \led_blink.counter[9]_2 , \led_blink.n133[8] , 
         \led_blink.n133[7] , \led_blink.n5211 , \led_blink.counter[8]_2 , 
         \led_blink.n2021 , \led_blink.counter[7]_2 , \led_blink.n133[6] , 
         \led_blink.n133[5] , \led_blink.n5208 , \led_blink.counter[6]_2 , 
         \led_blink.n2019 , \led_blink.counter[5]_2 , \led_blink.n133[4] , 
         \led_blink.n133[3] , \led_blink.n5205 , \led_blink.counter[4]_2 , 
         \led_blink.n2017 , \led_blink.counter[3]_2 , \led_blink.n133[2] , 
         \led_blink.n133[1] , \led_blink.n5202 , \led_blink.counter[2]_2 , 
         \led_blink.n2015 , \led_blink.counter[1]_2 , \led_blink.n133[0] , 
         \led_blink.n5199 , \led_blink.counter[0]_2 , \i_serializer.n5544 , 
         \i_serializer.n1995 , \i_serializer.bit_counter[5] , 
         \i_serializer.n37[5] , \i_serializer.n5307 , 
         \i_serializer.bit_counter[4] , \i_serializer.n1993 , 
         \i_serializer.bit_counter[3] , \i_serializer.n37[3] , 
         \i_serializer.n37[4] , \i_serializer.n5304 , 
         \i_serializer.bit_counter[2] , \i_serializer.n1991 , 
         \i_serializer.bit_counter[1] , \i_serializer.n37[1] , 
         \i_serializer.n37[2] , \i_serializer.n5301 , 
         \i_serializer.bit_counter[0] , \i_serializer.n37[0] , 
         \q_serializer.shift_reg_15__N_359[1] , 
         \q_serializer.shift_reg_15__N_359[0] , \q_serializer.shift_reg[2] , 
         gated_q_strobe, \q_serializer.shift_reg[1] , \q_serializer.n1311 , 
         \q_serializer.shift_reg[0] , \q_serializer.n1388 , 
         \q_serializer.bit_counter_5__N_375[4] , 
         \q_serializer.shift_reg_15__N_359[3] , 
         \q_serializer.shift_reg_15__N_359[2] , \q_serializer.shift_reg[4] , 
         \q_serializer.shift_reg[3] , \q_serializer.shift_reg_15__N_359[5] , 
         \q_serializer.shift_reg_15__N_359[4] , \q_serializer.shift_reg[6] , 
         \q_serializer.shift_reg[5] , \q_serializer.shift_reg_15__N_359[7] , 
         \q_serializer.shift_reg_15__N_359[6] , \q_serializer.shift_reg[8] , 
         \q_serializer.shift_reg[7] , \q_serializer.shift_reg_15__N_359[9] , 
         \q_serializer.shift_reg_15__N_359[8] , \q_serializer.shift_reg[10] , 
         \q_serializer.shift_reg[9] , \q_serializer.shift_reg_15__N_359[11] , 
         \q_serializer.shift_reg_15__N_359[10] , \q_serializer.shift_reg[12] , 
         \q_serializer.shift_reg[11] , \q_serializer.shift_reg_15__N_359[13] , 
         \q_serializer.shift_reg_15__N_359[12] , \q_serializer.shift_reg[14] , 
         \q_serializer.shift_reg[13] , \q_serializer.shift_reg_15__N_359[15] , 
         \q_serializer.shift_reg_15__N_359[14] , \q_serializer.shift_reg[15] , 
         \q_serializer.n1384 , \q_serializer.n1386 , \q_serializer.n1380 , 
         \q_serializer.n1382 , \q_serializer.n1363 , 
         \q_serializer.clk_out_enable_N_397 , spi2_mosi_c, 
         \stream_enable.sync_ff1.sig_000.FeedThruLUT , 
         \stream_enable.sync_ff1 , stream_enable_synced, 
         \q_demod.int_reg[2][10].sig_003.FeedThruLUT , 
         \q_demod.int_reg[2][11].sig_002.FeedThruLUT , 
         \q_demod.comb[0].delay_reg[0][11] , 
         \q_demod.comb[0].delay_reg[0][10] , 
         \q_demod.int_reg[2][8].sig_005.FeedThruLUT , 
         \q_demod.int_reg[2][9].sig_004.FeedThruLUT , 
         \q_demod.comb[0].delay_reg[0][9] , \q_demod.comb[0].delay_reg[0][8] , 
         \q_demod.int_reg[2][6].sig_007.FeedThruLUT , 
         \q_demod.int_reg[2][7].sig_006.FeedThruLUT , 
         \q_demod.comb[0].delay_reg[0][7] , \q_demod.comb[0].delay_reg[0][6] , 
         \q_demod.int_reg[2][4].sig_009.FeedThruLUT , 
         \q_demod.int_reg[2][5].sig_008.FeedThruLUT , 
         \q_demod.comb[0].delay_reg[0][5] , \q_demod.comb[0].delay_reg[0][4] , 
         \q_demod.int_reg[2][2].sig_011.FeedThruLUT , 
         \q_demod.int_reg[2][3].sig_010.FeedThruLUT , 
         \q_demod.comb[0].delay_reg[0][3] , \q_demod.comb[0].delay_reg[0][2] , 
         \q_demod.int_reg[2][0].sig_015.FeedThruLUT , 
         \q_demod.int_reg[2][1].sig_012.FeedThruLUT , 
         \q_demod.comb[0].delay_reg[0][1] , \q_demod.comb[0].delay_reg[0][0] , 
         \q_demod.comb_reg[1][1].sig_039.FeedThruLUT , 
         \q_demod.comb_reg[1][0].sig_013.FeedThruLUT , 
         \q_demod.comb[2].delay_reg[0][0] , \q_demod.comb[2].delay_reg[0][1] , 
         \q_demod.comb_reg[0][1].sig_027.FeedThruLUT , 
         \q_demod.comb_reg[0][0].sig_014.FeedThruLUT , 
         \q_demod.comb[1].delay_reg[0][0] , \q_demod.comb[1].delay_reg[0][1] , 
         \q_demod.comb_reg[0][10].sig_018.FeedThruLUT , 
         \q_demod.comb_reg[0][11].sig_017.FeedThruLUT , 
         \q_demod.comb[1].delay_reg[0][11] , 
         \q_demod.comb[1].delay_reg[0][10] , 
         \q_demod.comb_reg[0][8].sig_020.FeedThruLUT , 
         \q_demod.comb_reg[0][9].sig_019.FeedThruLUT , 
         \q_demod.comb[1].delay_reg[0][9] , \q_demod.comb[1].delay_reg[0][8] , 
         \q_demod.comb_reg[0][6].sig_022.FeedThruLUT , 
         \q_demod.comb_reg[0][7].sig_021.FeedThruLUT , 
         \q_demod.comb[1].delay_reg[0][7] , \q_demod.comb[1].delay_reg[0][6] , 
         \q_demod.comb_reg[0][4].sig_024.FeedThruLUT , 
         \q_demod.comb_reg[0][5].sig_023.FeedThruLUT , 
         \q_demod.comb[1].delay_reg[0][5] , \q_demod.comb[1].delay_reg[0][4] , 
         \q_demod.comb_reg[0][2].sig_026.FeedThruLUT , 
         \q_demod.comb_reg[0][3].sig_025.FeedThruLUT , 
         \q_demod.comb[1].delay_reg[0][3] , \q_demod.comb[1].delay_reg[0][2] , 
         \q_demod.comb_reg[1][10].sig_030.FeedThruLUT , 
         \q_demod.comb_reg[1][11].sig_029.FeedThruLUT , 
         \q_demod.comb[2].delay_reg[0][11] , 
         \q_demod.comb[2].delay_reg[0][10] , 
         \q_demod.comb_reg[1][8].sig_032.FeedThruLUT , 
         \q_demod.comb_reg[1][9].sig_031.FeedThruLUT , 
         \q_demod.comb[2].delay_reg[0][9] , \q_demod.comb[2].delay_reg[0][8] , 
         \q_demod.comb_reg[1][6].sig_034.FeedThruLUT , 
         \q_demod.comb_reg[1][7].sig_033.FeedThruLUT , 
         \q_demod.comb[2].delay_reg[0][7] , \q_demod.comb[2].delay_reg[0][6] , 
         \q_demod.comb_reg[1][4].sig_036.FeedThruLUT , 
         \q_demod.comb_reg[1][5].sig_035.FeedThruLUT , 
         \q_demod.comb[2].delay_reg[0][5] , \q_demod.comb[2].delay_reg[0][4] , 
         \q_demod.comb_reg[1][2].sig_038.FeedThruLUT , 
         \q_demod.comb_reg[1][3].sig_037.FeedThruLUT , 
         \q_demod.comb[2].delay_reg[0][3] , \q_demod.comb[2].delay_reg[0][2] , 
         \i_demod.int_reg[2][10].sig_042.FeedThruLUT , 
         \i_demod.int_reg[2][11].sig_041.FeedThruLUT , 
         \i_demod.comb[0].delay_reg[0][11] , 
         \i_demod.comb[0].delay_reg[0][10] , 
         \i_demod.int_reg[2][8].sig_044.FeedThruLUT , 
         \i_demod.int_reg[2][9].sig_043.FeedThruLUT , 
         \i_demod.comb[0].delay_reg[0][9] , \i_demod.comb[0].delay_reg[0][8] , 
         \i_demod.int_reg[2][6].sig_046.FeedThruLUT , 
         \i_demod.int_reg[2][7].sig_045.FeedThruLUT , 
         \i_demod.comb[0].delay_reg[0][7] , \i_demod.comb[0].delay_reg[0][6] , 
         \i_demod.int_reg[2][4].sig_048.FeedThruLUT , 
         \i_demod.int_reg[2][5].sig_047.FeedThruLUT , 
         \i_demod.comb[0].delay_reg[0][5] , \i_demod.comb[0].delay_reg[0][4] , 
         \i_demod.int_reg[2][2].sig_050.FeedThruLUT , 
         \i_demod.int_reg[2][3].sig_049.FeedThruLUT , 
         \i_demod.comb[0].delay_reg[0][3] , \i_demod.comb[0].delay_reg[0][2] , 
         \i_demod.comb_reg[1][1].sig_066.FeedThruLUT , 
         \i_demod.comb_reg[1][0].sig_051.FeedThruLUT , 
         \i_demod.comb[2].delay_reg[0][0] , \i_demod.comb[2].delay_reg[0][1] , 
         \i_demod.int_reg[2][0].sig_053.FeedThruLUT , 
         \i_demod.int_reg[2][1].sig_052.FeedThruLUT , 
         \i_demod.comb[0].delay_reg[0][1] , \i_demod.comb[0].delay_reg[0][0] , 
         \i_demod.comb_reg[0][1].sig_067.FeedThruLUT , 
         \i_demod.comb_reg[0][0].sig_054.FeedThruLUT , 
         \i_demod.comb[1].delay_reg[0][0] , \i_demod.comb[1].delay_reg[0][1] , 
         \i_demod.comb_reg[1][10].sig_057.FeedThruLUT , 
         \i_demod.comb_reg[1][11].sig_056.FeedThruLUT , 
         \i_demod.comb[2].delay_reg[0][11] , 
         \i_demod.comb[2].delay_reg[0][10] , 
         \i_demod.comb_reg[1][8].sig_059.FeedThruLUT , 
         \i_demod.comb_reg[1][9].sig_058.FeedThruLUT , 
         \i_demod.comb[2].delay_reg[0][9] , \i_demod.comb[2].delay_reg[0][8] , 
         \i_demod.comb_reg[1][6].sig_061.FeedThruLUT , 
         \i_demod.comb_reg[1][7].sig_060.FeedThruLUT , 
         \i_demod.comb[2].delay_reg[0][7] , \i_demod.comb[2].delay_reg[0][6] , 
         \i_demod.comb_reg[1][4].sig_063.FeedThruLUT , 
         \i_demod.comb_reg[1][5].sig_062.FeedThruLUT , 
         \i_demod.comb[2].delay_reg[0][5] , \i_demod.comb[2].delay_reg[0][4] , 
         \i_demod.comb_reg[1][2].sig_065.FeedThruLUT , 
         \i_demod.comb_reg[1][3].sig_064.FeedThruLUT , 
         \i_demod.comb[2].delay_reg[0][3] , \i_demod.comb[2].delay_reg[0][2] , 
         \i_demod.comb_reg[0][3].sig_069.FeedThruLUT , 
         \i_demod.comb_reg[0][2].sig_068.FeedThruLUT , 
         \i_demod.comb[1].delay_reg[0][2] , \i_demod.comb[1].delay_reg[0][3] , 
         \i_demod.comb_reg[0][5].sig_071.FeedThruLUT , 
         \i_demod.comb_reg[0][4].sig_070.FeedThruLUT , 
         \i_demod.comb[1].delay_reg[0][4] , \i_demod.comb[1].delay_reg[0][5] , 
         \i_demod.comb_reg[0][7].sig_073.FeedThruLUT , 
         \i_demod.comb_reg[0][6].sig_072.FeedThruLUT , 
         \i_demod.comb[1].delay_reg[0][6] , \i_demod.comb[1].delay_reg[0][7] , 
         \i_demod.comb_reg[0][9].sig_075.FeedThruLUT , 
         \i_demod.comb_reg[0][8].sig_074.FeedThruLUT , 
         \i_demod.comb[1].delay_reg[0][8] , \i_demod.comb[1].delay_reg[0][9] , 
         \i_demod.comb_reg[0][11].sig_077.FeedThruLUT , 
         \i_demod.comb_reg[0][10].sig_076.FeedThruLUT , 
         \i_demod.comb[1].delay_reg[0][10] , 
         \i_demod.comb[1].delay_reg[0][11] , 
         \current_state[0].sig_079.FeedThruLUT , \current_state[0] , led2_c, 
         \led_blink.n234[0] , \led_blink.n1852 , n233, \led_blink.n9 , n220, 
         \current_state[1] , \i_rising_sync.i_out_synced_N_385 , 
         \i_rising_sync.rd_ptr_N_388 , \i_rising_sync.rd_ptr , 
         \i_rising_sync.fifo[0] , \i_rising_sync.fifo[1] , 
         \sx1257_i_out_c.sig_080.FeedThruLUT , sx1257_i_out_c, 
         \i_rising_sync.wr_ptr , \sx1257_i_out_c.sig_081.FeedThruLUT , 
         \i_rising_sync.wr_ptr_N_390 , \i_serializer.shift_reg_15__N_203[14] , 
         \i_serializer.shift_reg_15__N_203[15] , \i_serializer.shift_reg[15] , 
         gated_i_strobe, \i_serializer.n1277 , \i_serializer.shift_reg[14] , 
         \i_serializer.shift_reg_15__N_203[12] , 
         \i_serializer.shift_reg_15__N_203[13] , \i_serializer.shift_reg[13] , 
         \i_serializer.shift_reg[12] , \i_serializer.shift_reg_15__N_203[10] , 
         \i_serializer.shift_reg_15__N_203[11] , \i_serializer.shift_reg[11] , 
         \i_serializer.shift_reg[10] , \i_serializer.shift_reg_15__N_203[8] , 
         \i_serializer.shift_reg_15__N_203[9] , \i_serializer.shift_reg[9] , 
         \i_serializer.shift_reg[8] , \i_serializer.shift_reg_15__N_203[6] , 
         \i_serializer.shift_reg_15__N_203[7] , \i_serializer.shift_reg[7] , 
         \i_serializer.shift_reg[6] , \i_serializer.shift_reg_15__N_203[4] , 
         \i_serializer.shift_reg_15__N_203[5] , \i_serializer.shift_reg[5] , 
         \i_serializer.shift_reg[4] , \i_serializer.shift_reg_15__N_203[2] , 
         \i_serializer.shift_reg_15__N_203[3] , \i_serializer.shift_reg[3] , 
         \i_serializer.shift_reg[2] , \i_serializer.shift_reg_15__N_203[0] , 
         \i_serializer.shift_reg_15__N_203[1] , \i_serializer.shift_reg[1] , 
         \i_serializer.shift_reg[0] , \i_serializer.n1370 , 
         \i_serializer.bit_counter_5__N_219[4] , \i_serializer.n1368 , 
         \i_serializer.n1376 , \i_serializer.n1372 , \i_serializer.n1374 , 
         \i_serializer.n1361 , spi1_mosi_c, \q_rising_sync.q_out_synced_N_387 , 
         \q_rising_sync.rd_ptr_N_391 , \q_rising_sync.rd_ptr , 
         \q_rising_sync.fifo[1] , \q_rising_sync.fifo[0] , 
         \sx1257_q_out_c.sig_082.FeedThruLUT , sx1257_q_out_c, 
         \q_rising_sync.wr_ptr , \sx1257_q_out_c.sig_083.FeedThruLUT , 
         \q_rising_sync.wr_ptr_N_393 , n3360, n1351, n1894, n433, n1236, n10, 
         n3718, n3356, n90, n85, n21, \led_blink.n1868 , n2945, n3713, 
         \q_serializer.n10 , \led_blink.n3716 , \led_blink.n1892 , 
         \q_demod.n10_adj_486 , \i_demod.n10_adj_430 , \q_demod.n7_adj_488 , 
         \q_demod.n8_adj_487 , \i_demod.n7_adj_400 , \i_demod.n8_adj_399 , 
         \i_serializer.n10 , \led_blink.n2998 , \led_blink.n94 , 
         \led_blink.n1 , \led_blink.n92 , \led_blink.n3726 , \led_blink.n3723 , 
         \led_blink.n3720 , \led_blink.n767 , spi6_sck_c, spi6_mosi_c, 
         sx1257_mosi_c, sx1257_sck_c, GND_net, 
         \q_serializer.clk_out_enable_N_397$n0 , \q_serializer.clk_out_enable , 
         spi2_sck_c, sx1257_miso_c, spi6_nss_c, sx1257_nss_c, spi6_miso_c, 
         \q_demod.comb_reg[1][12].sig_028.FeedThruLUT , 
         \q_demod.comb[2].delay_reg[0][12] , 
         \q_demod.int_reg[2][12].sig_001.FeedThruLUT , 
         \q_demod.comb[0].delay_reg[0][12] , 
         \q_demod.comb_reg[0][12].sig_016.FeedThruLUT , 
         \q_demod.comb[1].delay_reg[0][12] , 
         \i_demod.int_reg[2][12].sig_040.FeedThruLUT , 
         \i_demod.comb[0].delay_reg[0][12] , 
         \i_demod.comb_reg[0][12].sig_078.FeedThruLUT , 
         \i_demod.comb[1].delay_reg[0][12] , 
         \i_demod.comb_reg[1][12].sig_055.FeedThruLUT , 
         \i_demod.comb[2].delay_reg[0][12] , \i_rising_sync.wr_ptr_N_390$n1 , 
         \i_serializer.clk_out_enable_N_395 , \i_serializer.clk_out_enable , 
         spi1_sck_c, \q_rising_sync.wr_ptr_N_393$n2 , stm_fpga_spare5_c;

  q_serializer_SLICE_0 \q_serializer.SLICE_0 ( .D1(\q_serializer.n5532 ), 
    .C1(VCC_net), .B1(\q_serializer.bit_counter[0] ), 
    .CIN1(\q_serializer.n5532 ), .F1(\q_serializer.n37[0] ), 
    .COUT1(\q_serializer.n2082 ), .COUT0(\q_serializer.n5532 ));
  q_serializer_SLICE_1 \q_serializer.SLICE_1 ( .D1(\q_serializer.n5535 ), 
    .C1(VCC_net), .B1(\q_serializer.bit_counter[2] ), 
    .D0(\q_serializer.n2082 ), .C0(VCC_net), 
    .B0(\q_serializer.bit_counter[1] ), .CIN0(\q_serializer.n2082 ), 
    .CIN1(\q_serializer.n5535 ), .F0(\q_serializer.n37[1] ), 
    .F1(\q_serializer.n37[2] ), .COUT1(\q_serializer.n2084 ), 
    .COUT0(\q_serializer.n5535 ));
  q_serializer_SLICE_2 \q_serializer.SLICE_2 ( .D1(\q_serializer.n5538 ), 
    .C1(VCC_net), .B1(\q_serializer.bit_counter[4] ), 
    .D0(\q_serializer.n2084 ), .C0(VCC_net), 
    .B0(\q_serializer.bit_counter[3] ), .CIN0(\q_serializer.n2084 ), 
    .CIN1(\q_serializer.n5538 ), .F0(\q_serializer.n37[3] ), 
    .F1(\q_serializer.n37[4] ), .COUT1(\q_serializer.n2086 ), 
    .COUT0(\q_serializer.n5538 ));
  q_serializer_SLICE_3 \q_serializer.SLICE_3 ( .D1(\q_serializer.n5541 ), 
    .D0(\q_serializer.n2086 ), .C0(VCC_net), 
    .B0(\q_serializer.bit_counter[5] ), .CIN0(\q_serializer.n2086 ), 
    .CIN1(\q_serializer.n5541 ), .F0(\q_serializer.n37[5] ), 
    .COUT0(\q_serializer.n5541 ));
  q_demod_SLICE_4 \q_demod.SLICE_4 ( .DI1(\q_demod.n69[6] ), 
    .DI0(\q_demod.n69[5] ), .D1(\q_demod.n5256 ), .C1(\q_demod.int_reg[1][6] ), 
    .B1(\q_demod.int_reg[0][6] ), .D0(\q_demod.n1971 ), 
    .C0(\q_demod.int_reg[1][5] ), .B0(\q_demod.int_reg[0][5] ), 
    .LSR(stm_fpga_spare4_c), .CLK(sx1257_clk_out_c), .CIN0(\q_demod.n1971 ), 
    .CIN1(\q_demod.n5256 ), .Q0(\q_demod.int_reg[1][5] ), 
    .Q1(\q_demod.int_reg[1][6] ), .F0(\q_demod.n69[5] ), .F1(\q_demod.n69[6] ), 
    .COUT1(\q_demod.n1973 ), .COUT0(\q_demod.n5256 ));
  q_demod_SLICE_5 \q_demod.SLICE_5 ( .DI1(\q_demod.n69[4] ), 
    .DI0(\q_demod.n69[3] ), .D1(\q_demod.n5253 ), .C1(\q_demod.int_reg[1][4] ), 
    .B1(\q_demod.int_reg[0][4] ), .D0(\q_demod.n1969 ), 
    .C0(\q_demod.int_reg[1][3] ), .B0(\q_demod.int_reg[0][3] ), 
    .LSR(stm_fpga_spare4_c), .CLK(sx1257_clk_out_c), .CIN0(\q_demod.n1969 ), 
    .CIN1(\q_demod.n5253 ), .Q0(\q_demod.int_reg[1][3] ), 
    .Q1(\q_demod.int_reg[1][4] ), .F0(\q_demod.n69[3] ), .F1(\q_demod.n69[4] ), 
    .COUT1(\q_demod.n1971 ), .COUT0(\q_demod.n5253 ));
  q_demod_SLICE_6 \q_demod.SLICE_6 ( .DI1(\q_demod.n69[2] ), 
    .DI0(\q_demod.n69[1] ), .D1(\q_demod.n5250 ), .C1(\q_demod.int_reg[1][2] ), 
    .B1(\q_demod.int_reg[0][2] ), .D0(\q_demod.n1967 ), 
    .C0(\q_demod.int_reg[1][1] ), .B0(\q_demod.int_reg[0][1] ), 
    .LSR(stm_fpga_spare4_c), .CLK(sx1257_clk_out_c), .CIN0(\q_demod.n1967 ), 
    .CIN1(\q_demod.n5250 ), .Q0(\q_demod.int_reg[1][1] ), 
    .Q1(\q_demod.int_reg[1][2] ), .F0(\q_demod.n69[1] ), .F1(\q_demod.n69[2] ), 
    .COUT1(\q_demod.n1969 ), .COUT0(\q_demod.n5250 ));
  q_demod_SLICE_7 \q_demod.SLICE_7 ( .DI1(\q_demod.n69[0] ), 
    .D1(\q_demod.n5247 ), .C1(\q_demod.int_reg[1][0] ), 
    .B1(\q_demod.int_reg[0][0] ), .LSR(stm_fpga_spare4_c), 
    .CLK(sx1257_clk_out_c), .CIN1(\q_demod.n5247 ), 
    .Q1(\q_demod.int_reg[1][0] ), .F1(\q_demod.n69[0] ), 
    .COUT1(\q_demod.n1967 ), .COUT0(\q_demod.n5247 ));
  q_demod_SLICE_8 \q_demod.SLICE_8 ( .DI1(\q_demod.n92[13] ), 
    .DI0(\q_demod.n92[12] ), .D1(\q_demod.n5325 ), .C1(\q_demod.n336 ), 
    .B1(\q_demod.int_reg[0][12] ), .D0(\q_demod.n2201 ), .C0(\q_demod.n336 ), 
    .B0(\q_demod.int_reg[0][11] ), .LSR(stm_fpga_spare4_c), 
    .CLK(sx1257_clk_out_c), .CIN0(\q_demod.n2201 ), .CIN1(\q_demod.n5325 ), 
    .Q0(\q_demod.int_reg[0][11] ), .Q1(\q_demod.int_reg[0][12] ), 
    .F0(\q_demod.n92[12] ), .F1(\q_demod.n92[13] ), .COUT0(\q_demod.n5325 ));
  q_demod_SLICE_9 \q_demod.SLICE_9 ( .DI1(\q_demod.n92[11] ), 
    .DI0(\q_demod.n92[10] ), .D1(\q_demod.n5322 ), .C1(\q_demod.n336 ), 
    .B1(\q_demod.int_reg[0][10] ), .D0(\q_demod.n2199 ), .C0(\q_demod.n336 ), 
    .B0(\q_demod.int_reg[0][9] ), .LSR(stm_fpga_spare4_c), 
    .CLK(sx1257_clk_out_c), .CIN0(\q_demod.n2199 ), .CIN1(\q_demod.n5322 ), 
    .Q0(\q_demod.int_reg[0][9] ), .Q1(\q_demod.int_reg[0][10] ), 
    .F0(\q_demod.n92[10] ), .F1(\q_demod.n92[11] ), .COUT1(\q_demod.n2201 ), 
    .COUT0(\q_demod.n5322 ));
  q_demod_SLICE_10 \q_demod.SLICE_10 ( .DI1(\q_demod.n92[9] ), 
    .DI0(\q_demod.n92[8] ), .D1(\q_demod.n5319 ), .C1(\q_demod.n336 ), 
    .B1(\q_demod.int_reg[0][8] ), .D0(\q_demod.n2197 ), .C0(\q_demod.n336 ), 
    .B0(\q_demod.int_reg[0][7] ), .LSR(stm_fpga_spare4_c), 
    .CLK(sx1257_clk_out_c), .CIN0(\q_demod.n2197 ), .CIN1(\q_demod.n5319 ), 
    .Q0(\q_demod.int_reg[0][7] ), .Q1(\q_demod.int_reg[0][8] ), 
    .F0(\q_demod.n92[8] ), .F1(\q_demod.n92[9] ), .COUT1(\q_demod.n2199 ), 
    .COUT0(\q_demod.n5319 ));
  q_demod_SLICE_11 \q_demod.SLICE_11 ( .DI1(\q_demod.n69_adj_509[12] ), 
    .DI0(\q_demod.n69_adj_509[11] ), .D1(\q_demod.n5433 ), 
    .C1(\q_demod.int_reg[2][12] ), .B1(\q_demod.int_reg[1][12] ), 
    .D0(\q_demod.n2008 ), .C0(\q_demod.int_reg[2][11] ), 
    .B0(\q_demod.int_reg[1][11] ), .LSR(stm_fpga_spare4_c), 
    .CLK(sx1257_clk_out_c), .CIN0(\q_demod.n2008 ), .CIN1(\q_demod.n5433 ), 
    .Q0(\q_demod.int_reg[2][11] ), .Q1(\q_demod.int_reg[2][12] ), 
    .F0(\q_demod.n69_adj_509[11] ), .F1(\q_demod.n69_adj_509[12] ), 
    .COUT0(\q_demod.n5433 ));
  q_demod_SLICE_12 \q_demod.SLICE_12 ( .DI1(\q_demod.n69[12] ), 
    .DI0(\q_demod.n69[11] ), .D1(\q_demod.n5265 ), 
    .C1(\q_demod.int_reg[1][12] ), .B1(\q_demod.int_reg[0][12] ), 
    .D0(\q_demod.n1977 ), .C0(\q_demod.int_reg[1][11] ), 
    .B0(\q_demod.int_reg[0][11] ), .LSR(stm_fpga_spare4_c), 
    .CLK(sx1257_clk_out_c), .CIN0(\q_demod.n1977 ), .CIN1(\q_demod.n5265 ), 
    .Q0(\q_demod.int_reg[1][11] ), .Q1(\q_demod.int_reg[1][12] ), 
    .F0(\q_demod.n69[11] ), .F1(\q_demod.n69[12] ), .COUT0(\q_demod.n5265 ));
  q_demod_SLICE_13 \q_demod.SLICE_13 ( .DI1(\q_demod.n29[4] ), 
    .DI0(\q_demod.n29[3] ), .D1(\q_demod.n5508 ), .C1(\q_demod.cycle_reg[4] ), 
    .D0(\q_demod.n1986 ), .C0(\q_demod.cycle_reg[3] ), .LSR(\q_demod.n1379 ), 
    .CLK(sx1257_clk_out_c), .CIN0(\q_demod.n1986 ), .CIN1(\q_demod.n5508 ), 
    .Q0(\q_demod.cycle_reg[3] ), .Q1(\q_demod.cycle_reg[4] ), 
    .F0(\q_demod.n29[3] ), .F1(\q_demod.n29[4] ), .COUT1(\q_demod.n1988 ), 
    .COUT0(\q_demod.n5508 ));
  q_demod_SLICE_14 \q_demod.SLICE_14 ( .DI1(\q_demod.n92[7] ), 
    .DI0(\q_demod.n92[6] ), .D1(\q_demod.n5316 ), .C1(\q_demod.n336 ), 
    .B1(\q_demod.int_reg[0][6] ), .D0(\q_demod.n2195 ), .C0(\q_demod.n336 ), 
    .B0(\q_demod.int_reg[0][5] ), .LSR(stm_fpga_spare4_c), 
    .CLK(sx1257_clk_out_c), .CIN0(\q_demod.n2195 ), .CIN1(\q_demod.n5316 ), 
    .Q0(\q_demod.int_reg[0][5] ), .Q1(\q_demod.int_reg[0][6] ), 
    .F0(\q_demod.n92[6] ), .F1(\q_demod.n92[7] ), .COUT1(\q_demod.n2197 ), 
    .COUT0(\q_demod.n5316 ));
  q_demod_SLICE_15 \q_demod.SLICE_15 ( .DI1(\q_demod.n92[5] ), 
    .DI0(\q_demod.n92[4] ), .D1(\q_demod.n5313 ), .C1(\q_demod.n336 ), 
    .B1(\q_demod.int_reg[0][4] ), .D0(\q_demod.n2193 ), .C0(\q_demod.n336 ), 
    .B0(\q_demod.int_reg[0][3] ), .LSR(stm_fpga_spare4_c), 
    .CLK(sx1257_clk_out_c), .CIN0(\q_demod.n2193 ), .CIN1(\q_demod.n5313 ), 
    .Q0(\q_demod.int_reg[0][3] ), .Q1(\q_demod.int_reg[0][4] ), 
    .F0(\q_demod.n92[4] ), .F1(\q_demod.n92[5] ), .COUT1(\q_demod.n2195 ), 
    .COUT0(\q_demod.n5313 ));
  q_demod_SLICE_16 \q_demod.SLICE_16 ( .DI1(\q_demod.n92[3] ), 
    .DI0(\q_demod.n92[2] ), .D1(\q_demod.n5310 ), .C1(\q_demod.n336 ), 
    .B1(\q_demod.int_reg[0][2] ), .D0(\q_demod.n2191 ), .C0(\q_demod.n336 ), 
    .B0(\q_demod.int_reg[0][1] ), .LSR(stm_fpga_spare4_c), 
    .CLK(sx1257_clk_out_c), .CIN0(\q_demod.n2191 ), .CIN1(\q_demod.n5310 ), 
    .Q0(\q_demod.int_reg[0][1] ), .Q1(\q_demod.int_reg[0][2] ), 
    .F0(\q_demod.n92[2] ), .F1(\q_demod.n92[3] ), .COUT1(\q_demod.n2193 ), 
    .COUT0(\q_demod.n5310 ));
  q_demod_SLICE_17 \q_demod.SLICE_17 ( .DI1(\q_demod.n92[1] ), 
    .D1(\q_demod.n5298 ), .C1(q_out_synced), .B1(\q_demod.int_reg[0][0] ), 
    .B0(\q_demod.n336 ), .LSR(stm_fpga_spare4_c), .CLK(sx1257_clk_out_c), 
    .CIN1(\q_demod.n5298 ), .Q1(\q_demod.int_reg[0][0] ), 
    .F1(\q_demod.n92[1] ), .COUT1(\q_demod.n2191 ), .COUT0(\q_demod.n5298 ));
  q_demod_SLICE_18 \q_demod.SLICE_18 ( .DI0(\q_demod.n742[12] ), 
    .D1(\q_demod.n5352 ), .D0(\q_demod.n2145 ), .C0(\q_demod.n1_adj_508[12] ), 
    .B0(\q_demod.comb_reg[0][12] ), .CE(\q_demod.n453 ), 
    .LSR(stm_fpga_spare4_c), .CLK(sx1257_clk_out_c), .CIN0(\q_demod.n2145 ), 
    .CIN1(\q_demod.n5352 ), .Q0(\q_demod.comb_reg[1][12] ), 
    .F0(\q_demod.n742[12] ), .COUT0(\q_demod.n5352 ));
  q_demod_SLICE_19 \q_demod.SLICE_19 ( .DI1(\q_demod.n742[11] ), 
    .DI0(\q_demod.n742[10] ), .D1(\q_demod.n5349 ), 
    .C1(\q_demod.n1_adj_508[11] ), .B1(\q_demod.comb_reg[0][11] ), 
    .D0(\q_demod.n2143 ), .C0(\q_demod.n1_adj_508[10] ), 
    .B0(\q_demod.comb_reg[0][10] ), .CE(\q_demod.n453 ), 
    .LSR(stm_fpga_spare4_c), .CLK(sx1257_clk_out_c), .CIN0(\q_demod.n2143 ), 
    .CIN1(\q_demod.n5349 ), .Q0(\q_demod.comb_reg[1][10] ), 
    .Q1(\q_demod.comb_reg[1][11] ), .F0(\q_demod.n742[10] ), 
    .F1(\q_demod.n742[11] ), .COUT1(\q_demod.n2145 ), .COUT0(\q_demod.n5349 ));
  q_demod_SLICE_20 \q_demod.SLICE_20 ( .DI1(\q_demod.n742[9] ), 
    .DI0(\q_demod.n742[8] ), .D1(\q_demod.n5346 ), 
    .C1(\q_demod.n1_adj_508[9] ), .B1(\q_demod.comb_reg[0][9] ), 
    .D0(\q_demod.n2141 ), .C0(\q_demod.n1_adj_508[8] ), 
    .B0(\q_demod.comb_reg[0][8] ), .CE(\q_demod.n453 ), 
    .LSR(stm_fpga_spare4_c), .CLK(sx1257_clk_out_c), .CIN0(\q_demod.n2141 ), 
    .CIN1(\q_demod.n5346 ), .Q0(\q_demod.comb_reg[1][8] ), 
    .Q1(\q_demod.comb_reg[1][9] ), .F0(\q_demod.n742[8] ), 
    .F1(\q_demod.n742[9] ), .COUT1(\q_demod.n2143 ), .COUT0(\q_demod.n5346 ));
  q_demod_SLICE_21 \q_demod.SLICE_21 ( .DI1(\q_demod.n742[7] ), 
    .DI0(\q_demod.n742[6] ), .D1(\q_demod.n5343 ), 
    .C1(\q_demod.n1_adj_508[7] ), .B1(\q_demod.comb_reg[0][7] ), 
    .D0(\q_demod.n2139 ), .C0(\q_demod.n1_adj_508[6] ), 
    .B0(\q_demod.comb_reg[0][6] ), .CE(\q_demod.n453 ), 
    .LSR(stm_fpga_spare4_c), .CLK(sx1257_clk_out_c), .CIN0(\q_demod.n2139 ), 
    .CIN1(\q_demod.n5343 ), .Q0(\q_demod.comb_reg[1][6] ), 
    .Q1(\q_demod.comb_reg[1][7] ), .F0(\q_demod.n742[6] ), 
    .F1(\q_demod.n742[7] ), .COUT1(\q_demod.n2141 ), .COUT0(\q_demod.n5343 ));
  q_demod_SLICE_22 \q_demod.SLICE_22 ( .DI1(\q_demod.n742[5] ), 
    .DI0(\q_demod.n742[4] ), .D1(\q_demod.n5340 ), 
    .C1(\q_demod.n1_adj_508[5] ), .B1(\q_demod.comb_reg[0][5] ), 
    .D0(\q_demod.n2137 ), .C0(\q_demod.n1_adj_508[4] ), 
    .B0(\q_demod.comb_reg[0][4] ), .CE(\q_demod.n453 ), 
    .LSR(stm_fpga_spare4_c), .CLK(sx1257_clk_out_c), .CIN0(\q_demod.n2137 ), 
    .CIN1(\q_demod.n5340 ), .Q0(\q_demod.comb_reg[1][4] ), 
    .Q1(\q_demod.comb_reg[1][5] ), .F0(\q_demod.n742[4] ), 
    .F1(\q_demod.n742[5] ), .COUT1(\q_demod.n2139 ), .COUT0(\q_demod.n5340 ));
  q_demod_SLICE_23 \q_demod.SLICE_23 ( .DI1(\q_demod.n742[3] ), 
    .DI0(\q_demod.n742[2] ), .D1(\q_demod.n5337 ), 
    .C1(\q_demod.n1_adj_508[3] ), .B1(\q_demod.comb_reg[0][3] ), 
    .D0(\q_demod.n2135 ), .C0(\q_demod.n1_adj_508[2] ), 
    .B0(\q_demod.comb_reg[0][2] ), .CE(\q_demod.n453 ), 
    .LSR(stm_fpga_spare4_c), .CLK(sx1257_clk_out_c), .CIN0(\q_demod.n2135 ), 
    .CIN1(\q_demod.n5337 ), .Q0(\q_demod.comb_reg[1][2] ), 
    .Q1(\q_demod.comb_reg[1][3] ), .F0(\q_demod.n742[2] ), 
    .F1(\q_demod.n742[3] ), .COUT1(\q_demod.n2137 ), .COUT0(\q_demod.n5337 ));
  q_demod_SLICE_24 \q_demod.SLICE_24 ( .DI1(\q_demod.n742[1] ), 
    .DI0(\q_demod.n742[0] ), .D1(\q_demod.n5277 ), 
    .C1(\q_demod.n1_adj_508[1] ), .B1(\q_demod.comb_reg[0][1] ), .D0(VCC_net), 
    .C0(\q_demod.n1_adj_508[0] ), .B0(\q_demod.comb_reg[0][0] ), 
    .CE(\q_demod.n453 ), .LSR(stm_fpga_spare4_c), .CLK(sx1257_clk_out_c), 
    .CIN1(\q_demod.n5277 ), .Q0(\q_demod.comb_reg[1][0] ), 
    .Q1(\q_demod.comb_reg[1][1] ), .F0(\q_demod.n742[0] ), 
    .F1(\q_demod.n742[1] ), .COUT1(\q_demod.n2135 ), .COUT0(\q_demod.n5277 ));
  q_demod_SLICE_25 \q_demod.SLICE_25 ( .DI0(\q_demod.n1313[12] ), 
    .D1(\q_demod.n5469 ), .D0(\q_demod.n2132 ), .C0(\q_demod.n1_adj_507[12] ), 
    .B0(\q_demod.int_reg[2][12] ), .CE(\q_demod.n453 ), 
    .LSR(stm_fpga_spare4_c), .CLK(sx1257_clk_out_c), .CIN0(\q_demod.n2132 ), 
    .CIN1(\q_demod.n5469 ), .Q0(\q_demod.comb_reg[0][12] ), 
    .F0(\q_demod.n1313[12] ), .COUT0(\q_demod.n5469 ));
  q_demod_SLICE_26 \q_demod.SLICE_26 ( .DI1(\q_demod.n1313[11] ), 
    .DI0(\q_demod.n1313[10] ), .D1(\q_demod.n5466 ), 
    .C1(\q_demod.n1_adj_507[11] ), .B1(\q_demod.int_reg[2][11] ), 
    .D0(\q_demod.n2130 ), .C0(\q_demod.n1_adj_507[10] ), 
    .B0(\q_demod.int_reg[2][10] ), .CE(\q_demod.n453 ), 
    .LSR(stm_fpga_spare4_c), .CLK(sx1257_clk_out_c), .CIN0(\q_demod.n2130 ), 
    .CIN1(\q_demod.n5466 ), .Q0(\q_demod.comb_reg[0][10] ), 
    .Q1(\q_demod.comb_reg[0][11] ), .F0(\q_demod.n1313[10] ), 
    .F1(\q_demod.n1313[11] ), .COUT1(\q_demod.n2132 ), .COUT0(\q_demod.n5466 ));
  q_demod_SLICE_27 \q_demod.SLICE_27 ( .DI1(\q_demod.n1313[9] ), 
    .DI0(\q_demod.n1313[8] ), .D1(\q_demod.n5463 ), 
    .C1(\q_demod.n1_adj_507[9] ), .B1(\q_demod.int_reg[2][9] ), 
    .D0(\q_demod.n2128 ), .C0(\q_demod.n1_adj_507[8] ), 
    .B0(\q_demod.int_reg[2][8] ), .CE(\q_demod.n453 ), .LSR(stm_fpga_spare4_c), 
    .CLK(sx1257_clk_out_c), .CIN0(\q_demod.n2128 ), .CIN1(\q_demod.n5463 ), 
    .Q0(\q_demod.comb_reg[0][8] ), .Q1(\q_demod.comb_reg[0][9] ), 
    .F0(\q_demod.n1313[8] ), .F1(\q_demod.n1313[9] ), .COUT1(\q_demod.n2130 ), 
    .COUT0(\q_demod.n5463 ));
  q_demod_SLICE_28 \q_demod.SLICE_28 ( .DI1(\q_demod.n1313[7] ), 
    .DI0(\q_demod.n1313[6] ), .D1(\q_demod.n5460 ), 
    .C1(\q_demod.n1_adj_507[7] ), .B1(\q_demod.int_reg[2][7] ), 
    .D0(\q_demod.n2126 ), .C0(\q_demod.n1_adj_507[6] ), 
    .B0(\q_demod.int_reg[2][6] ), .CE(\q_demod.n453 ), .LSR(stm_fpga_spare4_c), 
    .CLK(sx1257_clk_out_c), .CIN0(\q_demod.n2126 ), .CIN1(\q_demod.n5460 ), 
    .Q0(\q_demod.comb_reg[0][6] ), .Q1(\q_demod.comb_reg[0][7] ), 
    .F0(\q_demod.n1313[6] ), .F1(\q_demod.n1313[7] ), .COUT1(\q_demod.n2128 ), 
    .COUT0(\q_demod.n5460 ));
  q_demod_SLICE_29 \q_demod.SLICE_29 ( .DI1(\q_demod.n1313[5] ), 
    .DI0(\q_demod.n1313[4] ), .D1(\q_demod.n5457 ), 
    .C1(\q_demod.n1_adj_507[5] ), .B1(\q_demod.int_reg[2][5] ), 
    .D0(\q_demod.n2124 ), .C0(\q_demod.n1_adj_507[4] ), 
    .B0(\q_demod.int_reg[2][4] ), .CE(\q_demod.n453 ), .LSR(stm_fpga_spare4_c), 
    .CLK(sx1257_clk_out_c), .CIN0(\q_demod.n2124 ), .CIN1(\q_demod.n5457 ), 
    .Q0(\q_demod.comb_reg[0][4] ), .Q1(\q_demod.comb_reg[0][5] ), 
    .F0(\q_demod.n1313[4] ), .F1(\q_demod.n1313[5] ), .COUT1(\q_demod.n2126 ), 
    .COUT0(\q_demod.n5457 ));
  q_demod_SLICE_30 \q_demod.SLICE_30 ( .DI1(\q_demod.n1313[3] ), 
    .DI0(\q_demod.n1313[2] ), .D1(\q_demod.n5454 ), 
    .C1(\q_demod.n1_adj_507[3] ), .B1(\q_demod.int_reg[2][3] ), 
    .D0(\q_demod.n2122 ), .C0(\q_demod.n1_adj_507[2] ), 
    .B0(\q_demod.int_reg[2][2] ), .CE(\q_demod.n453 ), .LSR(stm_fpga_spare4_c), 
    .CLK(sx1257_clk_out_c), .CIN0(\q_demod.n2122 ), .CIN1(\q_demod.n5454 ), 
    .Q0(\q_demod.comb_reg[0][2] ), .Q1(\q_demod.comb_reg[0][3] ), 
    .F0(\q_demod.n1313[2] ), .F1(\q_demod.n1313[3] ), .COUT1(\q_demod.n2124 ), 
    .COUT0(\q_demod.n5454 ));
  q_demod_SLICE_31 \q_demod.SLICE_31 ( .DI1(\q_demod.n1313[1] ), 
    .DI0(\q_demod.n1313[0] ), .D1(\q_demod.n5355 ), 
    .C1(\q_demod.n1_adj_507[1] ), .B1(\q_demod.int_reg[2][1] ), .D0(VCC_net), 
    .C0(\q_demod.n1_adj_507[0] ), .B0(\q_demod.int_reg[2][0] ), 
    .CE(\q_demod.n453 ), .LSR(stm_fpga_spare4_c), .CLK(sx1257_clk_out_c), 
    .CIN1(\q_demod.n5355 ), .Q0(\q_demod.comb_reg[0][0] ), 
    .Q1(\q_demod.comb_reg[0][1] ), .F0(\q_demod.n1313[0] ), 
    .F1(\q_demod.n1313[1] ), .COUT1(\q_demod.n2122 ), .COUT0(\q_demod.n5355 ));
  q_demod_SLICE_32 \q_demod.SLICE_32 ( .DI0(\q_demod.n77[13] ), 
    .D1(\q_demod.n5379 ), .D0(\q_demod.n2119 ), .C0(\q_demod.n1[12] ), 
    .B0(\q_demod.comb_reg[1][12] ), .CE(\q_demod.n453 ), 
    .LSR(stm_fpga_spare4_c), .CLK(sx1257_clk_out_c), .CIN0(\q_demod.n2119 ), 
    .CIN1(\q_demod.n5379 ), .Q0(\q_demodulated_data[12] ), 
    .F0(\q_demod.n77[13] ), .COUT0(\q_demod.n5379 ));
  q_demod_SLICE_33 \q_demod.SLICE_33 ( .DI1(\q_demod.n77[12] ), 
    .DI0(\q_demod.n77[11] ), .D1(\q_demod.n5376 ), .C1(\q_demod.n1[11] ), 
    .B1(\q_demod.comb_reg[1][11] ), .D0(\q_demod.n2117 ), 
    .C0(\q_demod.n1[10] ), .B0(\q_demod.comb_reg[1][10] ), .CE(\q_demod.n453 ), 
    .LSR(stm_fpga_spare4_c), .CLK(sx1257_clk_out_c), .CIN0(\q_demod.n2117 ), 
    .CIN1(\q_demod.n5376 ), .Q0(\q_demodulated_data[10] ), 
    .Q1(\q_demodulated_data[11] ), .F0(\q_demod.n77[11] ), 
    .F1(\q_demod.n77[12] ), .COUT1(\q_demod.n2119 ), .COUT0(\q_demod.n5376 ));
  q_demod_SLICE_34 \q_demod.SLICE_34 ( .DI1(\q_demod.n77[10] ), 
    .DI0(\q_demod.n77[9] ), .D1(\q_demod.n5373 ), .C1(\q_demod.n1[9] ), 
    .B1(\q_demod.comb_reg[1][9] ), .D0(\q_demod.n2115 ), .C0(\q_demod.n1[8] ), 
    .B0(\q_demod.comb_reg[1][8] ), .CE(\q_demod.n453 ), 
    .LSR(stm_fpga_spare4_c), .CLK(sx1257_clk_out_c), .CIN0(\q_demod.n2115 ), 
    .CIN1(\q_demod.n5373 ), .Q0(\q_demodulated_data[8] ), 
    .Q1(\q_demodulated_data[9] ), .F0(\q_demod.n77[9] ), 
    .F1(\q_demod.n77[10] ), .COUT1(\q_demod.n2117 ), .COUT0(\q_demod.n5373 ));
  q_demod_SLICE_35 \q_demod.SLICE_35 ( .DI1(\q_demod.n77[8] ), 
    .DI0(\q_demod.n77[7] ), .D1(\q_demod.n5370 ), .C1(\q_demod.n1[7] ), 
    .B1(\q_demod.comb_reg[1][7] ), .D0(\q_demod.n2113 ), .C0(\q_demod.n1[6] ), 
    .B0(\q_demod.comb_reg[1][6] ), .CE(\q_demod.n453 ), 
    .LSR(stm_fpga_spare4_c), .CLK(sx1257_clk_out_c), .CIN0(\q_demod.n2113 ), 
    .CIN1(\q_demod.n5370 ), .Q0(\q_demodulated_data[6] ), 
    .Q1(\q_demodulated_data[7] ), .F0(\q_demod.n77[7] ), .F1(\q_demod.n77[8] ), 
    .COUT1(\q_demod.n2115 ), .COUT0(\q_demod.n5370 ));
  q_demod_SLICE_36 \q_demod.SLICE_36 ( .DI1(\q_demod.n77[6] ), 
    .DI0(\q_demod.n77[5] ), .D1(\q_demod.n5367 ), .C1(\q_demod.n1[5] ), 
    .B1(\q_demod.comb_reg[1][5] ), .D0(\q_demod.n2111 ), .C0(\q_demod.n1[4] ), 
    .B0(\q_demod.comb_reg[1][4] ), .CE(\q_demod.n453 ), 
    .LSR(stm_fpga_spare4_c), .CLK(sx1257_clk_out_c), .CIN0(\q_demod.n2111 ), 
    .CIN1(\q_demod.n5367 ), .Q0(\q_demodulated_data[4] ), 
    .Q1(\q_demodulated_data[5] ), .F0(\q_demod.n77[5] ), .F1(\q_demod.n77[6] ), 
    .COUT1(\q_demod.n2113 ), .COUT0(\q_demod.n5367 ));
  q_demod_SLICE_37 \q_demod.SLICE_37 ( .DI1(\q_demod.n77[4] ), 
    .DI0(\q_demod.n77[3] ), .D1(\q_demod.n5364 ), .C1(\q_demod.n1[3] ), 
    .B1(\q_demod.comb_reg[1][3] ), .D0(\q_demod.n2109 ), .C0(\q_demod.n1[2] ), 
    .B0(\q_demod.comb_reg[1][2] ), .CE(\q_demod.n453 ), 
    .LSR(stm_fpga_spare4_c), .CLK(sx1257_clk_out_c), .CIN0(\q_demod.n2109 ), 
    .CIN1(\q_demod.n5364 ), .Q0(\q_demodulated_data[2] ), 
    .Q1(\q_demodulated_data[3] ), .F0(\q_demod.n77[3] ), .F1(\q_demod.n77[4] ), 
    .COUT1(\q_demod.n2111 ), .COUT0(\q_demod.n5364 ));
  q_demod_SLICE_38 \q_demod.SLICE_38 ( .DI1(\q_demod.n77[2] ), 
    .DI0(\q_demod.n77[1] ), .D1(\q_demod.n5274 ), .C1(\q_demod.n1[1] ), 
    .B1(\q_demod.comb_reg[1][1] ), .D0(VCC_net), .C0(\q_demod.n1[0] ), 
    .B0(\q_demod.comb_reg[1][0] ), .CE(\q_demod.n453 ), 
    .LSR(stm_fpga_spare4_c), .CLK(sx1257_clk_out_c), .CIN1(\q_demod.n5274 ), 
    .Q0(\q_demodulated_data[0] ), .Q1(\q_demodulated_data[1] ), 
    .F0(\q_demod.n77[1] ), .F1(\q_demod.n77[2] ), .COUT1(\q_demod.n2109 ), 
    .COUT0(\q_demod.n5274 ));
  q_demod_SLICE_39 \q_demod.SLICE_39 ( .DI1(\q_demod.n69_adj_509[10] ), 
    .DI0(\q_demod.n69_adj_509[9] ), .D1(\q_demod.n5430 ), 
    .C1(\q_demod.int_reg[2][10] ), .B1(\q_demod.int_reg[1][10] ), 
    .D0(\q_demod.n2006 ), .C0(\q_demod.int_reg[2][9] ), 
    .B0(\q_demod.int_reg[1][9] ), .LSR(stm_fpga_spare4_c), 
    .CLK(sx1257_clk_out_c), .CIN0(\q_demod.n2006 ), .CIN1(\q_demod.n5430 ), 
    .Q0(\q_demod.int_reg[2][9] ), .Q1(\q_demod.int_reg[2][10] ), 
    .F0(\q_demod.n69_adj_509[9] ), .F1(\q_demod.n69_adj_509[10] ), 
    .COUT1(\q_demod.n2008 ), .COUT0(\q_demod.n5430 ));
  q_demod_SLICE_40 \q_demod.SLICE_40 ( .DI1(\q_demod.n69_adj_509[8] ), 
    .DI0(\q_demod.n69_adj_509[7] ), .D1(\q_demod.n5427 ), 
    .C1(\q_demod.int_reg[2][8] ), .B1(\q_demod.int_reg[1][8] ), 
    .D0(\q_demod.n2004 ), .C0(\q_demod.int_reg[2][7] ), 
    .B0(\q_demod.int_reg[1][7] ), .LSR(stm_fpga_spare4_c), 
    .CLK(sx1257_clk_out_c), .CIN0(\q_demod.n2004 ), .CIN1(\q_demod.n5427 ), 
    .Q0(\q_demod.int_reg[2][7] ), .Q1(\q_demod.int_reg[2][8] ), 
    .F0(\q_demod.n69_adj_509[7] ), .F1(\q_demod.n69_adj_509[8] ), 
    .COUT1(\q_demod.n2006 ), .COUT0(\q_demod.n5427 ));
  q_demod_SLICE_41 \q_demod.SLICE_41 ( .DI1(\q_demod.n69[10] ), 
    .DI0(\q_demod.n69[9] ), .D1(\q_demod.n5262 ), 
    .C1(\q_demod.int_reg[1][10] ), .B1(\q_demod.int_reg[0][10] ), 
    .D0(\q_demod.n1975 ), .C0(\q_demod.int_reg[1][9] ), 
    .B0(\q_demod.int_reg[0][9] ), .LSR(stm_fpga_spare4_c), 
    .CLK(sx1257_clk_out_c), .CIN0(\q_demod.n1975 ), .CIN1(\q_demod.n5262 ), 
    .Q0(\q_demod.int_reg[1][9] ), .Q1(\q_demod.int_reg[1][10] ), 
    .F0(\q_demod.n69[9] ), .F1(\q_demod.n69[10] ), .COUT1(\q_demod.n1977 ), 
    .COUT0(\q_demod.n5262 ));
  q_demod_SLICE_42 \q_demod.SLICE_42 ( .DI0(\q_demod.n29[5] ), 
    .D1(\q_demod.n5511 ), .D0(\q_demod.n1988 ), .C0(\q_demod.cycle_reg[5] ), 
    .LSR(\q_demod.n1379 ), .CLK(sx1257_clk_out_c), .CIN0(\q_demod.n1988 ), 
    .CIN1(\q_demod.n5511 ), .Q0(\q_demod.cycle_reg[5] ), .F0(\q_demod.n29[5] ), 
    .COUT0(\q_demod.n5511 ));
  q_demod_SLICE_43 \q_demod.SLICE_43 ( .DI1(\q_demod.n29[2] ), 
    .DI0(\q_demod.n29[1] ), .D1(\q_demod.n5505 ), .C1(\q_demod.cycle_reg[2] ), 
    .D0(\q_demod.n1984 ), .C0(\q_demod.cycle_reg[1] ), .LSR(\q_demod.n1379 ), 
    .CLK(sx1257_clk_out_c), .CIN0(\q_demod.n1984 ), .CIN1(\q_demod.n5505 ), 
    .Q0(\q_demod.cycle_reg[1] ), .Q1(\q_demod.cycle_reg[2] ), 
    .F0(\q_demod.n29[1] ), .F1(\q_demod.n29[2] ), .COUT1(\q_demod.n1986 ), 
    .COUT0(\q_demod.n5505 ));
  q_demod_SLICE_44 \q_demod.SLICE_44 ( .DI1(\q_demod.n29[0] ), 
    .D1(\q_demod.n5502 ), .C1(\q_demod.cycle_reg[0] ), .B1(VCC_net), 
    .LSR(\q_demod.n1379 ), .CLK(sx1257_clk_out_c), .CIN1(\q_demod.n5502 ), 
    .Q1(\q_demod.cycle_reg[0] ), .F1(\q_demod.n29[0] ), 
    .COUT1(\q_demod.n1984 ), .COUT0(\q_demod.n5502 ));
  q_demod_SLICE_45 \q_demod.SLICE_45 ( .DI1(\q_demod.n69_adj_509[6] ), 
    .DI0(\q_demod.n69_adj_509[5] ), .D1(\q_demod.n5424 ), 
    .C1(\q_demod.int_reg[2][6] ), .B1(\q_demod.int_reg[1][6] ), 
    .D0(\q_demod.n2002 ), .C0(\q_demod.int_reg[2][5] ), 
    .B0(\q_demod.int_reg[1][5] ), .LSR(stm_fpga_spare4_c), 
    .CLK(sx1257_clk_out_c), .CIN0(\q_demod.n2002 ), .CIN1(\q_demod.n5424 ), 
    .Q0(\q_demod.int_reg[2][5] ), .Q1(\q_demod.int_reg[2][6] ), 
    .F0(\q_demod.n69_adj_509[5] ), .F1(\q_demod.n69_adj_509[6] ), 
    .COUT1(\q_demod.n2004 ), .COUT0(\q_demod.n5424 ));
  q_demod_SLICE_46 \q_demod.SLICE_46 ( .DI1(\q_demod.n69_adj_509[4] ), 
    .DI0(\q_demod.n69_adj_509[3] ), .D1(\q_demod.n5421 ), 
    .C1(\q_demod.int_reg[2][4] ), .B1(\q_demod.int_reg[1][4] ), 
    .D0(\q_demod.n2000 ), .C0(\q_demod.int_reg[2][3] ), 
    .B0(\q_demod.int_reg[1][3] ), .LSR(stm_fpga_spare4_c), 
    .CLK(sx1257_clk_out_c), .CIN0(\q_demod.n2000 ), .CIN1(\q_demod.n5421 ), 
    .Q0(\q_demod.int_reg[2][3] ), .Q1(\q_demod.int_reg[2][4] ), 
    .F0(\q_demod.n69_adj_509[3] ), .F1(\q_demod.n69_adj_509[4] ), 
    .COUT1(\q_demod.n2002 ), .COUT0(\q_demod.n5421 ));
  q_demod_SLICE_47 \q_demod.SLICE_47 ( .DI1(\q_demod.n69_adj_509[2] ), 
    .DI0(\q_demod.n69_adj_509[1] ), .D1(\q_demod.n5418 ), 
    .C1(\q_demod.int_reg[2][2] ), .B1(\q_demod.int_reg[1][2] ), 
    .D0(\q_demod.n1998 ), .C0(\q_demod.int_reg[2][1] ), 
    .B0(\q_demod.int_reg[1][1] ), .LSR(stm_fpga_spare4_c), 
    .CLK(sx1257_clk_out_c), .CIN0(\q_demod.n1998 ), .CIN1(\q_demod.n5418 ), 
    .Q0(\q_demod.int_reg[2][1] ), .Q1(\q_demod.int_reg[2][2] ), 
    .F0(\q_demod.n69_adj_509[1] ), .F1(\q_demod.n69_adj_509[2] ), 
    .COUT1(\q_demod.n2000 ), .COUT0(\q_demod.n5418 ));
  q_demod_SLICE_48 \q_demod.SLICE_48 ( .DI1(\q_demod.n69_adj_509[0] ), 
    .D1(\q_demod.n5331 ), .C1(\q_demod.int_reg[2][0] ), 
    .B1(\q_demod.int_reg[1][0] ), .LSR(stm_fpga_spare4_c), 
    .CLK(sx1257_clk_out_c), .CIN1(\q_demod.n5331 ), 
    .Q1(\q_demod.int_reg[2][0] ), .F1(\q_demod.n69_adj_509[0] ), 
    .COUT1(\q_demod.n1998 ), .COUT0(\q_demod.n5331 ));
  q_demod_SLICE_49 \q_demod.SLICE_49 ( .DI1(\q_demod.n69[8] ), 
    .DI0(\q_demod.n69[7] ), .D1(\q_demod.n5259 ), .C1(\q_demod.int_reg[1][8] ), 
    .B1(\q_demod.int_reg[0][8] ), .D0(\q_demod.n1973 ), 
    .C0(\q_demod.int_reg[1][7] ), .B0(\q_demod.int_reg[0][7] ), 
    .LSR(stm_fpga_spare4_c), .CLK(sx1257_clk_out_c), .CIN0(\q_demod.n1973 ), 
    .CIN1(\q_demod.n5259 ), .Q0(\q_demod.int_reg[1][7] ), 
    .Q1(\q_demod.int_reg[1][8] ), .F0(\q_demod.n69[7] ), .F1(\q_demod.n69[8] ), 
    .COUT1(\q_demod.n1975 ), .COUT0(\q_demod.n5259 ));
  i_demod_SLICE_50 \i_demod.SLICE_50 ( .DI1(\i_demod.n69[12] ), 
    .DI0(\i_demod.n69[11] ), .D1(\i_demod.n5415 ), 
    .C1(\i_demod.int_reg[1][12] ), .B1(\i_demod.int_reg[0][12] ), 
    .D0(\i_demod.n2058 ), .C0(\i_demod.int_reg[1][11] ), 
    .B0(\i_demod.int_reg[0][11] ), .LSR(stm_fpga_spare4_c), 
    .CLK(sx1257_clk_out_c), .CIN0(\i_demod.n2058 ), .CIN1(\i_demod.n5415 ), 
    .Q0(\i_demod.int_reg[1][11] ), .Q1(\i_demod.int_reg[1][12] ), 
    .F0(\i_demod.n69[11] ), .F1(\i_demod.n69[12] ), .COUT0(\i_demod.n5415 ));
  i_demod_SLICE_51 \i_demod.SLICE_51 ( .DI1(\i_demod.n69[10] ), 
    .DI0(\i_demod.n69[9] ), .D1(\i_demod.n5412 ), 
    .C1(\i_demod.int_reg[1][10] ), .B1(\i_demod.int_reg[0][10] ), 
    .D0(\i_demod.n2056 ), .C0(\i_demod.int_reg[1][9] ), 
    .B0(\i_demod.int_reg[0][9] ), .LSR(stm_fpga_spare4_c), 
    .CLK(sx1257_clk_out_c), .CIN0(\i_demod.n2056 ), .CIN1(\i_demod.n5412 ), 
    .Q0(\i_demod.int_reg[1][9] ), .Q1(\i_demod.int_reg[1][10] ), 
    .F0(\i_demod.n69[9] ), .F1(\i_demod.n69[10] ), .COUT1(\i_demod.n2058 ), 
    .COUT0(\i_demod.n5412 ));
  i_demod_SLICE_52 \i_demod.SLICE_52 ( .DI1(\i_demod.n69[8] ), 
    .DI0(\i_demod.n69[7] ), .D1(\i_demod.n5409 ), .C1(\i_demod.int_reg[1][8] ), 
    .B1(\i_demod.int_reg[0][8] ), .D0(\i_demod.n2054 ), 
    .C0(\i_demod.int_reg[1][7] ), .B0(\i_demod.int_reg[0][7] ), 
    .LSR(stm_fpga_spare4_c), .CLK(sx1257_clk_out_c), .CIN0(\i_demod.n2054 ), 
    .CIN1(\i_demod.n5409 ), .Q0(\i_demod.int_reg[1][7] ), 
    .Q1(\i_demod.int_reg[1][8] ), .F0(\i_demod.n69[7] ), .F1(\i_demod.n69[8] ), 
    .COUT1(\i_demod.n2056 ), .COUT0(\i_demod.n5409 ));
  i_demod_SLICE_53 \i_demod.SLICE_53 ( .DI1(\i_demod.n69[6] ), 
    .DI0(\i_demod.n69[5] ), .D1(\i_demod.n5406 ), .C1(\i_demod.int_reg[1][6] ), 
    .B1(\i_demod.int_reg[0][6] ), .D0(\i_demod.n2052 ), 
    .C0(\i_demod.int_reg[1][5] ), .B0(\i_demod.int_reg[0][5] ), 
    .LSR(stm_fpga_spare4_c), .CLK(sx1257_clk_out_c), .CIN0(\i_demod.n2052 ), 
    .CIN1(\i_demod.n5406 ), .Q0(\i_demod.int_reg[1][5] ), 
    .Q1(\i_demod.int_reg[1][6] ), .F0(\i_demod.n69[5] ), .F1(\i_demod.n69[6] ), 
    .COUT1(\i_demod.n2054 ), .COUT0(\i_demod.n5406 ));
  i_demod_SLICE_54 \i_demod.SLICE_54 ( .DI1(\i_demod.n69_adj_451[2] ), 
    .DI0(\i_demod.n69_adj_451[1] ), .D1(\i_demod.n5436 ), 
    .C1(\i_demod.int_reg[2][2] ), .B1(\i_demod.int_reg[1][2] ), 
    .D0(\i_demod.n2065 ), .C0(\i_demod.int_reg[2][1] ), 
    .B0(\i_demod.int_reg[1][1] ), .LSR(stm_fpga_spare4_c), 
    .CLK(sx1257_clk_out_c), .CIN0(\i_demod.n2065 ), .CIN1(\i_demod.n5436 ), 
    .Q0(\i_demod.int_reg[2][1] ), .Q1(\i_demod.int_reg[2][2] ), 
    .F0(\i_demod.n69_adj_451[1] ), .F1(\i_demod.n69_adj_451[2] ), 
    .COUT1(\i_demod.n2067 ), .COUT0(\i_demod.n5436 ));
  i_demod_SLICE_55 \i_demod.SLICE_55 ( .DI1(\i_demod.n69_adj_451[4] ), 
    .DI0(\i_demod.n69_adj_451[3] ), .D1(\i_demod.n5439 ), 
    .C1(\i_demod.int_reg[2][4] ), .B1(\i_demod.int_reg[1][4] ), 
    .D0(\i_demod.n2067 ), .C0(\i_demod.int_reg[2][3] ), 
    .B0(\i_demod.int_reg[1][3] ), .LSR(stm_fpga_spare4_c), 
    .CLK(sx1257_clk_out_c), .CIN0(\i_demod.n2067 ), .CIN1(\i_demod.n5439 ), 
    .Q0(\i_demod.int_reg[2][3] ), .Q1(\i_demod.int_reg[2][4] ), 
    .F0(\i_demod.n69_adj_451[3] ), .F1(\i_demod.n69_adj_451[4] ), 
    .COUT1(\i_demod.n2069 ), .COUT0(\i_demod.n5439 ));
  i_demod_SLICE_56 \i_demod.SLICE_56 ( .DI1(\i_demod.n69_adj_451[6] ), 
    .DI0(\i_demod.n69_adj_451[5] ), .D1(\i_demod.n5442 ), 
    .C1(\i_demod.int_reg[2][6] ), .B1(\i_demod.int_reg[1][6] ), 
    .D0(\i_demod.n2069 ), .C0(\i_demod.int_reg[2][5] ), 
    .B0(\i_demod.int_reg[1][5] ), .LSR(stm_fpga_spare4_c), 
    .CLK(sx1257_clk_out_c), .CIN0(\i_demod.n2069 ), .CIN1(\i_demod.n5442 ), 
    .Q0(\i_demod.int_reg[2][5] ), .Q1(\i_demod.int_reg[2][6] ), 
    .F0(\i_demod.n69_adj_451[5] ), .F1(\i_demod.n69_adj_451[6] ), 
    .COUT1(\i_demod.n2071 ), .COUT0(\i_demod.n5442 ));
  i_demod_SLICE_57 \i_demod.SLICE_57 ( .DI1(\i_demod.n69[4] ), 
    .DI0(\i_demod.n69[3] ), .D1(\i_demod.n5403 ), .C1(\i_demod.int_reg[1][4] ), 
    .B1(\i_demod.int_reg[0][4] ), .D0(\i_demod.n2050 ), 
    .C0(\i_demod.int_reg[1][3] ), .B0(\i_demod.int_reg[0][3] ), 
    .LSR(stm_fpga_spare4_c), .CLK(sx1257_clk_out_c), .CIN0(\i_demod.n2050 ), 
    .CIN1(\i_demod.n5403 ), .Q0(\i_demod.int_reg[1][3] ), 
    .Q1(\i_demod.int_reg[1][4] ), .F0(\i_demod.n69[3] ), .F1(\i_demod.n69[4] ), 
    .COUT1(\i_demod.n2052 ), .COUT0(\i_demod.n5403 ));
  i_demod_SLICE_58 \i_demod.SLICE_58 ( .DI1(\i_demod.n69_adj_451[8] ), 
    .DI0(\i_demod.n69_adj_451[7] ), .D1(\i_demod.n5445 ), 
    .C1(\i_demod.int_reg[2][8] ), .B1(\i_demod.int_reg[1][8] ), 
    .D0(\i_demod.n2071 ), .C0(\i_demod.int_reg[2][7] ), 
    .B0(\i_demod.int_reg[1][7] ), .LSR(stm_fpga_spare4_c), 
    .CLK(sx1257_clk_out_c), .CIN0(\i_demod.n2071 ), .CIN1(\i_demod.n5445 ), 
    .Q0(\i_demod.int_reg[2][7] ), .Q1(\i_demod.int_reg[2][8] ), 
    .F0(\i_demod.n69_adj_451[7] ), .F1(\i_demod.n69_adj_451[8] ), 
    .COUT1(\i_demod.n2073 ), .COUT0(\i_demod.n5445 ));
  i_demod_SLICE_59 \i_demod.SLICE_59 ( .DI0(\i_demod.n727[12] ), 
    .D1(\i_demod.n5295 ), .D0(\i_demod.n2188 ), .C0(\i_demod.n1_adj_453[12] ), 
    .B0(\i_demod.comb_reg[0][12] ), .CE(\i_demod.n441 ), 
    .LSR(stm_fpga_spare4_c), .CLK(sx1257_clk_out_c), .CIN0(\i_demod.n2188 ), 
    .CIN1(\i_demod.n5295 ), .Q0(\i_demod.comb_reg[1][12] ), 
    .F0(\i_demod.n727[12] ), .COUT0(\i_demod.n5295 ));
  i_demod_SLICE_60 \i_demod.SLICE_60 ( .DI1(\i_demod.n727[11] ), 
    .DI0(\i_demod.n727[10] ), .D1(\i_demod.n5292 ), 
    .C1(\i_demod.n1_adj_453[11] ), .B1(\i_demod.comb_reg[0][11] ), 
    .D0(\i_demod.n2186 ), .C0(\i_demod.n1_adj_453[10] ), 
    .B0(\i_demod.comb_reg[0][10] ), .CE(\i_demod.n441 ), 
    .LSR(stm_fpga_spare4_c), .CLK(sx1257_clk_out_c), .CIN0(\i_demod.n2186 ), 
    .CIN1(\i_demod.n5292 ), .Q0(\i_demod.comb_reg[1][10] ), 
    .Q1(\i_demod.comb_reg[1][11] ), .F0(\i_demod.n727[10] ), 
    .F1(\i_demod.n727[11] ), .COUT1(\i_demod.n2188 ), .COUT0(\i_demod.n5292 ));
  i_demod_SLICE_61 \i_demod.SLICE_61 ( .DI1(\i_demod.n727[9] ), 
    .DI0(\i_demod.n727[8] ), .D1(\i_demod.n5289 ), 
    .C1(\i_demod.n1_adj_453[9] ), .B1(\i_demod.comb_reg[0][9] ), 
    .D0(\i_demod.n2184 ), .C0(\i_demod.n1_adj_453[8] ), 
    .B0(\i_demod.comb_reg[0][8] ), .CE(\i_demod.n441 ), 
    .LSR(stm_fpga_spare4_c), .CLK(sx1257_clk_out_c), .CIN0(\i_demod.n2184 ), 
    .CIN1(\i_demod.n5289 ), .Q0(\i_demod.comb_reg[1][8] ), 
    .Q1(\i_demod.comb_reg[1][9] ), .F0(\i_demod.n727[8] ), 
    .F1(\i_demod.n727[9] ), .COUT1(\i_demod.n2186 ), .COUT0(\i_demod.n5289 ));
  i_demod_SLICE_62 \i_demod.SLICE_62 ( .DI1(\i_demod.n727[7] ), 
    .DI0(\i_demod.n727[6] ), .D1(\i_demod.n5286 ), 
    .C1(\i_demod.n1_adj_453[7] ), .B1(\i_demod.comb_reg[0][7] ), 
    .D0(\i_demod.n2182 ), .C0(\i_demod.n1_adj_453[6] ), 
    .B0(\i_demod.comb_reg[0][6] ), .CE(\i_demod.n441 ), 
    .LSR(stm_fpga_spare4_c), .CLK(sx1257_clk_out_c), .CIN0(\i_demod.n2182 ), 
    .CIN1(\i_demod.n5286 ), .Q0(\i_demod.comb_reg[1][6] ), 
    .Q1(\i_demod.comb_reg[1][7] ), .F0(\i_demod.n727[6] ), 
    .F1(\i_demod.n727[7] ), .COUT1(\i_demod.n2184 ), .COUT0(\i_demod.n5286 ));
  i_demod_SLICE_63 \i_demod.SLICE_63 ( .DI1(\i_demod.n727[5] ), 
    .DI0(\i_demod.n727[4] ), .D1(\i_demod.n5283 ), 
    .C1(\i_demod.n1_adj_453[5] ), .B1(\i_demod.comb_reg[0][5] ), 
    .D0(\i_demod.n2180 ), .C0(\i_demod.n1_adj_453[4] ), 
    .B0(\i_demod.comb_reg[0][4] ), .CE(\i_demod.n441 ), 
    .LSR(stm_fpga_spare4_c), .CLK(sx1257_clk_out_c), .CIN0(\i_demod.n2180 ), 
    .CIN1(\i_demod.n5283 ), .Q0(\i_demod.comb_reg[1][4] ), 
    .Q1(\i_demod.comb_reg[1][5] ), .F0(\i_demod.n727[4] ), 
    .F1(\i_demod.n727[5] ), .COUT1(\i_demod.n2182 ), .COUT0(\i_demod.n5283 ));
  i_demod_SLICE_64 \i_demod.SLICE_64 ( .DI1(\i_demod.n727[3] ), 
    .DI0(\i_demod.n727[2] ), .D1(\i_demod.n5280 ), 
    .C1(\i_demod.n1_adj_453[3] ), .B1(\i_demod.comb_reg[0][3] ), 
    .D0(\i_demod.n2178 ), .C0(\i_demod.n1_adj_453[2] ), 
    .B0(\i_demod.comb_reg[0][2] ), .CE(\i_demod.n441 ), 
    .LSR(stm_fpga_spare4_c), .CLK(sx1257_clk_out_c), .CIN0(\i_demod.n2178 ), 
    .CIN1(\i_demod.n5280 ), .Q0(\i_demod.comb_reg[1][2] ), 
    .Q1(\i_demod.comb_reg[1][3] ), .F0(\i_demod.n727[2] ), 
    .F1(\i_demod.n727[3] ), .COUT1(\i_demod.n2180 ), .COUT0(\i_demod.n5280 ));
  i_demod_SLICE_65 \i_demod.SLICE_65 ( .DI1(\i_demod.n727[1] ), 
    .DI0(\i_demod.n727[0] ), .D1(\i_demod.n5268 ), 
    .C1(\i_demod.n1_adj_453[1] ), .B1(\i_demod.comb_reg[0][1] ), .D0(VCC_net), 
    .C0(\i_demod.n1_adj_453[0] ), .B0(\i_demod.comb_reg[0][0] ), 
    .CE(\i_demod.n441 ), .LSR(stm_fpga_spare4_c), .CLK(sx1257_clk_out_c), 
    .CIN1(\i_demod.n5268 ), .Q0(\i_demod.comb_reg[1][0] ), 
    .Q1(\i_demod.comb_reg[1][1] ), .F0(\i_demod.n727[0] ), 
    .F1(\i_demod.n727[1] ), .COUT1(\i_demod.n2178 ), .COUT0(\i_demod.n5268 ));
  i_demod_SLICE_66 \i_demod.SLICE_66 ( .DI1(\i_demod.n92[13] ), 
    .DI0(\i_demod.n92[12] ), .D1(\i_demod.n5529 ), .C1(\i_demod.n305 ), 
    .B1(\i_demod.int_reg[0][12] ), .D0(\i_demod.n2171 ), .C0(\i_demod.n305 ), 
    .B0(\i_demod.int_reg[0][11] ), .LSR(stm_fpga_spare4_c), 
    .CLK(sx1257_clk_out_c), .CIN0(\i_demod.n2171 ), .CIN1(\i_demod.n5529 ), 
    .Q0(\i_demod.int_reg[0][11] ), .Q1(\i_demod.int_reg[0][12] ), 
    .F0(\i_demod.n92[12] ), .F1(\i_demod.n92[13] ), .COUT0(\i_demod.n5529 ));
  i_demod_SLICE_67 \i_demod.SLICE_67 ( .DI1(\i_demod.n92[11] ), 
    .DI0(\i_demod.n92[10] ), .D1(\i_demod.n5526 ), .C1(\i_demod.n305 ), 
    .B1(\i_demod.int_reg[0][10] ), .D0(\i_demod.n2169 ), .C0(\i_demod.n305 ), 
    .B0(\i_demod.int_reg[0][9] ), .LSR(stm_fpga_spare4_c), 
    .CLK(sx1257_clk_out_c), .CIN0(\i_demod.n2169 ), .CIN1(\i_demod.n5526 ), 
    .Q0(\i_demod.int_reg[0][9] ), .Q1(\i_demod.int_reg[0][10] ), 
    .F0(\i_demod.n92[10] ), .F1(\i_demod.n92[11] ), .COUT1(\i_demod.n2171 ), 
    .COUT0(\i_demod.n5526 ));
  i_demod_SLICE_68 \i_demod.SLICE_68 ( .DI1(\i_demod.n92[9] ), 
    .DI0(\i_demod.n92[8] ), .D1(\i_demod.n5523 ), .C1(\i_demod.n305 ), 
    .B1(\i_demod.int_reg[0][8] ), .D0(\i_demod.n2167 ), .C0(\i_demod.n305 ), 
    .B0(\i_demod.int_reg[0][7] ), .LSR(stm_fpga_spare4_c), 
    .CLK(sx1257_clk_out_c), .CIN0(\i_demod.n2167 ), .CIN1(\i_demod.n5523 ), 
    .Q0(\i_demod.int_reg[0][7] ), .Q1(\i_demod.int_reg[0][8] ), 
    .F0(\i_demod.n92[8] ), .F1(\i_demod.n92[9] ), .COUT1(\i_demod.n2169 ), 
    .COUT0(\i_demod.n5523 ));
  i_demod_SLICE_69 \i_demod.SLICE_69 ( .DI1(\i_demod.n69_adj_451[10] ), 
    .DI0(\i_demod.n69_adj_451[9] ), .D1(\i_demod.n5448 ), 
    .C1(\i_demod.int_reg[2][10] ), .B1(\i_demod.int_reg[1][10] ), 
    .D0(\i_demod.n2073 ), .C0(\i_demod.int_reg[2][9] ), 
    .B0(\i_demod.int_reg[1][9] ), .LSR(stm_fpga_spare4_c), 
    .CLK(sx1257_clk_out_c), .CIN0(\i_demod.n2073 ), .CIN1(\i_demod.n5448 ), 
    .Q0(\i_demod.int_reg[2][9] ), .Q1(\i_demod.int_reg[2][10] ), 
    .F0(\i_demod.n69_adj_451[9] ), .F1(\i_demod.n69_adj_451[10] ), 
    .COUT1(\i_demod.n2075 ), .COUT0(\i_demod.n5448 ));
  i_demod_SLICE_70 \i_demod.SLICE_70 ( .DI1(\i_demod.n92[7] ), 
    .DI0(\i_demod.n92[6] ), .D1(\i_demod.n5520 ), .C1(\i_demod.n305 ), 
    .B1(\i_demod.int_reg[0][6] ), .D0(\i_demod.n2165 ), .C0(\i_demod.n305 ), 
    .B0(\i_demod.int_reg[0][5] ), .LSR(stm_fpga_spare4_c), 
    .CLK(sx1257_clk_out_c), .CIN0(\i_demod.n2165 ), .CIN1(\i_demod.n5520 ), 
    .Q0(\i_demod.int_reg[0][5] ), .Q1(\i_demod.int_reg[0][6] ), 
    .F0(\i_demod.n92[6] ), .F1(\i_demod.n92[7] ), .COUT1(\i_demod.n2167 ), 
    .COUT0(\i_demod.n5520 ));
  i_demod_SLICE_71 \i_demod.SLICE_71 ( .DI1(\i_demod.n92[5] ), 
    .DI0(\i_demod.n92[4] ), .D1(\i_demod.n5517 ), .C1(\i_demod.n305 ), 
    .B1(\i_demod.int_reg[0][4] ), .D0(\i_demod.n2163 ), .C0(\i_demod.n305 ), 
    .B0(\i_demod.int_reg[0][3] ), .LSR(stm_fpga_spare4_c), 
    .CLK(sx1257_clk_out_c), .CIN0(\i_demod.n2163 ), .CIN1(\i_demod.n5517 ), 
    .Q0(\i_demod.int_reg[0][3] ), .Q1(\i_demod.int_reg[0][4] ), 
    .F0(\i_demod.n92[4] ), .F1(\i_demod.n92[5] ), .COUT1(\i_demod.n2165 ), 
    .COUT0(\i_demod.n5517 ));
  i_demod_SLICE_72 \i_demod.SLICE_72 ( .DI1(\i_demod.n92[3] ), 
    .DI0(\i_demod.n92[2] ), .D1(\i_demod.n5514 ), .C1(\i_demod.n305 ), 
    .B1(\i_demod.int_reg[0][2] ), .D0(\i_demod.n2161 ), .C0(\i_demod.n305 ), 
    .B0(\i_demod.int_reg[0][1] ), .LSR(stm_fpga_spare4_c), 
    .CLK(sx1257_clk_out_c), .CIN0(\i_demod.n2161 ), .CIN1(\i_demod.n5514 ), 
    .Q0(\i_demod.int_reg[0][1] ), .Q1(\i_demod.int_reg[0][2] ), 
    .F0(\i_demod.n92[2] ), .F1(\i_demod.n92[3] ), .COUT1(\i_demod.n2163 ), 
    .COUT0(\i_demod.n5514 ));
  i_demod_SLICE_73 \i_demod.SLICE_73 ( .DI1(\i_demod.n92[1] ), 
    .D1(\i_demod.n5361 ), .C1(i_out_synced), .B1(\i_demod.int_reg[0][0] ), 
    .B0(\i_demod.n305 ), .LSR(stm_fpga_spare4_c), .CLK(sx1257_clk_out_c), 
    .CIN1(\i_demod.n5361 ), .Q1(\i_demod.int_reg[0][0] ), 
    .F1(\i_demod.n92[1] ), .COUT1(\i_demod.n2161 ), .COUT0(\i_demod.n5361 ));
  i_demod_SLICE_74 \i_demod.SLICE_74 ( .DI0(\i_demod.n1328[12] ), 
    .D1(\i_demod.n5397 ), .D0(\i_demod.n2158 ), .C0(\i_demod.n1[12] ), 
    .B0(\i_demod.int_reg[2][12] ), .CE(\i_demod.n441 ), 
    .LSR(stm_fpga_spare4_c), .CLK(sx1257_clk_out_c), .CIN0(\i_demod.n2158 ), 
    .CIN1(\i_demod.n5397 ), .Q0(\i_demod.comb_reg[0][12] ), 
    .F0(\i_demod.n1328[12] ), .COUT0(\i_demod.n5397 ));
  i_demod_SLICE_75 \i_demod.SLICE_75 ( .DI1(\i_demod.n1328[11] ), 
    .DI0(\i_demod.n1328[10] ), .D1(\i_demod.n5394 ), .C1(\i_demod.n1[11] ), 
    .B1(\i_demod.int_reg[2][11] ), .D0(\i_demod.n2156 ), .C0(\i_demod.n1[10] ), 
    .B0(\i_demod.int_reg[2][10] ), .CE(\i_demod.n441 ), 
    .LSR(stm_fpga_spare4_c), .CLK(sx1257_clk_out_c), .CIN0(\i_demod.n2156 ), 
    .CIN1(\i_demod.n5394 ), .Q0(\i_demod.comb_reg[0][10] ), 
    .Q1(\i_demod.comb_reg[0][11] ), .F0(\i_demod.n1328[10] ), 
    .F1(\i_demod.n1328[11] ), .COUT1(\i_demod.n2158 ), .COUT0(\i_demod.n5394 ));
  i_demod_SLICE_76 \i_demod.SLICE_76 ( .DI1(\i_demod.n1328[9] ), 
    .DI0(\i_demod.n1328[8] ), .D1(\i_demod.n5391 ), .C1(\i_demod.n1[9] ), 
    .B1(\i_demod.int_reg[2][9] ), .D0(\i_demod.n2154 ), .C0(\i_demod.n1[8] ), 
    .B0(\i_demod.int_reg[2][8] ), .CE(\i_demod.n441 ), .LSR(stm_fpga_spare4_c), 
    .CLK(sx1257_clk_out_c), .CIN0(\i_demod.n2154 ), .CIN1(\i_demod.n5391 ), 
    .Q0(\i_demod.comb_reg[0][8] ), .Q1(\i_demod.comb_reg[0][9] ), 
    .F0(\i_demod.n1328[8] ), .F1(\i_demod.n1328[9] ), .COUT1(\i_demod.n2156 ), 
    .COUT0(\i_demod.n5391 ));
  i_demod_SLICE_77 \i_demod.SLICE_77 ( .DI1(\i_demod.n1328[7] ), 
    .DI0(\i_demod.n1328[6] ), .D1(\i_demod.n5388 ), .C1(\i_demod.n1[7] ), 
    .B1(\i_demod.int_reg[2][7] ), .D0(\i_demod.n2152 ), .C0(\i_demod.n1[6] ), 
    .B0(\i_demod.int_reg[2][6] ), .CE(\i_demod.n441 ), .LSR(stm_fpga_spare4_c), 
    .CLK(sx1257_clk_out_c), .CIN0(\i_demod.n2152 ), .CIN1(\i_demod.n5388 ), 
    .Q0(\i_demod.comb_reg[0][6] ), .Q1(\i_demod.comb_reg[0][7] ), 
    .F0(\i_demod.n1328[6] ), .F1(\i_demod.n1328[7] ), .COUT1(\i_demod.n2154 ), 
    .COUT0(\i_demod.n5388 ));
  i_demod_SLICE_78 \i_demod.SLICE_78 ( .DI1(\i_demod.n1328[5] ), 
    .DI0(\i_demod.n1328[4] ), .D1(\i_demod.n5385 ), .C1(\i_demod.n1[5] ), 
    .B1(\i_demod.int_reg[2][5] ), .D0(\i_demod.n2150 ), .C0(\i_demod.n1[4] ), 
    .B0(\i_demod.int_reg[2][4] ), .CE(\i_demod.n441 ), .LSR(stm_fpga_spare4_c), 
    .CLK(sx1257_clk_out_c), .CIN0(\i_demod.n2150 ), .CIN1(\i_demod.n5385 ), 
    .Q0(\i_demod.comb_reg[0][4] ), .Q1(\i_demod.comb_reg[0][5] ), 
    .F0(\i_demod.n1328[4] ), .F1(\i_demod.n1328[5] ), .COUT1(\i_demod.n2152 ), 
    .COUT0(\i_demod.n5385 ));
  i_demod_SLICE_79 \i_demod.SLICE_79 ( .DI1(\i_demod.n1328[3] ), 
    .DI0(\i_demod.n1328[2] ), .D1(\i_demod.n5382 ), .C1(\i_demod.n1[3] ), 
    .B1(\i_demod.int_reg[2][3] ), .D0(\i_demod.n2148 ), .C0(\i_demod.n1[2] ), 
    .B0(\i_demod.int_reg[2][2] ), .CE(\i_demod.n441 ), .LSR(stm_fpga_spare4_c), 
    .CLK(sx1257_clk_out_c), .CIN0(\i_demod.n2148 ), .CIN1(\i_demod.n5382 ), 
    .Q0(\i_demod.comb_reg[0][2] ), .Q1(\i_demod.comb_reg[0][3] ), 
    .F0(\i_demod.n1328[2] ), .F1(\i_demod.n1328[3] ), .COUT1(\i_demod.n2150 ), 
    .COUT0(\i_demod.n5382 ));
  i_demod_SLICE_80 \i_demod.SLICE_80 ( .DI1(\i_demod.n1328[1] ), 
    .DI0(\i_demod.n1328[0] ), .D1(\i_demod.n5271 ), .C1(\i_demod.n1[1] ), 
    .B1(\i_demod.int_reg[2][1] ), .D0(VCC_net), .C0(\i_demod.n1[0] ), 
    .B0(\i_demod.int_reg[2][0] ), .CE(\i_demod.n441 ), .LSR(stm_fpga_spare4_c), 
    .CLK(sx1257_clk_out_c), .CIN1(\i_demod.n5271 ), 
    .Q0(\i_demod.comb_reg[0][0] ), .Q1(\i_demod.comb_reg[0][1] ), 
    .F0(\i_demod.n1328[0] ), .F1(\i_demod.n1328[1] ), .COUT1(\i_demod.n2148 ), 
    .COUT0(\i_demod.n5271 ));
  i_demod_SLICE_81 \i_demod.SLICE_81 ( .DI1(\i_demod.n69_adj_451[12] ), 
    .DI0(\i_demod.n69_adj_451[11] ), .D1(\i_demod.n5451 ), 
    .C1(\i_demod.int_reg[2][12] ), .B1(\i_demod.int_reg[1][12] ), 
    .D0(\i_demod.n2075 ), .C0(\i_demod.int_reg[2][11] ), 
    .B0(\i_demod.int_reg[1][11] ), .LSR(stm_fpga_spare4_c), 
    .CLK(sx1257_clk_out_c), .CIN0(\i_demod.n2075 ), .CIN1(\i_demod.n5451 ), 
    .Q0(\i_demod.int_reg[2][11] ), .Q1(\i_demod.int_reg[2][12] ), 
    .F0(\i_demod.n69_adj_451[11] ), .F1(\i_demod.n69_adj_451[12] ), 
    .COUT0(\i_demod.n5451 ));
  i_demod_SLICE_82 \i_demod.SLICE_82 ( .DI0(\i_demod.n77[13] ), 
    .D1(\i_demod.n5499 ), .D0(\i_demod.n2106 ), .C0(\i_demod.n1_adj_452[12] ), 
    .B0(\i_demod.comb_reg[1][12] ), .CE(\i_demod.n441 ), 
    .LSR(stm_fpga_spare4_c), .CLK(sx1257_clk_out_c), .CIN0(\i_demod.n2106 ), 
    .CIN1(\i_demod.n5499 ), .Q0(\i_demodulated_data[12] ), 
    .F0(\i_demod.n77[13] ), .COUT0(\i_demod.n5499 ));
  i_demod_SLICE_83 \i_demod.SLICE_83 ( .DI1(\i_demod.n77[12] ), 
    .DI0(\i_demod.n77[11] ), .D1(\i_demod.n5496 ), 
    .C1(\i_demod.n1_adj_452[11] ), .B1(\i_demod.comb_reg[1][11] ), 
    .D0(\i_demod.n2104 ), .C0(\i_demod.n1_adj_452[10] ), 
    .B0(\i_demod.comb_reg[1][10] ), .CE(\i_demod.n441 ), 
    .LSR(stm_fpga_spare4_c), .CLK(sx1257_clk_out_c), .CIN0(\i_demod.n2104 ), 
    .CIN1(\i_demod.n5496 ), .Q0(\i_demodulated_data[10] ), 
    .Q1(\i_demodulated_data[11] ), .F0(\i_demod.n77[11] ), 
    .F1(\i_demod.n77[12] ), .COUT1(\i_demod.n2106 ), .COUT0(\i_demod.n5496 ));
  i_demod_SLICE_84 \i_demod.SLICE_84 ( .DI1(\i_demod.n77[10] ), 
    .DI0(\i_demod.n77[9] ), .D1(\i_demod.n5493 ), .C1(\i_demod.n1_adj_452[9] ), 
    .B1(\i_demod.comb_reg[1][9] ), .D0(\i_demod.n2102 ), 
    .C0(\i_demod.n1_adj_452[8] ), .B0(\i_demod.comb_reg[1][8] ), 
    .CE(\i_demod.n441 ), .LSR(stm_fpga_spare4_c), .CLK(sx1257_clk_out_c), 
    .CIN0(\i_demod.n2102 ), .CIN1(\i_demod.n5493 ), 
    .Q0(\i_demodulated_data[8] ), .Q1(\i_demodulated_data[9] ), 
    .F0(\i_demod.n77[9] ), .F1(\i_demod.n77[10] ), .COUT1(\i_demod.n2104 ), 
    .COUT0(\i_demod.n5493 ));
  i_demod_SLICE_85 \i_demod.SLICE_85 ( .DI1(\i_demod.n77[8] ), 
    .DI0(\i_demod.n77[7] ), .D1(\i_demod.n5490 ), .C1(\i_demod.n1_adj_452[7] ), 
    .B1(\i_demod.comb_reg[1][7] ), .D0(\i_demod.n2100 ), 
    .C0(\i_demod.n1_adj_452[6] ), .B0(\i_demod.comb_reg[1][6] ), 
    .CE(\i_demod.n441 ), .LSR(stm_fpga_spare4_c), .CLK(sx1257_clk_out_c), 
    .CIN0(\i_demod.n2100 ), .CIN1(\i_demod.n5490 ), 
    .Q0(\i_demodulated_data[6] ), .Q1(\i_demodulated_data[7] ), 
    .F0(\i_demod.n77[7] ), .F1(\i_demod.n77[8] ), .COUT1(\i_demod.n2102 ), 
    .COUT0(\i_demod.n5490 ));
  i_demod_SLICE_86 \i_demod.SLICE_86 ( .DI1(\i_demod.n77[6] ), 
    .DI0(\i_demod.n77[5] ), .D1(\i_demod.n5487 ), .C1(\i_demod.n1_adj_452[5] ), 
    .B1(\i_demod.comb_reg[1][5] ), .D0(\i_demod.n2098 ), 
    .C0(\i_demod.n1_adj_452[4] ), .B0(\i_demod.comb_reg[1][4] ), 
    .CE(\i_demod.n441 ), .LSR(stm_fpga_spare4_c), .CLK(sx1257_clk_out_c), 
    .CIN0(\i_demod.n2098 ), .CIN1(\i_demod.n5487 ), 
    .Q0(\i_demodulated_data[4] ), .Q1(\i_demodulated_data[5] ), 
    .F0(\i_demod.n77[5] ), .F1(\i_demod.n77[6] ), .COUT1(\i_demod.n2100 ), 
    .COUT0(\i_demod.n5487 ));
  i_demod_SLICE_87 \i_demod.SLICE_87 ( .DI1(\i_demod.n77[4] ), 
    .DI0(\i_demod.n77[3] ), .D1(\i_demod.n5484 ), .C1(\i_demod.n1_adj_452[3] ), 
    .B1(\i_demod.comb_reg[1][3] ), .D0(\i_demod.n2096 ), 
    .C0(\i_demod.n1_adj_452[2] ), .B0(\i_demod.comb_reg[1][2] ), 
    .CE(\i_demod.n441 ), .LSR(stm_fpga_spare4_c), .CLK(sx1257_clk_out_c), 
    .CIN0(\i_demod.n2096 ), .CIN1(\i_demod.n5484 ), 
    .Q0(\i_demodulated_data[2] ), .Q1(\i_demodulated_data[3] ), 
    .F0(\i_demod.n77[3] ), .F1(\i_demod.n77[4] ), .COUT1(\i_demod.n2098 ), 
    .COUT0(\i_demod.n5484 ));
  i_demod_SLICE_88 \i_demod.SLICE_88 ( .DI1(\i_demod.n69_adj_451[0] ), 
    .D1(\i_demod.n5334 ), .C1(\i_demod.int_reg[2][0] ), 
    .B1(\i_demod.int_reg[1][0] ), .LSR(stm_fpga_spare4_c), 
    .CLK(sx1257_clk_out_c), .CIN1(\i_demod.n5334 ), 
    .Q1(\i_demod.int_reg[2][0] ), .F1(\i_demod.n69_adj_451[0] ), 
    .COUT1(\i_demod.n2065 ), .COUT0(\i_demod.n5334 ));
  i_demod_SLICE_89 \i_demod.SLICE_89 ( .DI1(\i_demod.n69[2] ), 
    .DI0(\i_demod.n69[1] ), .D1(\i_demod.n5400 ), .C1(\i_demod.int_reg[1][2] ), 
    .B1(\i_demod.int_reg[0][2] ), .D0(\i_demod.n2048 ), 
    .C0(\i_demod.int_reg[1][1] ), .B0(\i_demod.int_reg[0][1] ), 
    .LSR(stm_fpga_spare4_c), .CLK(sx1257_clk_out_c), .CIN0(\i_demod.n2048 ), 
    .CIN1(\i_demod.n5400 ), .Q0(\i_demod.int_reg[1][1] ), 
    .Q1(\i_demod.int_reg[1][2] ), .F0(\i_demod.n69[1] ), .F1(\i_demod.n69[2] ), 
    .COUT1(\i_demod.n2050 ), .COUT0(\i_demod.n5400 ));
  i_demod_SLICE_90 \i_demod.SLICE_90 ( .DI1(\i_demod.n69[0] ), 
    .D1(\i_demod.n5328 ), .C1(\i_demod.int_reg[1][0] ), 
    .B1(\i_demod.int_reg[0][0] ), .LSR(stm_fpga_spare4_c), 
    .CLK(sx1257_clk_out_c), .CIN1(\i_demod.n5328 ), 
    .Q1(\i_demod.int_reg[1][0] ), .F1(\i_demod.n69[0] ), 
    .COUT1(\i_demod.n2048 ), .COUT0(\i_demod.n5328 ));
  i_demod_SLICE_91 \i_demod.SLICE_91 ( .DI1(\i_demod.n29[0] ), 
    .D1(\i_demod.n5472 ), .C1(\i_demod.cycle_reg[0] ), .B1(VCC_net), 
    .LSR(\i_demod.n1378 ), .CLK(sx1257_clk_out_c), .CIN1(\i_demod.n5472 ), 
    .Q1(\i_demod.cycle_reg[0] ), .F1(\i_demod.n29[0] ), 
    .COUT1(\i_demod.n2089 ), .COUT0(\i_demod.n5472 ));
  i_demod_SLICE_92 \i_demod.SLICE_92 ( .DI1(\i_demod.n29[2] ), 
    .DI0(\i_demod.n29[1] ), .D1(\i_demod.n5475 ), .C1(\i_demod.cycle_reg[2] ), 
    .D0(\i_demod.n2089 ), .C0(\i_demod.cycle_reg[1] ), .LSR(\i_demod.n1378 ), 
    .CLK(sx1257_clk_out_c), .CIN0(\i_demod.n2089 ), .CIN1(\i_demod.n5475 ), 
    .Q0(\i_demod.cycle_reg[1] ), .Q1(\i_demod.cycle_reg[2] ), 
    .F0(\i_demod.n29[1] ), .F1(\i_demod.n29[2] ), .COUT1(\i_demod.n2091 ), 
    .COUT0(\i_demod.n5475 ));
  i_demod_SLICE_93 \i_demod.SLICE_93 ( .DI1(\i_demod.n29[4] ), 
    .DI0(\i_demod.n29[3] ), .D1(\i_demod.n5478 ), .C1(\i_demod.cycle_reg[4] ), 
    .D0(\i_demod.n2091 ), .C0(\i_demod.cycle_reg[3] ), .LSR(\i_demod.n1378 ), 
    .CLK(sx1257_clk_out_c), .CIN0(\i_demod.n2091 ), .CIN1(\i_demod.n5478 ), 
    .Q0(\i_demod.cycle_reg[3] ), .Q1(\i_demod.cycle_reg[4] ), 
    .F0(\i_demod.n29[3] ), .F1(\i_demod.n29[4] ), .COUT1(\i_demod.n2093 ), 
    .COUT0(\i_demod.n5478 ));
  i_demod_SLICE_94 \i_demod.SLICE_94 ( .DI0(\i_demod.n29[5] ), 
    .D1(\i_demod.n5481 ), .D0(\i_demod.n2093 ), .C0(\i_demod.cycle_reg[5] ), 
    .LSR(\i_demod.n1378 ), .CLK(sx1257_clk_out_c), .CIN0(\i_demod.n2093 ), 
    .CIN1(\i_demod.n5481 ), .Q0(\i_demod.cycle_reg[5] ), .F0(\i_demod.n29[5] ), 
    .COUT0(\i_demod.n5481 ));
  i_demod_SLICE_95 \i_demod.SLICE_95 ( .DI1(\i_demod.n77[2] ), 
    .DI0(\i_demod.n77[1] ), .D1(\i_demod.n5358 ), .C1(\i_demod.n1_adj_452[1] ), 
    .B1(\i_demod.comb_reg[1][1] ), .D0(VCC_net), .C0(\i_demod.n1_adj_452[0] ), 
    .B0(\i_demod.comb_reg[1][0] ), .CE(\i_demod.n441 ), 
    .LSR(stm_fpga_spare4_c), .CLK(sx1257_clk_out_c), .CIN1(\i_demod.n5358 ), 
    .Q0(\i_demodulated_data[0] ), .Q1(\i_demodulated_data[1] ), 
    .F0(\i_demod.n77[1] ), .F1(\i_demod.n77[2] ), .COUT1(\i_demod.n2096 ), 
    .COUT0(\i_demod.n5358 ));
  led_blink_SLICE_96 \led_blink.SLICE_96 ( .DI0(\led_blink.n133[31] ), 
    .D1(\led_blink.n5547 ), .D0(\led_blink.n2045 ), .C0(\counter[31] ), 
    .LSR(\led_blink.n1365 ), .CLK(sx1257_clk_out_c), .CIN0(\led_blink.n2045 ), 
    .CIN1(\led_blink.n5547 ), .Q0(\counter[31] ), .F0(\led_blink.n133[31] ), 
    .COUT0(\led_blink.n5547 ));
  led_blink_SLICE_97 \led_blink.SLICE_97 ( .DI1(\led_blink.n133[30] ), 
    .DI0(\led_blink.n133[29] ), .D1(\led_blink.n5244 ), .C1(\counter[30] ), 
    .D0(\led_blink.n2043 ), .C0(\counter[29] ), .LSR(\led_blink.n1365 ), 
    .CLK(sx1257_clk_out_c), .CIN0(\led_blink.n2043 ), .CIN1(\led_blink.n5244 ), 
    .Q0(\counter[29] ), .Q1(\counter[30] ), .F0(\led_blink.n133[29] ), 
    .F1(\led_blink.n133[30] ), .COUT1(\led_blink.n2045 ), 
    .COUT0(\led_blink.n5244 ));
  led_blink_SLICE_98 \led_blink.SLICE_98 ( .DI1(\led_blink.n133[28] ), 
    .DI0(\led_blink.n133[27] ), .D1(\led_blink.n5241 ), .C1(\counter[28] ), 
    .D0(\led_blink.n2041 ), .C0(\counter[27] ), .LSR(\led_blink.n1365 ), 
    .CLK(sx1257_clk_out_c), .CIN0(\led_blink.n2041 ), .CIN1(\led_blink.n5241 ), 
    .Q0(\counter[27] ), .Q1(\counter[28] ), .F0(\led_blink.n133[27] ), 
    .F1(\led_blink.n133[28] ), .COUT1(\led_blink.n2043 ), 
    .COUT0(\led_blink.n5241 ));
  led_blink_SLICE_99 \led_blink.SLICE_99 ( .DI1(\led_blink.n133[26] ), 
    .DI0(\led_blink.n133[25] ), .D1(\led_blink.n5238 ), .C1(\counter[26] ), 
    .D0(\led_blink.n2039 ), .C0(\counter[25] ), .LSR(\led_blink.n1365 ), 
    .CLK(sx1257_clk_out_c), .CIN0(\led_blink.n2039 ), .CIN1(\led_blink.n5238 ), 
    .Q0(\counter[25] ), .Q1(\counter[26] ), .F0(\led_blink.n133[25] ), 
    .F1(\led_blink.n133[26] ), .COUT1(\led_blink.n2041 ), 
    .COUT0(\led_blink.n5238 ));
  led_blink_SLICE_100 \led_blink.SLICE_100 ( .DI1(\led_blink.n133[24] ), 
    .DI0(\led_blink.n133[23] ), .D1(\led_blink.n5235 ), .C1(\counter[24] ), 
    .D0(\led_blink.n2037 ), .C0(\counter[23] ), .LSR(\led_blink.n1365 ), 
    .CLK(sx1257_clk_out_c), .CIN0(\led_blink.n2037 ), .CIN1(\led_blink.n5235 ), 
    .Q0(\counter[23] ), .Q1(\counter[24] ), .F0(\led_blink.n133[23] ), 
    .F1(\led_blink.n133[24] ), .COUT1(\led_blink.n2039 ), 
    .COUT0(\led_blink.n5235 ));
  led_blink_SLICE_101 \led_blink.SLICE_101 ( .DI1(\led_blink.n133[22] ), 
    .DI0(\led_blink.n133[21] ), .D1(\led_blink.n5232 ), .C1(\counter[22] ), 
    .D0(\led_blink.n2035 ), .C0(\counter[21] ), .LSR(\led_blink.n1365 ), 
    .CLK(sx1257_clk_out_c), .CIN0(\led_blink.n2035 ), .CIN1(\led_blink.n5232 ), 
    .Q0(\counter[21] ), .Q1(\counter[22] ), .F0(\led_blink.n133[21] ), 
    .F1(\led_blink.n133[22] ), .COUT1(\led_blink.n2037 ), 
    .COUT0(\led_blink.n5232 ));
  led_blink_SLICE_102 \led_blink.SLICE_102 ( .DI1(\led_blink.n133[20] ), 
    .DI0(\led_blink.n133[19] ), .D1(\led_blink.n5229 ), .C1(\counter[20] ), 
    .D0(\led_blink.n2033 ), .C0(\counter[19] ), .LSR(\led_blink.n1365 ), 
    .CLK(sx1257_clk_out_c), .CIN0(\led_blink.n2033 ), .CIN1(\led_blink.n5229 ), 
    .Q0(\counter[19] ), .Q1(\counter[20] ), .F0(\led_blink.n133[19] ), 
    .F1(\led_blink.n133[20] ), .COUT1(\led_blink.n2035 ), 
    .COUT0(\led_blink.n5229 ));
  led_blink_SLICE_103 \led_blink.SLICE_103 ( .DI1(\led_blink.n133[18] ), 
    .DI0(\led_blink.n133[17] ), .D1(\led_blink.n5226 ), .C1(\counter[18] ), 
    .D0(\led_blink.n2031 ), .C0(\counter[17] ), .LSR(\led_blink.n1365 ), 
    .CLK(sx1257_clk_out_c), .CIN0(\led_blink.n2031 ), .CIN1(\led_blink.n5226 ), 
    .Q0(\counter[17] ), .Q1(\counter[18] ), .F0(\led_blink.n133[17] ), 
    .F1(\led_blink.n133[18] ), .COUT1(\led_blink.n2033 ), 
    .COUT0(\led_blink.n5226 ));
  led_blink_SLICE_104 \led_blink.SLICE_104 ( .DI1(\led_blink.n133[16] ), 
    .DI0(\led_blink.n133[15] ), .D1(\led_blink.n5223 ), 
    .C1(\led_blink.counter[16]_2 ), .D0(\led_blink.n2029 ), 
    .C0(\led_blink.counter[15]_2 ), .LSR(\led_blink.n1365 ), 
    .CLK(sx1257_clk_out_c), .CIN0(\led_blink.n2029 ), .CIN1(\led_blink.n5223 ), 
    .Q0(\led_blink.counter[15]_2 ), .Q1(\led_blink.counter[16]_2 ), 
    .F0(\led_blink.n133[15] ), .F1(\led_blink.n133[16] ), 
    .COUT1(\led_blink.n2031 ), .COUT0(\led_blink.n5223 ));
  led_blink_SLICE_105 \led_blink.SLICE_105 ( .DI1(\led_blink.n133[14] ), 
    .DI0(\led_blink.n133[13] ), .D1(\led_blink.n5220 ), 
    .C1(\led_blink.counter[14]_2 ), .D0(\led_blink.n2027 ), 
    .C0(\led_blink.counter[13]_2 ), .LSR(\led_blink.n1365 ), 
    .CLK(sx1257_clk_out_c), .CIN0(\led_blink.n2027 ), .CIN1(\led_blink.n5220 ), 
    .Q0(\led_blink.counter[13]_2 ), .Q1(\led_blink.counter[14]_2 ), 
    .F0(\led_blink.n133[13] ), .F1(\led_blink.n133[14] ), 
    .COUT1(\led_blink.n2029 ), .COUT0(\led_blink.n5220 ));
  led_blink_SLICE_106 \led_blink.SLICE_106 ( .DI1(\led_blink.n133[12] ), 
    .DI0(\led_blink.n133[11] ), .D1(\led_blink.n5217 ), 
    .C1(\led_blink.counter[12]_2 ), .D0(\led_blink.n2025 ), 
    .C0(\led_blink.counter[11]_2 ), .LSR(\led_blink.n1365 ), 
    .CLK(sx1257_clk_out_c), .CIN0(\led_blink.n2025 ), .CIN1(\led_blink.n5217 ), 
    .Q0(\led_blink.counter[11]_2 ), .Q1(\led_blink.counter[12]_2 ), 
    .F0(\led_blink.n133[11] ), .F1(\led_blink.n133[12] ), 
    .COUT1(\led_blink.n2027 ), .COUT0(\led_blink.n5217 ));
  led_blink_SLICE_107 \led_blink.SLICE_107 ( .DI1(\led_blink.n133[10] ), 
    .DI0(\led_blink.n133[9] ), .D1(\led_blink.n5214 ), 
    .C1(\led_blink.counter[10]_2 ), .D0(\led_blink.n2023 ), 
    .C0(\led_blink.counter[9]_2 ), .LSR(\led_blink.n1365 ), 
    .CLK(sx1257_clk_out_c), .CIN0(\led_blink.n2023 ), .CIN1(\led_blink.n5214 ), 
    .Q0(\led_blink.counter[9]_2 ), .Q1(\led_blink.counter[10]_2 ), 
    .F0(\led_blink.n133[9] ), .F1(\led_blink.n133[10] ), 
    .COUT1(\led_blink.n2025 ), .COUT0(\led_blink.n5214 ));
  led_blink_SLICE_108 \led_blink.SLICE_108 ( .DI1(\led_blink.n133[8] ), 
    .DI0(\led_blink.n133[7] ), .D1(\led_blink.n5211 ), 
    .C1(\led_blink.counter[8]_2 ), .D0(\led_blink.n2021 ), 
    .C0(\led_blink.counter[7]_2 ), .LSR(\led_blink.n1365 ), 
    .CLK(sx1257_clk_out_c), .CIN0(\led_blink.n2021 ), .CIN1(\led_blink.n5211 ), 
    .Q0(\led_blink.counter[7]_2 ), .Q1(\led_blink.counter[8]_2 ), 
    .F0(\led_blink.n133[7] ), .F1(\led_blink.n133[8] ), 
    .COUT1(\led_blink.n2023 ), .COUT0(\led_blink.n5211 ));
  led_blink_SLICE_109 \led_blink.SLICE_109 ( .DI1(\led_blink.n133[6] ), 
    .DI0(\led_blink.n133[5] ), .D1(\led_blink.n5208 ), 
    .C1(\led_blink.counter[6]_2 ), .D0(\led_blink.n2019 ), 
    .C0(\led_blink.counter[5]_2 ), .LSR(\led_blink.n1365 ), 
    .CLK(sx1257_clk_out_c), .CIN0(\led_blink.n2019 ), .CIN1(\led_blink.n5208 ), 
    .Q0(\led_blink.counter[5]_2 ), .Q1(\led_blink.counter[6]_2 ), 
    .F0(\led_blink.n133[5] ), .F1(\led_blink.n133[6] ), 
    .COUT1(\led_blink.n2021 ), .COUT0(\led_blink.n5208 ));
  led_blink_SLICE_110 \led_blink.SLICE_110 ( .DI1(\led_blink.n133[4] ), 
    .DI0(\led_blink.n133[3] ), .D1(\led_blink.n5205 ), 
    .C1(\led_blink.counter[4]_2 ), .D0(\led_blink.n2017 ), 
    .C0(\led_blink.counter[3]_2 ), .LSR(\led_blink.n1365 ), 
    .CLK(sx1257_clk_out_c), .CIN0(\led_blink.n2017 ), .CIN1(\led_blink.n5205 ), 
    .Q0(\led_blink.counter[3]_2 ), .Q1(\led_blink.counter[4]_2 ), 
    .F0(\led_blink.n133[3] ), .F1(\led_blink.n133[4] ), 
    .COUT1(\led_blink.n2019 ), .COUT0(\led_blink.n5205 ));
  led_blink_SLICE_111 \led_blink.SLICE_111 ( .DI1(\led_blink.n133[2] ), 
    .DI0(\led_blink.n133[1] ), .D1(\led_blink.n5202 ), 
    .C1(\led_blink.counter[2]_2 ), .D0(\led_blink.n2015 ), 
    .C0(\led_blink.counter[1]_2 ), .LSR(\led_blink.n1365 ), 
    .CLK(sx1257_clk_out_c), .CIN0(\led_blink.n2015 ), .CIN1(\led_blink.n5202 ), 
    .Q0(\led_blink.counter[1]_2 ), .Q1(\led_blink.counter[2]_2 ), 
    .F0(\led_blink.n133[1] ), .F1(\led_blink.n133[2] ), 
    .COUT1(\led_blink.n2017 ), .COUT0(\led_blink.n5202 ));
  led_blink_SLICE_112 \led_blink.SLICE_112 ( .DI1(\led_blink.n133[0] ), 
    .D1(\led_blink.n5199 ), .C1(\led_blink.counter[0]_2 ), .B1(VCC_net), 
    .LSR(\led_blink.n1365 ), .CLK(sx1257_clk_out_c), .CIN1(\led_blink.n5199 ), 
    .Q1(\led_blink.counter[0]_2 ), .F1(\led_blink.n133[0] ), 
    .COUT1(\led_blink.n2015 ), .COUT0(\led_blink.n5199 ));
  i_serializer_SLICE_113 \i_serializer.SLICE_113 ( .D1(\i_serializer.n5544 ), 
    .D0(\i_serializer.n1995 ), .C0(VCC_net), 
    .B0(\i_serializer.bit_counter[5] ), .CIN0(\i_serializer.n1995 ), 
    .CIN1(\i_serializer.n5544 ), .F0(\i_serializer.n37[5] ), 
    .COUT0(\i_serializer.n5544 ));
  i_serializer_SLICE_114 \i_serializer.SLICE_114 ( .D1(\i_serializer.n5307 ), 
    .C1(VCC_net), .B1(\i_serializer.bit_counter[4] ), 
    .D0(\i_serializer.n1993 ), .C0(VCC_net), 
    .B0(\i_serializer.bit_counter[3] ), .CIN0(\i_serializer.n1993 ), 
    .CIN1(\i_serializer.n5307 ), .F0(\i_serializer.n37[3] ), 
    .F1(\i_serializer.n37[4] ), .COUT1(\i_serializer.n1995 ), 
    .COUT0(\i_serializer.n5307 ));
  i_serializer_SLICE_115 \i_serializer.SLICE_115 ( .D1(\i_serializer.n5304 ), 
    .C1(VCC_net), .B1(\i_serializer.bit_counter[2] ), 
    .D0(\i_serializer.n1991 ), .C0(VCC_net), 
    .B0(\i_serializer.bit_counter[1] ), .CIN0(\i_serializer.n1991 ), 
    .CIN1(\i_serializer.n5304 ), .F0(\i_serializer.n37[1] ), 
    .F1(\i_serializer.n37[2] ), .COUT1(\i_serializer.n1993 ), 
    .COUT0(\i_serializer.n5304 ));
  i_serializer_SLICE_116 \i_serializer.SLICE_116 ( .D1(\i_serializer.n5301 ), 
    .C1(VCC_net), .B1(\i_serializer.bit_counter[0] ), 
    .CIN1(\i_serializer.n5301 ), .F1(\i_serializer.n37[0] ), 
    .COUT1(\i_serializer.n1991 ), .COUT0(\i_serializer.n5301 ));
  q_serializer_SLICE_117 \q_serializer.SLICE_117 ( 
    .DI1(\q_serializer.shift_reg_15__N_359[1] ), 
    .DI0(\q_serializer.shift_reg_15__N_359[0] ), 
    .D1(\q_serializer.shift_reg[2] ), .C1(\q_demodulated_data[1] ), 
    .B1(gated_q_strobe), .D0(\q_serializer.shift_reg[1] ), .C0(gated_q_strobe), 
    .B0(\q_demodulated_data[0] ), .CE(\q_serializer.n1311 ), 
    .LSR(stm_fpga_spare4_c), .CLK(sx1257_clk_out_c), 
    .Q0(\q_serializer.shift_reg[0] ), .Q1(\q_serializer.shift_reg[1] ), 
    .F0(\q_serializer.shift_reg_15__N_359[0] ), 
    .F1(\q_serializer.shift_reg_15__N_359[1] ));
  q_serializer_SLICE_118 \q_serializer.SLICE_118 ( .DI1(\q_serializer.n1388 ), 
    .DI0(\q_serializer.bit_counter_5__N_375[4] ), .D1(\q_serializer.n37[5] ), 
    .C1(gated_q_strobe), .D0(\q_serializer.n37[4] ), .B0(gated_q_strobe), 
    .CE(\q_serializer.n1311 ), .LSR(stm_fpga_spare4_c), .CLK(sx1257_clk_out_c), 
    .Q0(\q_serializer.bit_counter[4] ), .Q1(\q_serializer.bit_counter[5] ), 
    .F0(\q_serializer.bit_counter_5__N_375[4] ), .F1(\q_serializer.n1388 ));
  q_serializer_SLICE_120 \q_serializer.SLICE_120 ( 
    .DI1(\q_serializer.shift_reg_15__N_359[3] ), 
    .DI0(\q_serializer.shift_reg_15__N_359[2] ), .D1(\q_demodulated_data[3] ), 
    .C1(\q_serializer.shift_reg[4] ), .B1(gated_q_strobe), 
    .D0(\q_serializer.shift_reg[3] ), .C0(\q_demodulated_data[2] ), 
    .A0(gated_q_strobe), .CE(\q_serializer.n1311 ), .LSR(stm_fpga_spare4_c), 
    .CLK(sx1257_clk_out_c), .Q0(\q_serializer.shift_reg[2] ), 
    .Q1(\q_serializer.shift_reg[3] ), 
    .F0(\q_serializer.shift_reg_15__N_359[2] ), 
    .F1(\q_serializer.shift_reg_15__N_359[3] ));
  q_serializer_SLICE_122 \q_serializer.SLICE_122 ( 
    .DI1(\q_serializer.shift_reg_15__N_359[5] ), 
    .DI0(\q_serializer.shift_reg_15__N_359[4] ), .D1(gated_q_strobe), 
    .C1(\q_serializer.shift_reg[6] ), .A1(\q_demodulated_data[5] ), 
    .D0(\q_serializer.shift_reg[5] ), .C0(gated_q_strobe), 
    .B0(\q_demodulated_data[4] ), .CE(\q_serializer.n1311 ), 
    .LSR(stm_fpga_spare4_c), .CLK(sx1257_clk_out_c), 
    .Q0(\q_serializer.shift_reg[4] ), .Q1(\q_serializer.shift_reg[5] ), 
    .F0(\q_serializer.shift_reg_15__N_359[4] ), 
    .F1(\q_serializer.shift_reg_15__N_359[5] ));
  q_serializer_SLICE_124 \q_serializer.SLICE_124 ( 
    .DI1(\q_serializer.shift_reg_15__N_359[7] ), 
    .DI0(\q_serializer.shift_reg_15__N_359[6] ), 
    .D1(\q_serializer.shift_reg[8] ), .C1(\q_demodulated_data[7] ), 
    .A1(gated_q_strobe), .D0(\q_serializer.shift_reg[7] ), 
    .C0(\q_demodulated_data[6] ), .B0(gated_q_strobe), 
    .CE(\q_serializer.n1311 ), .LSR(stm_fpga_spare4_c), .CLK(sx1257_clk_out_c), 
    .Q0(\q_serializer.shift_reg[6] ), .Q1(\q_serializer.shift_reg[7] ), 
    .F0(\q_serializer.shift_reg_15__N_359[6] ), 
    .F1(\q_serializer.shift_reg_15__N_359[7] ));
  q_serializer_SLICE_126 \q_serializer.SLICE_126 ( 
    .DI1(\q_serializer.shift_reg_15__N_359[9] ), 
    .DI0(\q_serializer.shift_reg_15__N_359[8] ), 
    .D1(\q_serializer.shift_reg[10] ), .C1(\q_demodulated_data[9] ), 
    .B1(gated_q_strobe), .D0(\q_serializer.shift_reg[9] ), 
    .C0(\q_demodulated_data[8] ), .A0(gated_q_strobe), 
    .CE(\q_serializer.n1311 ), .LSR(stm_fpga_spare4_c), .CLK(sx1257_clk_out_c), 
    .Q0(\q_serializer.shift_reg[8] ), .Q1(\q_serializer.shift_reg[9] ), 
    .F0(\q_serializer.shift_reg_15__N_359[8] ), 
    .F1(\q_serializer.shift_reg_15__N_359[9] ));
  q_serializer_SLICE_128 \q_serializer.SLICE_128 ( 
    .DI1(\q_serializer.shift_reg_15__N_359[11] ), 
    .DI0(\q_serializer.shift_reg_15__N_359[10] ), 
    .D1(\q_serializer.shift_reg[12] ), .C1(\q_demodulated_data[11] ), 
    .B1(gated_q_strobe), .D0(\q_serializer.shift_reg[11] ), 
    .C0(gated_q_strobe), .B0(\q_demodulated_data[10] ), 
    .CE(\q_serializer.n1311 ), .LSR(stm_fpga_spare4_c), .CLK(sx1257_clk_out_c), 
    .Q0(\q_serializer.shift_reg[10] ), .Q1(\q_serializer.shift_reg[11] ), 
    .F0(\q_serializer.shift_reg_15__N_359[10] ), 
    .F1(\q_serializer.shift_reg_15__N_359[11] ));
  q_serializer_SLICE_130 \q_serializer.SLICE_130 ( 
    .DI1(\q_serializer.shift_reg_15__N_359[13] ), 
    .DI0(\q_serializer.shift_reg_15__N_359[12] ), 
    .D1(\q_serializer.shift_reg[14] ), .C1(\q_demodulated_data[12] ), 
    .B1(gated_q_strobe), .D0(\q_serializer.shift_reg[13] ), 
    .C0(gated_q_strobe), .B0(\q_demodulated_data[12] ), 
    .CE(\q_serializer.n1311 ), .LSR(stm_fpga_spare4_c), .CLK(sx1257_clk_out_c), 
    .Q0(\q_serializer.shift_reg[12] ), .Q1(\q_serializer.shift_reg[13] ), 
    .F0(\q_serializer.shift_reg_15__N_359[12] ), 
    .F1(\q_serializer.shift_reg_15__N_359[13] ));
  q_serializer_SLICE_132 \q_serializer.SLICE_132 ( 
    .DI1(\q_serializer.shift_reg_15__N_359[15] ), 
    .DI0(\q_serializer.shift_reg_15__N_359[14] ), .D1(gated_q_strobe), 
    .C1(\q_demodulated_data[12] ), .D0(\q_serializer.shift_reg[15] ), 
    .C0(gated_q_strobe), .B0(\q_demodulated_data[12] ), 
    .CE(\q_serializer.n1311 ), .LSR(stm_fpga_spare4_c), .CLK(sx1257_clk_out_c), 
    .Q0(\q_serializer.shift_reg[14] ), .Q1(\q_serializer.shift_reg[15] ), 
    .F0(\q_serializer.shift_reg_15__N_359[14] ), 
    .F1(\q_serializer.shift_reg_15__N_359[15] ));
  q_serializer_SLICE_135 \q_serializer.SLICE_135 ( .DI1(\q_serializer.n1384 ), 
    .DI0(\q_serializer.n1386 ), .D1(\q_serializer.n37[2] ), 
    .C1(gated_q_strobe), .D0(\q_serializer.n37[3] ), .B0(gated_q_strobe), 
    .CE(\q_serializer.n1311 ), .LSR(stm_fpga_spare4_c), .CLK(sx1257_clk_out_c), 
    .Q0(\q_serializer.bit_counter[3] ), .Q1(\q_serializer.bit_counter[2] ), 
    .F0(\q_serializer.n1386 ), .F1(\q_serializer.n1384 ));
  q_serializer_SLICE_137 \q_serializer.SLICE_137 ( .DI1(\q_serializer.n1380 ), 
    .DI0(\q_serializer.n1382 ), .D1(\q_serializer.n37[0] ), 
    .C1(gated_q_strobe), .D0(\q_serializer.n37[1] ), .B0(gated_q_strobe), 
    .CE(\q_serializer.n1311 ), .LSR(stm_fpga_spare4_c), .CLK(sx1257_clk_out_c), 
    .Q0(\q_serializer.bit_counter[1] ), .Q1(\q_serializer.bit_counter[0] ), 
    .F0(\q_serializer.n1382 ), .F1(\q_serializer.n1380 ));
  q_serializer_SLICE_139 \q_serializer.SLICE_139 ( .DI0(\q_serializer.n1363 ), 
    .D0(\q_serializer.shift_reg[0] ), .C0(\q_serializer.clk_out_enable_N_397 ), 
    .A0(gated_q_strobe), .CE(gated_q_strobe), .LSR(stm_fpga_spare4_c), 
    .CLK(sx1257_clk_out_c), .Q0(spi2_mosi_c), .F0(\q_serializer.n1363 ));
  stream_enable_SLICE_141 \stream_enable.SLICE_141 ( 
    .DI0(\stream_enable.sync_ff1.sig_000.FeedThruLUT ), 
    .D0(\stream_enable.sync_ff1 ), .CLK(sx1257_clk_out_c), 
    .Q0(stream_enable_synced), 
    .F0(\stream_enable.sync_ff1.sig_000.FeedThruLUT ));
  q_demod_SLICE_143 \q_demod.SLICE_143 ( 
    .DI1(\q_demod.int_reg[2][10].sig_003.FeedThruLUT ), 
    .DI0(\q_demod.int_reg[2][11].sig_002.FeedThruLUT ), 
    .D1(\q_demod.int_reg[2][10] ), .D0(\q_demod.int_reg[2][11] ), 
    .CE(\q_demod.n453 ), .LSR(stm_fpga_spare4_c), .CLK(sx1257_clk_out_c), 
    .Q0(\q_demod.comb[0].delay_reg[0][11] ), 
    .Q1(\q_demod.comb[0].delay_reg[0][10] ), 
    .F0(\q_demod.int_reg[2][11].sig_002.FeedThruLUT ), 
    .F1(\q_demod.int_reg[2][10].sig_003.FeedThruLUT ));
  q_demod_SLICE_145 \q_demod.SLICE_145 ( 
    .DI1(\q_demod.int_reg[2][8].sig_005.FeedThruLUT ), 
    .DI0(\q_demod.int_reg[2][9].sig_004.FeedThruLUT ), 
    .C1(\q_demod.int_reg[2][8] ), .D0(\q_demod.int_reg[2][9] ), 
    .CE(\q_demod.n453 ), .LSR(stm_fpga_spare4_c), .CLK(sx1257_clk_out_c), 
    .Q0(\q_demod.comb[0].delay_reg[0][9] ), 
    .Q1(\q_demod.comb[0].delay_reg[0][8] ), 
    .F0(\q_demod.int_reg[2][9].sig_004.FeedThruLUT ), 
    .F1(\q_demod.int_reg[2][8].sig_005.FeedThruLUT ));
  q_demod_SLICE_147 \q_demod.SLICE_147 ( 
    .DI1(\q_demod.int_reg[2][6].sig_007.FeedThruLUT ), 
    .DI0(\q_demod.int_reg[2][7].sig_006.FeedThruLUT ), 
    .D1(\q_demod.int_reg[2][6] ), .D0(\q_demod.int_reg[2][7] ), 
    .CE(\q_demod.n453 ), .LSR(stm_fpga_spare4_c), .CLK(sx1257_clk_out_c), 
    .Q0(\q_demod.comb[0].delay_reg[0][7] ), 
    .Q1(\q_demod.comb[0].delay_reg[0][6] ), 
    .F0(\q_demod.int_reg[2][7].sig_006.FeedThruLUT ), 
    .F1(\q_demod.int_reg[2][6].sig_007.FeedThruLUT ));
  q_demod_SLICE_149 \q_demod.SLICE_149 ( 
    .DI1(\q_demod.int_reg[2][4].sig_009.FeedThruLUT ), 
    .DI0(\q_demod.int_reg[2][5].sig_008.FeedThruLUT ), 
    .C1(\q_demod.int_reg[2][4] ), .D0(\q_demod.int_reg[2][5] ), 
    .CE(\q_demod.n453 ), .LSR(stm_fpga_spare4_c), .CLK(sx1257_clk_out_c), 
    .Q0(\q_demod.comb[0].delay_reg[0][5] ), 
    .Q1(\q_demod.comb[0].delay_reg[0][4] ), 
    .F0(\q_demod.int_reg[2][5].sig_008.FeedThruLUT ), 
    .F1(\q_demod.int_reg[2][4].sig_009.FeedThruLUT ));
  q_demod_SLICE_151 \q_demod.SLICE_151 ( 
    .DI1(\q_demod.int_reg[2][2].sig_011.FeedThruLUT ), 
    .DI0(\q_demod.int_reg[2][3].sig_010.FeedThruLUT ), 
    .D1(\q_demod.int_reg[2][2] ), .D0(\q_demod.int_reg[2][3] ), 
    .CE(\q_demod.n453 ), .LSR(stm_fpga_spare4_c), .CLK(sx1257_clk_out_c), 
    .Q0(\q_demod.comb[0].delay_reg[0][3] ), 
    .Q1(\q_demod.comb[0].delay_reg[0][2] ), 
    .F0(\q_demod.int_reg[2][3].sig_010.FeedThruLUT ), 
    .F1(\q_demod.int_reg[2][2].sig_011.FeedThruLUT ));
  q_demod_SLICE_153 \q_demod.SLICE_153 ( 
    .DI1(\q_demod.int_reg[2][0].sig_015.FeedThruLUT ), 
    .DI0(\q_demod.int_reg[2][1].sig_012.FeedThruLUT ), 
    .D1(\q_demod.int_reg[2][0] ), .D0(\q_demod.int_reg[2][1] ), 
    .CE(\q_demod.n453 ), .LSR(stm_fpga_spare4_c), .CLK(sx1257_clk_out_c), 
    .Q0(\q_demod.comb[0].delay_reg[0][1] ), 
    .Q1(\q_demod.comb[0].delay_reg[0][0] ), 
    .F0(\q_demod.int_reg[2][1].sig_012.FeedThruLUT ), 
    .F1(\q_demod.int_reg[2][0].sig_015.FeedThruLUT ));
  q_demod_SLICE_154 \q_demod.SLICE_154 ( 
    .DI1(\q_demod.comb_reg[1][1].sig_039.FeedThruLUT ), 
    .DI0(\q_demod.comb_reg[1][0].sig_013.FeedThruLUT ), 
    .D1(\q_demod.comb_reg[1][1] ), .D0(\q_demod.comb_reg[1][0] ), 
    .CE(\q_demod.n453 ), .LSR(stm_fpga_spare4_c), .CLK(sx1257_clk_out_c), 
    .Q0(\q_demod.comb[2].delay_reg[0][0] ), 
    .Q1(\q_demod.comb[2].delay_reg[0][1] ), 
    .F0(\q_demod.comb_reg[1][0].sig_013.FeedThruLUT ), 
    .F1(\q_demod.comb_reg[1][1].sig_039.FeedThruLUT ));
  q_demod_SLICE_155 \q_demod.SLICE_155 ( 
    .DI1(\q_demod.comb_reg[0][1].sig_027.FeedThruLUT ), 
    .DI0(\q_demod.comb_reg[0][0].sig_014.FeedThruLUT ), 
    .D1(\q_demod.comb_reg[0][1] ), .C0(\q_demod.comb_reg[0][0] ), 
    .CE(\q_demod.n453 ), .LSR(stm_fpga_spare4_c), .CLK(sx1257_clk_out_c), 
    .Q0(\q_demod.comb[1].delay_reg[0][0] ), 
    .Q1(\q_demod.comb[1].delay_reg[0][1] ), 
    .F0(\q_demod.comb_reg[0][0].sig_014.FeedThruLUT ), 
    .F1(\q_demod.comb_reg[0][1].sig_027.FeedThruLUT ));
  q_demod_SLICE_158 \q_demod.SLICE_158 ( 
    .DI1(\q_demod.comb_reg[0][10].sig_018.FeedThruLUT ), 
    .DI0(\q_demod.comb_reg[0][11].sig_017.FeedThruLUT ), 
    .C1(\q_demod.comb_reg[0][10] ), .D0(\q_demod.comb_reg[0][11] ), 
    .CE(\q_demod.n453 ), .LSR(stm_fpga_spare4_c), .CLK(sx1257_clk_out_c), 
    .Q0(\q_demod.comb[1].delay_reg[0][11] ), 
    .Q1(\q_demod.comb[1].delay_reg[0][10] ), 
    .F0(\q_demod.comb_reg[0][11].sig_017.FeedThruLUT ), 
    .F1(\q_demod.comb_reg[0][10].sig_018.FeedThruLUT ));
  q_demod_SLICE_160 \q_demod.SLICE_160 ( 
    .DI1(\q_demod.comb_reg[0][8].sig_020.FeedThruLUT ), 
    .DI0(\q_demod.comb_reg[0][9].sig_019.FeedThruLUT ), 
    .D1(\q_demod.comb_reg[0][8] ), .D0(\q_demod.comb_reg[0][9] ), 
    .CE(\q_demod.n453 ), .LSR(stm_fpga_spare4_c), .CLK(sx1257_clk_out_c), 
    .Q0(\q_demod.comb[1].delay_reg[0][9] ), 
    .Q1(\q_demod.comb[1].delay_reg[0][8] ), 
    .F0(\q_demod.comb_reg[0][9].sig_019.FeedThruLUT ), 
    .F1(\q_demod.comb_reg[0][8].sig_020.FeedThruLUT ));
  q_demod_SLICE_162 \q_demod.SLICE_162 ( 
    .DI1(\q_demod.comb_reg[0][6].sig_022.FeedThruLUT ), 
    .DI0(\q_demod.comb_reg[0][7].sig_021.FeedThruLUT ), 
    .D1(\q_demod.comb_reg[0][6] ), .D0(\q_demod.comb_reg[0][7] ), 
    .CE(\q_demod.n453 ), .LSR(stm_fpga_spare4_c), .CLK(sx1257_clk_out_c), 
    .Q0(\q_demod.comb[1].delay_reg[0][7] ), 
    .Q1(\q_demod.comb[1].delay_reg[0][6] ), 
    .F0(\q_demod.comb_reg[0][7].sig_021.FeedThruLUT ), 
    .F1(\q_demod.comb_reg[0][6].sig_022.FeedThruLUT ));
  q_demod_SLICE_164 \q_demod.SLICE_164 ( 
    .DI1(\q_demod.comb_reg[0][4].sig_024.FeedThruLUT ), 
    .DI0(\q_demod.comb_reg[0][5].sig_023.FeedThruLUT ), 
    .D1(\q_demod.comb_reg[0][4] ), .D0(\q_demod.comb_reg[0][5] ), 
    .CE(\q_demod.n453 ), .LSR(stm_fpga_spare4_c), .CLK(sx1257_clk_out_c), 
    .Q0(\q_demod.comb[1].delay_reg[0][5] ), 
    .Q1(\q_demod.comb[1].delay_reg[0][4] ), 
    .F0(\q_demod.comb_reg[0][5].sig_023.FeedThruLUT ), 
    .F1(\q_demod.comb_reg[0][4].sig_024.FeedThruLUT ));
  q_demod_SLICE_166 \q_demod.SLICE_166 ( 
    .DI1(\q_demod.comb_reg[0][2].sig_026.FeedThruLUT ), 
    .DI0(\q_demod.comb_reg[0][3].sig_025.FeedThruLUT ), 
    .C1(\q_demod.comb_reg[0][2] ), .D0(\q_demod.comb_reg[0][3] ), 
    .CE(\q_demod.n453 ), .LSR(stm_fpga_spare4_c), .CLK(sx1257_clk_out_c), 
    .Q0(\q_demod.comb[1].delay_reg[0][3] ), 
    .Q1(\q_demod.comb[1].delay_reg[0][2] ), 
    .F0(\q_demod.comb_reg[0][3].sig_025.FeedThruLUT ), 
    .F1(\q_demod.comb_reg[0][2].sig_026.FeedThruLUT ));
  q_demod_SLICE_170 \q_demod.SLICE_170 ( 
    .DI1(\q_demod.comb_reg[1][10].sig_030.FeedThruLUT ), 
    .DI0(\q_demod.comb_reg[1][11].sig_029.FeedThruLUT ), 
    .C1(\q_demod.comb_reg[1][10] ), .D0(\q_demod.comb_reg[1][11] ), 
    .CE(\q_demod.n453 ), .LSR(stm_fpga_spare4_c), .CLK(sx1257_clk_out_c), 
    .Q0(\q_demod.comb[2].delay_reg[0][11] ), 
    .Q1(\q_demod.comb[2].delay_reg[0][10] ), 
    .F0(\q_demod.comb_reg[1][11].sig_029.FeedThruLUT ), 
    .F1(\q_demod.comb_reg[1][10].sig_030.FeedThruLUT ));
  q_demod_SLICE_172 \q_demod.SLICE_172 ( 
    .DI1(\q_demod.comb_reg[1][8].sig_032.FeedThruLUT ), 
    .DI0(\q_demod.comb_reg[1][9].sig_031.FeedThruLUT ), 
    .D1(\q_demod.comb_reg[1][8] ), .D0(\q_demod.comb_reg[1][9] ), 
    .CE(\q_demod.n453 ), .LSR(stm_fpga_spare4_c), .CLK(sx1257_clk_out_c), 
    .Q0(\q_demod.comb[2].delay_reg[0][9] ), 
    .Q1(\q_demod.comb[2].delay_reg[0][8] ), 
    .F0(\q_demod.comb_reg[1][9].sig_031.FeedThruLUT ), 
    .F1(\q_demod.comb_reg[1][8].sig_032.FeedThruLUT ));
  q_demod_SLICE_174 \q_demod.SLICE_174 ( 
    .DI1(\q_demod.comb_reg[1][6].sig_034.FeedThruLUT ), 
    .DI0(\q_demod.comb_reg[1][7].sig_033.FeedThruLUT ), 
    .D1(\q_demod.comb_reg[1][6] ), .D0(\q_demod.comb_reg[1][7] ), 
    .CE(\q_demod.n453 ), .LSR(stm_fpga_spare4_c), .CLK(sx1257_clk_out_c), 
    .Q0(\q_demod.comb[2].delay_reg[0][7] ), 
    .Q1(\q_demod.comb[2].delay_reg[0][6] ), 
    .F0(\q_demod.comb_reg[1][7].sig_033.FeedThruLUT ), 
    .F1(\q_demod.comb_reg[1][6].sig_034.FeedThruLUT ));
  q_demod_SLICE_176 \q_demod.SLICE_176 ( 
    .DI1(\q_demod.comb_reg[1][4].sig_036.FeedThruLUT ), 
    .DI0(\q_demod.comb_reg[1][5].sig_035.FeedThruLUT ), 
    .D1(\q_demod.comb_reg[1][4] ), .D0(\q_demod.comb_reg[1][5] ), 
    .CE(\q_demod.n453 ), .LSR(stm_fpga_spare4_c), .CLK(sx1257_clk_out_c), 
    .Q0(\q_demod.comb[2].delay_reg[0][5] ), 
    .Q1(\q_demod.comb[2].delay_reg[0][4] ), 
    .F0(\q_demod.comb_reg[1][5].sig_035.FeedThruLUT ), 
    .F1(\q_demod.comb_reg[1][4].sig_036.FeedThruLUT ));
  q_demod_SLICE_178 \q_demod.SLICE_178 ( 
    .DI1(\q_demod.comb_reg[1][2].sig_038.FeedThruLUT ), 
    .DI0(\q_demod.comb_reg[1][3].sig_037.FeedThruLUT ), 
    .D1(\q_demod.comb_reg[1][2] ), .D0(\q_demod.comb_reg[1][3] ), 
    .CE(\q_demod.n453 ), .LSR(stm_fpga_spare4_c), .CLK(sx1257_clk_out_c), 
    .Q0(\q_demod.comb[2].delay_reg[0][3] ), 
    .Q1(\q_demod.comb[2].delay_reg[0][2] ), 
    .F0(\q_demod.comb_reg[1][3].sig_037.FeedThruLUT ), 
    .F1(\q_demod.comb_reg[1][2].sig_038.FeedThruLUT ));
  i_demod_SLICE_182 \i_demod.SLICE_182 ( 
    .DI1(\i_demod.int_reg[2][10].sig_042.FeedThruLUT ), 
    .DI0(\i_demod.int_reg[2][11].sig_041.FeedThruLUT ), 
    .D1(\i_demod.int_reg[2][10] ), .D0(\i_demod.int_reg[2][11] ), 
    .CE(\i_demod.n441 ), .LSR(stm_fpga_spare4_c), .CLK(sx1257_clk_out_c), 
    .Q0(\i_demod.comb[0].delay_reg[0][11] ), 
    .Q1(\i_demod.comb[0].delay_reg[0][10] ), 
    .F0(\i_demod.int_reg[2][11].sig_041.FeedThruLUT ), 
    .F1(\i_demod.int_reg[2][10].sig_042.FeedThruLUT ));
  i_demod_SLICE_184 \i_demod.SLICE_184 ( 
    .DI1(\i_demod.int_reg[2][8].sig_044.FeedThruLUT ), 
    .DI0(\i_demod.int_reg[2][9].sig_043.FeedThruLUT ), 
    .D1(\i_demod.int_reg[2][8] ), .C0(\i_demod.int_reg[2][9] ), 
    .CE(\i_demod.n441 ), .LSR(stm_fpga_spare4_c), .CLK(sx1257_clk_out_c), 
    .Q0(\i_demod.comb[0].delay_reg[0][9] ), 
    .Q1(\i_demod.comb[0].delay_reg[0][8] ), 
    .F0(\i_demod.int_reg[2][9].sig_043.FeedThruLUT ), 
    .F1(\i_demod.int_reg[2][8].sig_044.FeedThruLUT ));
  i_demod_SLICE_186 \i_demod.SLICE_186 ( 
    .DI1(\i_demod.int_reg[2][6].sig_046.FeedThruLUT ), 
    .DI0(\i_demod.int_reg[2][7].sig_045.FeedThruLUT ), 
    .D1(\i_demod.int_reg[2][6] ), .D0(\i_demod.int_reg[2][7] ), 
    .CE(\i_demod.n441 ), .LSR(stm_fpga_spare4_c), .CLK(sx1257_clk_out_c), 
    .Q0(\i_demod.comb[0].delay_reg[0][7] ), 
    .Q1(\i_demod.comb[0].delay_reg[0][6] ), 
    .F0(\i_demod.int_reg[2][7].sig_045.FeedThruLUT ), 
    .F1(\i_demod.int_reg[2][6].sig_046.FeedThruLUT ));
  i_demod_SLICE_188 \i_demod.SLICE_188 ( 
    .DI1(\i_demod.int_reg[2][4].sig_048.FeedThruLUT ), 
    .DI0(\i_demod.int_reg[2][5].sig_047.FeedThruLUT ), 
    .D1(\i_demod.int_reg[2][4] ), .D0(\i_demod.int_reg[2][5] ), 
    .CE(\i_demod.n441 ), .LSR(stm_fpga_spare4_c), .CLK(sx1257_clk_out_c), 
    .Q0(\i_demod.comb[0].delay_reg[0][5] ), 
    .Q1(\i_demod.comb[0].delay_reg[0][4] ), 
    .F0(\i_demod.int_reg[2][5].sig_047.FeedThruLUT ), 
    .F1(\i_demod.int_reg[2][4].sig_048.FeedThruLUT ));
  i_demod_SLICE_190 \i_demod.SLICE_190 ( 
    .DI1(\i_demod.int_reg[2][2].sig_050.FeedThruLUT ), 
    .DI0(\i_demod.int_reg[2][3].sig_049.FeedThruLUT ), 
    .D1(\i_demod.int_reg[2][2] ), .D0(\i_demod.int_reg[2][3] ), 
    .CE(\i_demod.n441 ), .LSR(stm_fpga_spare4_c), .CLK(sx1257_clk_out_c), 
    .Q0(\i_demod.comb[0].delay_reg[0][3] ), 
    .Q1(\i_demod.comb[0].delay_reg[0][2] ), 
    .F0(\i_demod.int_reg[2][3].sig_049.FeedThruLUT ), 
    .F1(\i_demod.int_reg[2][2].sig_050.FeedThruLUT ));
  i_demod_SLICE_192 \i_demod.SLICE_192 ( 
    .DI1(\i_demod.comb_reg[1][1].sig_066.FeedThruLUT ), 
    .DI0(\i_demod.comb_reg[1][0].sig_051.FeedThruLUT ), 
    .D1(\i_demod.comb_reg[1][1] ), .D0(\i_demod.comb_reg[1][0] ), 
    .CE(\i_demod.n441 ), .LSR(stm_fpga_spare4_c), .CLK(sx1257_clk_out_c), 
    .Q0(\i_demod.comb[2].delay_reg[0][0] ), 
    .Q1(\i_demod.comb[2].delay_reg[0][1] ), 
    .F0(\i_demod.comb_reg[1][0].sig_051.FeedThruLUT ), 
    .F1(\i_demod.comb_reg[1][1].sig_066.FeedThruLUT ));
  i_demod_SLICE_193 \i_demod.SLICE_193 ( 
    .DI1(\i_demod.int_reg[2][0].sig_053.FeedThruLUT ), 
    .DI0(\i_demod.int_reg[2][1].sig_052.FeedThruLUT ), 
    .D1(\i_demod.int_reg[2][0] ), .D0(\i_demod.int_reg[2][1] ), 
    .CE(\i_demod.n441 ), .LSR(stm_fpga_spare4_c), .CLK(sx1257_clk_out_c), 
    .Q0(\i_demod.comb[0].delay_reg[0][1] ), 
    .Q1(\i_demod.comb[0].delay_reg[0][0] ), 
    .F0(\i_demod.int_reg[2][1].sig_052.FeedThruLUT ), 
    .F1(\i_demod.int_reg[2][0].sig_053.FeedThruLUT ));
  i_demod_SLICE_195 \i_demod.SLICE_195 ( 
    .DI1(\i_demod.comb_reg[0][1].sig_067.FeedThruLUT ), 
    .DI0(\i_demod.comb_reg[0][0].sig_054.FeedThruLUT ), 
    .D1(\i_demod.comb_reg[0][1] ), .D0(\i_demod.comb_reg[0][0] ), 
    .CE(\i_demod.n441 ), .LSR(stm_fpga_spare4_c), .CLK(sx1257_clk_out_c), 
    .Q0(\i_demod.comb[1].delay_reg[0][0] ), 
    .Q1(\i_demod.comb[1].delay_reg[0][1] ), 
    .F0(\i_demod.comb_reg[0][0].sig_054.FeedThruLUT ), 
    .F1(\i_demod.comb_reg[0][1].sig_067.FeedThruLUT ));
  i_demod_SLICE_197 \i_demod.SLICE_197 ( 
    .DI1(\i_demod.comb_reg[1][10].sig_057.FeedThruLUT ), 
    .DI0(\i_demod.comb_reg[1][11].sig_056.FeedThruLUT ), 
    .D1(\i_demod.comb_reg[1][10] ), .C0(\i_demod.comb_reg[1][11] ), 
    .CE(\i_demod.n441 ), .LSR(stm_fpga_spare4_c), .CLK(sx1257_clk_out_c), 
    .Q0(\i_demod.comb[2].delay_reg[0][11] ), 
    .Q1(\i_demod.comb[2].delay_reg[0][10] ), 
    .F0(\i_demod.comb_reg[1][11].sig_056.FeedThruLUT ), 
    .F1(\i_demod.comb_reg[1][10].sig_057.FeedThruLUT ));
  i_demod_SLICE_199 \i_demod.SLICE_199 ( 
    .DI1(\i_demod.comb_reg[1][8].sig_059.FeedThruLUT ), 
    .DI0(\i_demod.comb_reg[1][9].sig_058.FeedThruLUT ), 
    .C1(\i_demod.comb_reg[1][8] ), .D0(\i_demod.comb_reg[1][9] ), 
    .CE(\i_demod.n441 ), .LSR(stm_fpga_spare4_c), .CLK(sx1257_clk_out_c), 
    .Q0(\i_demod.comb[2].delay_reg[0][9] ), 
    .Q1(\i_demod.comb[2].delay_reg[0][8] ), 
    .F0(\i_demod.comb_reg[1][9].sig_058.FeedThruLUT ), 
    .F1(\i_demod.comb_reg[1][8].sig_059.FeedThruLUT ));
  i_demod_SLICE_201 \i_demod.SLICE_201 ( 
    .DI1(\i_demod.comb_reg[1][6].sig_061.FeedThruLUT ), 
    .DI0(\i_demod.comb_reg[1][7].sig_060.FeedThruLUT ), 
    .D1(\i_demod.comb_reg[1][6] ), .D0(\i_demod.comb_reg[1][7] ), 
    .CE(\i_demod.n441 ), .LSR(stm_fpga_spare4_c), .CLK(sx1257_clk_out_c), 
    .Q0(\i_demod.comb[2].delay_reg[0][7] ), 
    .Q1(\i_demod.comb[2].delay_reg[0][6] ), 
    .F0(\i_demod.comb_reg[1][7].sig_060.FeedThruLUT ), 
    .F1(\i_demod.comb_reg[1][6].sig_061.FeedThruLUT ));
  i_demod_SLICE_203 \i_demod.SLICE_203 ( 
    .DI1(\i_demod.comb_reg[1][4].sig_063.FeedThruLUT ), 
    .DI0(\i_demod.comb_reg[1][5].sig_062.FeedThruLUT ), 
    .D1(\i_demod.comb_reg[1][4] ), .D0(\i_demod.comb_reg[1][5] ), 
    .CE(\i_demod.n441 ), .LSR(stm_fpga_spare4_c), .CLK(sx1257_clk_out_c), 
    .Q0(\i_demod.comb[2].delay_reg[0][5] ), 
    .Q1(\i_demod.comb[2].delay_reg[0][4] ), 
    .F0(\i_demod.comb_reg[1][5].sig_062.FeedThruLUT ), 
    .F1(\i_demod.comb_reg[1][4].sig_063.FeedThruLUT ));
  i_demod_SLICE_205 \i_demod.SLICE_205 ( 
    .DI1(\i_demod.comb_reg[1][2].sig_065.FeedThruLUT ), 
    .DI0(\i_demod.comb_reg[1][3].sig_064.FeedThruLUT ), 
    .D1(\i_demod.comb_reg[1][2] ), .D0(\i_demod.comb_reg[1][3] ), 
    .CE(\i_demod.n441 ), .LSR(stm_fpga_spare4_c), .CLK(sx1257_clk_out_c), 
    .Q0(\i_demod.comb[2].delay_reg[0][3] ), 
    .Q1(\i_demod.comb[2].delay_reg[0][2] ), 
    .F0(\i_demod.comb_reg[1][3].sig_064.FeedThruLUT ), 
    .F1(\i_demod.comb_reg[1][2].sig_065.FeedThruLUT ));
  i_demod_SLICE_209 \i_demod.SLICE_209 ( 
    .DI1(\i_demod.comb_reg[0][3].sig_069.FeedThruLUT ), 
    .DI0(\i_demod.comb_reg[0][2].sig_068.FeedThruLUT ), 
    .D1(\i_demod.comb_reg[0][3] ), .D0(\i_demod.comb_reg[0][2] ), 
    .CE(\i_demod.n441 ), .LSR(stm_fpga_spare4_c), .CLK(sx1257_clk_out_c), 
    .Q0(\i_demod.comb[1].delay_reg[0][2] ), 
    .Q1(\i_demod.comb[1].delay_reg[0][3] ), 
    .F0(\i_demod.comb_reg[0][2].sig_068.FeedThruLUT ), 
    .F1(\i_demod.comb_reg[0][3].sig_069.FeedThruLUT ));
  i_demod_SLICE_211 \i_demod.SLICE_211 ( 
    .DI1(\i_demod.comb_reg[0][5].sig_071.FeedThruLUT ), 
    .DI0(\i_demod.comb_reg[0][4].sig_070.FeedThruLUT ), 
    .D1(\i_demod.comb_reg[0][5] ), .D0(\i_demod.comb_reg[0][4] ), 
    .CE(\i_demod.n441 ), .LSR(stm_fpga_spare4_c), .CLK(sx1257_clk_out_c), 
    .Q0(\i_demod.comb[1].delay_reg[0][4] ), 
    .Q1(\i_demod.comb[1].delay_reg[0][5] ), 
    .F0(\i_demod.comb_reg[0][4].sig_070.FeedThruLUT ), 
    .F1(\i_demod.comb_reg[0][5].sig_071.FeedThruLUT ));
  i_demod_SLICE_213 \i_demod.SLICE_213 ( 
    .DI1(\i_demod.comb_reg[0][7].sig_073.FeedThruLUT ), 
    .DI0(\i_demod.comb_reg[0][6].sig_072.FeedThruLUT ), 
    .D1(\i_demod.comb_reg[0][7] ), .D0(\i_demod.comb_reg[0][6] ), 
    .CE(\i_demod.n441 ), .LSR(stm_fpga_spare4_c), .CLK(sx1257_clk_out_c), 
    .Q0(\i_demod.comb[1].delay_reg[0][6] ), 
    .Q1(\i_demod.comb[1].delay_reg[0][7] ), 
    .F0(\i_demod.comb_reg[0][6].sig_072.FeedThruLUT ), 
    .F1(\i_demod.comb_reg[0][7].sig_073.FeedThruLUT ));
  i_demod_SLICE_215 \i_demod.SLICE_215 ( 
    .DI1(\i_demod.comb_reg[0][9].sig_075.FeedThruLUT ), 
    .DI0(\i_demod.comb_reg[0][8].sig_074.FeedThruLUT ), 
    .D1(\i_demod.comb_reg[0][9] ), .D0(\i_demod.comb_reg[0][8] ), 
    .CE(\i_demod.n441 ), .LSR(stm_fpga_spare4_c), .CLK(sx1257_clk_out_c), 
    .Q0(\i_demod.comb[1].delay_reg[0][8] ), 
    .Q1(\i_demod.comb[1].delay_reg[0][9] ), 
    .F0(\i_demod.comb_reg[0][8].sig_074.FeedThruLUT ), 
    .F1(\i_demod.comb_reg[0][9].sig_075.FeedThruLUT ));
  i_demod_SLICE_217 \i_demod.SLICE_217 ( 
    .DI1(\i_demod.comb_reg[0][11].sig_077.FeedThruLUT ), 
    .DI0(\i_demod.comb_reg[0][10].sig_076.FeedThruLUT ), 
    .D1(\i_demod.comb_reg[0][11] ), .D0(\i_demod.comb_reg[0][10] ), 
    .CE(\i_demod.n441 ), .LSR(stm_fpga_spare4_c), .CLK(sx1257_clk_out_c), 
    .Q0(\i_demod.comb[1].delay_reg[0][10] ), 
    .Q1(\i_demod.comb[1].delay_reg[0][11] ), 
    .F0(\i_demod.comb_reg[0][10].sig_076.FeedThruLUT ), 
    .F1(\i_demod.comb_reg[0][11].sig_077.FeedThruLUT ));
  SLICE_220 SLICE_220( .DI0(\current_state[0].sig_079.FeedThruLUT ), 
    .D0(\current_state[0] ), .LSR(stm_fpga_spare4_c), .CLK(sx1257_clk_out_c), 
    .Q0(led2_c), .F0(\current_state[0].sig_079.FeedThruLUT ));
  led_blink_SLICE_221 \led_blink.SLICE_221 ( .DI1(\led_blink.n234[0] ), 
    .DI0(\led_blink.n1852 ), .D1(n233), .C1(\current_state[0] ), 
    .D0(\current_state[0] ), .C0(n233), .CE(\led_blink.n9 ), .LSR(n220), 
    .CLK(sx1257_clk_out_c), .Q0(\current_state[1] ), .Q1(\current_state[0] ), 
    .F0(\led_blink.n1852 ), .F1(\led_blink.n234[0] ));
  i_rising_sync_SLICE_223 \i_rising_sync.SLICE_223 ( 
    .DI1(\i_rising_sync.i_out_synced_N_385 ), 
    .DI0(\i_rising_sync.rd_ptr_N_388 ), .D1(\i_rising_sync.rd_ptr ), 
    .C1(\i_rising_sync.fifo[0] ), .B1(\i_rising_sync.fifo[1] ), 
    .C0(\i_rising_sync.rd_ptr ), .LSR(stm_fpga_spare4_c), 
    .CLK(sx1257_clk_out_c), .Q0(\i_rising_sync.rd_ptr ), .Q1(i_out_synced), 
    .F0(\i_rising_sync.rd_ptr_N_388 ), .F1(\i_rising_sync.i_out_synced_N_385 ));
  SLICE_226 SLICE_226( .DI0(\sx1257_i_out_c.sig_080.FeedThruLUT ), 
    .D0(sx1257_i_out_c), .CE(\i_rising_sync.wr_ptr ), .LSR(stm_fpga_spare4_c), 
    .CLK(sx1257_clk_out_c), .Q0(\i_rising_sync.fifo[1] ), 
    .F0(\sx1257_i_out_c.sig_080.FeedThruLUT ));
  SLICE_227 SLICE_227( .DI0(\sx1257_i_out_c.sig_081.FeedThruLUT ), 
    .D0(sx1257_i_out_c), .CE(\i_rising_sync.wr_ptr_N_390 ), 
    .LSR(stm_fpga_spare4_c), .CLK(sx1257_clk_out_c), 
    .Q0(\i_rising_sync.fifo[0] ), .F0(\sx1257_i_out_c.sig_081.FeedThruLUT ));
  i_serializer_SLICE_228 \i_serializer.SLICE_228 ( 
    .DI1(\i_serializer.shift_reg_15__N_203[14] ), 
    .DI0(\i_serializer.shift_reg_15__N_203[15] ), 
    .D1(\i_serializer.shift_reg[15] ), .C1(\i_demodulated_data[12] ), 
    .B1(gated_i_strobe), .C0(gated_i_strobe), .B0(\i_demodulated_data[12] ), 
    .CE(\i_serializer.n1277 ), .LSR(stm_fpga_spare4_c), .CLK(sx1257_clk_out_c), 
    .Q0(\i_serializer.shift_reg[15] ), .Q1(\i_serializer.shift_reg[14] ), 
    .F0(\i_serializer.shift_reg_15__N_203[15] ), 
    .F1(\i_serializer.shift_reg_15__N_203[14] ));
  i_serializer_SLICE_230 \i_serializer.SLICE_230 ( 
    .DI1(\i_serializer.shift_reg_15__N_203[12] ), 
    .DI0(\i_serializer.shift_reg_15__N_203[13] ), 
    .D1(\i_serializer.shift_reg[13] ), .C1(\i_demodulated_data[12] ), 
    .B1(gated_i_strobe), .D0(\i_serializer.shift_reg[14] ), 
    .C0(gated_i_strobe), .B0(\i_demodulated_data[12] ), 
    .CE(\i_serializer.n1277 ), .LSR(stm_fpga_spare4_c), .CLK(sx1257_clk_out_c), 
    .Q0(\i_serializer.shift_reg[13] ), .Q1(\i_serializer.shift_reg[12] ), 
    .F0(\i_serializer.shift_reg_15__N_203[13] ), 
    .F1(\i_serializer.shift_reg_15__N_203[12] ));
  i_serializer_SLICE_232 \i_serializer.SLICE_232 ( 
    .DI1(\i_serializer.shift_reg_15__N_203[10] ), 
    .DI0(\i_serializer.shift_reg_15__N_203[11] ), 
    .D1(\i_serializer.shift_reg[11] ), .C1(\i_demodulated_data[10] ), 
    .B1(gated_i_strobe), .D0(\i_serializer.shift_reg[12] ), 
    .C0(\i_demodulated_data[11] ), .A0(gated_i_strobe), 
    .CE(\i_serializer.n1277 ), .LSR(stm_fpga_spare4_c), .CLK(sx1257_clk_out_c), 
    .Q0(\i_serializer.shift_reg[11] ), .Q1(\i_serializer.shift_reg[10] ), 
    .F0(\i_serializer.shift_reg_15__N_203[11] ), 
    .F1(\i_serializer.shift_reg_15__N_203[10] ));
  i_serializer_SLICE_234 \i_serializer.SLICE_234 ( 
    .DI1(\i_serializer.shift_reg_15__N_203[8] ), 
    .DI0(\i_serializer.shift_reg_15__N_203[9] ), 
    .D1(\i_serializer.shift_reg[9] ), .C1(\i_demodulated_data[8] ), 
    .A1(gated_i_strobe), .D0(\i_serializer.shift_reg[10] ), 
    .C0(\i_demodulated_data[9] ), .B0(gated_i_strobe), 
    .CE(\i_serializer.n1277 ), .LSR(stm_fpga_spare4_c), .CLK(sx1257_clk_out_c), 
    .Q0(\i_serializer.shift_reg[9] ), .Q1(\i_serializer.shift_reg[8] ), 
    .F0(\i_serializer.shift_reg_15__N_203[9] ), 
    .F1(\i_serializer.shift_reg_15__N_203[8] ));
  i_serializer_SLICE_236 \i_serializer.SLICE_236 ( 
    .DI1(\i_serializer.shift_reg_15__N_203[6] ), 
    .DI0(\i_serializer.shift_reg_15__N_203[7] ), 
    .D1(\i_serializer.shift_reg[7] ), .C1(gated_i_strobe), 
    .B1(\i_demodulated_data[6] ), .D0(\i_serializer.shift_reg[8] ), 
    .C0(\i_demodulated_data[7] ), .B0(gated_i_strobe), 
    .CE(\i_serializer.n1277 ), .LSR(stm_fpga_spare4_c), .CLK(sx1257_clk_out_c), 
    .Q0(\i_serializer.shift_reg[7] ), .Q1(\i_serializer.shift_reg[6] ), 
    .F0(\i_serializer.shift_reg_15__N_203[7] ), 
    .F1(\i_serializer.shift_reg_15__N_203[6] ));
  i_serializer_SLICE_238 \i_serializer.SLICE_238 ( 
    .DI1(\i_serializer.shift_reg_15__N_203[4] ), 
    .DI0(\i_serializer.shift_reg_15__N_203[5] ), 
    .D1(\i_serializer.shift_reg[5] ), .C1(\i_demodulated_data[4] ), 
    .B1(gated_i_strobe), .D0(\i_serializer.shift_reg[6] ), 
    .C0(\i_demodulated_data[5] ), .A0(gated_i_strobe), 
    .CE(\i_serializer.n1277 ), .LSR(stm_fpga_spare4_c), .CLK(sx1257_clk_out_c), 
    .Q0(\i_serializer.shift_reg[5] ), .Q1(\i_serializer.shift_reg[4] ), 
    .F0(\i_serializer.shift_reg_15__N_203[5] ), 
    .F1(\i_serializer.shift_reg_15__N_203[4] ));
  i_serializer_SLICE_240 \i_serializer.SLICE_240 ( 
    .DI1(\i_serializer.shift_reg_15__N_203[2] ), 
    .DI0(\i_serializer.shift_reg_15__N_203[3] ), 
    .D1(\i_serializer.shift_reg[3] ), .C1(\i_demodulated_data[2] ), 
    .B1(gated_i_strobe), .D0(\i_serializer.shift_reg[4] ), 
    .C0(\i_demodulated_data[3] ), .A0(gated_i_strobe), 
    .CE(\i_serializer.n1277 ), .LSR(stm_fpga_spare4_c), .CLK(sx1257_clk_out_c), 
    .Q0(\i_serializer.shift_reg[3] ), .Q1(\i_serializer.shift_reg[2] ), 
    .F0(\i_serializer.shift_reg_15__N_203[3] ), 
    .F1(\i_serializer.shift_reg_15__N_203[2] ));
  i_serializer_SLICE_242 \i_serializer.SLICE_242 ( 
    .DI1(\i_serializer.shift_reg_15__N_203[0] ), 
    .DI0(\i_serializer.shift_reg_15__N_203[1] ), 
    .D1(\i_serializer.shift_reg[1] ), .C1(\i_demodulated_data[0] ), 
    .B1(gated_i_strobe), .D0(\i_serializer.shift_reg[2] ), 
    .C0(\i_demodulated_data[1] ), .A0(gated_i_strobe), 
    .CE(\i_serializer.n1277 ), .LSR(stm_fpga_spare4_c), .CLK(sx1257_clk_out_c), 
    .Q0(\i_serializer.shift_reg[1] ), .Q1(\i_serializer.shift_reg[0] ), 
    .F0(\i_serializer.shift_reg_15__N_203[1] ), 
    .F1(\i_serializer.shift_reg_15__N_203[0] ));
  i_serializer_SLICE_245 \i_serializer.SLICE_245 ( .DI1(\i_serializer.n1370 ), 
    .DI0(\i_serializer.bit_counter_5__N_219[4] ), .D1(\i_serializer.n37[5] ), 
    .C1(gated_i_strobe), .D0(\i_serializer.n37[4] ), .B0(gated_i_strobe), 
    .CE(\i_serializer.n1277 ), .LSR(stm_fpga_spare4_c), .CLK(sx1257_clk_out_c), 
    .Q0(\i_serializer.bit_counter[4] ), .Q1(\i_serializer.bit_counter[5] ), 
    .F0(\i_serializer.bit_counter_5__N_219[4] ), .F1(\i_serializer.n1370 ));
  i_serializer_SLICE_246 \i_serializer.SLICE_246 ( .DI1(\i_serializer.n1368 ), 
    .DI0(\i_serializer.n1376 ), .D1(\i_serializer.n37[0] ), 
    .C1(gated_i_strobe), .D0(\i_serializer.n37[1] ), .B0(gated_i_strobe), 
    .CE(\i_serializer.n1277 ), .LSR(stm_fpga_spare4_c), .CLK(sx1257_clk_out_c), 
    .Q0(\i_serializer.bit_counter[1] ), .Q1(\i_serializer.bit_counter[0] ), 
    .F0(\i_serializer.n1376 ), .F1(\i_serializer.n1368 ));
  i_serializer_SLICE_247 \i_serializer.SLICE_247 ( .DI1(\i_serializer.n1372 ), 
    .DI0(\i_serializer.n1374 ), .D1(\i_serializer.n37[3] ), 
    .C1(gated_i_strobe), .D0(\i_serializer.n37[2] ), .B0(gated_i_strobe), 
    .CE(\i_serializer.n1277 ), .LSR(stm_fpga_spare4_c), .CLK(sx1257_clk_out_c), 
    .Q0(\i_serializer.bit_counter[2] ), .Q1(\i_serializer.bit_counter[3] ), 
    .F0(\i_serializer.n1374 ), .F1(\i_serializer.n1372 ));
  i_serializer_SLICE_251 \i_serializer.SLICE_251 ( .DI0(\i_serializer.n1361 ), 
    .D0(\i_serializer.shift_reg[0] ), .C0(\i_serializer.n1277 ), 
    .CE(gated_i_strobe), .LSR(stm_fpga_spare4_c), .CLK(sx1257_clk_out_c), 
    .Q0(spi1_mosi_c), .F0(\i_serializer.n1361 ));
  q_rising_sync_SLICE_252 \q_rising_sync.SLICE_252 ( 
    .DI1(\q_rising_sync.q_out_synced_N_387 ), 
    .DI0(\q_rising_sync.rd_ptr_N_391 ), .D1(\q_rising_sync.rd_ptr ), 
    .C1(\q_rising_sync.fifo[1] ), .B1(\q_rising_sync.fifo[0] ), 
    .C0(\q_rising_sync.rd_ptr ), .LSR(stm_fpga_spare4_c), 
    .CLK(sx1257_clk_out_c), .Q0(\q_rising_sync.rd_ptr ), .Q1(q_out_synced), 
    .F0(\q_rising_sync.rd_ptr_N_391 ), .F1(\q_rising_sync.q_out_synced_N_387 ));
  SLICE_255 SLICE_255( .DI0(\sx1257_q_out_c.sig_082.FeedThruLUT ), 
    .D0(sx1257_q_out_c), .CE(\q_rising_sync.wr_ptr ), .LSR(stm_fpga_spare4_c), 
    .CLK(sx1257_clk_out_c), .Q0(\q_rising_sync.fifo[1] ), 
    .F0(\sx1257_q_out_c.sig_082.FeedThruLUT ));
  SLICE_256 SLICE_256( .DI0(\sx1257_q_out_c.sig_083.FeedThruLUT ), 
    .D0(sx1257_q_out_c), .CE(\q_rising_sync.wr_ptr_N_393 ), 
    .LSR(stm_fpga_spare4_c), .CLK(sx1257_clk_out_c), 
    .Q0(\q_rising_sync.fifo[0] ), .F0(\sx1257_q_out_c.sig_083.FeedThruLUT ));
  SLICE_257 SLICE_257( .D1(\counter[20] ), .C1(n3360), .B1(\current_state[0] ), 
    .A1(\counter[22] ), .D0(\counter[19] ), .C0(\counter[18] ), 
    .B0(\counter[21] ), .A0(\current_state[0] ), .F0(n3360), .F1(n1351));
  SLICE_259 SLICE_259( .D1(n1894), .C1(\current_state[1] ), 
    .B1(stm_fpga_spare4_c), .A1(\current_state[0] ), .D0(n433), .C0(n1236), 
    .B0(\current_state[1] ), .A0(stm_fpga_spare4_c), .F0(n233), .F1(n220));
  SLICE_260 SLICE_260( .D1(\counter[30] ), .C1(n10), .B1(\counter[27] ), 
    .D0(\counter[28] ), .C0(\counter[31] ), .B0(\counter[26] ), 
    .A0(\counter[29] ), .F0(n10), .F1(n1236));
  SLICE_261 SLICE_261( .D1(n3718), .C1(n3356), .B1(\counter[22] ), 
    .A1(\current_state[0] ), .D0(n90), .C0(n85), .B0(\counter[17] ), 
    .A0(\counter[20] ), .F0(n3356), .F1(n21));
  led_blink_SLICE_262 \led_blink.SLICE_262 ( .D1(\led_blink.n1868 ), 
    .C1(\counter[20] ), .B1(\counter[19] ), .A1(\counter[18] ), 
    .D0(\counter[18] ), .C0(\counter[19] ), .F0(n90), .F1(n3718));
  SLICE_265 SLICE_265( .D0(\counter[23] ), .C0(n1351), .B0(\counter[24] ), 
    .F0(n2945));
  SLICE_266 SLICE_266( .D1(n2945), .C1(n3713), .B1(\current_state[0] ), 
    .A1(\counter[25] ), .D0(\counter[23] ), .C0(n21), .B0(\counter[24] ), 
    .A0(\counter[21] ), .F0(n3713), .F1(n433));
  q_serializer_SLICE_267 \q_serializer.SLICE_267 ( 
    .D1(\q_serializer.bit_counter[0] ), .C1(\q_serializer.n10 ), 
    .A1(\q_serializer.bit_counter[1] ), .D0(\q_serializer.bit_counter[5] ), 
    .C0(\q_serializer.bit_counter[3] ), .B0(\q_serializer.bit_counter[2] ), 
    .A0(\q_serializer.bit_counter[4] ), .F0(\q_serializer.n10 ), 
    .F1(\q_serializer.clk_out_enable_N_397 ));
  q_serializer_SLICE_268 \q_serializer.SLICE_268 ( .D0(\q_serializer.n10 ), 
    .C0(gated_q_strobe), .B0(\q_serializer.bit_counter[1] ), 
    .A0(\q_serializer.bit_counter[0] ), .F0(\q_serializer.n1311 ));
  led_blink_SLICE_270 \led_blink.SLICE_270 ( .D1(n1894), 
    .C1(\led_blink.n3716 ), .B1(\current_state[1] ), .A1(stm_fpga_spare4_c), 
    .D0(\counter[27] ), .C0(n433), .B0(\counter[30] ), .A0(n10), 
    .F0(\led_blink.n3716 ), .F1(\led_blink.n9 ));
  led_blink_SLICE_272 \led_blink.SLICE_272 ( .D1(n1236), 
    .C1(\led_blink.n1892 ), .B1(\counter[24] ), .A1(\counter[25] ), .D0(n3356), 
    .C0(\counter[22] ), .B0(\counter[23] ), .A0(\counter[21] ), 
    .F0(\led_blink.n1892 ), .F1(n1894));
  q_demod_SLICE_273 \q_demod.SLICE_273 ( .D1(\q_demod.cycle_reg[4] ), 
    .C1(\q_demod.n10_adj_486 ), .B1(\q_demod.cycle_reg[2] ), 
    .A1(stream_enable_synced), .D0(\q_demod.cycle_reg[1] ), 
    .C0(\q_demod.cycle_reg[3] ), .B0(\q_demod.cycle_reg[0] ), 
    .A0(\q_demod.cycle_reg[5] ), .F0(\q_demod.n10_adj_486 ), 
    .F1(gated_q_strobe));
  q_demod_SLICE_274 \q_demod.SLICE_274 ( .D1(\i_demod.n10_adj_430 ), 
    .C1(\i_demod.cycle_reg[4] ), .B1(stm_fpga_spare4_c), 
    .A1(\i_demod.cycle_reg[2] ), .D0(\q_demod.n10_adj_486 ), 
    .C0(\q_demod.cycle_reg[4] ), .B0(stm_fpga_spare4_c), 
    .A0(\q_demod.cycle_reg[2] ), .F0(\q_demod.n453 ), .F1(\i_demod.n441 ));
  q_demod_SLICE_275 \q_demod.SLICE_275 ( .D1(\q_demod.n7_adj_488 ), 
    .C1(\q_demod.n8_adj_487 ), .B1(\q_demod.cycle_reg[5] ), 
    .A1(stm_fpga_spare4_c), .D0(\q_demod.cycle_reg[2] ), 
    .C0(\q_demod.cycle_reg[3] ), .A0(\q_demod.cycle_reg[4] ), 
    .F0(\q_demod.n8_adj_487 ), .F1(\q_demod.n1379 ));
  i_demod_SLICE_277 \i_demod.SLICE_277 ( .D1(\i_demod.n7_adj_400 ), 
    .C1(\i_demod.n8_adj_399 ), .B1(\i_demod.cycle_reg[5] ), 
    .A1(stm_fpga_spare4_c), .D0(\i_demod.cycle_reg[3] ), 
    .C0(\i_demod.cycle_reg[4] ), .B0(\i_demod.cycle_reg[2] ), 
    .F0(\i_demod.n8_adj_399 ), .F1(\i_demod.n1378 ));
  i_demod_SLICE_279 \i_demod.SLICE_279 ( .D1(\i_demod.cycle_reg[4] ), 
    .C1(\i_demod.n10_adj_430 ), .B1(stream_enable_synced), 
    .A1(\i_demod.cycle_reg[2] ), .D0(\i_demod.cycle_reg[3] ), 
    .C0(\i_demod.cycle_reg[1] ), .B0(\i_demod.cycle_reg[0] ), 
    .A0(\i_demod.cycle_reg[5] ), .F0(\i_demod.n10_adj_430 ), 
    .F1(gated_i_strobe));
  i_serializer_SLICE_282 \i_serializer.SLICE_282 ( 
    .D1(\i_serializer.bit_counter[0] ), .C1(\i_serializer.n10 ), 
    .B1(\i_serializer.bit_counter[1] ), .A1(gated_i_strobe), 
    .D0(\i_serializer.bit_counter[5] ), .C0(\i_serializer.bit_counter[3] ), 
    .B0(\i_serializer.bit_counter[4] ), .A0(\i_serializer.bit_counter[2] ), 
    .F0(\i_serializer.n10 ), .F1(\i_serializer.n1277 ));
  led_blink_SLICE_283 \led_blink.SLICE_283 ( .D1(\led_blink.n2998 ), 
    .C1(\led_blink.n94 ), .B1(\led_blink.n1 ), .A1(\led_blink.counter[12]_2 ), 
    .D0(\counter[17] ), .C0(\led_blink.counter[16]_2 ), 
    .B0(\led_blink.counter[15]_2 ), .F0(\led_blink.n94 ), 
    .F1(\led_blink.n1868 ));
  led_blink_SLICE_285 \led_blink.SLICE_285 ( .D0(\led_blink.counter[10]_2 ), 
    .C0(\led_blink.counter[11]_2 ), .F0(\led_blink.n1 ));
  led_blink_SLICE_286 \led_blink.SLICE_286 ( .D1(\led_blink.n1 ), 
    .C1(\led_blink.n2998 ), .B1(\led_blink.counter[12]_2 ), 
    .A1(\led_blink.n92 ), .D0(\led_blink.counter[14]_2 ), 
    .C0(\led_blink.counter[13]_2 ), .F0(\led_blink.n2998 ), .F1(n85));
  led_blink_SLICE_287 \led_blink.SLICE_287 ( .D1(\counter[22] ), 
    .C1(\led_blink.n3726 ), .B1(\counter[21] ), .A1(\counter[23] ), 
    .D0(\counter[20] ), .C0(\led_blink.n1868 ), .B0(\counter[18] ), 
    .A0(\counter[19] ), .F0(\led_blink.n3726 ), .F1(\led_blink.n3723 ));
  led_blink_SLICE_289 \led_blink.SLICE_289 ( .D1(\led_blink.n3720 ), 
    .C1(\led_blink.n767 ), .B1(n1894), .A1(stm_fpga_spare4_c), 
    .D0(\current_state[1] ), .C0(\current_state[0] ), .F0(\led_blink.n767 ), 
    .F1(\led_blink.n1365 ));
  led_blink_SLICE_292 \led_blink.SLICE_292 ( .D0(\led_blink.counter[16]_2 ), 
    .C0(\led_blink.counter[15]_2 ), .F0(\led_blink.n92 ));
  q_demod_SLICE_294 \q_demod.SLICE_294 ( .D0(\q_demod.cycle_reg[1] ), 
    .B0(\q_demod.cycle_reg[0] ), .F0(\q_demod.n7_adj_488 ));
  i_demod_SLICE_295 \i_demod.SLICE_295 ( .D0(\i_demod.cycle_reg[1] ), 
    .C0(\i_demod.cycle_reg[0] ), .F0(\i_demod.n7_adj_400 ));
  sx1257_mgmt_mosi_mux_SLICE_296 \sx1257_mgmt_mosi_mux.SLICE_296 ( 
    .D1(spi6_sck_c), .C1(stm_fpga_spare4_c), .D0(spi6_mosi_c), 
    .B0(stm_fpga_spare4_c), .F0(sx1257_mosi_c), .F1(sx1257_sck_c));
  led_blink_SLICE_297 \led_blink.SLICE_297 ( .D0(\counter[25] ), 
    .C0(\led_blink.n3723 ), .B0(\counter[24] ), .A0(n1236), 
    .F0(\led_blink.n3720 ));
  SLICE_301 SLICE_301( .F0(VCC_net));
  SLICE_303 SLICE_303( .F0(GND_net));
  q_serializer_SLICE_305 \q_serializer.SLICE_305 ( 
    .DI1(\q_serializer.clk_out_enable_N_397$n0 ), 
    .D1(\q_serializer.bit_counter[0] ), .C1(\q_serializer.n10 ), 
    .A1(\q_serializer.bit_counter[1] ), .D0(\q_serializer.clk_out_enable ), 
    .C0(sx1257_clk_out_c), .LSR(stm_fpga_spare4_c), .CLK(sx1257_clk_out_c), 
    .Q1(\q_serializer.clk_out_enable ), .F0(spi2_sck_c), 
    .F1(\q_serializer.clk_out_enable_N_397$n0 ));
  sx1257_mgmt_nss_mux_SLICE_306 \sx1257_mgmt_nss_mux.SLICE_306 ( 
    .D1(sx1257_miso_c), .C1(stm_fpga_spare4_c), .D0(spi6_nss_c), 
    .B0(stm_fpga_spare4_c), .F0(sx1257_nss_c), .F1(spi6_miso_c));
  q_demod_SLICE_308 \q_demod.SLICE_308 ( 
    .D0(\q_demod.comb[2].delay_reg[0][5] ), .F0(\q_demod.n1[5] ));
  q_demod_SLICE_309 \q_demod.SLICE_309 ( 
    .D1(\q_demod.comb[2].delay_reg[0][1] ), 
    .D0(\q_demod.comb[2].delay_reg[0][4] ), .F0(\q_demod.n1[4] ), 
    .F1(\q_demod.n1[1] ));
  q_demod_SLICE_310 \q_demod.SLICE_310 ( 
    .D0(\q_demod.comb[2].delay_reg[0][7] ), .F0(\q_demod.n1[7] ));
  q_demod_SLICE_311 \q_demod.SLICE_311 ( 
    .D0(\q_demod.comb[2].delay_reg[0][6] ), .F0(\q_demod.n1[6] ));
  q_demod_SLICE_312 \q_demod.SLICE_312 ( 
    .D0(\q_demod.comb[2].delay_reg[0][9] ), .F0(\q_demod.n1[9] ));
  q_demod_SLICE_313 \q_demod.SLICE_313 ( 
    .D0(\q_demod.comb[2].delay_reg[0][8] ), .F0(\q_demod.n1[8] ));
  q_demod_SLICE_314 \q_demod.SLICE_314 ( 
    .D1(\q_demod.comb[2].delay_reg[0][10] ), 
    .D0(\q_demod.comb[2].delay_reg[0][11] ), .F0(\q_demod.n1[11] ), 
    .F1(\q_demod.n1[10] ));
  q_demod_SLICE_316 \q_demod.SLICE_316 ( 
    .DI1(\q_demod.comb_reg[1][12].sig_028.FeedThruLUT ), 
    .C1(\q_demod.comb_reg[1][12] ), .D0(\q_demod.comb[2].delay_reg[0][12] ), 
    .CE(\q_demod.n453 ), .LSR(stm_fpga_spare4_c), .CLK(sx1257_clk_out_c), 
    .Q1(\q_demod.comb[2].delay_reg[0][12] ), .F0(\q_demod.n1[12] ), 
    .F1(\q_demod.comb_reg[1][12].sig_028.FeedThruLUT ));
  q_demod_SLICE_317 \q_demod.SLICE_317 ( 
    .D1(\q_demod.comb[0].delay_reg[0][6] ), 
    .D0(\q_demod.comb[0].delay_reg[0][1] ), .F0(\q_demod.n1_adj_507[1] ), 
    .F1(\q_demod.n1_adj_507[6] ));
  q_demod_SLICE_318 \q_demod.SLICE_318 ( 
    .D0(\q_demod.comb[0].delay_reg[0][0] ), .F0(\q_demod.n1_adj_507[0] ));
  q_demod_SLICE_319 \q_demod.SLICE_319 ( 
    .D1(\q_demod.comb[0].delay_reg[0][5] ), 
    .D0(\q_demod.comb[0].delay_reg[0][3] ), .F0(\q_demod.n1_adj_507[3] ), 
    .F1(\q_demod.n1_adj_507[5] ));
  q_demod_SLICE_320 \q_demod.SLICE_320 ( 
    .D1(\q_demod.comb[0].delay_reg[0][4] ), 
    .D0(\q_demod.comb[0].delay_reg[0][2] ), .F0(\q_demod.n1_adj_507[2] ), 
    .F1(\q_demod.n1_adj_507[4] ));
  q_demod_SLICE_323 \q_demod.SLICE_323 ( 
    .D0(\q_demod.comb[0].delay_reg[0][7] ), .F0(\q_demod.n1_adj_507[7] ));
  q_demod_SLICE_325 \q_demod.SLICE_325 ( 
    .D0(\q_demod.comb[0].delay_reg[0][9] ), .F0(\q_demod.n1_adj_507[9] ));
  q_demod_SLICE_326 \q_demod.SLICE_326 ( 
    .D1(\q_demod.comb[0].delay_reg[0][11] ), 
    .D0(\q_demod.comb[0].delay_reg[0][8] ), .F0(\q_demod.n1_adj_507[8] ), 
    .F1(\q_demod.n1_adj_507[11] ));
  q_demod_SLICE_328 \q_demod.SLICE_328 ( 
    .D0(\q_demod.comb[0].delay_reg[0][10] ), .F0(\q_demod.n1_adj_507[10] ));
  q_demod_SLICE_329 \q_demod.SLICE_329 ( 
    .DI1(\q_demod.int_reg[2][12].sig_001.FeedThruLUT ), 
    .D1(\q_demod.int_reg[2][12] ), .D0(\q_demod.comb[0].delay_reg[0][12] ), 
    .CE(\q_demod.n453 ), .LSR(stm_fpga_spare4_c), .CLK(sx1257_clk_out_c), 
    .Q1(\q_demod.comb[0].delay_reg[0][12] ), .F0(\q_demod.n1_adj_507[12] ), 
    .F1(\q_demod.int_reg[2][12].sig_001.FeedThruLUT ));
  q_demod_SLICE_330 \q_demod.SLICE_330 ( 
    .D1(\q_demod.comb[1].delay_reg[0][3] ), 
    .D0(\q_demod.comb[1].delay_reg[0][1] ), .F0(\q_demod.n1_adj_508[1] ), 
    .F1(\q_demod.n1_adj_508[3] ));
  q_demod_SLICE_331 \q_demod.SLICE_331 ( 
    .D1(\q_demod.comb[1].delay_reg[0][2] ), 
    .D0(\q_demod.comb[1].delay_reg[0][0] ), .F0(\q_demod.n1_adj_508[0] ), 
    .F1(\q_demod.n1_adj_508[2] ));
  q_demod_SLICE_334 \q_demod.SLICE_334 ( 
    .D1(\q_demod.comb[1].delay_reg[0][4] ), 
    .D0(\q_demod.comb[1].delay_reg[0][5] ), .F0(\q_demod.n1_adj_508[5] ), 
    .F1(\q_demod.n1_adj_508[4] ));
  q_demod_SLICE_336 \q_demod.SLICE_336 ( 
    .D1(\q_demod.comb[1].delay_reg[0][6] ), 
    .D0(\q_demod.comb[1].delay_reg[0][7] ), .F0(\q_demod.n1_adj_508[7] ), 
    .F1(\q_demod.n1_adj_508[6] ));
  q_demod_SLICE_338 \q_demod.SLICE_338 ( 
    .D1(\q_demod.comb[1].delay_reg[0][10] ), 
    .D0(\q_demod.comb[1].delay_reg[0][9] ), .F0(\q_demod.n1_adj_508[9] ), 
    .F1(\q_demod.n1_adj_508[10] ));
  q_demod_SLICE_339 \q_demod.SLICE_339 ( 
    .D0(\q_demod.comb[1].delay_reg[0][8] ), .F0(\q_demod.n1_adj_508[8] ));
  q_demod_SLICE_340 \q_demod.SLICE_340 ( 
    .D0(\q_demod.comb[1].delay_reg[0][11] ), .F0(\q_demod.n1_adj_508[11] ));
  q_demod_SLICE_342 \q_demod.SLICE_342 ( 
    .DI1(\q_demod.comb_reg[0][12].sig_016.FeedThruLUT ), 
    .D1(\q_demod.comb_reg[0][12] ), .D0(\q_demod.comb[1].delay_reg[0][12] ), 
    .CE(\q_demod.n453 ), .LSR(stm_fpga_spare4_c), .CLK(sx1257_clk_out_c), 
    .Q1(\q_demod.comb[1].delay_reg[0][12] ), .F0(\q_demod.n1_adj_508[12] ), 
    .F1(\q_demod.comb_reg[0][12].sig_016.FeedThruLUT ));
  q_demod_SLICE_343 \q_demod.SLICE_343 ( .D0(q_out_synced), 
    .F0(\q_demod.n336 ));
  q_demod_SLICE_345 \q_demod.SLICE_345 ( 
    .D0(\q_demod.comb[2].delay_reg[0][0] ), .F0(\q_demod.n1[0] ));
  q_demod_SLICE_346 \q_demod.SLICE_346 ( 
    .D1(\q_demod.comb[2].delay_reg[0][2] ), 
    .D0(\q_demod.comb[2].delay_reg[0][3] ), .F0(\q_demod.n1[3] ), 
    .F1(\q_demod.n1[2] ));
  i_demod_SLICE_348 \i_demod.SLICE_348 ( 
    .D1(\i_demod.comb[1].delay_reg[0][5] ), 
    .D0(\i_demod.comb[0].delay_reg[0][1] ), .F0(\i_demod.n1[1] ), 
    .F1(\i_demod.n1_adj_453[5] ));
  i_demod_SLICE_349 \i_demod.SLICE_349 ( 
    .D0(\i_demod.comb[0].delay_reg[0][0] ), .F0(\i_demod.n1[0] ));
  i_demod_SLICE_350 \i_demod.SLICE_350 ( 
    .D0(\i_demod.comb[0].delay_reg[0][3] ), .F0(\i_demod.n1[3] ));
  i_demod_SLICE_351 \i_demod.SLICE_351 ( 
    .D1(\i_demod.comb[0].delay_reg[0][6] ), 
    .D0(\i_demod.comb[0].delay_reg[0][2] ), .F0(\i_demod.n1[2] ), 
    .F1(\i_demod.n1[6] ));
  i_demod_SLICE_352 \i_demod.SLICE_352 ( 
    .D0(\i_demod.comb[0].delay_reg[0][5] ), .F0(\i_demod.n1[5] ));
  i_demod_SLICE_353 \i_demod.SLICE_353 ( 
    .D0(\i_demod.comb[0].delay_reg[0][4] ), .F0(\i_demod.n1[4] ));
  i_demod_SLICE_354 \i_demod.SLICE_354 ( 
    .D0(\i_demod.comb[0].delay_reg[0][7] ), .F0(\i_demod.n1[7] ));
  i_demod_SLICE_356 \i_demod.SLICE_356 ( 
    .D1(\i_demod.comb[0].delay_reg[0][8] ), 
    .D0(\i_demod.comb[0].delay_reg[0][9] ), .F0(\i_demod.n1[9] ), 
    .F1(\i_demod.n1[8] ));
  i_demod_SLICE_358 \i_demod.SLICE_358 ( 
    .D1(\i_demod.comb[0].delay_reg[0][10] ), 
    .D0(\i_demod.comb[0].delay_reg[0][11] ), .F0(\i_demod.n1[11] ), 
    .F1(\i_demod.n1[10] ));
  i_demod_SLICE_360 \i_demod.SLICE_360 ( 
    .DI1(\i_demod.int_reg[2][12].sig_040.FeedThruLUT ), 
    .C1(\i_demod.int_reg[2][12] ), .D0(\i_demod.comb[0].delay_reg[0][12] ), 
    .CE(\i_demod.n441 ), .LSR(stm_fpga_spare4_c), .CLK(sx1257_clk_out_c), 
    .Q1(\i_demod.comb[0].delay_reg[0][12] ), .F0(\i_demod.n1[12] ), 
    .F1(\i_demod.int_reg[2][12].sig_040.FeedThruLUT ));
  i_demod_SLICE_361 \i_demod.SLICE_361 ( 
    .D0(\i_demod.comb[2].delay_reg[0][1] ), .F0(\i_demod.n1_adj_452[1] ));
  i_demod_SLICE_362 \i_demod.SLICE_362 ( 
    .D0(\i_demod.comb[2].delay_reg[0][0] ), .F0(\i_demod.n1_adj_452[0] ));
  i_demod_SLICE_363 \i_demod.SLICE_363 ( .D0(i_out_synced), 
    .F0(\i_demod.n305 ));
  i_demod_SLICE_364 \i_demod.SLICE_364 ( 
    .D0(\i_demod.comb[1].delay_reg[0][1] ), .F0(\i_demod.n1_adj_453[1] ));
  i_demod_SLICE_365 \i_demod.SLICE_365 ( 
    .D0(\i_demod.comb[1].delay_reg[0][0] ), .F0(\i_demod.n1_adj_453[0] ));
  i_demod_SLICE_366 \i_demod.SLICE_366 ( 
    .D1(\i_demod.comb[1].delay_reg[0][4] ), 
    .D0(\i_demod.comb[1].delay_reg[0][3] ), .F0(\i_demod.n1_adj_453[3] ), 
    .F1(\i_demod.n1_adj_453[4] ));
  i_demod_SLICE_367 \i_demod.SLICE_367 ( 
    .D0(\i_demod.comb[1].delay_reg[0][2] ), .F0(\i_demod.n1_adj_453[2] ));
  i_demod_SLICE_370 \i_demod.SLICE_370 ( 
    .D0(\i_demod.comb[1].delay_reg[0][7] ), .F0(\i_demod.n1_adj_453[7] ));
  i_demod_SLICE_371 \i_demod.SLICE_371 ( 
    .D0(\i_demod.comb[1].delay_reg[0][6] ), .F0(\i_demod.n1_adj_453[6] ));
  i_demod_SLICE_372 \i_demod.SLICE_372 ( 
    .D0(\i_demod.comb[1].delay_reg[0][9] ), .F0(\i_demod.n1_adj_453[9] ));
  i_demod_SLICE_373 \i_demod.SLICE_373 ( 
    .D0(\i_demod.comb[1].delay_reg[0][8] ), .F0(\i_demod.n1_adj_453[8] ));
  i_demod_SLICE_374 \i_demod.SLICE_374 ( 
    .D0(\i_demod.comb[1].delay_reg[0][11] ), .F0(\i_demod.n1_adj_453[11] ));
  i_demod_SLICE_375 \i_demod.SLICE_375 ( 
    .D0(\i_demod.comb[1].delay_reg[0][10] ), .F0(\i_demod.n1_adj_453[10] ));
  i_demod_SLICE_376 \i_demod.SLICE_376 ( 
    .DI1(\i_demod.comb_reg[0][12].sig_078.FeedThruLUT ), 
    .C1(\i_demod.comb_reg[0][12] ), .D0(\i_demod.comb[1].delay_reg[0][12] ), 
    .CE(\i_demod.n441 ), .LSR(stm_fpga_spare4_c), .CLK(sx1257_clk_out_c), 
    .Q1(\i_demod.comb[1].delay_reg[0][12] ), .F0(\i_demod.n1_adj_453[12] ), 
    .F1(\i_demod.comb_reg[0][12].sig_078.FeedThruLUT ));
  i_demod_SLICE_377 \i_demod.SLICE_377 ( 
    .D0(\i_demod.comb[2].delay_reg[0][3] ), .F0(\i_demod.n1_adj_452[3] ));
  i_demod_SLICE_378 \i_demod.SLICE_378 ( 
    .D1(\i_demod.comb[2].delay_reg[0][6] ), 
    .D0(\i_demod.comb[2].delay_reg[0][2] ), .F0(\i_demod.n1_adj_452[2] ), 
    .F1(\i_demod.n1_adj_452[6] ));
  i_demod_SLICE_379 \i_demod.SLICE_379 ( 
    .D0(\i_demod.comb[2].delay_reg[0][5] ), .F0(\i_demod.n1_adj_452[5] ));
  i_demod_SLICE_380 \i_demod.SLICE_380 ( 
    .D0(\i_demod.comb[2].delay_reg[0][4] ), .F0(\i_demod.n1_adj_452[4] ));
  i_demod_SLICE_381 \i_demod.SLICE_381 ( 
    .C0(\i_demod.comb[2].delay_reg[0][7] ), .F0(\i_demod.n1_adj_452[7] ));
  i_demod_SLICE_383 \i_demod.SLICE_383 ( 
    .C1(\i_demod.comb[2].delay_reg[0][8] ), 
    .D0(\i_demod.comb[2].delay_reg[0][9] ), .F0(\i_demod.n1_adj_452[9] ), 
    .F1(\i_demod.n1_adj_452[8] ));
  i_demod_SLICE_385 \i_demod.SLICE_385 ( 
    .D1(\i_demod.comb[2].delay_reg[0][10] ), 
    .D0(\i_demod.comb[2].delay_reg[0][11] ), .F0(\i_demod.n1_adj_452[11] ), 
    .F1(\i_demod.n1_adj_452[10] ));
  i_demod_SLICE_387 \i_demod.SLICE_387 ( 
    .DI1(\i_demod.comb_reg[1][12].sig_055.FeedThruLUT ), 
    .D1(\i_demod.comb_reg[1][12] ), .D0(\i_demod.comb[2].delay_reg[0][12] ), 
    .CE(\i_demod.n441 ), .LSR(stm_fpga_spare4_c), .CLK(sx1257_clk_out_c), 
    .Q1(\i_demod.comb[2].delay_reg[0][12] ), .F0(\i_demod.n1_adj_452[12] ), 
    .F1(\i_demod.comb_reg[1][12].sig_055.FeedThruLUT ));
  i_rising_sync_SLICE_388 \i_rising_sync.SLICE_388 ( 
    .DI1(\i_rising_sync.wr_ptr_N_390$n1 ), .D1(\i_rising_sync.wr_ptr ), 
    .C0(\i_rising_sync.wr_ptr ), .LSR(stm_fpga_spare4_c), 
    .CLK(sx1257_clk_out_c), .Q1(\i_rising_sync.wr_ptr ), 
    .F0(\i_rising_sync.wr_ptr_N_390 ), .F1(\i_rising_sync.wr_ptr_N_390$n1 ));
  i_serializer_SLICE_389 \i_serializer.SLICE_389 ( 
    .DI1(\i_serializer.clk_out_enable_N_395 ), .D1(\i_serializer.n10 ), 
    .C1(\i_serializer.bit_counter[1] ), .B1(\i_serializer.bit_counter[0] ), 
    .D0(\i_serializer.clk_out_enable ), .C0(sx1257_clk_out_c), 
    .LSR(stm_fpga_spare4_c), .CLK(sx1257_clk_out_c), 
    .Q1(\i_serializer.clk_out_enable ), .F0(spi1_sck_c), 
    .F1(\i_serializer.clk_out_enable_N_395 ));
  q_rising_sync_SLICE_391 \q_rising_sync.SLICE_391 ( 
    .DI1(\q_rising_sync.wr_ptr_N_393$n2 ), .D1(\q_rising_sync.wr_ptr ), 
    .C0(\q_rising_sync.wr_ptr ), .LSR(stm_fpga_spare4_c), 
    .CLK(sx1257_clk_out_c), .Q1(\q_rising_sync.wr_ptr ), 
    .F0(\q_rising_sync.wr_ptr_N_393 ), .F1(\q_rising_sync.wr_ptr_N_393$n2 ));
  stream_enable_sync_ff1_c \stream_enable.sync_ff1_c ( 
    .PADDI(stm_fpga_spare5_c), .INCLK(sx1257_clk_out_c), 
    .DI0(\stream_enable.sync_ff1 ));
  spi2_mosi spi2_mosi_I( .PADDO(spi2_mosi_c), .spi2_mosi(spi2_mosi));
  spi1_mosi spi1_mosi_I( .PADDO(spi1_mosi_c), .spi1_mosi(spi1_mosi));
  spi1_sck spi1_sck_I( .PADDO(spi1_sck_c), .spi1_sck(spi1_sck));
  spi2_sck spi2_sck_I( .PADDO(spi2_sck_c), .spi2_sck(spi2_sck));
  stm_fpga_spare5 stm_fpga_spare5_I( .PADDI(stm_fpga_spare5_c), 
    .stm_fpga_spare5(stm_fpga_spare5));
  spi6_miso spi6_miso_I( .PADDO(spi6_miso_c), .spi6_miso(spi6_miso));
  sx1257_nss sx1257_nss_I( .PADDO(sx1257_nss_c), .sx1257_nss(sx1257_nss));
  sx1257_mosi sx1257_mosi_I( .PADDO(sx1257_mosi_c), .sx1257_mosi(sx1257_mosi));
  sx1257_i_in sx1257_i_in_I( .PADDO(VCC_net), .sx1257_i_in(sx1257_i_in));
  sx1257_q_in sx1257_q_in_I( .PADDO(VCC_net), .sx1257_q_in(sx1257_q_in));
  sx1257_sck sx1257_sck_I( .PADDO(sx1257_sck_c), .sx1257_sck(sx1257_sck));
  sx1257_clk_out sx1257_clk_out_I( .PADDI(sx1257_clk_out_c), 
    .sx1257_clk_out(sx1257_clk_out));
  sx1257_q_out sx1257_q_out_I( .PADDI(sx1257_q_out_c), 
    .sx1257_q_out(sx1257_q_out));
  sx1257_miso sx1257_miso_I( .PADDI(sx1257_miso_c), .sx1257_miso(sx1257_miso));
  sx1257_i_out sx1257_i_out_I( .PADDI(sx1257_i_out_c), 
    .sx1257_i_out(sx1257_i_out));
  spi6_mosi spi6_mosi_I( .PADDI(spi6_mosi_c), .spi6_mosi(spi6_mosi));
  spi6_sck spi6_sck_I( .PADDI(spi6_sck_c), .spi6_sck(spi6_sck));
  spi6_nss spi6_nss_I( .PADDI(spi6_nss_c), .spi6_nss(spi6_nss));
  stm_fpga_spare4 stm_fpga_spare4_I( .PADDI(stm_fpga_spare4_c), 
    .stm_fpga_spare4(stm_fpga_spare4));
  led1 led1_I( .PADDO(GND_net), .led1(led1));
  led0 led0_I( .PADDO(VCC_net), .led0(led0));
  led2 led2_I( .PADDO(led2_c), .led2(led2));
endmodule

module q_serializer_SLICE_0 ( input D1, C1, B1, CIN1, output F1, COUT1, COUT0 );
  wire   GNDI, VCCI;

  fa2 \q_serializer/sub_18_add_2_add_5_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), 
    .D0(VCCI), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(VCCI), .CI1(CIN1), 
    .S0(), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module fa2 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI0, CI1, output S0, S1, 
    CO0, CO1 );

  FA2 inst1( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .CI0(CI0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .CI1(CI1), .CO0(CO0), .CO1(CO1), .S0(S0), .S1(S1));
  defparam inst1.INIT0 = "0xc33c";
  defparam inst1.INIT1 = "0xc33c";
endmodule

module gnd ( output PWR0 );

  VLO INST1( .Z(PWR0));
endmodule

module vcc ( output PWR1 );

  VHI INST1( .Z(PWR1));
endmodule

module q_serializer_SLICE_1 ( input D1, C1, B1, D0, C0, B0, CIN0, CIN1, 
    output F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \q_serializer/sub_18_add_2_add_5_3 ( .A0(GNDI), .B0(B0), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module q_serializer_SLICE_2 ( input D1, C1, B1, D0, C0, B0, CIN0, CIN1, 
    output F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \q_serializer/sub_18_add_2_add_5_5 ( .A0(GNDI), .B0(B0), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module q_serializer_SLICE_3 ( input D1, D0, C0, B0, CIN0, CIN1, output F0, 
    COUT0 );
  wire   GNDI;

  fa2 \q_serializer/sub_18_add_2_add_5_7 ( .A0(GNDI), .B0(B0), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(), .CO0(COUT0), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
  endspecify

endmodule

module q_demod_SLICE_4 ( input DI1, DI0, D1, C1, B1, D0, C0, B0, LSR, CLK, 
    CIN0, CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \q_demod/int_reg[1]_222_add_4_7 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \q_demod/int_reg[1]_222__i5 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \q_demod/int_reg[1]_222__i6 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module ffsre2 ( input D0, SP, CK, LSR, output Q );

  FD1P3XZ INST01( .D(D0), .SP(SP), .CK(CK), .SR(LSR), .Q(Q));
  defparam INST01.REGSET = "RESET";
  defparam INST01.SRMODE = "CE_OVER_LSR";
endmodule

module q_demod_SLICE_5 ( input DI1, DI0, D1, C1, B1, D0, C0, B0, LSR, CLK, 
    CIN0, CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \q_demod/int_reg[1]_222_add_4_5 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \q_demod/int_reg[1]_222__i3 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \q_demod/int_reg[1]_222__i4 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module q_demod_SLICE_6 ( input DI1, DI0, D1, C1, B1, D0, C0, B0, LSR, CLK, 
    CIN0, CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \q_demod/int_reg[1]_222_add_4_3 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \q_demod/int_reg[1]_222__i1 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \q_demod/int_reg[1]_222__i2 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module q_demod_SLICE_7 ( input DI1, D1, C1, B1, LSR, CLK, CIN1, output Q1, F1, 
    COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, LSR_dly;

  fa2 \q_demod/int_reg[1]_222_add_4_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), 
    .D0(VCCI), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(VCCI), .CI1(CIN1), 
    .S0(), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \q_demod/int_reg[1]_222__i0 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module q_demod_SLICE_8 ( input DI1, DI0, D1, C1, B1, D0, C0, B0, LSR, CLK, 
    CIN0, CIN1, output Q0, Q1, F0, F1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \q_demod/add_1565_13 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), .A1(GNDI), 
    .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), .S1(F1), 
    .CO0(COUT0), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \q_demod/int_reg[0]__i11 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \q_demod/int_reg[0]__i12 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module q_demod_SLICE_9 ( input DI1, DI0, D1, C1, B1, D0, C0, B0, LSR, CLK, 
    CIN0, CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \q_demod/add_1565_11 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), .A1(GNDI), 
    .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), .S1(F1), 
    .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \q_demod/int_reg[0]__i9 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \q_demod/int_reg[0]__i10 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module q_demod_SLICE_10 ( input DI1, DI0, D1, C1, B1, D0, C0, B0, LSR, CLK, 
    CIN0, CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \q_demod/add_1565_9 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), .A1(GNDI), 
    .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), .S1(F1), 
    .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \q_demod/int_reg[0]__i7 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \q_demod/int_reg[0]__i8 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module q_demod_SLICE_11 ( input DI1, DI0, D1, C1, B1, D0, C0, B0, LSR, CLK, 
    CIN0, CIN1, output Q0, Q1, F0, F1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \q_demod/int_reg[2]_223_add_4_13 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \q_demod/int_reg[2]_223__i11 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \q_demod/int_reg[2]_223__i12 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module q_demod_SLICE_12 ( input DI1, DI0, D1, C1, B1, D0, C0, B0, LSR, CLK, 
    CIN0, CIN1, output Q0, Q1, F0, F1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \q_demod/int_reg[1]_222_add_4_13 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \q_demod/int_reg[1]_222__i11 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \q_demod/int_reg[1]_222__i12 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module q_demod_SLICE_13 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \q_demod/cycle_reg_225_add_4_5 ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \q_demod/cycle_reg_225__i3 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \q_demod/cycle_reg_225__i4 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module q_demod_SLICE_14 ( input DI1, DI0, D1, C1, B1, D0, C0, B0, LSR, CLK, 
    CIN0, CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \q_demod/add_1565_7 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), .A1(GNDI), 
    .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), .S1(F1), 
    .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \q_demod/int_reg[0]__i5 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \q_demod/int_reg[0]__i6 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module q_demod_SLICE_15 ( input DI1, DI0, D1, C1, B1, D0, C0, B0, LSR, CLK, 
    CIN0, CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \q_demod/add_1565_5 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), .A1(GNDI), 
    .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), .S1(F1), 
    .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \q_demod/int_reg[0]__i3 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \q_demod/int_reg[0]__i4 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module q_demod_SLICE_16 ( input DI1, DI0, D1, C1, B1, D0, C0, B0, LSR, CLK, 
    CIN0, CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \q_demod/add_1565_3 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), .A1(GNDI), 
    .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), .S1(F1), 
    .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \q_demod/int_reg[0]__i1 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \q_demod/int_reg[0]__i2 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module q_demod_SLICE_17 ( input DI1, D1, C1, B1, B0, LSR, CLK, CIN1, output Q1, 
    F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, LSR_dly;

  fa2 \q_demod/add_1565_1 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(VCCI), 
    .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(VCCI), .CI1(CIN1), .S0(), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \q_demod/int_reg[0]__i0 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module q_demod_SLICE_18 ( input DI0, D1, D0, C0, B0, CE, LSR, CLK, CIN0, CIN1, 
    output Q0, F0, COUT0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  fa2 \q_demod/add_384_14 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), .A1(GNDI), 
    .B1(GNDI), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), .S1(), 
    .CO0(COUT0), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \q_demod/comb_reg[1]__i12 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module q_demod_SLICE_19 ( input DI1, DI0, D1, C1, B1, D0, C0, B0, CE, LSR, CLK, 
    CIN0, CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  fa2 \q_demod/add_384_12 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), .A1(GNDI), 
    .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), .S1(F1), 
    .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \q_demod/comb_reg[1]__i10 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  ffsre2 \q_demod/comb_reg[1]__i11 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module q_demod_SLICE_20 ( input DI1, DI0, D1, C1, B1, D0, C0, B0, CE, LSR, CLK, 
    CIN0, CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  fa2 \q_demod/add_384_10 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), .A1(GNDI), 
    .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), .S1(F1), 
    .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \q_demod/comb_reg[1]__i8 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  ffsre2 \q_demod/comb_reg[1]__i9 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module q_demod_SLICE_21 ( input DI1, DI0, D1, C1, B1, D0, C0, B0, CE, LSR, CLK, 
    CIN0, CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  fa2 \q_demod/add_384_8 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), .A1(GNDI), 
    .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), .S1(F1), 
    .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \q_demod/comb_reg[1]__i6 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  ffsre2 \q_demod/comb_reg[1]__i7 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module q_demod_SLICE_22 ( input DI1, DI0, D1, C1, B1, D0, C0, B0, CE, LSR, CLK, 
    CIN0, CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  fa2 \q_demod/add_384_6 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), .A1(GNDI), 
    .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), .S1(F1), 
    .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \q_demod/comb_reg[1]__i4 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  ffsre2 \q_demod/comb_reg[1]__i5 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module q_demod_SLICE_23 ( input DI1, DI0, D1, C1, B1, D0, C0, B0, CE, LSR, CLK, 
    CIN0, CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  fa2 \q_demod/add_384_4 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), .A1(GNDI), 
    .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), .S1(F1), 
    .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \q_demod/comb_reg[1]__i2 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  ffsre2 \q_demod/comb_reg[1]__i3 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module q_demod_SLICE_24 ( input DI1, DI0, D1, C1, B1, D0, C0, B0, CE, LSR, CLK, 
    CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  fa2 \q_demod/add_384_2 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), .A1(GNDI), 
    .B1(B1), .C1(C1), .D1(D1), .CI0(VCCI), .CI1(CIN1), .S0(F0), .S1(F1), 
    .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \q_demod/comb_reg[1]__i0 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  ffsre2 \q_demod/comb_reg[1]__i1 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module q_demod_SLICE_25 ( input DI0, D1, D0, C0, B0, CE, LSR, CLK, CIN0, CIN1, 
    output Q0, F0, COUT0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  fa2 \q_demod/add_941_14 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), .A1(GNDI), 
    .B1(GNDI), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), .S1(), 
    .CO0(COUT0), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \q_demod/comb_reg[0]__i12 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module q_demod_SLICE_26 ( input DI1, DI0, D1, C1, B1, D0, C0, B0, CE, LSR, CLK, 
    CIN0, CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  fa2 \q_demod/add_941_12 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), .A1(GNDI), 
    .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), .S1(F1), 
    .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \q_demod/comb_reg[0]__i10 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  ffsre2 \q_demod/comb_reg[0]__i11 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module q_demod_SLICE_27 ( input DI1, DI0, D1, C1, B1, D0, C0, B0, CE, LSR, CLK, 
    CIN0, CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  fa2 \q_demod/add_941_10 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), .A1(GNDI), 
    .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), .S1(F1), 
    .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \q_demod/comb_reg[0]__i8 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  ffsre2 \q_demod/comb_reg[0]__i9 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module q_demod_SLICE_28 ( input DI1, DI0, D1, C1, B1, D0, C0, B0, CE, LSR, CLK, 
    CIN0, CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  fa2 \q_demod/add_941_8 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), .A1(GNDI), 
    .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), .S1(F1), 
    .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \q_demod/comb_reg[0]__i6 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  ffsre2 \q_demod/comb_reg[0]__i7 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module q_demod_SLICE_29 ( input DI1, DI0, D1, C1, B1, D0, C0, B0, CE, LSR, CLK, 
    CIN0, CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  fa2 \q_demod/add_941_6 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), .A1(GNDI), 
    .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), .S1(F1), 
    .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \q_demod/comb_reg[0]__i4 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  ffsre2 \q_demod/comb_reg[0]__i5 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module q_demod_SLICE_30 ( input DI1, DI0, D1, C1, B1, D0, C0, B0, CE, LSR, CLK, 
    CIN0, CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  fa2 \q_demod/add_941_4 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), .A1(GNDI), 
    .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), .S1(F1), 
    .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \q_demod/comb_reg[0]__i2 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  ffsre2 \q_demod/comb_reg[0]__i3 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module q_demod_SLICE_31 ( input DI1, DI0, D1, C1, B1, D0, C0, B0, CE, LSR, CLK, 
    CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  fa2 \q_demod/add_941_2 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), .A1(GNDI), 
    .B1(B1), .C1(C1), .D1(D1), .CI0(VCCI), .CI1(CIN1), .S0(F0), .S1(F1), 
    .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \q_demod/comb_reg[0]__i0 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  ffsre2 \q_demod/comb_reg[0]__i1 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module q_demod_SLICE_32 ( input DI0, D1, D0, C0, B0, CE, LSR, CLK, CIN0, CIN1, 
    output Q0, F0, COUT0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  fa2 \q_demod/add_309_14 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), .A1(GNDI), 
    .B1(GNDI), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), .S1(), 
    .CO0(COUT0), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \q_demod/comb_reg[2]__i12 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module q_demod_SLICE_33 ( input DI1, DI0, D1, C1, B1, D0, C0, B0, CE, LSR, CLK, 
    CIN0, CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  fa2 \q_demod/add_309_12 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), .A1(GNDI), 
    .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), .S1(F1), 
    .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \q_demod/comb_reg[2]__i10 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  ffsre2 \q_demod/comb_reg[2]__i11 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module q_demod_SLICE_34 ( input DI1, DI0, D1, C1, B1, D0, C0, B0, CE, LSR, CLK, 
    CIN0, CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  fa2 \q_demod/add_309_10 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), .A1(GNDI), 
    .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), .S1(F1), 
    .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \q_demod/comb_reg[2]__i8 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  ffsre2 \q_demod/comb_reg[2]__i9 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module q_demod_SLICE_35 ( input DI1, DI0, D1, C1, B1, D0, C0, B0, CE, LSR, CLK, 
    CIN0, CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  fa2 \q_demod/add_309_8 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), .A1(GNDI), 
    .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), .S1(F1), 
    .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \q_demod/comb_reg[2]__i6 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  ffsre2 \q_demod/comb_reg[2]__i7 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module q_demod_SLICE_36 ( input DI1, DI0, D1, C1, B1, D0, C0, B0, CE, LSR, CLK, 
    CIN0, CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  fa2 \q_demod/add_309_6 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), .A1(GNDI), 
    .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), .S1(F1), 
    .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \q_demod/comb_reg[2]__i4 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  ffsre2 \q_demod/comb_reg[2]__i5 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module q_demod_SLICE_37 ( input DI1, DI0, D1, C1, B1, D0, C0, B0, CE, LSR, CLK, 
    CIN0, CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  fa2 \q_demod/add_309_4 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), .A1(GNDI), 
    .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), .S1(F1), 
    .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \q_demod/comb_reg[2]__i2 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  ffsre2 \q_demod/comb_reg[2]__i3 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module q_demod_SLICE_38 ( input DI1, DI0, D1, C1, B1, D0, C0, B0, CE, LSR, CLK, 
    CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  fa2 \q_demod/add_309_2 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), .A1(GNDI), 
    .B1(B1), .C1(C1), .D1(D1), .CI0(VCCI), .CI1(CIN1), .S0(F0), .S1(F1), 
    .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \q_demod/comb_reg[2]__i0 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  ffsre2 \q_demod/comb_reg[2]__i1 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module q_demod_SLICE_39 ( input DI1, DI0, D1, C1, B1, D0, C0, B0, LSR, CLK, 
    CIN0, CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \q_demod/int_reg[2]_223_add_4_11 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \q_demod/int_reg[2]_223__i9 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \q_demod/int_reg[2]_223__i10 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module q_demod_SLICE_40 ( input DI1, DI0, D1, C1, B1, D0, C0, B0, LSR, CLK, 
    CIN0, CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \q_demod/int_reg[2]_223_add_4_9 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \q_demod/int_reg[2]_223__i7 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \q_demod/int_reg[2]_223__i8 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module q_demod_SLICE_41 ( input DI1, DI0, D1, C1, B1, D0, C0, B0, LSR, CLK, 
    CIN0, CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \q_demod/int_reg[1]_222_add_4_11 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \q_demod/int_reg[1]_222__i9 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \q_demod/int_reg[1]_222__i10 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module q_demod_SLICE_42 ( input DI0, D1, D0, C0, LSR, CLK, CIN0, CIN1, output 
    Q0, F0, COUT0 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, LSR_dly;

  fa2 \q_demod/cycle_reg_225_add_4_7 ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(), .CO0(COUT0), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \q_demod/cycle_reg_225__i5 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module q_demod_SLICE_43 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \q_demod/cycle_reg_225_add_4_3 ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \q_demod/cycle_reg_225__i1 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \q_demod/cycle_reg_225__i2 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module q_demod_SLICE_44 ( input DI1, D1, C1, B1, LSR, CLK, CIN1, output Q1, F1, 
    COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, LSR_dly;

  fa2 \q_demod/cycle_reg_225_add_4_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), 
    .D0(VCCI), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(VCCI), .CI1(CIN1), 
    .S0(), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \q_demod/cycle_reg_225__i0 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module q_demod_SLICE_45 ( input DI1, DI0, D1, C1, B1, D0, C0, B0, LSR, CLK, 
    CIN0, CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \q_demod/int_reg[2]_223_add_4_7 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \q_demod/int_reg[2]_223__i5 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \q_demod/int_reg[2]_223__i6 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module q_demod_SLICE_46 ( input DI1, DI0, D1, C1, B1, D0, C0, B0, LSR, CLK, 
    CIN0, CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \q_demod/int_reg[2]_223_add_4_5 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \q_demod/int_reg[2]_223__i3 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \q_demod/int_reg[2]_223__i4 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module q_demod_SLICE_47 ( input DI1, DI0, D1, C1, B1, D0, C0, B0, LSR, CLK, 
    CIN0, CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \q_demod/int_reg[2]_223_add_4_3 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \q_demod/int_reg[2]_223__i1 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \q_demod/int_reg[2]_223__i2 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module q_demod_SLICE_48 ( input DI1, D1, C1, B1, LSR, CLK, CIN1, output Q1, F1, 
    COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, LSR_dly;

  fa2 \q_demod/int_reg[2]_223_add_4_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), 
    .D0(VCCI), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(VCCI), .CI1(CIN1), 
    .S0(), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \q_demod/int_reg[2]_223__i0 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module q_demod_SLICE_49 ( input DI1, DI0, D1, C1, B1, D0, C0, B0, LSR, CLK, 
    CIN0, CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \q_demod/int_reg[1]_222_add_4_9 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \q_demod/int_reg[1]_222__i7 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \q_demod/int_reg[1]_222__i8 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module i_demod_SLICE_50 ( input DI1, DI0, D1, C1, B1, D0, C0, B0, LSR, CLK, 
    CIN0, CIN1, output Q0, Q1, F0, F1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \i_demod/int_reg[1]_218_add_4_13 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \i_demod/int_reg[1]_218__i11 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \i_demod/int_reg[1]_218__i12 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module i_demod_SLICE_51 ( input DI1, DI0, D1, C1, B1, D0, C0, B0, LSR, CLK, 
    CIN0, CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \i_demod/int_reg[1]_218_add_4_11 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \i_demod/int_reg[1]_218__i9 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \i_demod/int_reg[1]_218__i10 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module i_demod_SLICE_52 ( input DI1, DI0, D1, C1, B1, D0, C0, B0, LSR, CLK, 
    CIN0, CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \i_demod/int_reg[1]_218_add_4_9 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \i_demod/int_reg[1]_218__i7 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \i_demod/int_reg[1]_218__i8 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module i_demod_SLICE_53 ( input DI1, DI0, D1, C1, B1, D0, C0, B0, LSR, CLK, 
    CIN0, CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \i_demod/int_reg[1]_218_add_4_7 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \i_demod/int_reg[1]_218__i5 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \i_demod/int_reg[1]_218__i6 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module i_demod_SLICE_54 ( input DI1, DI0, D1, C1, B1, D0, C0, B0, LSR, CLK, 
    CIN0, CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \i_demod/int_reg[2]_219_add_4_3 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \i_demod/int_reg[2]_219__i1 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \i_demod/int_reg[2]_219__i2 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module i_demod_SLICE_55 ( input DI1, DI0, D1, C1, B1, D0, C0, B0, LSR, CLK, 
    CIN0, CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \i_demod/int_reg[2]_219_add_4_5 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \i_demod/int_reg[2]_219__i3 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \i_demod/int_reg[2]_219__i4 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module i_demod_SLICE_56 ( input DI1, DI0, D1, C1, B1, D0, C0, B0, LSR, CLK, 
    CIN0, CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \i_demod/int_reg[2]_219_add_4_7 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \i_demod/int_reg[2]_219__i5 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \i_demod/int_reg[2]_219__i6 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module i_demod_SLICE_57 ( input DI1, DI0, D1, C1, B1, D0, C0, B0, LSR, CLK, 
    CIN0, CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \i_demod/int_reg[1]_218_add_4_5 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \i_demod/int_reg[1]_218__i3 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \i_demod/int_reg[1]_218__i4 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module i_demod_SLICE_58 ( input DI1, DI0, D1, C1, B1, D0, C0, B0, LSR, CLK, 
    CIN0, CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \i_demod/int_reg[2]_219_add_4_9 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \i_demod/int_reg[2]_219__i7 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \i_demod/int_reg[2]_219__i8 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module i_demod_SLICE_59 ( input DI0, D1, D0, C0, B0, CE, LSR, CLK, CIN0, CIN1, 
    output Q0, F0, COUT0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  fa2 \i_demod/add_383_14 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), .A1(GNDI), 
    .B1(GNDI), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), .S1(), 
    .CO0(COUT0), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \i_demod/comb_reg[1]__i12 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module i_demod_SLICE_60 ( input DI1, DI0, D1, C1, B1, D0, C0, B0, CE, LSR, CLK, 
    CIN0, CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  fa2 \i_demod/add_383_12 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), .A1(GNDI), 
    .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), .S1(F1), 
    .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \i_demod/comb_reg[1]__i10 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  ffsre2 \i_demod/comb_reg[1]__i11 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module i_demod_SLICE_61 ( input DI1, DI0, D1, C1, B1, D0, C0, B0, CE, LSR, CLK, 
    CIN0, CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  fa2 \i_demod/add_383_10 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), .A1(GNDI), 
    .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), .S1(F1), 
    .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \i_demod/comb_reg[1]__i8 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  ffsre2 \i_demod/comb_reg[1]__i9 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module i_demod_SLICE_62 ( input DI1, DI0, D1, C1, B1, D0, C0, B0, CE, LSR, CLK, 
    CIN0, CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  fa2 \i_demod/add_383_8 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), .A1(GNDI), 
    .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), .S1(F1), 
    .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \i_demod/comb_reg[1]__i6 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  ffsre2 \i_demod/comb_reg[1]__i7 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module i_demod_SLICE_63 ( input DI1, DI0, D1, C1, B1, D0, C0, B0, CE, LSR, CLK, 
    CIN0, CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  fa2 \i_demod/add_383_6 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), .A1(GNDI), 
    .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), .S1(F1), 
    .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \i_demod/comb_reg[1]__i4 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  ffsre2 \i_demod/comb_reg[1]__i5 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module i_demod_SLICE_64 ( input DI1, DI0, D1, C1, B1, D0, C0, B0, CE, LSR, CLK, 
    CIN0, CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  fa2 \i_demod/add_383_4 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), .A1(GNDI), 
    .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), .S1(F1), 
    .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \i_demod/comb_reg[1]__i2 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  ffsre2 \i_demod/comb_reg[1]__i3 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module i_demod_SLICE_65 ( input DI1, DI0, D1, C1, B1, D0, C0, B0, CE, LSR, CLK, 
    CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  fa2 \i_demod/add_383_2 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), .A1(GNDI), 
    .B1(B1), .C1(C1), .D1(D1), .CI0(VCCI), .CI1(CIN1), .S0(F0), .S1(F1), 
    .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \i_demod/comb_reg[1]__i0 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  ffsre2 \i_demod/comb_reg[1]__i1 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module i_demod_SLICE_66 ( input DI1, DI0, D1, C1, B1, D0, C0, B0, LSR, CLK, 
    CIN0, CIN1, output Q0, Q1, F0, F1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \i_demod/add_1566_13 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), .A1(GNDI), 
    .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), .S1(F1), 
    .CO0(COUT0), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \i_demod/int_reg[0]__i11 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \i_demod/int_reg[0]__i12 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module i_demod_SLICE_67 ( input DI1, DI0, D1, C1, B1, D0, C0, B0, LSR, CLK, 
    CIN0, CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \i_demod/add_1566_11 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), .A1(GNDI), 
    .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), .S1(F1), 
    .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \i_demod/int_reg[0]__i9 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \i_demod/int_reg[0]__i10 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module i_demod_SLICE_68 ( input DI1, DI0, D1, C1, B1, D0, C0, B0, LSR, CLK, 
    CIN0, CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \i_demod/add_1566_9 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), .A1(GNDI), 
    .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), .S1(F1), 
    .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \i_demod/int_reg[0]__i7 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \i_demod/int_reg[0]__i8 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module i_demod_SLICE_69 ( input DI1, DI0, D1, C1, B1, D0, C0, B0, LSR, CLK, 
    CIN0, CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \i_demod/int_reg[2]_219_add_4_11 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \i_demod/int_reg[2]_219__i9 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \i_demod/int_reg[2]_219__i10 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module i_demod_SLICE_70 ( input DI1, DI0, D1, C1, B1, D0, C0, B0, LSR, CLK, 
    CIN0, CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \i_demod/add_1566_7 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), .A1(GNDI), 
    .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), .S1(F1), 
    .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \i_demod/int_reg[0]__i5 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \i_demod/int_reg[0]__i6 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module i_demod_SLICE_71 ( input DI1, DI0, D1, C1, B1, D0, C0, B0, LSR, CLK, 
    CIN0, CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \i_demod/add_1566_5 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), .A1(GNDI), 
    .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), .S1(F1), 
    .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \i_demod/int_reg[0]__i3 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \i_demod/int_reg[0]__i4 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module i_demod_SLICE_72 ( input DI1, DI0, D1, C1, B1, D0, C0, B0, LSR, CLK, 
    CIN0, CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \i_demod/add_1566_3 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), .A1(GNDI), 
    .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), .S1(F1), 
    .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \i_demod/int_reg[0]__i1 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \i_demod/int_reg[0]__i2 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module i_demod_SLICE_73 ( input DI1, D1, C1, B1, B0, LSR, CLK, CIN1, output Q1, 
    F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, LSR_dly;

  fa2 \i_demod/add_1566_1 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(VCCI), 
    .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(VCCI), .CI1(CIN1), .S0(), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \i_demod/int_reg[0]__i0 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module i_demod_SLICE_74 ( input DI0, D1, D0, C0, B0, CE, LSR, CLK, CIN0, CIN1, 
    output Q0, F0, COUT0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  fa2 \i_demod/add_942_14 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), .A1(GNDI), 
    .B1(GNDI), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), .S1(), 
    .CO0(COUT0), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \i_demod/comb_reg[0]__i12 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module i_demod_SLICE_75 ( input DI1, DI0, D1, C1, B1, D0, C0, B0, CE, LSR, CLK, 
    CIN0, CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  fa2 \i_demod/add_942_12 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), .A1(GNDI), 
    .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), .S1(F1), 
    .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \i_demod/comb_reg[0]__i10 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  ffsre2 \i_demod/comb_reg[0]__i11 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module i_demod_SLICE_76 ( input DI1, DI0, D1, C1, B1, D0, C0, B0, CE, LSR, CLK, 
    CIN0, CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  fa2 \i_demod/add_942_10 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), .A1(GNDI), 
    .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), .S1(F1), 
    .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \i_demod/comb_reg[0]__i8 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  ffsre2 \i_demod/comb_reg[0]__i9 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module i_demod_SLICE_77 ( input DI1, DI0, D1, C1, B1, D0, C0, B0, CE, LSR, CLK, 
    CIN0, CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  fa2 \i_demod/add_942_8 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), .A1(GNDI), 
    .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), .S1(F1), 
    .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \i_demod/comb_reg[0]__i6 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  ffsre2 \i_demod/comb_reg[0]__i7 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module i_demod_SLICE_78 ( input DI1, DI0, D1, C1, B1, D0, C0, B0, CE, LSR, CLK, 
    CIN0, CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  fa2 \i_demod/add_942_6 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), .A1(GNDI), 
    .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), .S1(F1), 
    .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \i_demod/comb_reg[0]__i4 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  ffsre2 \i_demod/comb_reg[0]__i5 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module i_demod_SLICE_79 ( input DI1, DI0, D1, C1, B1, D0, C0, B0, CE, LSR, CLK, 
    CIN0, CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  fa2 \i_demod/add_942_4 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), .A1(GNDI), 
    .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), .S1(F1), 
    .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \i_demod/comb_reg[0]__i2 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  ffsre2 \i_demod/comb_reg[0]__i3 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module i_demod_SLICE_80 ( input DI1, DI0, D1, C1, B1, D0, C0, B0, CE, LSR, CLK, 
    CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  fa2 \i_demod/add_942_2 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), .A1(GNDI), 
    .B1(B1), .C1(C1), .D1(D1), .CI0(VCCI), .CI1(CIN1), .S0(F0), .S1(F1), 
    .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \i_demod/comb_reg[0]__i0 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  ffsre2 \i_demod/comb_reg[0]__i1 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module i_demod_SLICE_81 ( input DI1, DI0, D1, C1, B1, D0, C0, B0, LSR, CLK, 
    CIN0, CIN1, output Q0, Q1, F0, F1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \i_demod/int_reg[2]_219_add_4_13 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \i_demod/int_reg[2]_219__i11 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \i_demod/int_reg[2]_219__i12 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module i_demod_SLICE_82 ( input DI0, D1, D0, C0, B0, CE, LSR, CLK, CIN0, CIN1, 
    output Q0, F0, COUT0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  fa2 \i_demod/add_310_14 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), .A1(GNDI), 
    .B1(GNDI), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), .S1(), 
    .CO0(COUT0), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \i_demod/comb_reg[2]__i12 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module i_demod_SLICE_83 ( input DI1, DI0, D1, C1, B1, D0, C0, B0, CE, LSR, CLK, 
    CIN0, CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  fa2 \i_demod/add_310_12 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), .A1(GNDI), 
    .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), .S1(F1), 
    .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \i_demod/comb_reg[2]__i10 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  ffsre2 \i_demod/comb_reg[2]__i11 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module i_demod_SLICE_84 ( input DI1, DI0, D1, C1, B1, D0, C0, B0, CE, LSR, CLK, 
    CIN0, CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  fa2 \i_demod/add_310_10 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), .A1(GNDI), 
    .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), .S1(F1), 
    .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \i_demod/comb_reg[2]__i8 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  ffsre2 \i_demod/comb_reg[2]__i9 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module i_demod_SLICE_85 ( input DI1, DI0, D1, C1, B1, D0, C0, B0, CE, LSR, CLK, 
    CIN0, CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  fa2 \i_demod/add_310_8 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), .A1(GNDI), 
    .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), .S1(F1), 
    .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \i_demod/comb_reg[2]__i6 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  ffsre2 \i_demod/comb_reg[2]__i7 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module i_demod_SLICE_86 ( input DI1, DI0, D1, C1, B1, D0, C0, B0, CE, LSR, CLK, 
    CIN0, CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  fa2 \i_demod/add_310_6 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), .A1(GNDI), 
    .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), .S1(F1), 
    .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \i_demod/comb_reg[2]__i4 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  ffsre2 \i_demod/comb_reg[2]__i5 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module i_demod_SLICE_87 ( input DI1, DI0, D1, C1, B1, D0, C0, B0, CE, LSR, CLK, 
    CIN0, CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  fa2 \i_demod/add_310_4 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), .A1(GNDI), 
    .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), .S1(F1), 
    .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \i_demod/comb_reg[2]__i2 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  ffsre2 \i_demod/comb_reg[2]__i3 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module i_demod_SLICE_88 ( input DI1, D1, C1, B1, LSR, CLK, CIN1, output Q1, F1, 
    COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, LSR_dly;

  fa2 \i_demod/int_reg[2]_219_add_4_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), 
    .D0(VCCI), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(VCCI), .CI1(CIN1), 
    .S0(), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \i_demod/int_reg[2]_219__i0 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module i_demod_SLICE_89 ( input DI1, DI0, D1, C1, B1, D0, C0, B0, LSR, CLK, 
    CIN0, CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \i_demod/int_reg[1]_218_add_4_3 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \i_demod/int_reg[1]_218__i1 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \i_demod/int_reg[1]_218__i2 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module i_demod_SLICE_90 ( input DI1, D1, C1, B1, LSR, CLK, CIN1, output Q1, F1, 
    COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, LSR_dly;

  fa2 \i_demod/int_reg[1]_218_add_4_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), 
    .D0(VCCI), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(VCCI), .CI1(CIN1), 
    .S0(), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \i_demod/int_reg[1]_218__i0 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module i_demod_SLICE_91 ( input DI1, D1, C1, B1, LSR, CLK, CIN1, output Q1, F1, 
    COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, LSR_dly;

  fa2 \i_demod/cycle_reg_221_add_4_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), 
    .D0(VCCI), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(VCCI), .CI1(CIN1), 
    .S0(), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \i_demod/cycle_reg_221__i0 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module i_demod_SLICE_92 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \i_demod/cycle_reg_221_add_4_3 ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \i_demod/cycle_reg_221__i1 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \i_demod/cycle_reg_221__i2 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module i_demod_SLICE_93 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \i_demod/cycle_reg_221_add_4_5 ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \i_demod/cycle_reg_221__i3 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \i_demod/cycle_reg_221__i4 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module i_demod_SLICE_94 ( input DI0, D1, D0, C0, LSR, CLK, CIN0, CIN1, output 
    Q0, F0, COUT0 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, LSR_dly;

  fa2 \i_demod/cycle_reg_221_add_4_7 ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(), .CO0(COUT0), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \i_demod/cycle_reg_221__i5 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module i_demod_SLICE_95 ( input DI1, DI0, D1, C1, B1, D0, C0, B0, CE, LSR, CLK, 
    CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  fa2 \i_demod/add_310_2 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), .A1(GNDI), 
    .B1(B1), .C1(C1), .D1(D1), .CI0(VCCI), .CI1(CIN1), .S0(F0), .S1(F1), 
    .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \i_demod/comb_reg[2]__i0 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  ffsre2 \i_demod/comb_reg[2]__i1 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module led_blink_SLICE_96 ( input DI0, D1, D0, C0, LSR, CLK, CIN0, CIN1, 
    output Q0, F0, COUT0 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, LSR_dly;

  fa2 \led_blink/counter_217_add_4_33 ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(), .CO0(COUT0), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \led_blink/counter_217__i31 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module led_blink_SLICE_97 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, 
    CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \led_blink/counter_217_add_4_31 ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \led_blink/counter_217__i29 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \led_blink/counter_217__i30 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module led_blink_SLICE_98 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, 
    CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \led_blink/counter_217_add_4_29 ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \led_blink/counter_217__i27 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \led_blink/counter_217__i28 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module led_blink_SLICE_99 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, 
    CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \led_blink/counter_217_add_4_27 ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \led_blink/counter_217__i25 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \led_blink/counter_217__i26 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module led_blink_SLICE_100 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, 
    CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \led_blink/counter_217_add_4_25 ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \led_blink/counter_217__i23 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \led_blink/counter_217__i24 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module led_blink_SLICE_101 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, 
    CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \led_blink/counter_217_add_4_23 ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \led_blink/counter_217__i21 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \led_blink/counter_217__i22 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module led_blink_SLICE_102 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, 
    CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \led_blink/counter_217_add_4_21 ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \led_blink/counter_217__i19 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \led_blink/counter_217__i20 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module led_blink_SLICE_103 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, 
    CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \led_blink/counter_217_add_4_19 ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \led_blink/counter_217__i17 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \led_blink/counter_217__i18 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module led_blink_SLICE_104 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, 
    CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \led_blink/counter_217_add_4_17 ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \led_blink/counter_217__i15 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \led_blink/counter_217__i16 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module led_blink_SLICE_105 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, 
    CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \led_blink/counter_217_add_4_15 ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \led_blink/counter_217__i13 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \led_blink/counter_217__i14 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module led_blink_SLICE_106 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, 
    CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \led_blink/counter_217_add_4_13 ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \led_blink/counter_217__i11 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \led_blink/counter_217__i12 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module led_blink_SLICE_107 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, 
    CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \led_blink/counter_217_add_4_11 ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \led_blink/counter_217__i9 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \led_blink/counter_217__i10 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module led_blink_SLICE_108 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, 
    CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \led_blink/counter_217_add_4_9 ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \led_blink/counter_217__i7 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \led_blink/counter_217__i8 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module led_blink_SLICE_109 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, 
    CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \led_blink/counter_217_add_4_7 ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \led_blink/counter_217__i5 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \led_blink/counter_217__i6 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module led_blink_SLICE_110 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, 
    CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \led_blink/counter_217_add_4_5 ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \led_blink/counter_217__i3 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \led_blink/counter_217__i4 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module led_blink_SLICE_111 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, 
    CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \led_blink/counter_217_add_4_3 ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \led_blink/counter_217__i1 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \led_blink/counter_217__i2 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module led_blink_SLICE_112 ( input DI1, D1, C1, B1, LSR, CLK, CIN1, output Q1, 
    F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, LSR_dly;

  fa2 \led_blink/counter_217_add_4_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), 
    .D0(VCCI), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(VCCI), .CI1(CIN1), 
    .S0(), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \led_blink/counter_217__i0 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module i_serializer_SLICE_113 ( input D1, D0, C0, B0, CIN0, CIN1, output F0, 
    COUT0 );
  wire   GNDI;

  fa2 \i_serializer/sub_18_add_2_add_5_7 ( .A0(GNDI), .B0(B0), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(), .CO0(COUT0), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
  endspecify

endmodule

module i_serializer_SLICE_114 ( input D1, C1, B1, D0, C0, B0, CIN0, CIN1, 
    output F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \i_serializer/sub_18_add_2_add_5_5 ( .A0(GNDI), .B0(B0), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module i_serializer_SLICE_115 ( input D1, C1, B1, D0, C0, B0, CIN0, CIN1, 
    output F0, F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \i_serializer/sub_18_add_2_add_5_3 ( .A0(GNDI), .B0(B0), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module i_serializer_SLICE_116 ( input D1, C1, B1, CIN1, output F1, COUT1, 
    COUT0 );
  wire   GNDI, VCCI;

  fa2 \i_serializer/sub_18_add_2_add_5_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), 
    .D0(VCCI), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(VCCI), .CI1(CIN1), 
    .S0(), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module q_serializer_SLICE_117 ( input DI1, DI0, D1, C1, B1, D0, C0, B0, CE, 
    LSR, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut4 \q_serializer/mux_23_i2_3_lut ( .A(GNDI), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40001 \q_serializer/mux_23_i1_3_lut ( .A(GNDI), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  ffsre20002 \q_serializer/shift_reg_i1 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre20002 \q_serializer/shift_reg_i0 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut4 ( input A, B, C, D, output Z );

  LUT4 #("0xFC30") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40001 ( input A, B, C, D, output Z );

  LUT4 #("0xFC0C") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module ffsre20002 ( input D0, SP, CK, LSR, output Q );

  FD1P3XZ INST01( .D(D0), .SP(SP), .CK(CK), .SR(LSR), .Q(Q));
  defparam INST01.REGSET = "RESET";
  defparam INST01.SRMODE = "ASYNC";
endmodule

module q_serializer_SLICE_118 ( input DI1, DI0, D1, C1, D0, B0, CE, LSR, CLK, 
    output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40003 \q_serializer/i1429_2_lut ( .A(GNDI), .B(GNDI), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40004 \q_serializer/i1430_2_lut ( .A(GNDI), .B(B0), .C(GNDI), .D(D0), 
    .Z(F0));
  ffsre20002 \q_serializer/bit_counter_i5 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre20002 \q_serializer/bit_counter_i4 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40003 ( input A, B, C, D, output Z );

  LUT4 #("0xF000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40004 ( input A, B, C, D, output Z );

  LUT4 #("0xFF33") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module q_serializer_SLICE_120 ( input DI1, DI0, D1, C1, B1, D0, C0, A0, CE, 
    LSR, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40005 \q_serializer/mux_23_i4_3_lut ( .A(GNDI), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40006 \q_serializer/mux_23_i3_3_lut ( .A(A0), .B(GNDI), .C(C0), .D(D0), 
    .Z(F0));
  ffsre20002 \q_serializer/shift_reg_i3 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre20002 \q_serializer/shift_reg_i2 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40005 ( input A, B, C, D, output Z );

  LUT4 #("0xF3C0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40006 ( input A, B, C, D, output Z );

  LUT4 #("0xFA50") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module q_serializer_SLICE_122 ( input DI1, DI0, D1, C1, A1, D0, C0, B0, CE, 
    LSR, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40007 \q_serializer/mux_23_i6_3_lut ( .A(A1), .B(GNDI), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40001 \q_serializer/mux_23_i5_3_lut ( .A(GNDI), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  ffsre20002 \q_serializer/shift_reg_i5 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre20002 \q_serializer/shift_reg_i4 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40007 ( input A, B, C, D, output Z );

  LUT4 #("0xF0AA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module q_serializer_SLICE_124 ( input DI1, DI0, D1, C1, A1, D0, C0, B0, CE, 
    LSR, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40008 \q_serializer/mux_23_i8_3_lut ( .A(A1), .B(GNDI), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40009 \q_serializer/mux_23_i7_3_lut ( .A(GNDI), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  ffsre20002 \q_serializer/shift_reg_i7 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre20002 \q_serializer/shift_reg_i6 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40008 ( input A, B, C, D, output Z );

  LUT4 #("0xFA50") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40009 ( input A, B, C, D, output Z );

  LUT4 #("0xFC30") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module q_serializer_SLICE_126 ( input DI1, DI0, D1, C1, B1, D0, C0, A0, CE, 
    LSR, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut4 \q_serializer/mux_23_i10_3_lut ( .A(GNDI), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40006 \q_serializer/mux_23_i9_3_lut ( .A(A0), .B(GNDI), .C(C0), .D(D0), 
    .Z(F0));
  ffsre20002 \q_serializer/shift_reg_i9 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre20002 \q_serializer/shift_reg_i8 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module q_serializer_SLICE_128 ( input DI1, DI0, D1, C1, B1, D0, C0, B0, CE, 
    LSR, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut4 \q_serializer/mux_23_i12_3_lut ( .A(GNDI), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40001 \q_serializer/mux_23_i11_3_lut ( .A(GNDI), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  ffsre20002 \q_serializer/shift_reg_i11 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre20002 \q_serializer/shift_reg_i10 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module q_serializer_SLICE_130 ( input DI1, DI0, D1, C1, B1, D0, C0, B0, CE, 
    LSR, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut4 \q_serializer/mux_23_i14_3_lut ( .A(GNDI), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40001 \q_serializer/mux_23_i13_3_lut ( .A(GNDI), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  ffsre20002 \q_serializer/shift_reg_i13 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre20002 \q_serializer/shift_reg_i12 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module q_serializer_SLICE_132 ( input DI1, DI0, D1, C1, D0, C0, B0, CE, LSR, 
    CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40010 \q_serializer/i1431_2_lut ( .A(GNDI), .B(GNDI), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40001 \q_serializer/mux_23_i15_3_lut ( .A(GNDI), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  ffsre20002 \q_serializer/shift_reg_i15 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre20002 \q_serializer/shift_reg_i14 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40010 ( input A, B, C, D, output Z );

  LUT4 #("0x00F0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module q_serializer_SLICE_135 ( input DI1, DI0, D1, C1, D0, B0, CE, LSR, CLK, 
    output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40003 \q_serializer/i1427_2_lut ( .A(GNDI), .B(GNDI), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40011 \q_serializer/i1428_2_lut ( .A(GNDI), .B(B0), .C(GNDI), .D(D0), 
    .Z(F0));
  ffsre20002 \q_serializer/bit_counter_i2 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre20002 \q_serializer/bit_counter_i3 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40011 ( input A, B, C, D, output Z );

  LUT4 #("0xCC00") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module q_serializer_SLICE_137 ( input DI1, DI0, D1, C1, D0, B0, CE, LSR, CLK, 
    output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40003 \q_serializer/i1408_2_lut ( .A(GNDI), .B(GNDI), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40011 \q_serializer/i1426_2_lut ( .A(GNDI), .B(B0), .C(GNDI), .D(D0), 
    .Z(F0));
  ffsre20002 \q_serializer/bit_counter_i0 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre20002 \q_serializer/bit_counter_i1 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module q_serializer_SLICE_139 ( input DI0, D0, C0, A0, CE, LSR, CLK, output Q0, 
    F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  lut40012 \q_serializer/i1376_2_lut_3_lut ( .A(A0), .B(GNDI), .C(C0), .D(D0), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre20002 \q_serializer/data_out ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40012 ( input A, B, C, D, output Z );

  LUT4 #("0xF500") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module stream_enable_SLICE_141 ( input DI0, D0, CLK, output Q0, F0 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly;

  lut40013 \stream_enable.SLICE_141_K0 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \stream_enable/sync_ff2 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40013 ( input A, B, C, D, output Z );

  LUT4 #("0xFF00") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module q_demod_SLICE_143 ( input DI1, DI0, D1, D0, CE, LSR, CLK, output Q0, Q1, 
    F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40014 \q_demod.SLICE_143_K1 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40013 \q_demod.SLICE_143_K0 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), 
    .Z(F0));
  ffsre2 \q_demod/comb[0].delay_reg[0]__i10 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre2 \q_demod/comb[0].delay_reg[0]__i11 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40014 ( input A, B, C, D, output Z );

  LUT4 #("0xFF00") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module q_demod_SLICE_145 ( input DI1, DI0, C1, D0, CE, LSR, CLK, output Q0, Q1, 
    F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40015 \q_demod.SLICE_145_K1 ( .A(GNDI), .B(GNDI), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40013 \q_demod.SLICE_145_K0 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), 
    .Z(F0));
  ffsre2 \q_demod/comb[0].delay_reg[0]__i8 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre2 \q_demod/comb[0].delay_reg[0]__i9 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40015 ( input A, B, C, D, output Z );

  LUT4 #("0xF0F0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module q_demod_SLICE_147 ( input DI1, DI0, D1, D0, CE, LSR, CLK, output Q0, Q1, 
    F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40014 \q_demod.SLICE_147_K1 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40013 \q_demod.SLICE_147_K0 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), 
    .Z(F0));
  ffsre2 \q_demod/comb[0].delay_reg[0]__i6 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre2 \q_demod/comb[0].delay_reg[0]__i7 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module q_demod_SLICE_149 ( input DI1, DI0, C1, D0, CE, LSR, CLK, output Q0, Q1, 
    F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40015 \q_demod.SLICE_149_K1 ( .A(GNDI), .B(GNDI), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40013 \q_demod.SLICE_149_K0 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), 
    .Z(F0));
  ffsre2 \q_demod/comb[0].delay_reg[0]__i4 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre2 \q_demod/comb[0].delay_reg[0]__i5 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module q_demod_SLICE_151 ( input DI1, DI0, D1, D0, CE, LSR, CLK, output Q0, Q1, 
    F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40014 \q_demod.SLICE_151_K1 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40013 \q_demod.SLICE_151_K0 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), 
    .Z(F0));
  ffsre2 \q_demod/comb[0].delay_reg[0]__i2 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre2 \q_demod/comb[0].delay_reg[0]__i3 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module q_demod_SLICE_153 ( input DI1, DI0, D1, D0, CE, LSR, CLK, output Q0, Q1, 
    F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40014 \q_demod.SLICE_153_K1 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40013 \q_demod.SLICE_153_K0 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), 
    .Z(F0));
  ffsre2 \q_demod/comb[0].delay_reg[0]__i0 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre2 \q_demod/comb[0].delay_reg[0]__i1 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module q_demod_SLICE_154 ( input DI1, DI0, D1, D0, CE, LSR, CLK, output Q0, Q1, 
    F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40014 \q_demod.SLICE_154_K1 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40013 \q_demod.SLICE_154_K0 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), 
    .Z(F0));
  ffsre2 \q_demod/comb[2].delay_reg[0]__i1 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre2 \q_demod/comb[2].delay_reg[0]__i0 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module q_demod_SLICE_155 ( input DI1, DI0, D1, C0, CE, LSR, CLK, output Q0, Q1, 
    F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40014 \q_demod.SLICE_155_K1 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40016 \q_demod.SLICE_155_K0 ( .A(GNDI), .B(GNDI), .C(C0), .D(GNDI), 
    .Z(F0));
  ffsre2 \q_demod/comb[1].delay_reg[0]__i1 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre2 \q_demod/comb[1].delay_reg[0]__i0 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40016 ( input A, B, C, D, output Z );

  LUT4 #("0xF0F0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module q_demod_SLICE_158 ( input DI1, DI0, C1, D0, CE, LSR, CLK, output Q0, Q1, 
    F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40015 \q_demod.SLICE_158_K1 ( .A(GNDI), .B(GNDI), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40013 \q_demod.SLICE_158_K0 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), 
    .Z(F0));
  ffsre2 \q_demod/comb[1].delay_reg[0]__i10 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre2 \q_demod/comb[1].delay_reg[0]__i11 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module q_demod_SLICE_160 ( input DI1, DI0, D1, D0, CE, LSR, CLK, output Q0, Q1, 
    F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40014 \q_demod.SLICE_160_K1 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40013 \q_demod.SLICE_160_K0 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), 
    .Z(F0));
  ffsre2 \q_demod/comb[1].delay_reg[0]__i8 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre2 \q_demod/comb[1].delay_reg[0]__i9 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module q_demod_SLICE_162 ( input DI1, DI0, D1, D0, CE, LSR, CLK, output Q0, Q1, 
    F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40014 \q_demod.SLICE_162_K1 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40013 \q_demod.SLICE_162_K0 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), 
    .Z(F0));
  ffsre2 \q_demod/comb[1].delay_reg[0]__i6 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre2 \q_demod/comb[1].delay_reg[0]__i7 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module q_demod_SLICE_164 ( input DI1, DI0, D1, D0, CE, LSR, CLK, output Q0, Q1, 
    F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40014 \q_demod.SLICE_164_K1 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40013 \q_demod.SLICE_164_K0 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), 
    .Z(F0));
  ffsre2 \q_demod/comb[1].delay_reg[0]__i4 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre2 \q_demod/comb[1].delay_reg[0]__i5 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module q_demod_SLICE_166 ( input DI1, DI0, C1, D0, CE, LSR, CLK, output Q0, Q1, 
    F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40015 \q_demod.SLICE_166_K1 ( .A(GNDI), .B(GNDI), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40013 \q_demod.SLICE_166_K0 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), 
    .Z(F0));
  ffsre2 \q_demod/comb[1].delay_reg[0]__i2 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre2 \q_demod/comb[1].delay_reg[0]__i3 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module q_demod_SLICE_170 ( input DI1, DI0, C1, D0, CE, LSR, CLK, output Q0, Q1, 
    F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40015 \q_demod.SLICE_170_K1 ( .A(GNDI), .B(GNDI), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40013 \q_demod.SLICE_170_K0 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), 
    .Z(F0));
  ffsre2 \q_demod/comb[2].delay_reg[0]__i10 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre2 \q_demod/comb[2].delay_reg[0]__i11 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module q_demod_SLICE_172 ( input DI1, DI0, D1, D0, CE, LSR, CLK, output Q0, Q1, 
    F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40014 \q_demod.SLICE_172_K1 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40013 \q_demod.SLICE_172_K0 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), 
    .Z(F0));
  ffsre2 \q_demod/comb[2].delay_reg[0]__i8 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre2 \q_demod/comb[2].delay_reg[0]__i9 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module q_demod_SLICE_174 ( input DI1, DI0, D1, D0, CE, LSR, CLK, output Q0, Q1, 
    F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40014 \q_demod.SLICE_174_K1 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40013 \q_demod.SLICE_174_K0 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), 
    .Z(F0));
  ffsre2 \q_demod/comb[2].delay_reg[0]__i6 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre2 \q_demod/comb[2].delay_reg[0]__i7 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module q_demod_SLICE_176 ( input DI1, DI0, D1, D0, CE, LSR, CLK, output Q0, Q1, 
    F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40014 \q_demod.SLICE_176_K1 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40013 \q_demod.SLICE_176_K0 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), 
    .Z(F0));
  ffsre2 \q_demod/comb[2].delay_reg[0]__i4 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre2 \q_demod/comb[2].delay_reg[0]__i5 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module q_demod_SLICE_178 ( input DI1, DI0, D1, D0, CE, LSR, CLK, output Q0, Q1, 
    F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40014 \q_demod.SLICE_178_K1 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40013 \q_demod.SLICE_178_K0 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), 
    .Z(F0));
  ffsre2 \q_demod/comb[2].delay_reg[0]__i2 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre2 \q_demod/comb[2].delay_reg[0]__i3 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module i_demod_SLICE_182 ( input DI1, DI0, D1, D0, CE, LSR, CLK, output Q0, Q1, 
    F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40014 \i_demod.SLICE_182_K1 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40013 \i_demod.SLICE_182_K0 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), 
    .Z(F0));
  ffsre2 \i_demod/comb[0].delay_reg[0]__i10 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre2 \i_demod/comb[0].delay_reg[0]__i11 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module i_demod_SLICE_184 ( input DI1, DI0, D1, C0, CE, LSR, CLK, output Q0, Q1, 
    F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40014 \i_demod.SLICE_184_K1 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40016 \i_demod.SLICE_184_K0 ( .A(GNDI), .B(GNDI), .C(C0), .D(GNDI), 
    .Z(F0));
  ffsre2 \i_demod/comb[0].delay_reg[0]__i8 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre2 \i_demod/comb[0].delay_reg[0]__i9 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module i_demod_SLICE_186 ( input DI1, DI0, D1, D0, CE, LSR, CLK, output Q0, Q1, 
    F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40014 \i_demod.SLICE_186_K1 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40013 \i_demod.SLICE_186_K0 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), 
    .Z(F0));
  ffsre2 \i_demod/comb[0].delay_reg[0]__i6 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre2 \i_demod/comb[0].delay_reg[0]__i7 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module i_demod_SLICE_188 ( input DI1, DI0, D1, D0, CE, LSR, CLK, output Q0, Q1, 
    F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40014 \i_demod.SLICE_188_K1 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40013 \i_demod.SLICE_188_K0 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), 
    .Z(F0));
  ffsre2 \i_demod/comb[0].delay_reg[0]__i4 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre2 \i_demod/comb[0].delay_reg[0]__i5 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module i_demod_SLICE_190 ( input DI1, DI0, D1, D0, CE, LSR, CLK, output Q0, Q1, 
    F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40014 \i_demod.SLICE_190_K1 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40013 \i_demod.SLICE_190_K0 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), 
    .Z(F0));
  ffsre2 \i_demod/comb[0].delay_reg[0]__i2 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre2 \i_demod/comb[0].delay_reg[0]__i3 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module i_demod_SLICE_192 ( input DI1, DI0, D1, D0, CE, LSR, CLK, output Q0, Q1, 
    F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40014 \i_demod.SLICE_192_K1 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40013 \i_demod.SLICE_192_K0 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), 
    .Z(F0));
  ffsre2 \i_demod/comb[2].delay_reg[0]__i1 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre2 \i_demod/comb[2].delay_reg[0]__i0 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module i_demod_SLICE_193 ( input DI1, DI0, D1, D0, CE, LSR, CLK, output Q0, Q1, 
    F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40014 \i_demod.SLICE_193_K1 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40013 \i_demod.SLICE_193_K0 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), 
    .Z(F0));
  ffsre2 \i_demod/comb[0].delay_reg[0]__i0 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre2 \i_demod/comb[0].delay_reg[0]__i1 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module i_demod_SLICE_195 ( input DI1, DI0, D1, D0, CE, LSR, CLK, output Q0, Q1, 
    F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40014 \i_demod.SLICE_195_K1 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40013 \i_demod.SLICE_195_K0 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), 
    .Z(F0));
  ffsre2 \i_demod/comb[1].delay_reg[0]__i1 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre2 \i_demod/comb[1].delay_reg[0]__i0 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module i_demod_SLICE_197 ( input DI1, DI0, D1, C0, CE, LSR, CLK, output Q0, Q1, 
    F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40014 \i_demod.SLICE_197_K1 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40016 \i_demod.SLICE_197_K0 ( .A(GNDI), .B(GNDI), .C(C0), .D(GNDI), 
    .Z(F0));
  ffsre2 \i_demod/comb[2].delay_reg[0]__i10 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre2 \i_demod/comb[2].delay_reg[0]__i11 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module i_demod_SLICE_199 ( input DI1, DI0, C1, D0, CE, LSR, CLK, output Q0, Q1, 
    F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40015 \i_demod.SLICE_199_K1 ( .A(GNDI), .B(GNDI), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40013 \i_demod.SLICE_199_K0 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), 
    .Z(F0));
  ffsre2 \i_demod/comb[2].delay_reg[0]__i8 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre2 \i_demod/comb[2].delay_reg[0]__i9 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module i_demod_SLICE_201 ( input DI1, DI0, D1, D0, CE, LSR, CLK, output Q0, Q1, 
    F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40014 \i_demod.SLICE_201_K1 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40013 \i_demod.SLICE_201_K0 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), 
    .Z(F0));
  ffsre2 \i_demod/comb[2].delay_reg[0]__i6 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre2 \i_demod/comb[2].delay_reg[0]__i7 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module i_demod_SLICE_203 ( input DI1, DI0, D1, D0, CE, LSR, CLK, output Q0, Q1, 
    F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40014 \i_demod.SLICE_203_K1 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40013 \i_demod.SLICE_203_K0 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), 
    .Z(F0));
  ffsre2 \i_demod/comb[2].delay_reg[0]__i4 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre2 \i_demod/comb[2].delay_reg[0]__i5 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module i_demod_SLICE_205 ( input DI1, DI0, D1, D0, CE, LSR, CLK, output Q0, Q1, 
    F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40014 \i_demod.SLICE_205_K1 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40013 \i_demod.SLICE_205_K0 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), 
    .Z(F0));
  ffsre2 \i_demod/comb[2].delay_reg[0]__i2 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre2 \i_demod/comb[2].delay_reg[0]__i3 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module i_demod_SLICE_209 ( input DI1, DI0, D1, D0, CE, LSR, CLK, output Q0, Q1, 
    F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40014 \i_demod.SLICE_209_K1 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40013 \i_demod.SLICE_209_K0 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), 
    .Z(F0));
  ffsre2 \i_demod/comb[1].delay_reg[0]__i3 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre2 \i_demod/comb[1].delay_reg[0]__i2 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module i_demod_SLICE_211 ( input DI1, DI0, D1, D0, CE, LSR, CLK, output Q0, Q1, 
    F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40014 \i_demod.SLICE_211_K1 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40013 \i_demod.SLICE_211_K0 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), 
    .Z(F0));
  ffsre2 \i_demod/comb[1].delay_reg[0]__i5 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre2 \i_demod/comb[1].delay_reg[0]__i4 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module i_demod_SLICE_213 ( input DI1, DI0, D1, D0, CE, LSR, CLK, output Q0, Q1, 
    F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40014 \i_demod.SLICE_213_K1 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40013 \i_demod.SLICE_213_K0 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), 
    .Z(F0));
  ffsre2 \i_demod/comb[1].delay_reg[0]__i7 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre2 \i_demod/comb[1].delay_reg[0]__i6 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module i_demod_SLICE_215 ( input DI1, DI0, D1, D0, CE, LSR, CLK, output Q0, Q1, 
    F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40014 \i_demod.SLICE_215_K1 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40013 \i_demod.SLICE_215_K0 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), 
    .Z(F0));
  ffsre2 \i_demod/comb[1].delay_reg[0]__i9 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre2 \i_demod/comb[1].delay_reg[0]__i8 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module i_demod_SLICE_217 ( input DI1, DI0, D1, D0, CE, LSR, CLK, output Q0, Q1, 
    F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40014 \i_demod.SLICE_217_K1 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40013 \i_demod.SLICE_217_K0 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), 
    .Z(F0));
  ffsre2 \i_demod/comb[1].delay_reg[0]__i11 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre2 \i_demod/comb[1].delay_reg[0]__i10 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_220 ( input DI0, D0, LSR, CLK, output Q0, F0 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, LSR_dly;

  lut40013 SLICE_220_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre20017 \led_blink/led ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module ffsre20017 ( input D0, SP, CK, LSR, output Q );

  FD1P3XZ INST01( .D(D0), .SP(SP), .CK(CK), .SR(LSR), .Q(Q));
  defparam INST01.REGSET = "SET";
  defparam INST01.SRMODE = "CE_OVER_LSR";
endmodule

module led_blink_SLICE_221 ( input DI1, DI0, D1, C1, D0, C0, CE, LSR, CLK, 
    output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40018 \led_blink/i1395_2_lut ( .A(GNDI), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40019 \led_blink/i2902_2_lut ( .A(GNDI), .B(GNDI), .C(C0), .D(D0), .Z(F0));
  ffsre20017 \led_blink/current_state_i0 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre2 \led_blink/current_state_i1 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40018 ( input A, B, C, D, output Z );

  LUT4 #("0x0F00") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40019 ( input A, B, C, D, output Z );

  LUT4 #("0x0FFF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module i_rising_sync_SLICE_223 ( input DI1, DI0, D1, C1, B1, C0, LSR, CLK, 
    output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40020 \i_rising_sync/i13_3_lut ( .A(GNDI), .B(B1), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40021 \i_rising_sync/i14_1_lut ( .A(GNDI), .B(GNDI), .C(C0), .D(GNDI), 
    .Z(F0));
  ffsre20002 \i_rising_sync/data_out ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre20002 \i_rising_sync/rd_ptr_c ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40020 ( input A, B, C, D, output Z );

  LUT4 #("0xCCF0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40021 ( input A, B, C, D, output Z );

  LUT4 #("0x0F0F") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_226 ( input DI0, D0, CE, LSR, CLK, output Q0, F0 );
  wire   GNDI, CLK_NOTIN, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  lut40013 SLICE_226_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre20002 \i_rising_sync/fifo_i1 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module inverter ( input I, output Z );

  INV INST1( .A(I), .Z(Z));
endmodule

module SLICE_227 ( input DI0, D0, CE, LSR, CLK, output Q0, F0 );
  wire   GNDI, CLK_NOTIN, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  lut40013 SLICE_227_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre20002 \i_rising_sync/fifo_i0 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module i_serializer_SLICE_228 ( input DI1, DI0, D1, C1, B1, C0, B0, CE, LSR, 
    CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut4 \i_serializer/mux_23_i15_3_lut ( .A(GNDI), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40022 \i_serializer/i1368_2_lut ( .A(GNDI), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  ffsre20002 \i_serializer/shift_reg_i14 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre20002 \i_serializer/shift_reg_i15 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40022 ( input A, B, C, D, output Z );

  LUT4 #("0x0C0C") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module i_serializer_SLICE_230 ( input DI1, DI0, D1, C1, B1, D0, C0, B0, CE, 
    LSR, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut4 \i_serializer/mux_23_i13_3_lut ( .A(GNDI), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40001 \i_serializer/mux_23_i14_3_lut ( .A(GNDI), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  ffsre20002 \i_serializer/shift_reg_i12 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre20002 \i_serializer/shift_reg_i13 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module i_serializer_SLICE_232 ( input DI1, DI0, D1, C1, B1, D0, C0, A0, CE, 
    LSR, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut4 \i_serializer/mux_23_i11_3_lut ( .A(GNDI), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40006 \i_serializer/mux_23_i12_3_lut ( .A(A0), .B(GNDI), .C(C0), .D(D0), 
    .Z(F0));
  ffsre20002 \i_serializer/shift_reg_i10 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre20002 \i_serializer/shift_reg_i11 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module i_serializer_SLICE_234 ( input DI1, DI0, D1, C1, A1, D0, C0, B0, CE, 
    LSR, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40008 \i_serializer/mux_23_i9_3_lut ( .A(A1), .B(GNDI), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40009 \i_serializer/mux_23_i10_3_lut ( .A(GNDI), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  ffsre20002 \i_serializer/shift_reg_i8 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre20002 \i_serializer/shift_reg_i9 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module i_serializer_SLICE_236 ( input DI1, DI0, D1, C1, B1, D0, C0, B0, CE, 
    LSR, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40023 \i_serializer/mux_23_i7_3_lut ( .A(GNDI), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40009 \i_serializer/mux_23_i8_3_lut ( .A(GNDI), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  ffsre20002 \i_serializer/shift_reg_i6 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre20002 \i_serializer/shift_reg_i7 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40023 ( input A, B, C, D, output Z );

  LUT4 #("0xFC0C") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module i_serializer_SLICE_238 ( input DI1, DI0, D1, C1, B1, D0, C0, A0, CE, 
    LSR, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut4 \i_serializer/mux_23_i5_3_lut ( .A(GNDI), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40006 \i_serializer/mux_23_i6_3_lut ( .A(A0), .B(GNDI), .C(C0), .D(D0), 
    .Z(F0));
  ffsre20002 \i_serializer/shift_reg_i4 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre20002 \i_serializer/shift_reg_i5 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module i_serializer_SLICE_240 ( input DI1, DI0, D1, C1, B1, D0, C0, A0, CE, 
    LSR, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut4 \i_serializer/mux_23_i3_3_lut ( .A(GNDI), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40006 \i_serializer/mux_23_i4_3_lut ( .A(A0), .B(GNDI), .C(C0), .D(D0), 
    .Z(F0));
  ffsre20002 \i_serializer/shift_reg_i2 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre20002 \i_serializer/shift_reg_i3 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module i_serializer_SLICE_242 ( input DI1, DI0, D1, C1, B1, D0, C0, A0, CE, 
    LSR, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut4 \i_serializer/mux_23_i1_3_lut ( .A(GNDI), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40006 \i_serializer/mux_23_i2_3_lut ( .A(A0), .B(GNDI), .C(C0), .D(D0), 
    .Z(F0));
  ffsre20002 \i_serializer/shift_reg_i0 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre20002 \i_serializer/shift_reg_i1 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module i_serializer_SLICE_245 ( input DI1, DI0, D1, C1, D0, B0, CE, LSR, CLK, 
    output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40003 \i_serializer/i1387_2_lut ( .A(GNDI), .B(GNDI), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40004 \i_serializer/i1369_2_lut ( .A(GNDI), .B(B0), .C(GNDI), .D(D0), 
    .Z(F0));
  ffsre20002 \i_serializer/bit_counter_i5 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre20002 \i_serializer/bit_counter_i4 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module i_serializer_SLICE_246 ( input DI1, DI0, D1, C1, D0, B0, CE, LSR, CLK, 
    output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40003 \i_serializer/i1385_2_lut ( .A(GNDI), .B(GNDI), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40011 \i_serializer/i1390_2_lut ( .A(GNDI), .B(B0), .C(GNDI), .D(D0), 
    .Z(F0));
  ffsre20002 \i_serializer/bit_counter_i0 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre20002 \i_serializer/bit_counter_i1 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module i_serializer_SLICE_247 ( input DI1, DI0, D1, C1, D0, B0, CE, LSR, CLK, 
    output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40003 \i_serializer/i1388_2_lut ( .A(GNDI), .B(GNDI), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40011 \i_serializer/i1389_2_lut ( .A(GNDI), .B(B0), .C(GNDI), .D(D0), 
    .Z(F0));
  ffsre20002 \i_serializer/bit_counter_i3 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  ffsre20002 \i_serializer/bit_counter_i2 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module i_serializer_SLICE_251 ( input DI0, D0, C0, CE, LSR, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  lut40024 \i_serializer/i1365_2_lut ( .A(GNDI), .B(GNDI), .C(C0), .D(D0), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre20002 \i_serializer/data_out ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40024 ( input A, B, C, D, output Z );

  LUT4 #("0xF000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module q_rising_sync_SLICE_252 ( input DI1, DI0, D1, C1, B1, C0, LSR, CLK, 
    output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40025 \q_rising_sync/i13_3_lut ( .A(GNDI), .B(B1), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40021 \q_rising_sync/i14_1_lut ( .A(GNDI), .B(GNDI), .C(C0), .D(GNDI), 
    .Z(F0));
  ffsre20002 \q_rising_sync/data_out ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre20002 \q_rising_sync/rd_ptr_c ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40025 ( input A, B, C, D, output Z );

  LUT4 #("0xF0CC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_255 ( input DI0, D0, CE, LSR, CLK, output Q0, F0 );
  wire   GNDI, CLK_NOTIN, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  lut40013 SLICE_255_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre20002 \q_rising_sync/fifo_i1 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_256 ( input DI0, D0, CE, LSR, CLK, output Q0, F0 );
  wire   GNDI, CLK_NOTIN, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  lut40013 SLICE_256_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre20002 \q_rising_sync/fifo_i0 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_257 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40026 i952_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40027 i2358_4_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40026 ( input A, B, C, D, output Z );

  LUT4 #("0x9F99") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40027 ( input A, B, C, D, output Z );

  LUT4 #("0xDCCE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_259 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40028 i102_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40029 i2_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40028 ( input A, B, C, D, output Z );

  LUT4 #("0xCDCC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40029 ( input A, B, C, D, output Z );

  LUT4 #("0x4044") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_260 ( input D1, C1, B1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40030 i5_3_lut( .A(GNDI), .B(B1), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40031 i4_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40030 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40031 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_261 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40032 i34_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40033 i2354_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40032 ( input A, B, C, D, output Z );

  LUT4 #("0x4602") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40033 ( input A, B, C, D, output Z );

  LUT4 #("0xAA80") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module led_blink_SLICE_262 ( input D1, C1, B1, A1, D0, C0, output F0, F1 );
  wire   GNDI;

  lut40034 \led_blink/i2622_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40035 \led_blink/i1_2_lut_adj_7 ( .A(GNDI), .B(GNDI), .C(C0), .D(D0), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40034 ( input A, B, C, D, output Z );

  LUT4 #("0x0F8F") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40035 ( input A, B, C, D, output Z );

  LUT4 #("0xFFF0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_265 ( input D0, C0, B0, output F0 );
  wire   GNDI;

  lut40036 i2_3_lut( .A(GNDI), .B(B0), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40036 ( input A, B, C, D, output Z );

  LUT4 #("0x3000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_266 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40037 LessThan_213_i52_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40038 i2621_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40037 ( input A, B, C, D, output Z );

  LUT4 #("0x3371") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40038 ( input A, B, C, D, output Z );

  LUT4 #("0x1033") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module q_serializer_SLICE_267 ( input D1, C1, A1, D0, C0, B0, A0, output F0, 
    F1 );
  wire   GNDI;

  lut40039 \q_serializer/i5_3_lut ( .A(A1), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40031 \q_serializer/i4_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40039 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module q_serializer_SLICE_268 ( input D0, C0, B0, A0, output F0 );

  lut40040 \q_serializer.i1_2_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40040 ( input A, B, C, D, output Z );

  LUT4 #("0xFFEF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module led_blink_SLICE_270 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40041 \led_blink/i2859_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40042 \led_blink.i2610_2_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40041 ( input A, B, C, D, output Z );

  LUT4 #("0xBFAE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40042 ( input A, B, C, D, output Z );

  LUT4 #("0x0010") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module led_blink_SLICE_272 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40043 \led_blink/i3_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40044 \led_blink/i1496_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40043 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40044 ( input A, B, C, D, output Z );

  LUT4 #("0xCCC8") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module q_demod_SLICE_273 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40045 \q_demod/i2899_2_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40046 \q_demod/i4_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40045 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFD") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40046 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module q_demod_SLICE_274 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40047 \i_demod/i229_2_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40048 \q_demod/i236_2_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40047 ( input A, B, C, D, output Z );

  LUT4 #("0xCCCD") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40048 ( input A, B, C, D, output Z );

  LUT4 #("0xCCCD") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module q_demod_SLICE_275 ( input D1, C1, B1, A1, D0, C0, A0, output F0, F1 );
  wire   GNDI;

  lut40049 \q_demod/i2_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40050 \q_demod/i3_3_lut ( .A(A0), .B(GNDI), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40049 ( input A, B, C, D, output Z );

  LUT4 #("0xFEEE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40050 ( input A, B, C, D, output Z );

  LUT4 #("0xA000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module i_demod_SLICE_277 ( input D1, C1, B1, A1, D0, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40049 \i_demod/i2_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40051 \i_demod/i3_3_lut ( .A(GNDI), .B(B0), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40051 ( input A, B, C, D, output Z );

  LUT4 #("0xC000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module i_demod_SLICE_279 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40052 \i_demod/i2879_2_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40053 \i_demod/i4_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40052 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFB") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40053 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module i_serializer_SLICE_282 ( input D1, C1, B1, A1, D0, C0, B0, A0, output 
    F0, F1 );

  lut40045 \i_serializer/i1_2_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40054 \i_serializer/i4_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40054 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module led_blink_SLICE_283 ( input D1, C1, B1, A1, D0, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40055 \led_blink/i1_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40056 \led_blink/i1_2_lut_3_lut ( .A(GNDI), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40055 ( input A, B, C, D, output Z );

  LUT4 #("0xFEF0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40056 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module led_blink_SLICE_285 ( input D0, C0, output F0 );
  wire   GNDI;

  lut40024 \led_blink/i1_2_lut ( .A(GNDI), .B(GNDI), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module led_blink_SLICE_286 ( input D1, C1, B1, A1, D0, C0, output F0, F1 );
  wire   GNDI;

  lut40057 \led_blink/i1_4_lut_adj_6 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40024 \led_blink/i1_2_lut_adj_5 ( .A(GNDI), .B(GNDI), .C(C0), .D(D0), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40057 ( input A, B, C, D, output Z );

  LUT4 #("0xEAAA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module led_blink_SLICE_287 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40058 \led_blink/i2619_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40059 \led_blink/i2620_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40058 ( input A, B, C, D, output Z );

  LUT4 #("0xA800") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40059 ( input A, B, C, D, output Z );

  LUT4 #("0x8000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module led_blink_SLICE_289 ( input D1, C1, B1, A1, D0, C0, output F0, F1 );
  wire   GNDI;

  lut40060 \led_blink/i1501_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40061 \led_blink/i396_2_lut ( .A(GNDI), .B(GNDI), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40060 ( input A, B, C, D, output Z );

  LUT4 #("0xEFEA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40061 ( input A, B, C, D, output Z );

  LUT4 #("0xF0FF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module led_blink_SLICE_292 ( input D0, C0, output F0 );
  wire   GNDI;

  lut40035 \led_blink/i1_2_lut_adj_4 ( .A(GNDI), .B(GNDI), .C(C0), .D(D0), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module q_demod_SLICE_294 ( input D0, B0, output F0 );
  wire   GNDI;

  lut40011 \q_demod/i2_2_lut ( .A(GNDI), .B(B0), .C(GNDI), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module i_demod_SLICE_295 ( input D0, C0, output F0 );
  wire   GNDI;

  lut40024 \i_demod/i2_2_lut ( .A(GNDI), .B(GNDI), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module sx1257_mgmt_mosi_mux_SLICE_296 ( input D1, C1, D0, B0, output F0, F1 );
  wire   GNDI;

  lut40062 \sx1257_mgmt_sck_mux/i1360_2_lut ( .A(GNDI), .B(GNDI), .C(C1), 
    .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40063 \sx1257_mgmt_mosi_mux/i1361_2_lut ( .A(GNDI), .B(B0), .C(GNDI), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40062 ( input A, B, C, D, output Z );

  LUT4 #("0xFFF0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40063 ( input A, B, C, D, output Z );

  LUT4 #("0xFFCC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module led_blink_SLICE_297 ( input D0, C0, B0, A0, output F0 );

  lut40064 \led_blink/i2611_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40064 ( input A, B, C, D, output Z );

  LUT4 #("0xFEAA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_301 ( output F0 );
  wire   GNDI;

  lut40065 i2( .A(GNDI), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
  endspecify

endmodule

module lut40065 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_303 ( output F0 );
  wire   GNDI;

  lut40066 i1( .A(GNDI), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
  endspecify

endmodule

module lut40066 ( input A, B, C, D, output Z );

  LUT4 #("0x0000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module q_serializer_SLICE_305 ( input DI1, D1, C1, A1, D0, C0, LSR, CLK, 
    output Q1, F0, F1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, LSR_dly;

  lut40039 \q_serializer.SLICE_305_K1 ( .A(A1), .B(GNDI), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40067 \q_serializer/i1409_2_lut ( .A(GNDI), .B(GNDI), .C(C0), .D(D0), 
    .Z(F0));
  ffsre20002 \q_serializer/clk_out_enable_c ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40067 ( input A, B, C, D, output Z );

  LUT4 #("0xF000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module sx1257_mgmt_nss_mux_SLICE_306 ( input D1, C1, D0, B0, output F0, F1 );
  wire   GNDI;

  lut40062 \sx1257_mgmt_miso_mux/i1362_2_lut ( .A(GNDI), .B(GNDI), .C(C1), 
    .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40063 \sx1257_mgmt_nss_mux/i1363_2_lut ( .A(GNDI), .B(B0), .C(GNDI), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module q_demod_SLICE_308 ( input D0, output F0 );
  wire   GNDI;

  lut40068 \q_demod/sub_288_inv_0_i6_1_lut ( .A(GNDI), .B(GNDI), .C(GNDI), 
    .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40068 ( input A, B, C, D, output Z );

  LUT4 #("0x00FF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module q_demod_SLICE_309 ( input D1, D0, output F0, F1 );
  wire   GNDI;

  lut40069 \q_demod/sub_288_inv_0_i2_1_lut ( .A(GNDI), .B(GNDI), .C(GNDI), 
    .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40068 \q_demod/sub_288_inv_0_i5_1_lut ( .A(GNDI), .B(GNDI), .C(GNDI), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40069 ( input A, B, C, D, output Z );

  LUT4 #("0x00FF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module q_demod_SLICE_310 ( input D0, output F0 );
  wire   GNDI;

  lut40068 \q_demod/sub_288_inv_0_i8_1_lut ( .A(GNDI), .B(GNDI), .C(GNDI), 
    .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module q_demod_SLICE_311 ( input D0, output F0 );
  wire   GNDI;

  lut40068 \q_demod/sub_288_inv_0_i7_1_lut ( .A(GNDI), .B(GNDI), .C(GNDI), 
    .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module q_demod_SLICE_312 ( input D0, output F0 );
  wire   GNDI;

  lut40068 \q_demod/sub_288_inv_0_i10_1_lut ( .A(GNDI), .B(GNDI), .C(GNDI), 
    .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module q_demod_SLICE_313 ( input D0, output F0 );
  wire   GNDI;

  lut40068 \q_demod/sub_288_inv_0_i9_1_lut ( .A(GNDI), .B(GNDI), .C(GNDI), 
    .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module q_demod_SLICE_314 ( input D1, D0, output F0, F1 );
  wire   GNDI;

  lut40069 \q_demod/sub_288_inv_0_i11_1_lut ( .A(GNDI), .B(GNDI), .C(GNDI), 
    .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40068 \q_demod/sub_288_inv_0_i12_1_lut ( .A(GNDI), .B(GNDI), .C(GNDI), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module q_demod_SLICE_316 ( input DI1, C1, D0, CE, LSR, CLK, output Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, CE_dly, LSR_dly;

  lut40015 \q_demod.SLICE_316_K1 ( .A(GNDI), .B(GNDI), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40068 \q_demod/sub_288_inv_0_i13_1_lut ( .A(GNDI), .B(GNDI), .C(GNDI), 
    .D(D0), .Z(F0));
  ffsre2 \q_demod/comb[2].delay_reg[0]__i12 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module q_demod_SLICE_317 ( input D1, D0, output F0, F1 );
  wire   GNDI;

  lut40069 \q_demod/sub_180_inv_0_i7_1_lut ( .A(GNDI), .B(GNDI), .C(GNDI), 
    .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40068 \q_demod/sub_180_inv_0_i2_1_lut ( .A(GNDI), .B(GNDI), .C(GNDI), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module q_demod_SLICE_318 ( input D0, output F0 );
  wire   GNDI;

  lut40068 \q_demod/sub_180_inv_0_i1_1_lut ( .A(GNDI), .B(GNDI), .C(GNDI), 
    .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module q_demod_SLICE_319 ( input D1, D0, output F0, F1 );
  wire   GNDI;

  lut40069 \q_demod/sub_180_inv_0_i6_1_lut ( .A(GNDI), .B(GNDI), .C(GNDI), 
    .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40068 \q_demod/sub_180_inv_0_i4_1_lut ( .A(GNDI), .B(GNDI), .C(GNDI), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module q_demod_SLICE_320 ( input D1, D0, output F0, F1 );
  wire   GNDI;

  lut40069 \q_demod/sub_180_inv_0_i5_1_lut ( .A(GNDI), .B(GNDI), .C(GNDI), 
    .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40068 \q_demod/sub_180_inv_0_i3_1_lut ( .A(GNDI), .B(GNDI), .C(GNDI), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module q_demod_SLICE_323 ( input D0, output F0 );
  wire   GNDI;

  lut40068 \q_demod/sub_180_inv_0_i8_1_lut ( .A(GNDI), .B(GNDI), .C(GNDI), 
    .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module q_demod_SLICE_325 ( input D0, output F0 );
  wire   GNDI;

  lut40068 \q_demod/sub_180_inv_0_i10_1_lut ( .A(GNDI), .B(GNDI), .C(GNDI), 
    .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module q_demod_SLICE_326 ( input D1, D0, output F0, F1 );
  wire   GNDI;

  lut40069 \q_demod/sub_180_inv_0_i12_1_lut ( .A(GNDI), .B(GNDI), .C(GNDI), 
    .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40068 \q_demod/sub_180_inv_0_i9_1_lut ( .A(GNDI), .B(GNDI), .C(GNDI), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module q_demod_SLICE_328 ( input D0, output F0 );
  wire   GNDI;

  lut40068 \q_demod/sub_180_inv_0_i11_1_lut ( .A(GNDI), .B(GNDI), .C(GNDI), 
    .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module q_demod_SLICE_329 ( input DI1, D1, D0, CE, LSR, CLK, output Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, CE_dly, LSR_dly;

  lut40014 \q_demod.SLICE_329_K1 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40068 \q_demod/sub_180_inv_0_i13_1_lut ( .A(GNDI), .B(GNDI), .C(GNDI), 
    .D(D0), .Z(F0));
  ffsre2 \q_demod/comb[0].delay_reg[0]__i12 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module q_demod_SLICE_330 ( input D1, D0, output F0, F1 );
  wire   GNDI;

  lut40069 \q_demod/sub_234_inv_0_i4_1_lut ( .A(GNDI), .B(GNDI), .C(GNDI), 
    .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40068 \q_demod/sub_234_inv_0_i2_1_lut ( .A(GNDI), .B(GNDI), .C(GNDI), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module q_demod_SLICE_331 ( input D1, D0, output F0, F1 );
  wire   GNDI;

  lut40069 \q_demod/sub_234_inv_0_i3_1_lut ( .A(GNDI), .B(GNDI), .C(GNDI), 
    .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40068 \q_demod/sub_234_inv_0_i1_1_lut ( .A(GNDI), .B(GNDI), .C(GNDI), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module q_demod_SLICE_334 ( input D1, D0, output F0, F1 );
  wire   GNDI;

  lut40069 \q_demod/sub_234_inv_0_i5_1_lut ( .A(GNDI), .B(GNDI), .C(GNDI), 
    .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40068 \q_demod/sub_234_inv_0_i6_1_lut ( .A(GNDI), .B(GNDI), .C(GNDI), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module q_demod_SLICE_336 ( input D1, D0, output F0, F1 );
  wire   GNDI;

  lut40069 \q_demod/sub_234_inv_0_i7_1_lut ( .A(GNDI), .B(GNDI), .C(GNDI), 
    .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40068 \q_demod/sub_234_inv_0_i8_1_lut ( .A(GNDI), .B(GNDI), .C(GNDI), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module q_demod_SLICE_338 ( input D1, D0, output F0, F1 );
  wire   GNDI;

  lut40069 \q_demod/sub_234_inv_0_i11_1_lut ( .A(GNDI), .B(GNDI), .C(GNDI), 
    .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40068 \q_demod/sub_234_inv_0_i10_1_lut ( .A(GNDI), .B(GNDI), .C(GNDI), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module q_demod_SLICE_339 ( input D0, output F0 );
  wire   GNDI;

  lut40068 \q_demod/sub_234_inv_0_i9_1_lut ( .A(GNDI), .B(GNDI), .C(GNDI), 
    .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module q_demod_SLICE_340 ( input D0, output F0 );
  wire   GNDI;

  lut40068 \q_demod/sub_234_inv_0_i12_1_lut ( .A(GNDI), .B(GNDI), .C(GNDI), 
    .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module q_demod_SLICE_342 ( input DI1, D1, D0, CE, LSR, CLK, output Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, CE_dly, LSR_dly;

  lut40014 \q_demod.SLICE_342_K1 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40068 \q_demod/sub_234_inv_0_i13_1_lut ( .A(GNDI), .B(GNDI), .C(GNDI), 
    .D(D0), .Z(F0));
  ffsre2 \q_demod/comb[1].delay_reg[0]__i12 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module q_demod_SLICE_343 ( input D0, output F0 );
  wire   GNDI;

  lut40068 \q_demod/i163_1_lut ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module q_demod_SLICE_345 ( input D0, output F0 );
  wire   GNDI;

  lut40068 \q_demod/sub_288_inv_0_i1_1_lut ( .A(GNDI), .B(GNDI), .C(GNDI), 
    .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module q_demod_SLICE_346 ( input D1, D0, output F0, F1 );
  wire   GNDI;

  lut40069 \q_demod/sub_288_inv_0_i3_1_lut ( .A(GNDI), .B(GNDI), .C(GNDI), 
    .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40068 \q_demod/sub_288_inv_0_i4_1_lut ( .A(GNDI), .B(GNDI), .C(GNDI), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module i_demod_SLICE_348 ( input D1, D0, output F0, F1 );
  wire   GNDI;

  lut40069 \i_demod/sub_234_inv_0_i6_1_lut ( .A(GNDI), .B(GNDI), .C(GNDI), 
    .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40068 \i_demod/sub_180_inv_0_i2_1_lut ( .A(GNDI), .B(GNDI), .C(GNDI), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module i_demod_SLICE_349 ( input D0, output F0 );
  wire   GNDI;

  lut40068 \i_demod/sub_180_inv_0_i1_1_lut ( .A(GNDI), .B(GNDI), .C(GNDI), 
    .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module i_demod_SLICE_350 ( input D0, output F0 );
  wire   GNDI;

  lut40068 \i_demod/sub_180_inv_0_i4_1_lut ( .A(GNDI), .B(GNDI), .C(GNDI), 
    .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module i_demod_SLICE_351 ( input D1, D0, output F0, F1 );
  wire   GNDI;

  lut40069 \i_demod/sub_180_inv_0_i7_1_lut ( .A(GNDI), .B(GNDI), .C(GNDI), 
    .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40068 \i_demod/sub_180_inv_0_i3_1_lut ( .A(GNDI), .B(GNDI), .C(GNDI), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module i_demod_SLICE_352 ( input D0, output F0 );
  wire   GNDI;

  lut40068 \i_demod/sub_180_inv_0_i6_1_lut ( .A(GNDI), .B(GNDI), .C(GNDI), 
    .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module i_demod_SLICE_353 ( input D0, output F0 );
  wire   GNDI;

  lut40068 \i_demod/sub_180_inv_0_i5_1_lut ( .A(GNDI), .B(GNDI), .C(GNDI), 
    .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module i_demod_SLICE_354 ( input D0, output F0 );
  wire   GNDI;

  lut40068 \i_demod/sub_180_inv_0_i8_1_lut ( .A(GNDI), .B(GNDI), .C(GNDI), 
    .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module i_demod_SLICE_356 ( input D1, D0, output F0, F1 );
  wire   GNDI;

  lut40069 \i_demod/sub_180_inv_0_i9_1_lut ( .A(GNDI), .B(GNDI), .C(GNDI), 
    .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40068 \i_demod/sub_180_inv_0_i10_1_lut ( .A(GNDI), .B(GNDI), .C(GNDI), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module i_demod_SLICE_358 ( input D1, D0, output F0, F1 );
  wire   GNDI;

  lut40069 \i_demod/sub_180_inv_0_i11_1_lut ( .A(GNDI), .B(GNDI), .C(GNDI), 
    .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40068 \i_demod/sub_180_inv_0_i12_1_lut ( .A(GNDI), .B(GNDI), .C(GNDI), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module i_demod_SLICE_360 ( input DI1, C1, D0, CE, LSR, CLK, output Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, CE_dly, LSR_dly;

  lut40015 \i_demod.SLICE_360_K1 ( .A(GNDI), .B(GNDI), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40068 \i_demod/sub_180_inv_0_i13_1_lut ( .A(GNDI), .B(GNDI), .C(GNDI), 
    .D(D0), .Z(F0));
  ffsre2 \i_demod/comb[0].delay_reg[0]__i12 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module i_demod_SLICE_361 ( input D0, output F0 );
  wire   GNDI;

  lut40068 \i_demod/sub_288_inv_0_i2_1_lut ( .A(GNDI), .B(GNDI), .C(GNDI), 
    .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module i_demod_SLICE_362 ( input D0, output F0 );
  wire   GNDI;

  lut40068 \i_demod/sub_288_inv_0_i1_1_lut ( .A(GNDI), .B(GNDI), .C(GNDI), 
    .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module i_demod_SLICE_363 ( input D0, output F0 );
  wire   GNDI;

  lut40068 \i_demod/i169_1_lut ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module i_demod_SLICE_364 ( input D0, output F0 );
  wire   GNDI;

  lut40068 \i_demod/sub_234_inv_0_i2_1_lut ( .A(GNDI), .B(GNDI), .C(GNDI), 
    .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module i_demod_SLICE_365 ( input D0, output F0 );
  wire   GNDI;

  lut40068 \i_demod/sub_234_inv_0_i1_1_lut ( .A(GNDI), .B(GNDI), .C(GNDI), 
    .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module i_demod_SLICE_366 ( input D1, D0, output F0, F1 );
  wire   GNDI;

  lut40069 \i_demod/sub_234_inv_0_i5_1_lut ( .A(GNDI), .B(GNDI), .C(GNDI), 
    .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40068 \i_demod/sub_234_inv_0_i4_1_lut ( .A(GNDI), .B(GNDI), .C(GNDI), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module i_demod_SLICE_367 ( input D0, output F0 );
  wire   GNDI;

  lut40068 \i_demod/sub_234_inv_0_i3_1_lut ( .A(GNDI), .B(GNDI), .C(GNDI), 
    .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module i_demod_SLICE_370 ( input D0, output F0 );
  wire   GNDI;

  lut40068 \i_demod/sub_234_inv_0_i8_1_lut ( .A(GNDI), .B(GNDI), .C(GNDI), 
    .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module i_demod_SLICE_371 ( input D0, output F0 );
  wire   GNDI;

  lut40068 \i_demod/sub_234_inv_0_i7_1_lut ( .A(GNDI), .B(GNDI), .C(GNDI), 
    .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module i_demod_SLICE_372 ( input D0, output F0 );
  wire   GNDI;

  lut40068 \i_demod/sub_234_inv_0_i10_1_lut ( .A(GNDI), .B(GNDI), .C(GNDI), 
    .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module i_demod_SLICE_373 ( input D0, output F0 );
  wire   GNDI;

  lut40068 \i_demod/sub_234_inv_0_i9_1_lut ( .A(GNDI), .B(GNDI), .C(GNDI), 
    .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module i_demod_SLICE_374 ( input D0, output F0 );
  wire   GNDI;

  lut40068 \i_demod/sub_234_inv_0_i12_1_lut ( .A(GNDI), .B(GNDI), .C(GNDI), 
    .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module i_demod_SLICE_375 ( input D0, output F0 );
  wire   GNDI;

  lut40068 \i_demod/sub_234_inv_0_i11_1_lut ( .A(GNDI), .B(GNDI), .C(GNDI), 
    .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module i_demod_SLICE_376 ( input DI1, C1, D0, CE, LSR, CLK, output Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, CE_dly, LSR_dly;

  lut40015 \i_demod.SLICE_376_K1 ( .A(GNDI), .B(GNDI), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40068 \i_demod/sub_234_inv_0_i13_1_lut ( .A(GNDI), .B(GNDI), .C(GNDI), 
    .D(D0), .Z(F0));
  ffsre2 \i_demod/comb[1].delay_reg[0]__i12 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module i_demod_SLICE_377 ( input D0, output F0 );
  wire   GNDI;

  lut40068 \i_demod/sub_288_inv_0_i4_1_lut ( .A(GNDI), .B(GNDI), .C(GNDI), 
    .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module i_demod_SLICE_378 ( input D1, D0, output F0, F1 );
  wire   GNDI;

  lut40069 \i_demod/sub_288_inv_0_i7_1_lut ( .A(GNDI), .B(GNDI), .C(GNDI), 
    .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40068 \i_demod/sub_288_inv_0_i3_1_lut ( .A(GNDI), .B(GNDI), .C(GNDI), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module i_demod_SLICE_379 ( input D0, output F0 );
  wire   GNDI;

  lut40068 \i_demod/sub_288_inv_0_i6_1_lut ( .A(GNDI), .B(GNDI), .C(GNDI), 
    .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module i_demod_SLICE_380 ( input D0, output F0 );
  wire   GNDI;

  lut40068 \i_demod/sub_288_inv_0_i5_1_lut ( .A(GNDI), .B(GNDI), .C(GNDI), 
    .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module i_demod_SLICE_381 ( input C0, output F0 );
  wire   GNDI;

  lut40021 \i_demod/sub_288_inv_0_i8_1_lut ( .A(GNDI), .B(GNDI), .C(C0), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module i_demod_SLICE_383 ( input C1, D0, output F0, F1 );
  wire   GNDI;

  lut40070 \i_demod/sub_288_inv_0_i9_1_lut ( .A(GNDI), .B(GNDI), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40068 \i_demod/sub_288_inv_0_i10_1_lut ( .A(GNDI), .B(GNDI), .C(GNDI), 
    .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40070 ( input A, B, C, D, output Z );

  LUT4 #("0x0F0F") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module i_demod_SLICE_385 ( input D1, D0, output F0, F1 );
  wire   GNDI;

  lut40069 \i_demod/sub_288_inv_0_i11_1_lut ( .A(GNDI), .B(GNDI), .C(GNDI), 
    .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40068 \i_demod/sub_288_inv_0_i12_1_lut ( .A(GNDI), .B(GNDI), .C(GNDI), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module i_demod_SLICE_387 ( input DI1, D1, D0, CE, LSR, CLK, output Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, CE_dly, LSR_dly;

  lut40014 \i_demod.SLICE_387_K1 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40068 \i_demod/sub_288_inv_0_i13_1_lut ( .A(GNDI), .B(GNDI), .C(GNDI), 
    .D(D0), .Z(F0));
  ffsre2 \i_demod/comb[2].delay_reg[0]__i12 ( .D0(DI1_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module i_rising_sync_SLICE_388 ( input DI1, D1, C0, LSR, CLK, output Q1, F0, 
    F1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, LSR_dly;

  lut40069 \i_rising_sync.SLICE_388_K1 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40021 \i_rising_sync/i9_1_lut ( .A(GNDI), .B(GNDI), .C(C0), .D(GNDI), 
    .Z(F0));
  ffsre20071 \i_rising_sync/wr_ptr_c ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_NOTIN), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module ffsre20071 ( input D0, SP, CK, LSR, output Q );

  FD1P3XZ INST01( .D(D0), .SP(SP), .CK(CK), .SR(LSR), .Q(Q));
  defparam INST01.REGSET = "SET";
  defparam INST01.SRMODE = "ASYNC";
endmodule

module i_serializer_SLICE_389 ( input DI1, D1, C1, B1, D0, C0, LSR, CLK, 
    output Q1, F0, F1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, LSR_dly;

  lut40072 \i_serializer/i5_3_lut ( .A(GNDI), .B(B1), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40067 \i_serializer/i1386_2_lut ( .A(GNDI), .B(GNDI), .C(C0), .D(D0), 
    .Z(F0));
  ffsre20002 \i_serializer/clk_out_enable_c ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40072 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module q_rising_sync_SLICE_391 ( input DI1, D1, C0, LSR, CLK, output Q1, F0, 
    F1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, LSR_dly;

  lut40069 \q_rising_sync.SLICE_391_K1 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40021 \q_rising_sync/i9_1_lut ( .A(GNDI), .B(GNDI), .C(C0), .D(GNDI), 
    .Z(F0));
  ffsre20071 \q_rising_sync/wr_ptr_c ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_NOTIN), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module stream_enable_sync_ff1_c ( input PADDI, INCLK, output DI0 );
  wire   GNDI, VCCI, PADDI_dly, INCLK_dly;

  IOL_B_B \stream_enable/sync_ff1_c ( .PADDI(PADDI_dly), .DO1(GNDI), 
    .DO0(GNDI), .CE(VCCI), .IOLTO(GNDI), .HOLD(GNDI), .INCLK(INCLK_dly), 
    .OUTCLK(GNDI), .PADDO(), .PADDT(), .DI1(), .DI0(DI0));
  gnd DRIVEGND( .PWR0(GNDI));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (INCLK => DI0) = (0:0:0,0:0:0);
    $setuphold (posedge INCLK, PADDI, 0:0:0, 0:0:0,,,, INCLK_dly, PADDI_dly);
  endspecify

endmodule

module IOL_B_B ( input PADDI, DO1, DO0, CE, IOLTO, HOLD, INCLK, OUTCLK, 
    output PADDO, PADDT, DI1, DI0 );

  IOL_B INST10( .PADDI(PADDI), .DO1(DO1), .DO0(DO0), .CE(CE), .IOLTO(IOLTO), 
    .HOLD(HOLD), .INCLK(INCLK), .OUTCLK(OUTCLK), .PADDO(PADDO), .PADDT(PADDT), 
    .DI1(DI1), .DI0(DI0));
  defparam INST10.LATCHIN = "NONE_REG";
  defparam INST10.DDROUT = "NO";
endmodule

module spi2_mosi ( input PADDO, output spi2_mosi );
  wire   VCCI;

  BB_B_B \spi2_mosi_pad.bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(spi2_mosi));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => spi2_mosi) = (0:0:0,0:0:0);
  endspecify

endmodule

module BB_B_B ( input T_N, I, output O, inout B );

  BB_B INST10( .T_N(T_N), .I(I), .O(O), .B(B));
endmodule

module spi1_mosi ( input PADDO, output spi1_mosi );
  wire   VCCI;

  BB_B_B \spi1_mosi_pad.bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(spi1_mosi));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => spi1_mosi) = (0:0:0,0:0:0);
  endspecify

endmodule

module spi1_sck ( input PADDO, output spi1_sck );
  wire   VCCI;

  BB_B_B \spi1_sck_pad.bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(spi1_sck));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => spi1_sck) = (0:0:0,0:0:0);
  endspecify

endmodule

module spi2_sck ( input PADDO, output spi2_sck );
  wire   VCCI;

  BB_B_B \spi2_sck_pad.bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(spi2_sck));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => spi2_sck) = (0:0:0,0:0:0);
  endspecify

endmodule

module stm_fpga_spare5 ( output PADDI, input stm_fpga_spare5 );
  wire   GNDI;

  BB_B_B \stm_fpga_spare5_pad.bb_inst ( .T_N(GNDI), .I(GNDI), .O(PADDI), 
    .B(stm_fpga_spare5));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (stm_fpga_spare5 => PADDI) = (0:0:0,0:0:0);
  endspecify

endmodule

module spi6_miso ( input PADDO, output spi6_miso );
  wire   VCCI;

  BB_B_B \spi6_miso_pad.bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(spi6_miso));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => spi6_miso) = (0:0:0,0:0:0);
  endspecify

endmodule

module sx1257_nss ( input PADDO, output sx1257_nss );
  wire   VCCI;

  BB_B_B \sx1257_nss_pad.bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(sx1257_nss));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => sx1257_nss) = (0:0:0,0:0:0);
  endspecify

endmodule

module sx1257_mosi ( input PADDO, output sx1257_mosi );
  wire   VCCI;

  BB_B_B \sx1257_mosi_pad.bb_inst ( .T_N(VCCI), .I(PADDO), .O(), 
    .B(sx1257_mosi));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => sx1257_mosi) = (0:0:0,0:0:0);
  endspecify

endmodule

module sx1257_i_in ( input PADDO, output sx1257_i_in );
  wire   VCCI;

  BB_B_B \sx1257_i_in_pad.bb_inst ( .T_N(VCCI), .I(PADDO), .O(), 
    .B(sx1257_i_in));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => sx1257_i_in) = (0:0:0,0:0:0);
  endspecify

endmodule

module sx1257_q_in ( input PADDO, output sx1257_q_in );
  wire   VCCI;

  BB_B_B \sx1257_q_in_pad.bb_inst ( .T_N(VCCI), .I(PADDO), .O(), 
    .B(sx1257_q_in));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => sx1257_q_in) = (0:0:0,0:0:0);
  endspecify

endmodule

module sx1257_sck ( input PADDO, output sx1257_sck );
  wire   VCCI;

  BB_B_B \sx1257_sck_pad.bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(sx1257_sck));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => sx1257_sck) = (0:0:0,0:0:0);
  endspecify

endmodule

module sx1257_clk_out ( output PADDI, input sx1257_clk_out );
  wire   GNDI;

  BB_B_B \sx1257_clk_out_pad.bb_inst ( .T_N(GNDI), .I(GNDI), .O(PADDI), 
    .B(sx1257_clk_out));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (sx1257_clk_out => PADDI) = (0:0:0,0:0:0);
  endspecify

endmodule

module sx1257_q_out ( output PADDI, input sx1257_q_out );
  wire   GNDI;

  BB_B_B \sx1257_q_out_pad.bb_inst ( .T_N(GNDI), .I(GNDI), .O(PADDI), 
    .B(sx1257_q_out));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (sx1257_q_out => PADDI) = (0:0:0,0:0:0);
  endspecify

endmodule

module sx1257_miso ( output PADDI, input sx1257_miso );
  wire   GNDI;

  BB_B_B \sx1257_miso_pad.bb_inst ( .T_N(GNDI), .I(GNDI), .O(PADDI), 
    .B(sx1257_miso));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (sx1257_miso => PADDI) = (0:0:0,0:0:0);
  endspecify

endmodule

module sx1257_i_out ( output PADDI, input sx1257_i_out );
  wire   GNDI;

  BB_B_B \sx1257_i_out_pad.bb_inst ( .T_N(GNDI), .I(GNDI), .O(PADDI), 
    .B(sx1257_i_out));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (sx1257_i_out => PADDI) = (0:0:0,0:0:0);
  endspecify

endmodule

module spi6_mosi ( output PADDI, input spi6_mosi );
  wire   GNDI;

  BB_B_B \spi6_mosi_pad.bb_inst ( .T_N(GNDI), .I(GNDI), .O(PADDI), 
    .B(spi6_mosi));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (spi6_mosi => PADDI) = (0:0:0,0:0:0);
  endspecify

endmodule

module spi6_sck ( output PADDI, input spi6_sck );
  wire   GNDI;

  BB_B_B \spi6_sck_pad.bb_inst ( .T_N(GNDI), .I(GNDI), .O(PADDI), .B(spi6_sck));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (spi6_sck => PADDI) = (0:0:0,0:0:0);
  endspecify

endmodule

module spi6_nss ( output PADDI, input spi6_nss );
  wire   GNDI;

  BB_B_B \spi6_nss_pad.bb_inst ( .T_N(GNDI), .I(GNDI), .O(PADDI), .B(spi6_nss));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (spi6_nss => PADDI) = (0:0:0,0:0:0);
  endspecify

endmodule

module stm_fpga_spare4 ( output PADDI, input stm_fpga_spare4 );
  wire   GNDI;

  BB_B_B \stm_fpga_spare4_pad.bb_inst ( .T_N(GNDI), .I(GNDI), .O(PADDI), 
    .B(stm_fpga_spare4));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (stm_fpga_spare4 => PADDI) = (0:0:0,0:0:0);
  endspecify

endmodule

module led1 ( input PADDO, output led1 );
  wire   VCCI;

  BB_OD_B \led1_pad.bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(led1));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => led1) = (0:0:0,0:0:0);
  endspecify

endmodule

module BB_OD_B ( input T_N, I, output O, inout B );

  BB_OD INST10( .T_N(T_N), .I(I), .O(O), .B(B));
endmodule

module led0 ( input PADDO, output led0 );
  wire   VCCI;

  BB_OD_B \led0_pad.bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(led0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => led0) = (0:0:0,0:0:0);
  endspecify

endmodule

module led2 ( input PADDO, output led2 );
  wire   VCCI;

  BB_OD_B \led2_pad.bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(led2));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => led2) = (0:0:0,0:0:0);
  endspecify

endmodule
