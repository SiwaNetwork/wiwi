
-- VHDL netlist produced by program ldbanno, Version Diamond (64-bit) 3.14.0.75.2

-- ldbanno -n VHDL -o wiwisdr_ecp5_test_impl1_mapvho.vho -w -neg -gui -msgset C:/Users/julianstj/Desktop/WorkNotes/Projects/PTP/WiWi/SDR/Software/ECP5_Test/promote.xml wiwisdr_ecp5_test_impl1_map.ncd 
-- Netlist created on Tue Jan 28 18:13:56 2025
-- Netlist written on Tue Jan 28 18:14:02 2025
-- Design is for device LFE5U-25F
-- Design is for package CABGA256
-- Design is for performance grade 6

-- entity sapiobuf
  library IEEE, vital2000, ECP5U;
  use IEEE.STD_LOGIC_1164.all;
  use vital2000.vital_timing.all;
  use ECP5U.COMPONENTS.ALL;

  entity sapiobuf is
    port (I: in Std_logic; T: in Std_logic; Z: out Std_logic; 
          PAD: out Std_logic; PADI: in Std_logic);

    ATTRIBUTE Vital_Level0 OF sapiobuf : ENTITY IS TRUE;

  end sapiobuf;

  architecture Structure of sapiobuf is
  begin
    INST1: IBPD
      port map (I=>PADI, O=>Z);
    INST2: OBZPD
      port map (I=>I, T=>T, O=>PAD);
  end Structure;

-- entity fpga_sclB
  library IEEE, vital2000, ECP5U;
  use IEEE.STD_LOGIC_1164.all;
  use vital2000.vital_timing.all;
  use ECP5U.COMPONENTS.ALL;

  entity fpga_sclB is
    -- miscellaneous vital GENERICs
    GENERIC (
      TimingChecksOn	: boolean := TRUE;
      XOn           	: boolean := FALSE;
      MsgOn         	: boolean := TRUE;
      InstancePath  	: string := "fpga_sclB";

      tipd_PADDO  	: VitalDelayType01 := (0 ns, 0 ns);
      tipd_PADDT  	: VitalDelayType01 := (0 ns, 0 ns);
      tipd_fpgascl  	: VitalDelayType01 := (0 ns, 0 ns);

        tpd_PADDO_fpgascl	 : VitalDelayType01Z := (0 ns, 0 ns, 0 ns , 0 ns, 0 ns, 0 ns)
        ;

        tpd_PADDT_fpgascl	 : VitalDelayType01Z := (0 ns, 0 ns, 0 ns , 0 ns, 0 ns, 0 ns)
        ;
      tpd_fpgascl_PADDI	 : VitalDelayType01 := (0 ns, 0 ns);
      tperiod_fpgascl 	: VitalDelayType := 0 ns;
      tpw_fpgascl_posedge	: VitalDelayType := 0 ns;
      tpw_fpgascl_negedge	: VitalDelayType := 0 ns;

        tpd_fpgascl_fpgascl	 : VitalDelayType01Z := (0 ns, 0 ns, 0 ns , 0 ns, 0 ns, 0 ns)
        );

    port (PADDI: out Std_logic; PADDO: in Std_logic; PADDT: in Std_logic; 
          fpgascl: inout Std_logic);

    ATTRIBUTE Vital_Level0 OF fpga_sclB : ENTITY IS TRUE;

  end fpga_sclB;

  architecture Structure of fpga_sclB is
    ATTRIBUTE Vital_Level0 OF Structure : ARCHITECTURE IS TRUE;

    signal PADDI_out 	: std_logic := 'X';
    signal PADDO_ipd 	: std_logic := 'X';
    signal PADDT_ipd 	: std_logic := 'X';
    signal fpgascl_ipd 	: std_logic := 'X';
    signal fpgascl_out 	: std_logic := 'Z';

    component sapiobuf
      port (I: in Std_logic; T: in Std_logic; Z: out Std_logic; 
            PAD: out Std_logic; PADI: in Std_logic);
    end component;
  begin
    scl_io: sapiobuf
      port map (I=>PADDO_ipd, T=>PADDT_ipd, Z=>PADDI_out, PAD=>fpgascl_out, 
                PADI=>fpgascl_ipd);

    --  INPUT PATH DELAYs
    WireDelay : BLOCK
    BEGIN
      VitalWireDelay(PADDO_ipd, PADDO, tipd_PADDO);
      VitalWireDelay(PADDT_ipd, PADDT, tipd_PADDT);
      VitalWireDelay(fpgascl_ipd, fpgascl, tipd_fpgascl);
    END BLOCK;

    VitalBehavior : PROCESS (PADDI_out, PADDO_ipd, PADDT_ipd, fpgascl_ipd, 
      fpgascl_out)
    VARIABLE PADDI_zd         	: std_logic := 'X';
    VARIABLE PADDI_GlitchData 	: VitalGlitchDataType;
    VARIABLE fpgascl_zd         	: std_logic := 'X';
    VARIABLE fpgascl_GlitchData 	: VitalGlitchDataType;

    VARIABLE tviol_fpgascl_fpgascl          	: x01 := '0';
    VARIABLE periodcheckinfo_fpgascl	: VitalPeriodDataType;

    BEGIN

    IF (TimingChecksOn) THEN
      VitalPeriodPulseCheck (
        TestSignal => fpgascl_ipd,
        TestSignalName => "fpgascl",
        Period => tperiod_fpgascl,
        PulseWidthHigh => tpw_fpgascl_posedge,
        PulseWidthLow => tpw_fpgascl_negedge,
        PeriodData => periodcheckinfo_fpgascl,
        Violation => tviol_fpgascl_fpgascl,
        MsgOn => MsgOn, XOn => XOn,
        HeaderMsg => InstancePath,
        CheckEnabled => TRUE,
        MsgSeverity => warning);

    END IF;

    PADDI_zd 	:= PADDI_out;
    fpgascl_zd 	:= fpgascl_out;

    VitalPathDelay01 (
      OutSignal => PADDI, OutSignalName => "PADDI", OutTemp => PADDI_zd,
      Paths      => (0 => (InputChangeTime => fpgascl_ipd'last_event,
                           PathDelay => tpd_fpgascl_PADDI,
                           PathCondition => TRUE)),
      GlitchData => PADDI_GlitchData,
      Mode       => vitaltransport, XOn => XOn, MsgOn => MsgOn);
    VitalPathDelay01Z (
      OutSignal => fpgascl, OutSignalName => "fpgascl", OutTemp => fpgascl_zd,
      Paths      => (0 => (InputChangeTime => PADDO_ipd'last_event,
                           PathDelay => tpd_PADDO_fpgascl,
                           PathCondition => TRUE),
                     1 => (InputChangeTime => PADDT_ipd'last_event,
                           PathDelay => tpd_PADDT_fpgascl,
                           PathCondition => TRUE)),
      GlitchData => fpgascl_GlitchData,
      Mode       => vitaltransport, XOn => XOn, MsgOn => MsgOn);

    END PROCESS;

  end Structure;

-- entity sapiobuf0001
  library IEEE, vital2000, ECP5U;
  use IEEE.STD_LOGIC_1164.all;
  use vital2000.vital_timing.all;
  use ECP5U.COMPONENTS.ALL;

  entity sapiobuf0001 is
    port (I: in Std_logic; PAD: out Std_logic);

    ATTRIBUTE Vital_Level0 OF sapiobuf0001 : ENTITY IS TRUE;

  end sapiobuf0001;

  architecture Structure of sapiobuf0001 is
  begin
    INST1: OB
      port map (I=>I, O=>PAD);
  end Structure;

-- entity sdr_txclkB
  library IEEE, vital2000, ECP5U;
  use IEEE.STD_LOGIC_1164.all;
  use vital2000.vital_timing.all;
  use ECP5U.COMPONENTS.ALL;

  entity sdr_txclkB is
    -- miscellaneous vital GENERICs
    GENERIC (
      TimingChecksOn	: boolean := TRUE;
      XOn           	: boolean := FALSE;
      MsgOn         	: boolean := TRUE;
      InstancePath  	: string := "sdr_txclkB";

      tipd_PADDO  	: VitalDelayType01 := (0 ns, 0 ns);
      tpd_PADDO_sdrtxclk	 : VitalDelayType01 := (0 ns, 0 ns));

    port (PADDO: in Std_logic; sdrtxclk: out Std_logic);

    ATTRIBUTE Vital_Level0 OF sdr_txclkB : ENTITY IS TRUE;

  end sdr_txclkB;

  architecture Structure of sdr_txclkB is
    ATTRIBUTE Vital_Level0 OF Structure : ARCHITECTURE IS TRUE;

    signal PADDO_ipd 	: std_logic := 'X';
    signal sdrtxclk_out 	: std_logic := 'X';

    component sapiobuf0001
      port (I: in Std_logic; PAD: out Std_logic);
    end component;
  begin
    sdr_txclk_pad: sapiobuf0001
      port map (I=>PADDO_ipd, PAD=>sdrtxclk_out);

    --  INPUT PATH DELAYs
    WireDelay : BLOCK
    BEGIN
      VitalWireDelay(PADDO_ipd, PADDO, tipd_PADDO);
    END BLOCK;

    VitalBehavior : PROCESS (PADDO_ipd, sdrtxclk_out)
    VARIABLE sdrtxclk_zd         	: std_logic := 'X';
    VARIABLE sdrtxclk_GlitchData 	: VitalGlitchDataType;


    BEGIN

    IF (TimingChecksOn) THEN

    END IF;

    sdrtxclk_zd 	:= sdrtxclk_out;

    VitalPathDelay01 (
      OutSignal => sdrtxclk, OutSignalName => "sdrtxclk", OutTemp => sdrtxclk_zd,
      Paths      => (0 => (InputChangeTime => PADDO_ipd'last_event,
                           PathDelay => tpd_PADDO_sdrtxclk,
                           PathCondition => TRUE)),
      GlitchData => sdrtxclk_GlitchData,
      Mode       => vitaltransport, XOn => XOn, MsgOn => MsgOn);

    END PROCESS;

  end Structure;

-- entity fpga_sdaB
  library IEEE, vital2000, ECP5U;
  use IEEE.STD_LOGIC_1164.all;
  use vital2000.vital_timing.all;
  use ECP5U.COMPONENTS.ALL;

  entity fpga_sdaB is
    -- miscellaneous vital GENERICs
    GENERIC (
      TimingChecksOn	: boolean := TRUE;
      XOn           	: boolean := FALSE;
      MsgOn         	: boolean := TRUE;
      InstancePath  	: string := "fpga_sdaB";

      tipd_PADDO  	: VitalDelayType01 := (0 ns, 0 ns);
      tipd_PADDT  	: VitalDelayType01 := (0 ns, 0 ns);
      tipd_fpgasda  	: VitalDelayType01 := (0 ns, 0 ns);

        tpd_PADDO_fpgasda	 : VitalDelayType01Z := (0 ns, 0 ns, 0 ns , 0 ns, 0 ns, 0 ns)
        ;

        tpd_PADDT_fpgasda	 : VitalDelayType01Z := (0 ns, 0 ns, 0 ns , 0 ns, 0 ns, 0 ns)
        ;
      tpd_fpgasda_PADDI	 : VitalDelayType01 := (0 ns, 0 ns);
      tperiod_fpgasda 	: VitalDelayType := 0 ns;
      tpw_fpgasda_posedge	: VitalDelayType := 0 ns;
      tpw_fpgasda_negedge	: VitalDelayType := 0 ns;

        tpd_fpgasda_fpgasda	 : VitalDelayType01Z := (0 ns, 0 ns, 0 ns , 0 ns, 0 ns, 0 ns)
        );

    port (PADDI: out Std_logic; PADDO: in Std_logic; PADDT: in Std_logic; 
          fpgasda: inout Std_logic);

    ATTRIBUTE Vital_Level0 OF fpga_sdaB : ENTITY IS TRUE;

  end fpga_sdaB;

  architecture Structure of fpga_sdaB is
    ATTRIBUTE Vital_Level0 OF Structure : ARCHITECTURE IS TRUE;

    signal PADDI_out 	: std_logic := 'X';
    signal PADDO_ipd 	: std_logic := 'X';
    signal PADDT_ipd 	: std_logic := 'X';
    signal fpgasda_ipd 	: std_logic := 'X';
    signal fpgasda_out 	: std_logic := 'Z';

    component sapiobuf
      port (I: in Std_logic; T: in Std_logic; Z: out Std_logic; 
            PAD: out Std_logic; PADI: in Std_logic);
    end component;
  begin
    sda_io: sapiobuf
      port map (I=>PADDO_ipd, T=>PADDT_ipd, Z=>PADDI_out, PAD=>fpgasda_out, 
                PADI=>fpgasda_ipd);

    --  INPUT PATH DELAYs
    WireDelay : BLOCK
    BEGIN
      VitalWireDelay(PADDO_ipd, PADDO, tipd_PADDO);
      VitalWireDelay(PADDT_ipd, PADDT, tipd_PADDT);
      VitalWireDelay(fpgasda_ipd, fpgasda, tipd_fpgasda);
    END BLOCK;

    VitalBehavior : PROCESS (PADDI_out, PADDO_ipd, PADDT_ipd, fpgasda_ipd, 
      fpgasda_out)
    VARIABLE PADDI_zd         	: std_logic := 'X';
    VARIABLE PADDI_GlitchData 	: VitalGlitchDataType;
    VARIABLE fpgasda_zd         	: std_logic := 'X';
    VARIABLE fpgasda_GlitchData 	: VitalGlitchDataType;

    VARIABLE tviol_fpgasda_fpgasda          	: x01 := '0';
    VARIABLE periodcheckinfo_fpgasda	: VitalPeriodDataType;

    BEGIN

    IF (TimingChecksOn) THEN
      VitalPeriodPulseCheck (
        TestSignal => fpgasda_ipd,
        TestSignalName => "fpgasda",
        Period => tperiod_fpgasda,
        PulseWidthHigh => tpw_fpgasda_posedge,
        PulseWidthLow => tpw_fpgasda_negedge,
        PeriodData => periodcheckinfo_fpgasda,
        Violation => tviol_fpgasda_fpgasda,
        MsgOn => MsgOn, XOn => XOn,
        HeaderMsg => InstancePath,
        CheckEnabled => TRUE,
        MsgSeverity => warning);

    END IF;

    PADDI_zd 	:= PADDI_out;
    fpgasda_zd 	:= fpgasda_out;

    VitalPathDelay01 (
      OutSignal => PADDI, OutSignalName => "PADDI", OutTemp => PADDI_zd,
      Paths      => (0 => (InputChangeTime => fpgasda_ipd'last_event,
                           PathDelay => tpd_fpgasda_PADDI,
                           PathCondition => TRUE)),
      GlitchData => PADDI_GlitchData,
      Mode       => vitaltransport, XOn => XOn, MsgOn => MsgOn);
    VitalPathDelay01Z (
      OutSignal => fpgasda, OutSignalName => "fpgasda", OutTemp => fpgasda_zd,
      Paths      => (0 => (InputChangeTime => PADDO_ipd'last_event,
                           PathDelay => tpd_PADDO_fpgasda,
                           PathCondition => TRUE),
                     1 => (InputChangeTime => PADDT_ipd'last_event,
                           PathDelay => tpd_PADDT_fpgasda,
                           PathCondition => TRUE)),
      GlitchData => fpgasda_GlitchData,
      Mode       => vitaltransport, XOn => XOn, MsgOn => MsgOn);

    END PROCESS;

  end Structure;

-- entity sapiobuf0002
  library IEEE, vital2000, ECP5U;
  use IEEE.STD_LOGIC_1164.all;
  use vital2000.vital_timing.all;
  use ECP5U.COMPONENTS.ALL;

  entity sapiobuf0002 is
    port (I: in Std_logic; PAD: out Std_logic);

    ATTRIBUTE Vital_Level0 OF sapiobuf0002 : ENTITY IS TRUE;

  end sapiobuf0002;

  architecture Structure of sapiobuf0002 is
  begin
    INST5: OB
      port map (I=>I, O=>PAD);
  end Structure;

-- entity gnd
  library IEEE, vital2000, ECP5U;
  use IEEE.STD_LOGIC_1164.all;
  use vital2000.vital_timing.all;
  use ECP5U.COMPONENTS.ALL;

  entity gnd is
    port (PWR0: out Std_logic);

    ATTRIBUTE Vital_Level0 OF gnd : ENTITY IS TRUE;

  end gnd;

  architecture Structure of gnd is
  begin
    INST1: VLO
      port map (Z=>PWR0);
  end Structure;

-- entity fpga_neopixelB
  library IEEE, vital2000, ECP5U;
  use IEEE.STD_LOGIC_1164.all;
  use vital2000.vital_timing.all;
  use ECP5U.COMPONENTS.ALL;

  entity fpga_neopixelB is
    -- miscellaneous vital GENERICs
    GENERIC (
      TimingChecksOn	: boolean := TRUE;
      XOn           	: boolean := FALSE;
      MsgOn         	: boolean := TRUE;
      InstancePath  	: string := "fpga_neopixelB");

    port (fpganeopixel: out Std_logic);

    ATTRIBUTE Vital_Level0 OF fpga_neopixelB : ENTITY IS TRUE;

  end fpga_neopixelB;

  architecture Structure of fpga_neopixelB is
    ATTRIBUTE Vital_Level0 OF Structure : ARCHITECTURE IS TRUE;

    signal fpganeopixel_out 	: std_logic := 'X';

    signal GNDI: Std_logic;
    component gnd
      port (PWR0: out Std_logic);
    end component;
    component sapiobuf0002
      port (I: in Std_logic; PAD: out Std_logic);
    end component;
  begin
    fpga_neopixel_pad: sapiobuf0002
      port map (I=>GNDI, PAD=>fpganeopixel_out);
    DRIVEGND: gnd
      port map (PWR0=>GNDI);

    --  INPUT PATH DELAYs
    WireDelay : BLOCK
    BEGIN
    END BLOCK;

    VitalBehavior : PROCESS (fpganeopixel_out)


    BEGIN

    IF (TimingChecksOn) THEN

    END IF;

    fpganeopixel 	<= fpganeopixel_out;


    END PROCESS;

  end Structure;

-- entity fpga_ledB
  library IEEE, vital2000, ECP5U;
  use IEEE.STD_LOGIC_1164.all;
  use vital2000.vital_timing.all;
  use ECP5U.COMPONENTS.ALL;

  entity fpga_ledB is
    -- miscellaneous vital GENERICs
    GENERIC (
      TimingChecksOn	: boolean := TRUE;
      XOn           	: boolean := FALSE;
      MsgOn         	: boolean := TRUE;
      InstancePath  	: string := "fpga_ledB";

      tipd_PADDO  	: VitalDelayType01 := (0 ns, 0 ns);
      tpd_PADDO_fpgaled	 : VitalDelayType01 := (0 ns, 0 ns));

    port (PADDO: in Std_logic; fpgaled: out Std_logic);

    ATTRIBUTE Vital_Level0 OF fpga_ledB : ENTITY IS TRUE;

  end fpga_ledB;

  architecture Structure of fpga_ledB is
    ATTRIBUTE Vital_Level0 OF Structure : ARCHITECTURE IS TRUE;

    signal PADDO_ipd 	: std_logic := 'X';
    signal fpgaled_out 	: std_logic := 'X';

    component sapiobuf0002
      port (I: in Std_logic; PAD: out Std_logic);
    end component;
  begin
    fpga_led_pad: sapiobuf0002
      port map (I=>PADDO_ipd, PAD=>fpgaled_out);

    --  INPUT PATH DELAYs
    WireDelay : BLOCK
    BEGIN
      VitalWireDelay(PADDO_ipd, PADDO, tipd_PADDO);
    END BLOCK;

    VitalBehavior : PROCESS (PADDO_ipd, fpgaled_out)
    VARIABLE fpgaled_zd         	: std_logic := 'X';
    VARIABLE fpgaled_GlitchData 	: VitalGlitchDataType;


    BEGIN

    IF (TimingChecksOn) THEN

    END IF;

    fpgaled_zd 	:= fpgaled_out;

    VitalPathDelay01 (
      OutSignal => fpgaled, OutSignalName => "fpgaled", OutTemp => fpgaled_zd,
      Paths      => (0 => (InputChangeTime => PADDO_ipd'last_event,
                           PathDelay => tpd_PADDO_fpgaled,
                           PathCondition => TRUE)),
      GlitchData => fpgaled_GlitchData,
      Mode       => vitaltransport, XOn => XOn, MsgOn => MsgOn);

    END PROCESS;

  end Structure;

-- entity sdr_txdataB
  library IEEE, vital2000, ECP5U;
  use IEEE.STD_LOGIC_1164.all;
  use vital2000.vital_timing.all;
  use ECP5U.COMPONENTS.ALL;

  entity sdr_txdataB is
    -- miscellaneous vital GENERICs
    GENERIC (
      TimingChecksOn	: boolean := TRUE;
      XOn           	: boolean := FALSE;
      MsgOn         	: boolean := TRUE;
      InstancePath  	: string := "sdr_txdataB";

      tipd_IOLDO  	: VitalDelayType01 := (0 ns, 0 ns);
      tpd_IOLDO_sdrtxdata	 : VitalDelayType01 := (0 ns, 0 ns));

    port (IOLDO: in Std_logic; sdrtxdata: out Std_logic);

    ATTRIBUTE Vital_Level0 OF sdr_txdataB : ENTITY IS TRUE;

  end sdr_txdataB;

  architecture Structure of sdr_txdataB is
    ATTRIBUTE Vital_Level0 OF Structure : ARCHITECTURE IS TRUE;

    signal IOLDO_ipd 	: std_logic := 'X';
    signal sdrtxdata_out 	: std_logic := 'X';

    component sapiobuf0001
      port (I: in Std_logic; PAD: out Std_logic);
    end component;
  begin
    sdr_txdata_pad: sapiobuf0001
      port map (I=>IOLDO_ipd, PAD=>sdrtxdata_out);

    --  INPUT PATH DELAYs
    WireDelay : BLOCK
    BEGIN
      VitalWireDelay(IOLDO_ipd, IOLDO, tipd_IOLDO);
    END BLOCK;

    VitalBehavior : PROCESS (IOLDO_ipd, sdrtxdata_out)
    VARIABLE sdrtxdata_zd         	: std_logic := 'X';
    VARIABLE sdrtxdata_GlitchData 	: VitalGlitchDataType;


    BEGIN

    IF (TimingChecksOn) THEN

    END IF;

    sdrtxdata_zd 	:= sdrtxdata_out;

    VitalPathDelay01 (
      OutSignal => sdrtxdata, OutSignalName => "sdrtxdata", OutTemp => sdrtxdata_zd,
      Paths      => (0 => (InputChangeTime => IOLDO_ipd'last_event,
                           PathDelay => tpd_IOLDO_sdrtxdata,
                           PathCondition => TRUE)),
      GlitchData => sdrtxdata_GlitchData,
      Mode       => vitaltransport, XOn => XOn, MsgOn => MsgOn);

    END PROCESS;

  end Structure;

-- entity sapoddrx1
  library IEEE, vital2000, ECP5U;
  use IEEE.STD_LOGIC_1164.all;
  use vital2000.vital_timing.all;
  use ECP5U.COMPONENTS.ALL;

  entity sapoddrx1 is
    port (D0: in Std_logic; D1: in Std_logic; SCLK: in Std_logic; 
          RST: in Std_logic; Q: out Std_logic);

    ATTRIBUTE Vital_Level0 OF sapoddrx1 : ENTITY IS TRUE;

  end sapoddrx1;

  architecture Structure of sapoddrx1 is
  begin
    INST1: ODDRX1F
      generic map (GSR => "ENABLED")
      port map (SCLK=>SCLK, RST=>RST, D0=>D0, D1=>D1, Q=>Q);
  end Structure;

-- entity sdr_txdata_MGIOL
  library IEEE, vital2000, ECP5U;
  use IEEE.STD_LOGIC_1164.all;
  use vital2000.vital_timing.all;
  use ECP5U.COMPONENTS.ALL;

  entity sdr_txdata_MGIOL is
    -- miscellaneous vital GENERICs
    GENERIC (
      TimingChecksOn	: boolean := TRUE;
      XOn           	: boolean := FALSE;
      MsgOn         	: boolean := TRUE;
      InstancePath  	: string := "sdr_txdata_MGIOL";

      tipd_TXDATA0  	: VitalDelayType01 := (0 ns, 0 ns);
      tipd_TXDATA1  	: VitalDelayType01 := (0 ns, 0 ns);
      tipd_LSR  	: VitalDelayType01 := (0 ns, 0 ns);
      tipd_CLK  	: VitalDelayType01 := (0 ns, 0 ns);
      tpd_CLK_IOLDO	 : VitalDelayType01 := (0 ns, 0 ns);
      ticd_CLK	: VitalDelayType := 0 ns;
      tisd_TXDATA0_CLK	: VitalDelayType := 0 ns;
      tsetup_TXDATA0_CLK_noedge_posedge	: VitalDelayType := 0 ns;
      thold_TXDATA0_CLK_noedge_posedge	: VitalDelayType := 0 ns;
      tisd_TXDATA1_CLK	: VitalDelayType := 0 ns;
      tsetup_TXDATA1_CLK_noedge_posedge	: VitalDelayType := 0 ns;
      thold_TXDATA1_CLK_noedge_posedge	: VitalDelayType := 0 ns;
      tperiod_CLK 	: VitalDelayType := 0 ns;
      tpw_CLK_posedge	: VitalDelayType := 0 ns;
      tpw_CLK_negedge	: VitalDelayType := 0 ns);

    port (IOLDO: out Std_logic; TXDATA0: in Std_logic; TXDATA1: in Std_logic; 
          LSR: in Std_logic; CLK: in Std_logic);

    ATTRIBUTE Vital_Level0 OF sdr_txdata_MGIOL : ENTITY IS TRUE;

  end sdr_txdata_MGIOL;

  architecture Structure of sdr_txdata_MGIOL is
    ATTRIBUTE Vital_Level0 OF Structure : ARCHITECTURE IS TRUE;

    signal IOLDO_out 	: std_logic := 'X';
    signal TXDATA0_ipd 	: std_logic := 'X';
    signal TXDATA0_dly 	: std_logic := 'X';
    signal TXDATA1_ipd 	: std_logic := 'X';
    signal TXDATA1_dly 	: std_logic := 'X';
    signal LSR_ipd 	: std_logic := 'X';
    signal CLK_ipd 	: std_logic := 'X';
    signal CLK_dly 	: std_logic := 'X';

    component sapoddrx1
      port (D0: in Std_logic; D1: in Std_logic; SCLK: in Std_logic; 
            RST: in Std_logic; Q: out Std_logic);
    end component;
  begin
    tx_ddr_data_inst: sapoddrx1
      port map (D0=>TXDATA0_dly, D1=>TXDATA1_dly, SCLK=>CLK_dly, RST=>LSR_ipd, 
                Q=>IOLDO_out);

    --  INPUT PATH DELAYs
    WireDelay : BLOCK
    BEGIN
      VitalWireDelay(TXDATA0_ipd, TXDATA0, tipd_TXDATA0);
      VitalWireDelay(TXDATA1_ipd, TXDATA1, tipd_TXDATA1);
      VitalWireDelay(LSR_ipd, LSR, tipd_LSR);
      VitalWireDelay(CLK_ipd, CLK, tipd_CLK);
    END BLOCK;

    --  Setup and Hold DELAYs
    SignalDelay : BLOCK
    BEGIN
      VitalSignalDelay(TXDATA0_dly, TXDATA0_ipd, tisd_TXDATA0_CLK);
      VitalSignalDelay(TXDATA1_dly, TXDATA1_ipd, tisd_TXDATA1_CLK);
      VitalSignalDelay(CLK_dly, CLK_ipd, ticd_CLK);
    END BLOCK;

    VitalBehavior : PROCESS (IOLDO_out, TXDATA0_dly, TXDATA1_dly, LSR_ipd, 
      CLK_dly)
    VARIABLE IOLDO_zd         	: std_logic := 'X';
    VARIABLE IOLDO_GlitchData 	: VitalGlitchDataType;

    VARIABLE tviol_TXDATA0_CLK       	: x01 := '0';
    VARIABLE TXDATA0_CLK_TimingDatash	: VitalTimingDataType;
    VARIABLE tviol_TXDATA1_CLK       	: x01 := '0';
    VARIABLE TXDATA1_CLK_TimingDatash	: VitalTimingDataType;
    VARIABLE tviol_CLK_CLK          	: x01 := '0';
    VARIABLE periodcheckinfo_CLK	: VitalPeriodDataType;

    BEGIN

    IF (TimingChecksOn) THEN
      VitalSetupHoldCheck (
        TestSignal => TXDATA0_dly,
        TestSignalName => "TXDATA0",
        TestDelay => tisd_TXDATA0_CLK,
        RefSignal => CLK_dly,
        RefSignalName => "CLK",
        RefDelay => ticd_CLK,
        SetupHigh => tsetup_TXDATA0_CLK_noedge_posedge,
        SetupLow => tsetup_TXDATA0_CLK_noedge_posedge,
        HoldHigh => thold_TXDATA0_CLK_noedge_posedge,
        HoldLow => thold_TXDATA0_CLK_noedge_posedge,
        CheckEnabled => TRUE,
        RefTransition => '/',
        MsgOn => MsgOn, XOn => XOn,
        HeaderMsg => InstancePath,
        TimingData => TXDATA0_CLK_TimingDatash,
        Violation => tviol_TXDATA0_CLK,
        MsgSeverity => warning);
      VitalSetupHoldCheck (
        TestSignal => TXDATA1_dly,
        TestSignalName => "TXDATA1",
        TestDelay => tisd_TXDATA1_CLK,
        RefSignal => CLK_dly,
        RefSignalName => "CLK",
        RefDelay => ticd_CLK,
        SetupHigh => tsetup_TXDATA1_CLK_noedge_posedge,
        SetupLow => tsetup_TXDATA1_CLK_noedge_posedge,
        HoldHigh => thold_TXDATA1_CLK_noedge_posedge,
        HoldLow => thold_TXDATA1_CLK_noedge_posedge,
        CheckEnabled => TRUE,
        RefTransition => '/',
        MsgOn => MsgOn, XOn => XOn,
        HeaderMsg => InstancePath,
        TimingData => TXDATA1_CLK_TimingDatash,
        Violation => tviol_TXDATA1_CLK,
        MsgSeverity => warning);
      VitalPeriodPulseCheck (
        TestSignal => CLK_ipd,
        TestSignalName => "CLK",
        Period => tperiod_CLK,
        PulseWidthHigh => tpw_CLK_posedge,
        PulseWidthLow => tpw_CLK_negedge,
        PeriodData => periodcheckinfo_CLK,
        Violation => tviol_CLK_CLK,
        MsgOn => MsgOn, XOn => XOn,
        HeaderMsg => InstancePath,
        CheckEnabled => TRUE,
        MsgSeverity => warning);

    END IF;

    IOLDO_zd 	:= IOLDO_out;

    VitalPathDelay01 (
      OutSignal => IOLDO, OutSignalName => "IOLDO", OutTemp => IOLDO_zd,
      Paths      => (0 => (InputChangeTime => CLK_dly'last_event,
                           PathDelay => tpd_CLK_IOLDO,
                           PathCondition => TRUE)),
      GlitchData => IOLDO_GlitchData,
      Mode       => ondetect, XOn => XOn, MsgOn => MsgOn);

    END PROCESS;

  end Structure;

-- entity vcc
  library IEEE, vital2000, ECP5U;
  use IEEE.STD_LOGIC_1164.all;
  use vital2000.vital_timing.all;
  use ECP5U.COMPONENTS.ALL;

  entity vcc is
    port (PWR1: out Std_logic);

    ATTRIBUTE Vital_Level0 OF vcc : ENTITY IS TRUE;

  end vcc;

  architecture Structure of vcc is
  begin
    INST1: VHI
      port map (Z=>PWR1);
  end Structure;

-- entity rf_sel_0B
  library IEEE, vital2000, ECP5U;
  use IEEE.STD_LOGIC_1164.all;
  use vital2000.vital_timing.all;
  use ECP5U.COMPONENTS.ALL;

  entity rf_sel_0B is
    -- miscellaneous vital GENERICs
    GENERIC (
      TimingChecksOn	: boolean := TRUE;
      XOn           	: boolean := FALSE;
      MsgOn         	: boolean := TRUE;
      InstancePath  	: string := "rf_sel_0B");

    port (rfsel0: out Std_logic);

    ATTRIBUTE Vital_Level0 OF rf_sel_0B : ENTITY IS TRUE;

  end rf_sel_0B;

  architecture Structure of rf_sel_0B is
    ATTRIBUTE Vital_Level0 OF Structure : ARCHITECTURE IS TRUE;

    signal rfsel0_out 	: std_logic := 'X';

    signal VCCI: Std_logic;
    component sapiobuf0002
      port (I: in Std_logic; PAD: out Std_logic);
    end component;
    component vcc
      port (PWR1: out Std_logic);
    end component;
  begin
    rf_sel_0_pad: sapiobuf0002
      port map (I=>VCCI, PAD=>rfsel0_out);
    DRIVEVCC: vcc
      port map (PWR1=>VCCI);

    --  INPUT PATH DELAYs
    WireDelay : BLOCK
    BEGIN
    END BLOCK;

    VitalBehavior : PROCESS (rfsel0_out)


    BEGIN

    IF (TimingChecksOn) THEN

    END IF;

    rfsel0 	<= rfsel0_out;


    END PROCESS;

  end Structure;

-- entity rf_sel_1B
  library IEEE, vital2000, ECP5U;
  use IEEE.STD_LOGIC_1164.all;
  use vital2000.vital_timing.all;
  use ECP5U.COMPONENTS.ALL;

  entity rf_sel_1B is
    -- miscellaneous vital GENERICs
    GENERIC (
      TimingChecksOn	: boolean := TRUE;
      XOn           	: boolean := FALSE;
      MsgOn         	: boolean := TRUE;
      InstancePath  	: string := "rf_sel_1B");

    port (rfsel1: out Std_logic);

    ATTRIBUTE Vital_Level0 OF rf_sel_1B : ENTITY IS TRUE;

  end rf_sel_1B;

  architecture Structure of rf_sel_1B is
    ATTRIBUTE Vital_Level0 OF Structure : ARCHITECTURE IS TRUE;

    signal rfsel1_out 	: std_logic := 'X';

    signal VCCI: Std_logic;
    component sapiobuf0002
      port (I: in Std_logic; PAD: out Std_logic);
    end component;
    component vcc
      port (PWR1: out Std_logic);
    end component;
  begin
    rf_sel_1_pad: sapiobuf0002
      port map (I=>VCCI, PAD=>rfsel1_out);
    DRIVEVCC: vcc
      port map (PWR1=>VCCI);

    --  INPUT PATH DELAYs
    WireDelay : BLOCK
    BEGIN
    END BLOCK;

    VitalBehavior : PROCESS (rfsel1_out)


    BEGIN

    IF (TimingChecksOn) THEN

    END IF;

    rfsel1 	<= rfsel1_out;


    END PROCESS;

  end Structure;

-- entity rf_sel_2B
  library IEEE, vital2000, ECP5U;
  use IEEE.STD_LOGIC_1164.all;
  use vital2000.vital_timing.all;
  use ECP5U.COMPONENTS.ALL;

  entity rf_sel_2B is
    -- miscellaneous vital GENERICs
    GENERIC (
      TimingChecksOn	: boolean := TRUE;
      XOn           	: boolean := FALSE;
      MsgOn         	: boolean := TRUE;
      InstancePath  	: string := "rf_sel_2B");

    port (rfsel2: out Std_logic);

    ATTRIBUTE Vital_Level0 OF rf_sel_2B : ENTITY IS TRUE;

  end rf_sel_2B;

  architecture Structure of rf_sel_2B is
    ATTRIBUTE Vital_Level0 OF Structure : ARCHITECTURE IS TRUE;

    signal rfsel2_out 	: std_logic := 'X';

    signal GNDI: Std_logic;
    component gnd
      port (PWR0: out Std_logic);
    end component;
    component sapiobuf0002
      port (I: in Std_logic; PAD: out Std_logic);
    end component;
  begin
    rf_sel_2_pad: sapiobuf0002
      port map (I=>GNDI, PAD=>rfsel2_out);
    DRIVEGND: gnd
      port map (PWR0=>GNDI);

    --  INPUT PATH DELAYs
    WireDelay : BLOCK
    BEGIN
    END BLOCK;

    VitalBehavior : PROCESS (rfsel2_out)


    BEGIN

    IF (TimingChecksOn) THEN

    END IF;

    rfsel2 	<= rfsel2_out;


    END PROCESS;

  end Structure;

-- entity rf_sel_3B
  library IEEE, vital2000, ECP5U;
  use IEEE.STD_LOGIC_1164.all;
  use vital2000.vital_timing.all;
  use ECP5U.COMPONENTS.ALL;

  entity rf_sel_3B is
    -- miscellaneous vital GENERICs
    GENERIC (
      TimingChecksOn	: boolean := TRUE;
      XOn           	: boolean := FALSE;
      MsgOn         	: boolean := TRUE;
      InstancePath  	: string := "rf_sel_3B");

    port (rfsel3: out Std_logic);

    ATTRIBUTE Vital_Level0 OF rf_sel_3B : ENTITY IS TRUE;

  end rf_sel_3B;

  architecture Structure of rf_sel_3B is
    ATTRIBUTE Vital_Level0 OF Structure : ARCHITECTURE IS TRUE;

    signal rfsel3_out 	: std_logic := 'X';

    signal GNDI: Std_logic;
    component gnd
      port (PWR0: out Std_logic);
    end component;
    component sapiobuf0002
      port (I: in Std_logic; PAD: out Std_logic);
    end component;
  begin
    rf_sel_3_pad: sapiobuf0002
      port map (I=>GNDI, PAD=>rfsel3_out);
    DRIVEGND: gnd
      port map (PWR0=>GNDI);

    --  INPUT PATH DELAYs
    WireDelay : BLOCK
    BEGIN
    END BLOCK;

    VitalBehavior : PROCESS (rfsel3_out)


    BEGIN

    IF (TimingChecksOn) THEN

    END IF;

    rfsel3 	<= rfsel3_out;


    END PROCESS;

  end Structure;

-- entity subg_fem_sel0B
  library IEEE, vital2000, ECP5U;
  use IEEE.STD_LOGIC_1164.all;
  use vital2000.vital_timing.all;
  use ECP5U.COMPONENTS.ALL;

  entity subg_fem_sel0B is
    -- miscellaneous vital GENERICs
    GENERIC (
      TimingChecksOn	: boolean := TRUE;
      XOn           	: boolean := FALSE;
      MsgOn         	: boolean := TRUE;
      InstancePath  	: string := "subg_fem_sel0B");

    port (subgfemsel0: out Std_logic);

    ATTRIBUTE Vital_Level0 OF subg_fem_sel0B : ENTITY IS TRUE;

  end subg_fem_sel0B;

  architecture Structure of subg_fem_sel0B is
    ATTRIBUTE Vital_Level0 OF Structure : ARCHITECTURE IS TRUE;

    signal subgfemsel0_out 	: std_logic := 'X';

    signal VCCI: Std_logic;
    component sapiobuf0002
      port (I: in Std_logic; PAD: out Std_logic);
    end component;
    component vcc
      port (PWR1: out Std_logic);
    end component;
  begin
    subg_fem_sel0_pad: sapiobuf0002
      port map (I=>VCCI, PAD=>subgfemsel0_out);
    DRIVEVCC: vcc
      port map (PWR1=>VCCI);

    --  INPUT PATH DELAYs
    WireDelay : BLOCK
    BEGIN
    END BLOCK;

    VitalBehavior : PROCESS (subgfemsel0_out)


    BEGIN

    IF (TimingChecksOn) THEN

    END IF;

    subgfemsel0 	<= subgfemsel0_out;


    END PROCESS;

  end Structure;

-- entity subg_fem_sel1B
  library IEEE, vital2000, ECP5U;
  use IEEE.STD_LOGIC_1164.all;
  use vital2000.vital_timing.all;
  use ECP5U.COMPONENTS.ALL;

  entity subg_fem_sel1B is
    -- miscellaneous vital GENERICs
    GENERIC (
      TimingChecksOn	: boolean := TRUE;
      XOn           	: boolean := FALSE;
      MsgOn         	: boolean := TRUE;
      InstancePath  	: string := "subg_fem_sel1B");

    port (subgfemsel1: out Std_logic);

    ATTRIBUTE Vital_Level0 OF subg_fem_sel1B : ENTITY IS TRUE;

  end subg_fem_sel1B;

  architecture Structure of subg_fem_sel1B is
    ATTRIBUTE Vital_Level0 OF Structure : ARCHITECTURE IS TRUE;

    signal subgfemsel1_out 	: std_logic := 'X';

    signal GNDI: Std_logic;
    component gnd
      port (PWR0: out Std_logic);
    end component;
    component sapiobuf0002
      port (I: in Std_logic; PAD: out Std_logic);
    end component;
  begin
    subg_fem_sel1_pad: sapiobuf0002
      port map (I=>GNDI, PAD=>subgfemsel1_out);
    DRIVEGND: gnd
      port map (PWR0=>GNDI);

    --  INPUT PATH DELAYs
    WireDelay : BLOCK
    BEGIN
    END BLOCK;

    VitalBehavior : PROCESS (subgfemsel1_out)


    BEGIN

    IF (TimingChecksOn) THEN

    END IF;

    subgfemsel1 	<= subgfemsel1_out;


    END PROCESS;

  end Structure;

-- entity wifi_fem_sel0B
  library IEEE, vital2000, ECP5U;
  use IEEE.STD_LOGIC_1164.all;
  use vital2000.vital_timing.all;
  use ECP5U.COMPONENTS.ALL;

  entity wifi_fem_sel0B is
    -- miscellaneous vital GENERICs
    GENERIC (
      TimingChecksOn	: boolean := TRUE;
      XOn           	: boolean := FALSE;
      MsgOn         	: boolean := TRUE;
      InstancePath  	: string := "wifi_fem_sel0B");

    port (wififemsel0: out Std_logic);

    ATTRIBUTE Vital_Level0 OF wifi_fem_sel0B : ENTITY IS TRUE;

  end wifi_fem_sel0B;

  architecture Structure of wifi_fem_sel0B is
    ATTRIBUTE Vital_Level0 OF Structure : ARCHITECTURE IS TRUE;

    signal wififemsel0_out 	: std_logic := 'X';

    signal GNDI: Std_logic;
    component gnd
      port (PWR0: out Std_logic);
    end component;
    component sapiobuf0002
      port (I: in Std_logic; PAD: out Std_logic);
    end component;
  begin
    wifi_fem_sel0_pad: sapiobuf0002
      port map (I=>GNDI, PAD=>wififemsel0_out);
    DRIVEGND: gnd
      port map (PWR0=>GNDI);

    --  INPUT PATH DELAYs
    WireDelay : BLOCK
    BEGIN
    END BLOCK;

    VitalBehavior : PROCESS (wififemsel0_out)


    BEGIN

    IF (TimingChecksOn) THEN

    END IF;

    wififemsel0 	<= wififemsel0_out;


    END PROCESS;

  end Structure;

-- entity wifi_fem_sel1B
  library IEEE, vital2000, ECP5U;
  use IEEE.STD_LOGIC_1164.all;
  use vital2000.vital_timing.all;
  use ECP5U.COMPONENTS.ALL;

  entity wifi_fem_sel1B is
    -- miscellaneous vital GENERICs
    GENERIC (
      TimingChecksOn	: boolean := TRUE;
      XOn           	: boolean := FALSE;
      MsgOn         	: boolean := TRUE;
      InstancePath  	: string := "wifi_fem_sel1B");

    port (wififemsel1: out Std_logic);

    ATTRIBUTE Vital_Level0 OF wifi_fem_sel1B : ENTITY IS TRUE;

  end wifi_fem_sel1B;

  architecture Structure of wifi_fem_sel1B is
    ATTRIBUTE Vital_Level0 OF Structure : ARCHITECTURE IS TRUE;

    signal wififemsel1_out 	: std_logic := 'X';

    signal VCCI: Std_logic;
    component sapiobuf0002
      port (I: in Std_logic; PAD: out Std_logic);
    end component;
    component vcc
      port (PWR1: out Std_logic);
    end component;
  begin
    wifi_fem_sel1_pad: sapiobuf0002
      port map (I=>VCCI, PAD=>wififemsel1_out);
    DRIVEVCC: vcc
      port map (PWR1=>VCCI);

    --  INPUT PATH DELAYs
    WireDelay : BLOCK
    BEGIN
    END BLOCK;

    VitalBehavior : PROCESS (wififemsel1_out)


    BEGIN

    IF (TimingChecksOn) THEN

    END IF;

    wififemsel1 	<= wififemsel1_out;


    END PROCESS;

  end Structure;

-- entity wifi_fem_csdB
  library IEEE, vital2000, ECP5U;
  use IEEE.STD_LOGIC_1164.all;
  use vital2000.vital_timing.all;
  use ECP5U.COMPONENTS.ALL;

  entity wifi_fem_csdB is
    -- miscellaneous vital GENERICs
    GENERIC (
      TimingChecksOn	: boolean := TRUE;
      XOn           	: boolean := FALSE;
      MsgOn         	: boolean := TRUE;
      InstancePath  	: string := "wifi_fem_csdB");

    port (wififemcsd: out Std_logic);

    ATTRIBUTE Vital_Level0 OF wifi_fem_csdB : ENTITY IS TRUE;

  end wifi_fem_csdB;

  architecture Structure of wifi_fem_csdB is
    ATTRIBUTE Vital_Level0 OF Structure : ARCHITECTURE IS TRUE;

    signal wififemcsd_out 	: std_logic := 'X';

    signal GNDI: Std_logic;
    component gnd
      port (PWR0: out Std_logic);
    end component;
    component sapiobuf0002
      port (I: in Std_logic; PAD: out Std_logic);
    end component;
  begin
    wifi_fem_csd_pad: sapiobuf0002
      port map (I=>GNDI, PAD=>wififemcsd_out);
    DRIVEGND: gnd
      port map (PWR0=>GNDI);

    --  INPUT PATH DELAYs
    WireDelay : BLOCK
    BEGIN
    END BLOCK;

    VitalBehavior : PROCESS (wififemcsd_out)


    BEGIN

    IF (TimingChecksOn) THEN

    END IF;

    wififemcsd 	<= wififemcsd_out;


    END PROCESS;

  end Structure;

-- entity wifi_fem_cpsB
  library IEEE, vital2000, ECP5U;
  use IEEE.STD_LOGIC_1164.all;
  use vital2000.vital_timing.all;
  use ECP5U.COMPONENTS.ALL;

  entity wifi_fem_cpsB is
    -- miscellaneous vital GENERICs
    GENERIC (
      TimingChecksOn	: boolean := TRUE;
      XOn           	: boolean := FALSE;
      MsgOn         	: boolean := TRUE;
      InstancePath  	: string := "wifi_fem_cpsB");

    port (wififemcps: out Std_logic);

    ATTRIBUTE Vital_Level0 OF wifi_fem_cpsB : ENTITY IS TRUE;

  end wifi_fem_cpsB;

  architecture Structure of wifi_fem_cpsB is
    ATTRIBUTE Vital_Level0 OF Structure : ARCHITECTURE IS TRUE;

    signal wififemcps_out 	: std_logic := 'X';

    signal GNDI: Std_logic;
    component gnd
      port (PWR0: out Std_logic);
    end component;
    component sapiobuf0002
      port (I: in Std_logic; PAD: out Std_logic);
    end component;
  begin
    wifi_fem_cps_pad: sapiobuf0002
      port map (I=>GNDI, PAD=>wififemcps_out);
    DRIVEGND: gnd
      port map (PWR0=>GNDI);

    --  INPUT PATH DELAYs
    WireDelay : BLOCK
    BEGIN
    END BLOCK;

    VitalBehavior : PROCESS (wififemcps_out)


    BEGIN

    IF (TimingChecksOn) THEN

    END IF;

    wififemcps 	<= wififemcps_out;


    END PROCESS;

  end Structure;

-- entity wifi_fem_crxB
  library IEEE, vital2000, ECP5U;
  use IEEE.STD_LOGIC_1164.all;
  use vital2000.vital_timing.all;
  use ECP5U.COMPONENTS.ALL;

  entity wifi_fem_crxB is
    -- miscellaneous vital GENERICs
    GENERIC (
      TimingChecksOn	: boolean := TRUE;
      XOn           	: boolean := FALSE;
      MsgOn         	: boolean := TRUE;
      InstancePath  	: string := "wifi_fem_crxB");

    port (wififemcrx: out Std_logic);

    ATTRIBUTE Vital_Level0 OF wifi_fem_crxB : ENTITY IS TRUE;

  end wifi_fem_crxB;

  architecture Structure of wifi_fem_crxB is
    ATTRIBUTE Vital_Level0 OF Structure : ARCHITECTURE IS TRUE;

    signal wififemcrx_out 	: std_logic := 'X';

    signal GNDI: Std_logic;
    component gnd
      port (PWR0: out Std_logic);
    end component;
    component sapiobuf0002
      port (I: in Std_logic; PAD: out Std_logic);
    end component;
  begin
    wifi_fem_crx_pad: sapiobuf0002
      port map (I=>GNDI, PAD=>wififemcrx_out);
    DRIVEGND: gnd
      port map (PWR0=>GNDI);

    --  INPUT PATH DELAYs
    WireDelay : BLOCK
    BEGIN
    END BLOCK;

    VitalBehavior : PROCESS (wififemcrx_out)


    BEGIN

    IF (TimingChecksOn) THEN

    END IF;

    wififemcrx 	<= wififemcrx_out;


    END PROCESS;

  end Structure;

-- entity wifi_fem_ctxB
  library IEEE, vital2000, ECP5U;
  use IEEE.STD_LOGIC_1164.all;
  use vital2000.vital_timing.all;
  use ECP5U.COMPONENTS.ALL;

  entity wifi_fem_ctxB is
    -- miscellaneous vital GENERICs
    GENERIC (
      TimingChecksOn	: boolean := TRUE;
      XOn           	: boolean := FALSE;
      MsgOn         	: boolean := TRUE;
      InstancePath  	: string := "wifi_fem_ctxB");

    port (wififemctx: out Std_logic);

    ATTRIBUTE Vital_Level0 OF wifi_fem_ctxB : ENTITY IS TRUE;

  end wifi_fem_ctxB;

  architecture Structure of wifi_fem_ctxB is
    ATTRIBUTE Vital_Level0 OF Structure : ARCHITECTURE IS TRUE;

    signal wififemctx_out 	: std_logic := 'X';

    signal GNDI: Std_logic;
    component gnd
      port (PWR0: out Std_logic);
    end component;
    component sapiobuf0002
      port (I: in Std_logic; PAD: out Std_logic);
    end component;
  begin
    wifi_fem_ctx_pad: sapiobuf0002
      port map (I=>GNDI, PAD=>wififemctx_out);
    DRIVEGND: gnd
      port map (PWR0=>GNDI);

    --  INPUT PATH DELAYs
    WireDelay : BLOCK
    BEGIN
    END BLOCK;

    VitalBehavior : PROCESS (wififemctx_out)


    BEGIN

    IF (TimingChecksOn) THEN

    END IF;

    wififemctx 	<= wififemctx_out;


    END PROCESS;

  end Structure;

-- entity wifi_fem_chlB
  library IEEE, vital2000, ECP5U;
  use IEEE.STD_LOGIC_1164.all;
  use vital2000.vital_timing.all;
  use ECP5U.COMPONENTS.ALL;

  entity wifi_fem_chlB is
    -- miscellaneous vital GENERICs
    GENERIC (
      TimingChecksOn	: boolean := TRUE;
      XOn           	: boolean := FALSE;
      MsgOn         	: boolean := TRUE;
      InstancePath  	: string := "wifi_fem_chlB");

    port (wififemchl: out Std_logic);

    ATTRIBUTE Vital_Level0 OF wifi_fem_chlB : ENTITY IS TRUE;

  end wifi_fem_chlB;

  architecture Structure of wifi_fem_chlB is
    ATTRIBUTE Vital_Level0 OF Structure : ARCHITECTURE IS TRUE;

    signal wififemchl_out 	: std_logic := 'X';

    signal GNDI: Std_logic;
    component gnd
      port (PWR0: out Std_logic);
    end component;
    component sapiobuf0002
      port (I: in Std_logic; PAD: out Std_logic);
    end component;
  begin
    wifi_fem_chl_pad: sapiobuf0002
      port map (I=>GNDI, PAD=>wififemchl_out);
    DRIVEGND: gnd
      port map (PWR0=>GNDI);

    --  INPUT PATH DELAYs
    WireDelay : BLOCK
    BEGIN
    END BLOCK;

    VitalBehavior : PROCESS (wififemchl_out)


    BEGIN

    IF (TimingChecksOn) THEN

    END IF;

    wififemchl 	<= wififemchl_out;


    END PROCESS;

  end Structure;

-- entity subg_fem_cpsB
  library IEEE, vital2000, ECP5U;
  use IEEE.STD_LOGIC_1164.all;
  use vital2000.vital_timing.all;
  use ECP5U.COMPONENTS.ALL;

  entity subg_fem_cpsB is
    -- miscellaneous vital GENERICs
    GENERIC (
      TimingChecksOn	: boolean := TRUE;
      XOn           	: boolean := FALSE;
      MsgOn         	: boolean := TRUE;
      InstancePath  	: string := "subg_fem_cpsB");

    port (subgfemcps: out Std_logic);

    ATTRIBUTE Vital_Level0 OF subg_fem_cpsB : ENTITY IS TRUE;

  end subg_fem_cpsB;

  architecture Structure of subg_fem_cpsB is
    ATTRIBUTE Vital_Level0 OF Structure : ARCHITECTURE IS TRUE;

    signal subgfemcps_out 	: std_logic := 'X';

    signal GNDI: Std_logic;
    component gnd
      port (PWR0: out Std_logic);
    end component;
    component sapiobuf0002
      port (I: in Std_logic; PAD: out Std_logic);
    end component;
  begin
    subg_fem_cps_pad: sapiobuf0002
      port map (I=>GNDI, PAD=>subgfemcps_out);
    DRIVEGND: gnd
      port map (PWR0=>GNDI);

    --  INPUT PATH DELAYs
    WireDelay : BLOCK
    BEGIN
    END BLOCK;

    VitalBehavior : PROCESS (subgfemcps_out)


    BEGIN

    IF (TimingChecksOn) THEN

    END IF;

    subgfemcps 	<= subgfemcps_out;


    END PROCESS;

  end Structure;

-- entity subg_fem_ctxB
  library IEEE, vital2000, ECP5U;
  use IEEE.STD_LOGIC_1164.all;
  use vital2000.vital_timing.all;
  use ECP5U.COMPONENTS.ALL;

  entity subg_fem_ctxB is
    -- miscellaneous vital GENERICs
    GENERIC (
      TimingChecksOn	: boolean := TRUE;
      XOn           	: boolean := FALSE;
      MsgOn         	: boolean := TRUE;
      InstancePath  	: string := "subg_fem_ctxB");

    port (subgfemctx: out Std_logic);

    ATTRIBUTE Vital_Level0 OF subg_fem_ctxB : ENTITY IS TRUE;

  end subg_fem_ctxB;

  architecture Structure of subg_fem_ctxB is
    ATTRIBUTE Vital_Level0 OF Structure : ARCHITECTURE IS TRUE;

    signal subgfemctx_out 	: std_logic := 'X';

    signal GNDI: Std_logic;
    component gnd
      port (PWR0: out Std_logic);
    end component;
    component sapiobuf0002
      port (I: in Std_logic; PAD: out Std_logic);
    end component;
  begin
    subg_fem_ctx_pad: sapiobuf0002
      port map (I=>GNDI, PAD=>subgfemctx_out);
    DRIVEGND: gnd
      port map (PWR0=>GNDI);

    --  INPUT PATH DELAYs
    WireDelay : BLOCK
    BEGIN
    END BLOCK;

    VitalBehavior : PROCESS (subgfemctx_out)


    BEGIN

    IF (TimingChecksOn) THEN

    END IF;

    subgfemctx 	<= subgfemctx_out;


    END PROCESS;

  end Structure;

-- entity subg_fem_csdB
  library IEEE, vital2000, ECP5U;
  use IEEE.STD_LOGIC_1164.all;
  use vital2000.vital_timing.all;
  use ECP5U.COMPONENTS.ALL;

  entity subg_fem_csdB is
    -- miscellaneous vital GENERICs
    GENERIC (
      TimingChecksOn	: boolean := TRUE;
      XOn           	: boolean := FALSE;
      MsgOn         	: boolean := TRUE;
      InstancePath  	: string := "subg_fem_csdB");

    port (subgfemcsd: out Std_logic);

    ATTRIBUTE Vital_Level0 OF subg_fem_csdB : ENTITY IS TRUE;

  end subg_fem_csdB;

  architecture Structure of subg_fem_csdB is
    ATTRIBUTE Vital_Level0 OF Structure : ARCHITECTURE IS TRUE;

    signal subgfemcsd_out 	: std_logic := 'X';

    signal GNDI: Std_logic;
    component gnd
      port (PWR0: out Std_logic);
    end component;
    component sapiobuf0002
      port (I: in Std_logic; PAD: out Std_logic);
    end component;
  begin
    subg_fem_csd_pad: sapiobuf0002
      port map (I=>GNDI, PAD=>subgfemcsd_out);
    DRIVEGND: gnd
      port map (PWR0=>GNDI);

    --  INPUT PATH DELAYs
    WireDelay : BLOCK
    BEGIN
    END BLOCK;

    VitalBehavior : PROCESS (subgfemcsd_out)


    BEGIN

    IF (TimingChecksOn) THEN

    END IF;

    subgfemcsd 	<= subgfemcsd_out;


    END PROCESS;

  end Structure;

-- entity sapiobuf0003
  library IEEE, vital2000, ECP5U;
  use IEEE.STD_LOGIC_1164.all;
  use vital2000.vital_timing.all;
  use ECP5U.COMPONENTS.ALL;

  entity sapiobuf0003 is
    port (I: in Std_logic; PAD: out Std_logic);

    ATTRIBUTE Vital_Level0 OF sapiobuf0003 : ENTITY IS TRUE;

  end sapiobuf0003;

  architecture Structure of sapiobuf0003 is
  begin
    INST5: OB
      port map (I=>I, O=>PAD);
  end Structure;

-- entity spi1_sckB
  library IEEE, vital2000, ECP5U;
  use IEEE.STD_LOGIC_1164.all;
  use vital2000.vital_timing.all;
  use ECP5U.COMPONENTS.ALL;

  entity spi1_sckB is
    -- miscellaneous vital GENERICs
    GENERIC (
      TimingChecksOn	: boolean := TRUE;
      XOn           	: boolean := FALSE;
      MsgOn         	: boolean := TRUE;
      InstancePath  	: string := "spi1_sckB";

      tipd_IOLDO  	: VitalDelayType01 := (0 ns, 0 ns);
      tpd_IOLDO_spi1sck	 : VitalDelayType01 := (0 ns, 0 ns));

    port (IOLDO: in Std_logic; spi1sck: out Std_logic);

    ATTRIBUTE Vital_Level0 OF spi1_sckB : ENTITY IS TRUE;

  end spi1_sckB;

  architecture Structure of spi1_sckB is
    ATTRIBUTE Vital_Level0 OF Structure : ARCHITECTURE IS TRUE;

    signal IOLDO_ipd 	: std_logic := 'X';
    signal spi1sck_out 	: std_logic := 'X';

    component sapiobuf0003
      port (I: in Std_logic; PAD: out Std_logic);
    end component;
  begin
    spi1_sck_pad: sapiobuf0003
      port map (I=>IOLDO_ipd, PAD=>spi1sck_out);

    --  INPUT PATH DELAYs
    WireDelay : BLOCK
    BEGIN
      VitalWireDelay(IOLDO_ipd, IOLDO, tipd_IOLDO);
    END BLOCK;

    VitalBehavior : PROCESS (IOLDO_ipd, spi1sck_out)
    VARIABLE spi1sck_zd         	: std_logic := 'X';
    VARIABLE spi1sck_GlitchData 	: VitalGlitchDataType;


    BEGIN

    IF (TimingChecksOn) THEN

    END IF;

    spi1sck_zd 	:= spi1sck_out;

    VitalPathDelay01 (
      OutSignal => spi1sck, OutSignalName => "spi1sck", OutTemp => spi1sck_zd,
      Paths      => (0 => (InputChangeTime => IOLDO_ipd'last_event,
                           PathDelay => tpd_IOLDO_spi1sck,
                           PathCondition => TRUE)),
      GlitchData => spi1sck_GlitchData,
      Mode       => vitaltransport, XOn => XOn, MsgOn => MsgOn);

    END PROCESS;

  end Structure;

-- entity spi1_sck_MGIOL
  library IEEE, vital2000, ECP5U;
  use IEEE.STD_LOGIC_1164.all;
  use vital2000.vital_timing.all;
  use ECP5U.COMPONENTS.ALL;

  entity spi1_sck_MGIOL is
    -- miscellaneous vital GENERICs
    GENERIC (
      TimingChecksOn	: boolean := TRUE;
      XOn           	: boolean := FALSE;
      MsgOn         	: boolean := TRUE;
      InstancePath  	: string := "spi1_sck_MGIOL";

      tipd_TXDATA0  	: VitalDelayType01 := (0 ns, 0 ns);
      tipd_LSR  	: VitalDelayType01 := (0 ns, 0 ns);
      tipd_CLK  	: VitalDelayType01 := (0 ns, 0 ns);
      tpd_CLK_IOLDO	 : VitalDelayType01 := (0 ns, 0 ns);
      ticd_CLK	: VitalDelayType := 0 ns;
      tisd_TXDATA0_CLK	: VitalDelayType := 0 ns;
      tsetup_TXDATA0_CLK_noedge_posedge	: VitalDelayType := 0 ns;
      thold_TXDATA0_CLK_noedge_posedge	: VitalDelayType := 0 ns;
      tperiod_CLK 	: VitalDelayType := 0 ns;
      tpw_CLK_posedge	: VitalDelayType := 0 ns;
      tpw_CLK_negedge	: VitalDelayType := 0 ns);

    port (IOLDO: out Std_logic; TXDATA0: in Std_logic; LSR: in Std_logic; 
          CLK: in Std_logic);

    ATTRIBUTE Vital_Level0 OF spi1_sck_MGIOL : ENTITY IS TRUE;

  end spi1_sck_MGIOL;

  architecture Structure of spi1_sck_MGIOL is
    ATTRIBUTE Vital_Level0 OF Structure : ARCHITECTURE IS TRUE;

    signal IOLDO_out 	: std_logic := 'X';
    signal TXDATA0_ipd 	: std_logic := 'X';
    signal TXDATA0_dly 	: std_logic := 'X';
    signal LSR_ipd 	: std_logic := 'X';
    signal CLK_ipd 	: std_logic := 'X';
    signal CLK_dly 	: std_logic := 'X';

    signal GNDI: Std_logic;
    component gnd
      port (PWR0: out Std_logic);
    end component;
    component sapoddrx1
      port (D0: in Std_logic; D1: in Std_logic; SCLK: in Std_logic; 
            RST: in Std_logic; Q: out Std_logic);
    end component;
  begin
    subg_i_spi_sclk_ddr: sapoddrx1
      port map (D0=>TXDATA0_dly, D1=>GNDI, SCLK=>CLK_dly, RST=>LSR_ipd, 
                Q=>IOLDO_out);
    DRIVEGND: gnd
      port map (PWR0=>GNDI);

    --  INPUT PATH DELAYs
    WireDelay : BLOCK
    BEGIN
      VitalWireDelay(TXDATA0_ipd, TXDATA0, tipd_TXDATA0);
      VitalWireDelay(LSR_ipd, LSR, tipd_LSR);
      VitalWireDelay(CLK_ipd, CLK, tipd_CLK);
    END BLOCK;

    --  Setup and Hold DELAYs
    SignalDelay : BLOCK
    BEGIN
      VitalSignalDelay(TXDATA0_dly, TXDATA0_ipd, tisd_TXDATA0_CLK);
      VitalSignalDelay(CLK_dly, CLK_ipd, ticd_CLK);
    END BLOCK;

    VitalBehavior : PROCESS (IOLDO_out, TXDATA0_dly, LSR_ipd, CLK_dly)
    VARIABLE IOLDO_zd         	: std_logic := 'X';
    VARIABLE IOLDO_GlitchData 	: VitalGlitchDataType;

    VARIABLE tviol_TXDATA0_CLK       	: x01 := '0';
    VARIABLE TXDATA0_CLK_TimingDatash	: VitalTimingDataType;
    VARIABLE tviol_CLK_CLK          	: x01 := '0';
    VARIABLE periodcheckinfo_CLK	: VitalPeriodDataType;

    BEGIN

    IF (TimingChecksOn) THEN
      VitalSetupHoldCheck (
        TestSignal => TXDATA0_dly,
        TestSignalName => "TXDATA0",
        TestDelay => tisd_TXDATA0_CLK,
        RefSignal => CLK_dly,
        RefSignalName => "CLK",
        RefDelay => ticd_CLK,
        SetupHigh => tsetup_TXDATA0_CLK_noedge_posedge,
        SetupLow => tsetup_TXDATA0_CLK_noedge_posedge,
        HoldHigh => thold_TXDATA0_CLK_noedge_posedge,
        HoldLow => thold_TXDATA0_CLK_noedge_posedge,
        CheckEnabled => TRUE,
        RefTransition => '/',
        MsgOn => MsgOn, XOn => XOn,
        HeaderMsg => InstancePath,
        TimingData => TXDATA0_CLK_TimingDatash,
        Violation => tviol_TXDATA0_CLK,
        MsgSeverity => warning);
      VitalPeriodPulseCheck (
        TestSignal => CLK_ipd,
        TestSignalName => "CLK",
        Period => tperiod_CLK,
        PulseWidthHigh => tpw_CLK_posedge,
        PulseWidthLow => tpw_CLK_negedge,
        PeriodData => periodcheckinfo_CLK,
        Violation => tviol_CLK_CLK,
        MsgOn => MsgOn, XOn => XOn,
        HeaderMsg => InstancePath,
        CheckEnabled => TRUE,
        MsgSeverity => warning);

    END IF;

    IOLDO_zd 	:= IOLDO_out;

    VitalPathDelay01 (
      OutSignal => IOLDO, OutSignalName => "IOLDO", OutTemp => IOLDO_zd,
      Paths      => (0 => (InputChangeTime => CLK_dly'last_event,
                           PathDelay => tpd_CLK_IOLDO,
                           PathCondition => TRUE)),
      GlitchData => IOLDO_GlitchData,
      Mode       => ondetect, XOn => XOn, MsgOn => MsgOn);

    END PROCESS;

  end Structure;

-- entity spi1_mosiB
  library IEEE, vital2000, ECP5U;
  use IEEE.STD_LOGIC_1164.all;
  use vital2000.vital_timing.all;
  use ECP5U.COMPONENTS.ALL;

  entity spi1_mosiB is
    -- miscellaneous vital GENERICs
    GENERIC (
      TimingChecksOn	: boolean := TRUE;
      XOn           	: boolean := FALSE;
      MsgOn         	: boolean := TRUE;
      InstancePath  	: string := "spi1_mosiB";

      tipd_IOLDO  	: VitalDelayType01 := (0 ns, 0 ns);
      tpd_IOLDO_spi1mosi	 : VitalDelayType01 := (0 ns, 0 ns));

    port (IOLDO: in Std_logic; spi1mosi: out Std_logic);

    ATTRIBUTE Vital_Level0 OF spi1_mosiB : ENTITY IS TRUE;

  end spi1_mosiB;

  architecture Structure of spi1_mosiB is
    ATTRIBUTE Vital_Level0 OF Structure : ARCHITECTURE IS TRUE;

    signal IOLDO_ipd 	: std_logic := 'X';
    signal spi1mosi_out 	: std_logic := 'X';

    component sapiobuf0003
      port (I: in Std_logic; PAD: out Std_logic);
    end component;
  begin
    spi1_mosi_pad: sapiobuf0003
      port map (I=>IOLDO_ipd, PAD=>spi1mosi_out);

    --  INPUT PATH DELAYs
    WireDelay : BLOCK
    BEGIN
      VitalWireDelay(IOLDO_ipd, IOLDO, tipd_IOLDO);
    END BLOCK;

    VitalBehavior : PROCESS (IOLDO_ipd, spi1mosi_out)
    VARIABLE spi1mosi_zd         	: std_logic := 'X';
    VARIABLE spi1mosi_GlitchData 	: VitalGlitchDataType;


    BEGIN

    IF (TimingChecksOn) THEN

    END IF;

    spi1mosi_zd 	:= spi1mosi_out;

    VitalPathDelay01 (
      OutSignal => spi1mosi, OutSignalName => "spi1mosi", OutTemp => spi1mosi_zd,
      Paths      => (0 => (InputChangeTime => IOLDO_ipd'last_event,
                           PathDelay => tpd_IOLDO_spi1mosi,
                           PathCondition => TRUE)),
      GlitchData => spi1mosi_GlitchData,
      Mode       => vitaltransport, XOn => XOn, MsgOn => MsgOn);

    END PROCESS;

  end Structure;

-- entity spi1_mosi_MGIOL
  library IEEE, vital2000, ECP5U;
  use IEEE.STD_LOGIC_1164.all;
  use vital2000.vital_timing.all;
  use ECP5U.COMPONENTS.ALL;

  entity spi1_mosi_MGIOL is
    -- miscellaneous vital GENERICs
    GENERIC (
      TimingChecksOn	: boolean := TRUE;
      XOn           	: boolean := FALSE;
      MsgOn         	: boolean := TRUE;
      InstancePath  	: string := "spi1_mosi_MGIOL";

      tipd_TXDATA0  	: VitalDelayType01 := (0 ns, 0 ns);
      tipd_TXDATA1  	: VitalDelayType01 := (0 ns, 0 ns);
      tipd_LSR  	: VitalDelayType01 := (0 ns, 0 ns);
      tipd_CLK  	: VitalDelayType01 := (0 ns, 0 ns);
      tpd_CLK_IOLDO	 : VitalDelayType01 := (0 ns, 0 ns);
      ticd_CLK	: VitalDelayType := 0 ns;
      tisd_TXDATA0_CLK	: VitalDelayType := 0 ns;
      tsetup_TXDATA0_CLK_noedge_posedge	: VitalDelayType := 0 ns;
      thold_TXDATA0_CLK_noedge_posedge	: VitalDelayType := 0 ns;
      tisd_TXDATA1_CLK	: VitalDelayType := 0 ns;
      tsetup_TXDATA1_CLK_noedge_posedge	: VitalDelayType := 0 ns;
      thold_TXDATA1_CLK_noedge_posedge	: VitalDelayType := 0 ns;
      tperiod_CLK 	: VitalDelayType := 0 ns;
      tpw_CLK_posedge	: VitalDelayType := 0 ns;
      tpw_CLK_negedge	: VitalDelayType := 0 ns);

    port (IOLDO: out Std_logic; TXDATA0: in Std_logic; TXDATA1: in Std_logic; 
          LSR: in Std_logic; CLK: in Std_logic);

    ATTRIBUTE Vital_Level0 OF spi1_mosi_MGIOL : ENTITY IS TRUE;

  end spi1_mosi_MGIOL;

  architecture Structure of spi1_mosi_MGIOL is
    ATTRIBUTE Vital_Level0 OF Structure : ARCHITECTURE IS TRUE;

    signal IOLDO_out 	: std_logic := 'X';
    signal TXDATA0_ipd 	: std_logic := 'X';
    signal TXDATA0_dly 	: std_logic := 'X';
    signal TXDATA1_ipd 	: std_logic := 'X';
    signal TXDATA1_dly 	: std_logic := 'X';
    signal LSR_ipd 	: std_logic := 'X';
    signal CLK_ipd 	: std_logic := 'X';
    signal CLK_dly 	: std_logic := 'X';

    component sapoddrx1
      port (D0: in Std_logic; D1: in Std_logic; SCLK: in Std_logic; 
            RST: in Std_logic; Q: out Std_logic);
    end component;
  begin
    subg_i_spi_mosi_ddr: sapoddrx1
      port map (D0=>TXDATA0_dly, D1=>TXDATA1_dly, SCLK=>CLK_dly, RST=>LSR_ipd, 
                Q=>IOLDO_out);

    --  INPUT PATH DELAYs
    WireDelay : BLOCK
    BEGIN
      VitalWireDelay(TXDATA0_ipd, TXDATA0, tipd_TXDATA0);
      VitalWireDelay(TXDATA1_ipd, TXDATA1, tipd_TXDATA1);
      VitalWireDelay(LSR_ipd, LSR, tipd_LSR);
      VitalWireDelay(CLK_ipd, CLK, tipd_CLK);
    END BLOCK;

    --  Setup and Hold DELAYs
    SignalDelay : BLOCK
    BEGIN
      VitalSignalDelay(TXDATA0_dly, TXDATA0_ipd, tisd_TXDATA0_CLK);
      VitalSignalDelay(TXDATA1_dly, TXDATA1_ipd, tisd_TXDATA1_CLK);
      VitalSignalDelay(CLK_dly, CLK_ipd, ticd_CLK);
    END BLOCK;

    VitalBehavior : PROCESS (IOLDO_out, TXDATA0_dly, TXDATA1_dly, LSR_ipd, 
      CLK_dly)
    VARIABLE IOLDO_zd         	: std_logic := 'X';
    VARIABLE IOLDO_GlitchData 	: VitalGlitchDataType;

    VARIABLE tviol_TXDATA0_CLK       	: x01 := '0';
    VARIABLE TXDATA0_CLK_TimingDatash	: VitalTimingDataType;
    VARIABLE tviol_TXDATA1_CLK       	: x01 := '0';
    VARIABLE TXDATA1_CLK_TimingDatash	: VitalTimingDataType;
    VARIABLE tviol_CLK_CLK          	: x01 := '0';
    VARIABLE periodcheckinfo_CLK	: VitalPeriodDataType;

    BEGIN

    IF (TimingChecksOn) THEN
      VitalSetupHoldCheck (
        TestSignal => TXDATA0_dly,
        TestSignalName => "TXDATA0",
        TestDelay => tisd_TXDATA0_CLK,
        RefSignal => CLK_dly,
        RefSignalName => "CLK",
        RefDelay => ticd_CLK,
        SetupHigh => tsetup_TXDATA0_CLK_noedge_posedge,
        SetupLow => tsetup_TXDATA0_CLK_noedge_posedge,
        HoldHigh => thold_TXDATA0_CLK_noedge_posedge,
        HoldLow => thold_TXDATA0_CLK_noedge_posedge,
        CheckEnabled => TRUE,
        RefTransition => '/',
        MsgOn => MsgOn, XOn => XOn,
        HeaderMsg => InstancePath,
        TimingData => TXDATA0_CLK_TimingDatash,
        Violation => tviol_TXDATA0_CLK,
        MsgSeverity => warning);
      VitalSetupHoldCheck (
        TestSignal => TXDATA1_dly,
        TestSignalName => "TXDATA1",
        TestDelay => tisd_TXDATA1_CLK,
        RefSignal => CLK_dly,
        RefSignalName => "CLK",
        RefDelay => ticd_CLK,
        SetupHigh => tsetup_TXDATA1_CLK_noedge_posedge,
        SetupLow => tsetup_TXDATA1_CLK_noedge_posedge,
        HoldHigh => thold_TXDATA1_CLK_noedge_posedge,
        HoldLow => thold_TXDATA1_CLK_noedge_posedge,
        CheckEnabled => TRUE,
        RefTransition => '/',
        MsgOn => MsgOn, XOn => XOn,
        HeaderMsg => InstancePath,
        TimingData => TXDATA1_CLK_TimingDatash,
        Violation => tviol_TXDATA1_CLK,
        MsgSeverity => warning);
      VitalPeriodPulseCheck (
        TestSignal => CLK_ipd,
        TestSignalName => "CLK",
        Period => tperiod_CLK,
        PulseWidthHigh => tpw_CLK_posedge,
        PulseWidthLow => tpw_CLK_negedge,
        PeriodData => periodcheckinfo_CLK,
        Violation => tviol_CLK_CLK,
        MsgOn => MsgOn, XOn => XOn,
        HeaderMsg => InstancePath,
        CheckEnabled => TRUE,
        MsgSeverity => warning);

    END IF;

    IOLDO_zd 	:= IOLDO_out;

    VitalPathDelay01 (
      OutSignal => IOLDO, OutSignalName => "IOLDO", OutTemp => IOLDO_zd,
      Paths      => (0 => (InputChangeTime => CLK_dly'last_event,
                           PathDelay => tpd_CLK_IOLDO,
                           PathCondition => TRUE)),
      GlitchData => IOLDO_GlitchData,
      Mode       => ondetect, XOn => XOn, MsgOn => MsgOn);

    END PROCESS;

  end Structure;

-- entity spi2_sckB
  library IEEE, vital2000, ECP5U;
  use IEEE.STD_LOGIC_1164.all;
  use vital2000.vital_timing.all;
  use ECP5U.COMPONENTS.ALL;

  entity spi2_sckB is
    -- miscellaneous vital GENERICs
    GENERIC (
      TimingChecksOn	: boolean := TRUE;
      XOn           	: boolean := FALSE;
      MsgOn         	: boolean := TRUE;
      InstancePath  	: string := "spi2_sckB";

      tipd_IOLDO  	: VitalDelayType01 := (0 ns, 0 ns);
      tpd_IOLDO_spi2sck	 : VitalDelayType01 := (0 ns, 0 ns));

    port (IOLDO: in Std_logic; spi2sck: out Std_logic);

    ATTRIBUTE Vital_Level0 OF spi2_sckB : ENTITY IS TRUE;

  end spi2_sckB;

  architecture Structure of spi2_sckB is
    ATTRIBUTE Vital_Level0 OF Structure : ARCHITECTURE IS TRUE;

    signal IOLDO_ipd 	: std_logic := 'X';
    signal spi2sck_out 	: std_logic := 'X';

    component sapiobuf0003
      port (I: in Std_logic; PAD: out Std_logic);
    end component;
  begin
    spi2_sck_pad: sapiobuf0003
      port map (I=>IOLDO_ipd, PAD=>spi2sck_out);

    --  INPUT PATH DELAYs
    WireDelay : BLOCK
    BEGIN
      VitalWireDelay(IOLDO_ipd, IOLDO, tipd_IOLDO);
    END BLOCK;

    VitalBehavior : PROCESS (IOLDO_ipd, spi2sck_out)
    VARIABLE spi2sck_zd         	: std_logic := 'X';
    VARIABLE spi2sck_GlitchData 	: VitalGlitchDataType;


    BEGIN

    IF (TimingChecksOn) THEN

    END IF;

    spi2sck_zd 	:= spi2sck_out;

    VitalPathDelay01 (
      OutSignal => spi2sck, OutSignalName => "spi2sck", OutTemp => spi2sck_zd,
      Paths      => (0 => (InputChangeTime => IOLDO_ipd'last_event,
                           PathDelay => tpd_IOLDO_spi2sck,
                           PathCondition => TRUE)),
      GlitchData => spi2sck_GlitchData,
      Mode       => vitaltransport, XOn => XOn, MsgOn => MsgOn);

    END PROCESS;

  end Structure;

-- entity spi2_sck_MGIOL
  library IEEE, vital2000, ECP5U;
  use IEEE.STD_LOGIC_1164.all;
  use vital2000.vital_timing.all;
  use ECP5U.COMPONENTS.ALL;

  entity spi2_sck_MGIOL is
    -- miscellaneous vital GENERICs
    GENERIC (
      TimingChecksOn	: boolean := TRUE;
      XOn           	: boolean := FALSE;
      MsgOn         	: boolean := TRUE;
      InstancePath  	: string := "spi2_sck_MGIOL";

      tipd_TXDATA0  	: VitalDelayType01 := (0 ns, 0 ns);
      tipd_LSR  	: VitalDelayType01 := (0 ns, 0 ns);
      tipd_CLK  	: VitalDelayType01 := (0 ns, 0 ns);
      tpd_CLK_IOLDO	 : VitalDelayType01 := (0 ns, 0 ns);
      ticd_CLK	: VitalDelayType := 0 ns;
      tisd_TXDATA0_CLK	: VitalDelayType := 0 ns;
      tsetup_TXDATA0_CLK_noedge_posedge	: VitalDelayType := 0 ns;
      thold_TXDATA0_CLK_noedge_posedge	: VitalDelayType := 0 ns;
      tperiod_CLK 	: VitalDelayType := 0 ns;
      tpw_CLK_posedge	: VitalDelayType := 0 ns;
      tpw_CLK_negedge	: VitalDelayType := 0 ns);

    port (IOLDO: out Std_logic; TXDATA0: in Std_logic; LSR: in Std_logic; 
          CLK: in Std_logic);

    ATTRIBUTE Vital_Level0 OF spi2_sck_MGIOL : ENTITY IS TRUE;

  end spi2_sck_MGIOL;

  architecture Structure of spi2_sck_MGIOL is
    ATTRIBUTE Vital_Level0 OF Structure : ARCHITECTURE IS TRUE;

    signal IOLDO_out 	: std_logic := 'X';
    signal TXDATA0_ipd 	: std_logic := 'X';
    signal TXDATA0_dly 	: std_logic := 'X';
    signal LSR_ipd 	: std_logic := 'X';
    signal CLK_ipd 	: std_logic := 'X';
    signal CLK_dly 	: std_logic := 'X';

    signal GNDI: Std_logic;
    component gnd
      port (PWR0: out Std_logic);
    end component;
    component sapoddrx1
      port (D0: in Std_logic; D1: in Std_logic; SCLK: in Std_logic; 
            RST: in Std_logic; Q: out Std_logic);
    end component;
  begin
    subg_q_spi_sclk_ddr: sapoddrx1
      port map (D0=>TXDATA0_dly, D1=>GNDI, SCLK=>CLK_dly, RST=>LSR_ipd, 
                Q=>IOLDO_out);
    DRIVEGND: gnd
      port map (PWR0=>GNDI);

    --  INPUT PATH DELAYs
    WireDelay : BLOCK
    BEGIN
      VitalWireDelay(TXDATA0_ipd, TXDATA0, tipd_TXDATA0);
      VitalWireDelay(LSR_ipd, LSR, tipd_LSR);
      VitalWireDelay(CLK_ipd, CLK, tipd_CLK);
    END BLOCK;

    --  Setup and Hold DELAYs
    SignalDelay : BLOCK
    BEGIN
      VitalSignalDelay(TXDATA0_dly, TXDATA0_ipd, tisd_TXDATA0_CLK);
      VitalSignalDelay(CLK_dly, CLK_ipd, ticd_CLK);
    END BLOCK;

    VitalBehavior : PROCESS (IOLDO_out, TXDATA0_dly, LSR_ipd, CLK_dly)
    VARIABLE IOLDO_zd         	: std_logic := 'X';
    VARIABLE IOLDO_GlitchData 	: VitalGlitchDataType;

    VARIABLE tviol_TXDATA0_CLK       	: x01 := '0';
    VARIABLE TXDATA0_CLK_TimingDatash	: VitalTimingDataType;
    VARIABLE tviol_CLK_CLK          	: x01 := '0';
    VARIABLE periodcheckinfo_CLK	: VitalPeriodDataType;

    BEGIN

    IF (TimingChecksOn) THEN
      VitalSetupHoldCheck (
        TestSignal => TXDATA0_dly,
        TestSignalName => "TXDATA0",
        TestDelay => tisd_TXDATA0_CLK,
        RefSignal => CLK_dly,
        RefSignalName => "CLK",
        RefDelay => ticd_CLK,
        SetupHigh => tsetup_TXDATA0_CLK_noedge_posedge,
        SetupLow => tsetup_TXDATA0_CLK_noedge_posedge,
        HoldHigh => thold_TXDATA0_CLK_noedge_posedge,
        HoldLow => thold_TXDATA0_CLK_noedge_posedge,
        CheckEnabled => TRUE,
        RefTransition => '/',
        MsgOn => MsgOn, XOn => XOn,
        HeaderMsg => InstancePath,
        TimingData => TXDATA0_CLK_TimingDatash,
        Violation => tviol_TXDATA0_CLK,
        MsgSeverity => warning);
      VitalPeriodPulseCheck (
        TestSignal => CLK_ipd,
        TestSignalName => "CLK",
        Period => tperiod_CLK,
        PulseWidthHigh => tpw_CLK_posedge,
        PulseWidthLow => tpw_CLK_negedge,
        PeriodData => periodcheckinfo_CLK,
        Violation => tviol_CLK_CLK,
        MsgOn => MsgOn, XOn => XOn,
        HeaderMsg => InstancePath,
        CheckEnabled => TRUE,
        MsgSeverity => warning);

    END IF;

    IOLDO_zd 	:= IOLDO_out;

    VitalPathDelay01 (
      OutSignal => IOLDO, OutSignalName => "IOLDO", OutTemp => IOLDO_zd,
      Paths      => (0 => (InputChangeTime => CLK_dly'last_event,
                           PathDelay => tpd_CLK_IOLDO,
                           PathCondition => TRUE)),
      GlitchData => IOLDO_GlitchData,
      Mode       => ondetect, XOn => XOn, MsgOn => MsgOn);

    END PROCESS;

  end Structure;

-- entity spi2_mosiB
  library IEEE, vital2000, ECP5U;
  use IEEE.STD_LOGIC_1164.all;
  use vital2000.vital_timing.all;
  use ECP5U.COMPONENTS.ALL;

  entity spi2_mosiB is
    -- miscellaneous vital GENERICs
    GENERIC (
      TimingChecksOn	: boolean := TRUE;
      XOn           	: boolean := FALSE;
      MsgOn         	: boolean := TRUE;
      InstancePath  	: string := "spi2_mosiB";

      tipd_IOLDO  	: VitalDelayType01 := (0 ns, 0 ns);
      tpd_IOLDO_spi2mosi	 : VitalDelayType01 := (0 ns, 0 ns));

    port (IOLDO: in Std_logic; spi2mosi: out Std_logic);

    ATTRIBUTE Vital_Level0 OF spi2_mosiB : ENTITY IS TRUE;

  end spi2_mosiB;

  architecture Structure of spi2_mosiB is
    ATTRIBUTE Vital_Level0 OF Structure : ARCHITECTURE IS TRUE;

    signal IOLDO_ipd 	: std_logic := 'X';
    signal spi2mosi_out 	: std_logic := 'X';

    component sapiobuf0003
      port (I: in Std_logic; PAD: out Std_logic);
    end component;
  begin
    spi2_mosi_pad: sapiobuf0003
      port map (I=>IOLDO_ipd, PAD=>spi2mosi_out);

    --  INPUT PATH DELAYs
    WireDelay : BLOCK
    BEGIN
      VitalWireDelay(IOLDO_ipd, IOLDO, tipd_IOLDO);
    END BLOCK;

    VitalBehavior : PROCESS (IOLDO_ipd, spi2mosi_out)
    VARIABLE spi2mosi_zd         	: std_logic := 'X';
    VARIABLE spi2mosi_GlitchData 	: VitalGlitchDataType;


    BEGIN

    IF (TimingChecksOn) THEN

    END IF;

    spi2mosi_zd 	:= spi2mosi_out;

    VitalPathDelay01 (
      OutSignal => spi2mosi, OutSignalName => "spi2mosi", OutTemp => spi2mosi_zd,
      Paths      => (0 => (InputChangeTime => IOLDO_ipd'last_event,
                           PathDelay => tpd_IOLDO_spi2mosi,
                           PathCondition => TRUE)),
      GlitchData => spi2mosi_GlitchData,
      Mode       => vitaltransport, XOn => XOn, MsgOn => MsgOn);

    END PROCESS;

  end Structure;

-- entity spi2_mosi_MGIOL
  library IEEE, vital2000, ECP5U;
  use IEEE.STD_LOGIC_1164.all;
  use vital2000.vital_timing.all;
  use ECP5U.COMPONENTS.ALL;

  entity spi2_mosi_MGIOL is
    -- miscellaneous vital GENERICs
    GENERIC (
      TimingChecksOn	: boolean := TRUE;
      XOn           	: boolean := FALSE;
      MsgOn         	: boolean := TRUE;
      InstancePath  	: string := "spi2_mosi_MGIOL";

      tipd_TXDATA0  	: VitalDelayType01 := (0 ns, 0 ns);
      tipd_TXDATA1  	: VitalDelayType01 := (0 ns, 0 ns);
      tipd_LSR  	: VitalDelayType01 := (0 ns, 0 ns);
      tipd_CLK  	: VitalDelayType01 := (0 ns, 0 ns);
      tpd_CLK_IOLDO	 : VitalDelayType01 := (0 ns, 0 ns);
      ticd_CLK	: VitalDelayType := 0 ns;
      tisd_TXDATA0_CLK	: VitalDelayType := 0 ns;
      tsetup_TXDATA0_CLK_noedge_posedge	: VitalDelayType := 0 ns;
      thold_TXDATA0_CLK_noedge_posedge	: VitalDelayType := 0 ns;
      tisd_TXDATA1_CLK	: VitalDelayType := 0 ns;
      tsetup_TXDATA1_CLK_noedge_posedge	: VitalDelayType := 0 ns;
      thold_TXDATA1_CLK_noedge_posedge	: VitalDelayType := 0 ns;
      tperiod_CLK 	: VitalDelayType := 0 ns;
      tpw_CLK_posedge	: VitalDelayType := 0 ns;
      tpw_CLK_negedge	: VitalDelayType := 0 ns);

    port (IOLDO: out Std_logic; TXDATA0: in Std_logic; TXDATA1: in Std_logic; 
          LSR: in Std_logic; CLK: in Std_logic);

    ATTRIBUTE Vital_Level0 OF spi2_mosi_MGIOL : ENTITY IS TRUE;

  end spi2_mosi_MGIOL;

  architecture Structure of spi2_mosi_MGIOL is
    ATTRIBUTE Vital_Level0 OF Structure : ARCHITECTURE IS TRUE;

    signal IOLDO_out 	: std_logic := 'X';
    signal TXDATA0_ipd 	: std_logic := 'X';
    signal TXDATA0_dly 	: std_logic := 'X';
    signal TXDATA1_ipd 	: std_logic := 'X';
    signal TXDATA1_dly 	: std_logic := 'X';
    signal LSR_ipd 	: std_logic := 'X';
    signal CLK_ipd 	: std_logic := 'X';
    signal CLK_dly 	: std_logic := 'X';

    component sapoddrx1
      port (D0: in Std_logic; D1: in Std_logic; SCLK: in Std_logic; 
            RST: in Std_logic; Q: out Std_logic);
    end component;
  begin
    subg_q_spi_mosi_ddr: sapoddrx1
      port map (D0=>TXDATA0_dly, D1=>TXDATA1_dly, SCLK=>CLK_dly, RST=>LSR_ipd, 
                Q=>IOLDO_out);

    --  INPUT PATH DELAYs
    WireDelay : BLOCK
    BEGIN
      VitalWireDelay(TXDATA0_ipd, TXDATA0, tipd_TXDATA0);
      VitalWireDelay(TXDATA1_ipd, TXDATA1, tipd_TXDATA1);
      VitalWireDelay(LSR_ipd, LSR, tipd_LSR);
      VitalWireDelay(CLK_ipd, CLK, tipd_CLK);
    END BLOCK;

    --  Setup and Hold DELAYs
    SignalDelay : BLOCK
    BEGIN
      VitalSignalDelay(TXDATA0_dly, TXDATA0_ipd, tisd_TXDATA0_CLK);
      VitalSignalDelay(TXDATA1_dly, TXDATA1_ipd, tisd_TXDATA1_CLK);
      VitalSignalDelay(CLK_dly, CLK_ipd, ticd_CLK);
    END BLOCK;

    VitalBehavior : PROCESS (IOLDO_out, TXDATA0_dly, TXDATA1_dly, LSR_ipd, 
      CLK_dly)
    VARIABLE IOLDO_zd         	: std_logic := 'X';
    VARIABLE IOLDO_GlitchData 	: VitalGlitchDataType;

    VARIABLE tviol_TXDATA0_CLK       	: x01 := '0';
    VARIABLE TXDATA0_CLK_TimingDatash	: VitalTimingDataType;
    VARIABLE tviol_TXDATA1_CLK       	: x01 := '0';
    VARIABLE TXDATA1_CLK_TimingDatash	: VitalTimingDataType;
    VARIABLE tviol_CLK_CLK          	: x01 := '0';
    VARIABLE periodcheckinfo_CLK	: VitalPeriodDataType;

    BEGIN

    IF (TimingChecksOn) THEN
      VitalSetupHoldCheck (
        TestSignal => TXDATA0_dly,
        TestSignalName => "TXDATA0",
        TestDelay => tisd_TXDATA0_CLK,
        RefSignal => CLK_dly,
        RefSignalName => "CLK",
        RefDelay => ticd_CLK,
        SetupHigh => tsetup_TXDATA0_CLK_noedge_posedge,
        SetupLow => tsetup_TXDATA0_CLK_noedge_posedge,
        HoldHigh => thold_TXDATA0_CLK_noedge_posedge,
        HoldLow => thold_TXDATA0_CLK_noedge_posedge,
        CheckEnabled => TRUE,
        RefTransition => '/',
        MsgOn => MsgOn, XOn => XOn,
        HeaderMsg => InstancePath,
        TimingData => TXDATA0_CLK_TimingDatash,
        Violation => tviol_TXDATA0_CLK,
        MsgSeverity => warning);
      VitalSetupHoldCheck (
        TestSignal => TXDATA1_dly,
        TestSignalName => "TXDATA1",
        TestDelay => tisd_TXDATA1_CLK,
        RefSignal => CLK_dly,
        RefSignalName => "CLK",
        RefDelay => ticd_CLK,
        SetupHigh => tsetup_TXDATA1_CLK_noedge_posedge,
        SetupLow => tsetup_TXDATA1_CLK_noedge_posedge,
        HoldHigh => thold_TXDATA1_CLK_noedge_posedge,
        HoldLow => thold_TXDATA1_CLK_noedge_posedge,
        CheckEnabled => TRUE,
        RefTransition => '/',
        MsgOn => MsgOn, XOn => XOn,
        HeaderMsg => InstancePath,
        TimingData => TXDATA1_CLK_TimingDatash,
        Violation => tviol_TXDATA1_CLK,
        MsgSeverity => warning);
      VitalPeriodPulseCheck (
        TestSignal => CLK_ipd,
        TestSignalName => "CLK",
        Period => tperiod_CLK,
        PulseWidthHigh => tpw_CLK_posedge,
        PulseWidthLow => tpw_CLK_negedge,
        PeriodData => periodcheckinfo_CLK,
        Violation => tviol_CLK_CLK,
        MsgOn => MsgOn, XOn => XOn,
        HeaderMsg => InstancePath,
        CheckEnabled => TRUE,
        MsgSeverity => warning);

    END IF;

    IOLDO_zd 	:= IOLDO_out;

    VitalPathDelay01 (
      OutSignal => IOLDO, OutSignalName => "IOLDO", OutTemp => IOLDO_zd,
      Paths      => (0 => (InputChangeTime => CLK_dly'last_event,
                           PathDelay => tpd_CLK_IOLDO,
                           PathCondition => TRUE)),
      GlitchData => IOLDO_GlitchData,
      Mode       => ondetect, XOn => XOn, MsgOn => MsgOn);

    END PROCESS;

  end Structure;

-- entity spi3_sckB
  library IEEE, vital2000, ECP5U;
  use IEEE.STD_LOGIC_1164.all;
  use vital2000.vital_timing.all;
  use ECP5U.COMPONENTS.ALL;

  entity spi3_sckB is
    -- miscellaneous vital GENERICs
    GENERIC (
      TimingChecksOn	: boolean := TRUE;
      XOn           	: boolean := FALSE;
      MsgOn         	: boolean := TRUE;
      InstancePath  	: string := "spi3_sckB";

      tipd_IOLDO  	: VitalDelayType01 := (0 ns, 0 ns);
      tpd_IOLDO_spi3sck	 : VitalDelayType01 := (0 ns, 0 ns));

    port (IOLDO: in Std_logic; spi3sck: out Std_logic);

    ATTRIBUTE Vital_Level0 OF spi3_sckB : ENTITY IS TRUE;

  end spi3_sckB;

  architecture Structure of spi3_sckB is
    ATTRIBUTE Vital_Level0 OF Structure : ARCHITECTURE IS TRUE;

    signal IOLDO_ipd 	: std_logic := 'X';
    signal spi3sck_out 	: std_logic := 'X';

    component sapiobuf0003
      port (I: in Std_logic; PAD: out Std_logic);
    end component;
  begin
    spi3_sck_pad: sapiobuf0003
      port map (I=>IOLDO_ipd, PAD=>spi3sck_out);

    --  INPUT PATH DELAYs
    WireDelay : BLOCK
    BEGIN
      VitalWireDelay(IOLDO_ipd, IOLDO, tipd_IOLDO);
    END BLOCK;

    VitalBehavior : PROCESS (IOLDO_ipd, spi3sck_out)
    VARIABLE spi3sck_zd         	: std_logic := 'X';
    VARIABLE spi3sck_GlitchData 	: VitalGlitchDataType;


    BEGIN

    IF (TimingChecksOn) THEN

    END IF;

    spi3sck_zd 	:= spi3sck_out;

    VitalPathDelay01 (
      OutSignal => spi3sck, OutSignalName => "spi3sck", OutTemp => spi3sck_zd,
      Paths      => (0 => (InputChangeTime => IOLDO_ipd'last_event,
                           PathDelay => tpd_IOLDO_spi3sck,
                           PathCondition => TRUE)),
      GlitchData => spi3sck_GlitchData,
      Mode       => vitaltransport, XOn => XOn, MsgOn => MsgOn);

    END PROCESS;

  end Structure;

-- entity spi3_sck_MGIOL
  library IEEE, vital2000, ECP5U;
  use IEEE.STD_LOGIC_1164.all;
  use vital2000.vital_timing.all;
  use ECP5U.COMPONENTS.ALL;

  entity spi3_sck_MGIOL is
    -- miscellaneous vital GENERICs
    GENERIC (
      TimingChecksOn	: boolean := TRUE;
      XOn           	: boolean := FALSE;
      MsgOn         	: boolean := TRUE;
      InstancePath  	: string := "spi3_sck_MGIOL";

      tipd_TXDATA0  	: VitalDelayType01 := (0 ns, 0 ns);
      tipd_LSR  	: VitalDelayType01 := (0 ns, 0 ns);
      tipd_CLK  	: VitalDelayType01 := (0 ns, 0 ns);
      tpd_CLK_IOLDO	 : VitalDelayType01 := (0 ns, 0 ns);
      ticd_CLK	: VitalDelayType := 0 ns;
      tisd_TXDATA0_CLK	: VitalDelayType := 0 ns;
      tsetup_TXDATA0_CLK_noedge_posedge	: VitalDelayType := 0 ns;
      thold_TXDATA0_CLK_noedge_posedge	: VitalDelayType := 0 ns;
      tperiod_CLK 	: VitalDelayType := 0 ns;
      tpw_CLK_posedge	: VitalDelayType := 0 ns;
      tpw_CLK_negedge	: VitalDelayType := 0 ns);

    port (IOLDO: out Std_logic; TXDATA0: in Std_logic; LSR: in Std_logic; 
          CLK: in Std_logic);

    ATTRIBUTE Vital_Level0 OF spi3_sck_MGIOL : ENTITY IS TRUE;

  end spi3_sck_MGIOL;

  architecture Structure of spi3_sck_MGIOL is
    ATTRIBUTE Vital_Level0 OF Structure : ARCHITECTURE IS TRUE;

    signal IOLDO_out 	: std_logic := 'X';
    signal TXDATA0_ipd 	: std_logic := 'X';
    signal TXDATA0_dly 	: std_logic := 'X';
    signal LSR_ipd 	: std_logic := 'X';
    signal CLK_ipd 	: std_logic := 'X';
    signal CLK_dly 	: std_logic := 'X';

    signal GNDI: Std_logic;
    component gnd
      port (PWR0: out Std_logic);
    end component;
    component sapoddrx1
      port (D0: in Std_logic; D1: in Std_logic; SCLK: in Std_logic; 
            RST: in Std_logic; Q: out Std_logic);
    end component;
  begin
    wifi_i_spi_sclk_ddr: sapoddrx1
      port map (D0=>TXDATA0_dly, D1=>GNDI, SCLK=>CLK_dly, RST=>LSR_ipd, 
                Q=>IOLDO_out);
    DRIVEGND: gnd
      port map (PWR0=>GNDI);

    --  INPUT PATH DELAYs
    WireDelay : BLOCK
    BEGIN
      VitalWireDelay(TXDATA0_ipd, TXDATA0, tipd_TXDATA0);
      VitalWireDelay(LSR_ipd, LSR, tipd_LSR);
      VitalWireDelay(CLK_ipd, CLK, tipd_CLK);
    END BLOCK;

    --  Setup and Hold DELAYs
    SignalDelay : BLOCK
    BEGIN
      VitalSignalDelay(TXDATA0_dly, TXDATA0_ipd, tisd_TXDATA0_CLK);
      VitalSignalDelay(CLK_dly, CLK_ipd, ticd_CLK);
    END BLOCK;

    VitalBehavior : PROCESS (IOLDO_out, TXDATA0_dly, LSR_ipd, CLK_dly)
    VARIABLE IOLDO_zd         	: std_logic := 'X';
    VARIABLE IOLDO_GlitchData 	: VitalGlitchDataType;

    VARIABLE tviol_TXDATA0_CLK       	: x01 := '0';
    VARIABLE TXDATA0_CLK_TimingDatash	: VitalTimingDataType;
    VARIABLE tviol_CLK_CLK          	: x01 := '0';
    VARIABLE periodcheckinfo_CLK	: VitalPeriodDataType;

    BEGIN

    IF (TimingChecksOn) THEN
      VitalSetupHoldCheck (
        TestSignal => TXDATA0_dly,
        TestSignalName => "TXDATA0",
        TestDelay => tisd_TXDATA0_CLK,
        RefSignal => CLK_dly,
        RefSignalName => "CLK",
        RefDelay => ticd_CLK,
        SetupHigh => tsetup_TXDATA0_CLK_noedge_posedge,
        SetupLow => tsetup_TXDATA0_CLK_noedge_posedge,
        HoldHigh => thold_TXDATA0_CLK_noedge_posedge,
        HoldLow => thold_TXDATA0_CLK_noedge_posedge,
        CheckEnabled => TRUE,
        RefTransition => '/',
        MsgOn => MsgOn, XOn => XOn,
        HeaderMsg => InstancePath,
        TimingData => TXDATA0_CLK_TimingDatash,
        Violation => tviol_TXDATA0_CLK,
        MsgSeverity => warning);
      VitalPeriodPulseCheck (
        TestSignal => CLK_ipd,
        TestSignalName => "CLK",
        Period => tperiod_CLK,
        PulseWidthHigh => tpw_CLK_posedge,
        PulseWidthLow => tpw_CLK_negedge,
        PeriodData => periodcheckinfo_CLK,
        Violation => tviol_CLK_CLK,
        MsgOn => MsgOn, XOn => XOn,
        HeaderMsg => InstancePath,
        CheckEnabled => TRUE,
        MsgSeverity => warning);

    END IF;

    IOLDO_zd 	:= IOLDO_out;

    VitalPathDelay01 (
      OutSignal => IOLDO, OutSignalName => "IOLDO", OutTemp => IOLDO_zd,
      Paths      => (0 => (InputChangeTime => CLK_dly'last_event,
                           PathDelay => tpd_CLK_IOLDO,
                           PathCondition => TRUE)),
      GlitchData => IOLDO_GlitchData,
      Mode       => ondetect, XOn => XOn, MsgOn => MsgOn);

    END PROCESS;

  end Structure;

-- entity spi3_mosiB
  library IEEE, vital2000, ECP5U;
  use IEEE.STD_LOGIC_1164.all;
  use vital2000.vital_timing.all;
  use ECP5U.COMPONENTS.ALL;

  entity spi3_mosiB is
    -- miscellaneous vital GENERICs
    GENERIC (
      TimingChecksOn	: boolean := TRUE;
      XOn           	: boolean := FALSE;
      MsgOn         	: boolean := TRUE;
      InstancePath  	: string := "spi3_mosiB";

      tipd_IOLDO  	: VitalDelayType01 := (0 ns, 0 ns);
      tpd_IOLDO_spi3mosi	 : VitalDelayType01 := (0 ns, 0 ns));

    port (IOLDO: in Std_logic; spi3mosi: out Std_logic);

    ATTRIBUTE Vital_Level0 OF spi3_mosiB : ENTITY IS TRUE;

  end spi3_mosiB;

  architecture Structure of spi3_mosiB is
    ATTRIBUTE Vital_Level0 OF Structure : ARCHITECTURE IS TRUE;

    signal IOLDO_ipd 	: std_logic := 'X';
    signal spi3mosi_out 	: std_logic := 'X';

    component sapiobuf0003
      port (I: in Std_logic; PAD: out Std_logic);
    end component;
  begin
    spi3_mosi_pad: sapiobuf0003
      port map (I=>IOLDO_ipd, PAD=>spi3mosi_out);

    --  INPUT PATH DELAYs
    WireDelay : BLOCK
    BEGIN
      VitalWireDelay(IOLDO_ipd, IOLDO, tipd_IOLDO);
    END BLOCK;

    VitalBehavior : PROCESS (IOLDO_ipd, spi3mosi_out)
    VARIABLE spi3mosi_zd         	: std_logic := 'X';
    VARIABLE spi3mosi_GlitchData 	: VitalGlitchDataType;


    BEGIN

    IF (TimingChecksOn) THEN

    END IF;

    spi3mosi_zd 	:= spi3mosi_out;

    VitalPathDelay01 (
      OutSignal => spi3mosi, OutSignalName => "spi3mosi", OutTemp => spi3mosi_zd,
      Paths      => (0 => (InputChangeTime => IOLDO_ipd'last_event,
                           PathDelay => tpd_IOLDO_spi3mosi,
                           PathCondition => TRUE)),
      GlitchData => spi3mosi_GlitchData,
      Mode       => vitaltransport, XOn => XOn, MsgOn => MsgOn);

    END PROCESS;

  end Structure;

-- entity spi3_mosi_MGIOL
  library IEEE, vital2000, ECP5U;
  use IEEE.STD_LOGIC_1164.all;
  use vital2000.vital_timing.all;
  use ECP5U.COMPONENTS.ALL;

  entity spi3_mosi_MGIOL is
    -- miscellaneous vital GENERICs
    GENERIC (
      TimingChecksOn	: boolean := TRUE;
      XOn           	: boolean := FALSE;
      MsgOn         	: boolean := TRUE;
      InstancePath  	: string := "spi3_mosi_MGIOL";

      tipd_TXDATA0  	: VitalDelayType01 := (0 ns, 0 ns);
      tipd_TXDATA1  	: VitalDelayType01 := (0 ns, 0 ns);
      tipd_LSR  	: VitalDelayType01 := (0 ns, 0 ns);
      tipd_CLK  	: VitalDelayType01 := (0 ns, 0 ns);
      tpd_CLK_IOLDO	 : VitalDelayType01 := (0 ns, 0 ns);
      ticd_CLK	: VitalDelayType := 0 ns;
      tisd_TXDATA0_CLK	: VitalDelayType := 0 ns;
      tsetup_TXDATA0_CLK_noedge_posedge	: VitalDelayType := 0 ns;
      thold_TXDATA0_CLK_noedge_posedge	: VitalDelayType := 0 ns;
      tisd_TXDATA1_CLK	: VitalDelayType := 0 ns;
      tsetup_TXDATA1_CLK_noedge_posedge	: VitalDelayType := 0 ns;
      thold_TXDATA1_CLK_noedge_posedge	: VitalDelayType := 0 ns;
      tperiod_CLK 	: VitalDelayType := 0 ns;
      tpw_CLK_posedge	: VitalDelayType := 0 ns;
      tpw_CLK_negedge	: VitalDelayType := 0 ns);

    port (IOLDO: out Std_logic; TXDATA0: in Std_logic; TXDATA1: in Std_logic; 
          LSR: in Std_logic; CLK: in Std_logic);

    ATTRIBUTE Vital_Level0 OF spi3_mosi_MGIOL : ENTITY IS TRUE;

  end spi3_mosi_MGIOL;

  architecture Structure of spi3_mosi_MGIOL is
    ATTRIBUTE Vital_Level0 OF Structure : ARCHITECTURE IS TRUE;

    signal IOLDO_out 	: std_logic := 'X';
    signal TXDATA0_ipd 	: std_logic := 'X';
    signal TXDATA0_dly 	: std_logic := 'X';
    signal TXDATA1_ipd 	: std_logic := 'X';
    signal TXDATA1_dly 	: std_logic := 'X';
    signal LSR_ipd 	: std_logic := 'X';
    signal CLK_ipd 	: std_logic := 'X';
    signal CLK_dly 	: std_logic := 'X';

    component sapoddrx1
      port (D0: in Std_logic; D1: in Std_logic; SCLK: in Std_logic; 
            RST: in Std_logic; Q: out Std_logic);
    end component;
  begin
    wifi_i_spi_mosi_ddr: sapoddrx1
      port map (D0=>TXDATA0_dly, D1=>TXDATA1_dly, SCLK=>CLK_dly, RST=>LSR_ipd, 
                Q=>IOLDO_out);

    --  INPUT PATH DELAYs
    WireDelay : BLOCK
    BEGIN
      VitalWireDelay(TXDATA0_ipd, TXDATA0, tipd_TXDATA0);
      VitalWireDelay(TXDATA1_ipd, TXDATA1, tipd_TXDATA1);
      VitalWireDelay(LSR_ipd, LSR, tipd_LSR);
      VitalWireDelay(CLK_ipd, CLK, tipd_CLK);
    END BLOCK;

    --  Setup and Hold DELAYs
    SignalDelay : BLOCK
    BEGIN
      VitalSignalDelay(TXDATA0_dly, TXDATA0_ipd, tisd_TXDATA0_CLK);
      VitalSignalDelay(TXDATA1_dly, TXDATA1_ipd, tisd_TXDATA1_CLK);
      VitalSignalDelay(CLK_dly, CLK_ipd, ticd_CLK);
    END BLOCK;

    VitalBehavior : PROCESS (IOLDO_out, TXDATA0_dly, TXDATA1_dly, LSR_ipd, 
      CLK_dly)
    VARIABLE IOLDO_zd         	: std_logic := 'X';
    VARIABLE IOLDO_GlitchData 	: VitalGlitchDataType;

    VARIABLE tviol_TXDATA0_CLK       	: x01 := '0';
    VARIABLE TXDATA0_CLK_TimingDatash	: VitalTimingDataType;
    VARIABLE tviol_TXDATA1_CLK       	: x01 := '0';
    VARIABLE TXDATA1_CLK_TimingDatash	: VitalTimingDataType;
    VARIABLE tviol_CLK_CLK          	: x01 := '0';
    VARIABLE periodcheckinfo_CLK	: VitalPeriodDataType;

    BEGIN

    IF (TimingChecksOn) THEN
      VitalSetupHoldCheck (
        TestSignal => TXDATA0_dly,
        TestSignalName => "TXDATA0",
        TestDelay => tisd_TXDATA0_CLK,
        RefSignal => CLK_dly,
        RefSignalName => "CLK",
        RefDelay => ticd_CLK,
        SetupHigh => tsetup_TXDATA0_CLK_noedge_posedge,
        SetupLow => tsetup_TXDATA0_CLK_noedge_posedge,
        HoldHigh => thold_TXDATA0_CLK_noedge_posedge,
        HoldLow => thold_TXDATA0_CLK_noedge_posedge,
        CheckEnabled => TRUE,
        RefTransition => '/',
        MsgOn => MsgOn, XOn => XOn,
        HeaderMsg => InstancePath,
        TimingData => TXDATA0_CLK_TimingDatash,
        Violation => tviol_TXDATA0_CLK,
        MsgSeverity => warning);
      VitalSetupHoldCheck (
        TestSignal => TXDATA1_dly,
        TestSignalName => "TXDATA1",
        TestDelay => tisd_TXDATA1_CLK,
        RefSignal => CLK_dly,
        RefSignalName => "CLK",
        RefDelay => ticd_CLK,
        SetupHigh => tsetup_TXDATA1_CLK_noedge_posedge,
        SetupLow => tsetup_TXDATA1_CLK_noedge_posedge,
        HoldHigh => thold_TXDATA1_CLK_noedge_posedge,
        HoldLow => thold_TXDATA1_CLK_noedge_posedge,
        CheckEnabled => TRUE,
        RefTransition => '/',
        MsgOn => MsgOn, XOn => XOn,
        HeaderMsg => InstancePath,
        TimingData => TXDATA1_CLK_TimingDatash,
        Violation => tviol_TXDATA1_CLK,
        MsgSeverity => warning);
      VitalPeriodPulseCheck (
        TestSignal => CLK_ipd,
        TestSignalName => "CLK",
        Period => tperiod_CLK,
        PulseWidthHigh => tpw_CLK_posedge,
        PulseWidthLow => tpw_CLK_negedge,
        PeriodData => periodcheckinfo_CLK,
        Violation => tviol_CLK_CLK,
        MsgOn => MsgOn, XOn => XOn,
        HeaderMsg => InstancePath,
        CheckEnabled => TRUE,
        MsgSeverity => warning);

    END IF;

    IOLDO_zd 	:= IOLDO_out;

    VitalPathDelay01 (
      OutSignal => IOLDO, OutSignalName => "IOLDO", OutTemp => IOLDO_zd,
      Paths      => (0 => (InputChangeTime => CLK_dly'last_event,
                           PathDelay => tpd_CLK_IOLDO,
                           PathCondition => TRUE)),
      GlitchData => IOLDO_GlitchData,
      Mode       => ondetect, XOn => XOn, MsgOn => MsgOn);

    END PROCESS;

  end Structure;

-- entity spi4_sckB
  library IEEE, vital2000, ECP5U;
  use IEEE.STD_LOGIC_1164.all;
  use vital2000.vital_timing.all;
  use ECP5U.COMPONENTS.ALL;

  entity spi4_sckB is
    -- miscellaneous vital GENERICs
    GENERIC (
      TimingChecksOn	: boolean := TRUE;
      XOn           	: boolean := FALSE;
      MsgOn         	: boolean := TRUE;
      InstancePath  	: string := "spi4_sckB";

      tipd_IOLDO  	: VitalDelayType01 := (0 ns, 0 ns);
      tpd_IOLDO_spi4sck	 : VitalDelayType01 := (0 ns, 0 ns));

    port (IOLDO: in Std_logic; spi4sck: out Std_logic);

    ATTRIBUTE Vital_Level0 OF spi4_sckB : ENTITY IS TRUE;

  end spi4_sckB;

  architecture Structure of spi4_sckB is
    ATTRIBUTE Vital_Level0 OF Structure : ARCHITECTURE IS TRUE;

    signal IOLDO_ipd 	: std_logic := 'X';
    signal spi4sck_out 	: std_logic := 'X';

    component sapiobuf0002
      port (I: in Std_logic; PAD: out Std_logic);
    end component;
  begin
    spi4_sck_pad: sapiobuf0002
      port map (I=>IOLDO_ipd, PAD=>spi4sck_out);

    --  INPUT PATH DELAYs
    WireDelay : BLOCK
    BEGIN
      VitalWireDelay(IOLDO_ipd, IOLDO, tipd_IOLDO);
    END BLOCK;

    VitalBehavior : PROCESS (IOLDO_ipd, spi4sck_out)
    VARIABLE spi4sck_zd         	: std_logic := 'X';
    VARIABLE spi4sck_GlitchData 	: VitalGlitchDataType;


    BEGIN

    IF (TimingChecksOn) THEN

    END IF;

    spi4sck_zd 	:= spi4sck_out;

    VitalPathDelay01 (
      OutSignal => spi4sck, OutSignalName => "spi4sck", OutTemp => spi4sck_zd,
      Paths      => (0 => (InputChangeTime => IOLDO_ipd'last_event,
                           PathDelay => tpd_IOLDO_spi4sck,
                           PathCondition => TRUE)),
      GlitchData => spi4sck_GlitchData,
      Mode       => vitaltransport, XOn => XOn, MsgOn => MsgOn);

    END PROCESS;

  end Structure;

-- entity spi4_sck_MGIOL
  library IEEE, vital2000, ECP5U;
  use IEEE.STD_LOGIC_1164.all;
  use vital2000.vital_timing.all;
  use ECP5U.COMPONENTS.ALL;

  entity spi4_sck_MGIOL is
    -- miscellaneous vital GENERICs
    GENERIC (
      TimingChecksOn	: boolean := TRUE;
      XOn           	: boolean := FALSE;
      MsgOn         	: boolean := TRUE;
      InstancePath  	: string := "spi4_sck_MGIOL";

      tipd_TXDATA0  	: VitalDelayType01 := (0 ns, 0 ns);
      tipd_LSR  	: VitalDelayType01 := (0 ns, 0 ns);
      tipd_CLK  	: VitalDelayType01 := (0 ns, 0 ns);
      tpd_CLK_IOLDO	 : VitalDelayType01 := (0 ns, 0 ns);
      ticd_CLK	: VitalDelayType := 0 ns;
      tisd_TXDATA0_CLK	: VitalDelayType := 0 ns;
      tsetup_TXDATA0_CLK_noedge_posedge	: VitalDelayType := 0 ns;
      thold_TXDATA0_CLK_noedge_posedge	: VitalDelayType := 0 ns;
      tperiod_CLK 	: VitalDelayType := 0 ns;
      tpw_CLK_posedge	: VitalDelayType := 0 ns;
      tpw_CLK_negedge	: VitalDelayType := 0 ns);

    port (IOLDO: out Std_logic; TXDATA0: in Std_logic; LSR: in Std_logic; 
          CLK: in Std_logic);

    ATTRIBUTE Vital_Level0 OF spi4_sck_MGIOL : ENTITY IS TRUE;

  end spi4_sck_MGIOL;

  architecture Structure of spi4_sck_MGIOL is
    ATTRIBUTE Vital_Level0 OF Structure : ARCHITECTURE IS TRUE;

    signal IOLDO_out 	: std_logic := 'X';
    signal TXDATA0_ipd 	: std_logic := 'X';
    signal TXDATA0_dly 	: std_logic := 'X';
    signal LSR_ipd 	: std_logic := 'X';
    signal CLK_ipd 	: std_logic := 'X';
    signal CLK_dly 	: std_logic := 'X';

    signal GNDI: Std_logic;
    component gnd
      port (PWR0: out Std_logic);
    end component;
    component sapoddrx1
      port (D0: in Std_logic; D1: in Std_logic; SCLK: in Std_logic; 
            RST: in Std_logic; Q: out Std_logic);
    end component;
  begin
    wifi_q_spi_sclk_ddr: sapoddrx1
      port map (D0=>TXDATA0_dly, D1=>GNDI, SCLK=>CLK_dly, RST=>LSR_ipd, 
                Q=>IOLDO_out);
    DRIVEGND: gnd
      port map (PWR0=>GNDI);

    --  INPUT PATH DELAYs
    WireDelay : BLOCK
    BEGIN
      VitalWireDelay(TXDATA0_ipd, TXDATA0, tipd_TXDATA0);
      VitalWireDelay(LSR_ipd, LSR, tipd_LSR);
      VitalWireDelay(CLK_ipd, CLK, tipd_CLK);
    END BLOCK;

    --  Setup and Hold DELAYs
    SignalDelay : BLOCK
    BEGIN
      VitalSignalDelay(TXDATA0_dly, TXDATA0_ipd, tisd_TXDATA0_CLK);
      VitalSignalDelay(CLK_dly, CLK_ipd, ticd_CLK);
    END BLOCK;

    VitalBehavior : PROCESS (IOLDO_out, TXDATA0_dly, LSR_ipd, CLK_dly)
    VARIABLE IOLDO_zd         	: std_logic := 'X';
    VARIABLE IOLDO_GlitchData 	: VitalGlitchDataType;

    VARIABLE tviol_TXDATA0_CLK       	: x01 := '0';
    VARIABLE TXDATA0_CLK_TimingDatash	: VitalTimingDataType;
    VARIABLE tviol_CLK_CLK          	: x01 := '0';
    VARIABLE periodcheckinfo_CLK	: VitalPeriodDataType;

    BEGIN

    IF (TimingChecksOn) THEN
      VitalSetupHoldCheck (
        TestSignal => TXDATA0_dly,
        TestSignalName => "TXDATA0",
        TestDelay => tisd_TXDATA0_CLK,
        RefSignal => CLK_dly,
        RefSignalName => "CLK",
        RefDelay => ticd_CLK,
        SetupHigh => tsetup_TXDATA0_CLK_noedge_posedge,
        SetupLow => tsetup_TXDATA0_CLK_noedge_posedge,
        HoldHigh => thold_TXDATA0_CLK_noedge_posedge,
        HoldLow => thold_TXDATA0_CLK_noedge_posedge,
        CheckEnabled => TRUE,
        RefTransition => '/',
        MsgOn => MsgOn, XOn => XOn,
        HeaderMsg => InstancePath,
        TimingData => TXDATA0_CLK_TimingDatash,
        Violation => tviol_TXDATA0_CLK,
        MsgSeverity => warning);
      VitalPeriodPulseCheck (
        TestSignal => CLK_ipd,
        TestSignalName => "CLK",
        Period => tperiod_CLK,
        PulseWidthHigh => tpw_CLK_posedge,
        PulseWidthLow => tpw_CLK_negedge,
        PeriodData => periodcheckinfo_CLK,
        Violation => tviol_CLK_CLK,
        MsgOn => MsgOn, XOn => XOn,
        HeaderMsg => InstancePath,
        CheckEnabled => TRUE,
        MsgSeverity => warning);

    END IF;

    IOLDO_zd 	:= IOLDO_out;

    VitalPathDelay01 (
      OutSignal => IOLDO, OutSignalName => "IOLDO", OutTemp => IOLDO_zd,
      Paths      => (0 => (InputChangeTime => CLK_dly'last_event,
                           PathDelay => tpd_CLK_IOLDO,
                           PathCondition => TRUE)),
      GlitchData => IOLDO_GlitchData,
      Mode       => ondetect, XOn => XOn, MsgOn => MsgOn);

    END PROCESS;

  end Structure;

-- entity spi4_mosiB
  library IEEE, vital2000, ECP5U;
  use IEEE.STD_LOGIC_1164.all;
  use vital2000.vital_timing.all;
  use ECP5U.COMPONENTS.ALL;

  entity spi4_mosiB is
    -- miscellaneous vital GENERICs
    GENERIC (
      TimingChecksOn	: boolean := TRUE;
      XOn           	: boolean := FALSE;
      MsgOn         	: boolean := TRUE;
      InstancePath  	: string := "spi4_mosiB";

      tipd_IOLDO  	: VitalDelayType01 := (0 ns, 0 ns);
      tpd_IOLDO_spi4mosi	 : VitalDelayType01 := (0 ns, 0 ns));

    port (IOLDO: in Std_logic; spi4mosi: out Std_logic);

    ATTRIBUTE Vital_Level0 OF spi4_mosiB : ENTITY IS TRUE;

  end spi4_mosiB;

  architecture Structure of spi4_mosiB is
    ATTRIBUTE Vital_Level0 OF Structure : ARCHITECTURE IS TRUE;

    signal IOLDO_ipd 	: std_logic := 'X';
    signal spi4mosi_out 	: std_logic := 'X';

    component sapiobuf0003
      port (I: in Std_logic; PAD: out Std_logic);
    end component;
  begin
    spi4_mosi_pad: sapiobuf0003
      port map (I=>IOLDO_ipd, PAD=>spi4mosi_out);

    --  INPUT PATH DELAYs
    WireDelay : BLOCK
    BEGIN
      VitalWireDelay(IOLDO_ipd, IOLDO, tipd_IOLDO);
    END BLOCK;

    VitalBehavior : PROCESS (IOLDO_ipd, spi4mosi_out)
    VARIABLE spi4mosi_zd         	: std_logic := 'X';
    VARIABLE spi4mosi_GlitchData 	: VitalGlitchDataType;


    BEGIN

    IF (TimingChecksOn) THEN

    END IF;

    spi4mosi_zd 	:= spi4mosi_out;

    VitalPathDelay01 (
      OutSignal => spi4mosi, OutSignalName => "spi4mosi", OutTemp => spi4mosi_zd,
      Paths      => (0 => (InputChangeTime => IOLDO_ipd'last_event,
                           PathDelay => tpd_IOLDO_spi4mosi,
                           PathCondition => TRUE)),
      GlitchData => spi4mosi_GlitchData,
      Mode       => vitaltransport, XOn => XOn, MsgOn => MsgOn);

    END PROCESS;

  end Structure;

-- entity spi4_mosi_MGIOL
  library IEEE, vital2000, ECP5U;
  use IEEE.STD_LOGIC_1164.all;
  use vital2000.vital_timing.all;
  use ECP5U.COMPONENTS.ALL;

  entity spi4_mosi_MGIOL is
    -- miscellaneous vital GENERICs
    GENERIC (
      TimingChecksOn	: boolean := TRUE;
      XOn           	: boolean := FALSE;
      MsgOn         	: boolean := TRUE;
      InstancePath  	: string := "spi4_mosi_MGIOL";

      tipd_TXDATA0  	: VitalDelayType01 := (0 ns, 0 ns);
      tipd_TXDATA1  	: VitalDelayType01 := (0 ns, 0 ns);
      tipd_LSR  	: VitalDelayType01 := (0 ns, 0 ns);
      tipd_CLK  	: VitalDelayType01 := (0 ns, 0 ns);
      tpd_CLK_IOLDO	 : VitalDelayType01 := (0 ns, 0 ns);
      ticd_CLK	: VitalDelayType := 0 ns;
      tisd_TXDATA0_CLK	: VitalDelayType := 0 ns;
      tsetup_TXDATA0_CLK_noedge_posedge	: VitalDelayType := 0 ns;
      thold_TXDATA0_CLK_noedge_posedge	: VitalDelayType := 0 ns;
      tisd_TXDATA1_CLK	: VitalDelayType := 0 ns;
      tsetup_TXDATA1_CLK_noedge_posedge	: VitalDelayType := 0 ns;
      thold_TXDATA1_CLK_noedge_posedge	: VitalDelayType := 0 ns;
      tperiod_CLK 	: VitalDelayType := 0 ns;
      tpw_CLK_posedge	: VitalDelayType := 0 ns;
      tpw_CLK_negedge	: VitalDelayType := 0 ns);

    port (IOLDO: out Std_logic; TXDATA0: in Std_logic; TXDATA1: in Std_logic; 
          LSR: in Std_logic; CLK: in Std_logic);

    ATTRIBUTE Vital_Level0 OF spi4_mosi_MGIOL : ENTITY IS TRUE;

  end spi4_mosi_MGIOL;

  architecture Structure of spi4_mosi_MGIOL is
    ATTRIBUTE Vital_Level0 OF Structure : ARCHITECTURE IS TRUE;

    signal IOLDO_out 	: std_logic := 'X';
    signal TXDATA0_ipd 	: std_logic := 'X';
    signal TXDATA0_dly 	: std_logic := 'X';
    signal TXDATA1_ipd 	: std_logic := 'X';
    signal TXDATA1_dly 	: std_logic := 'X';
    signal LSR_ipd 	: std_logic := 'X';
    signal CLK_ipd 	: std_logic := 'X';
    signal CLK_dly 	: std_logic := 'X';

    component sapoddrx1
      port (D0: in Std_logic; D1: in Std_logic; SCLK: in Std_logic; 
            RST: in Std_logic; Q: out Std_logic);
    end component;
  begin
    wifi_q_spi_mosi_ddr: sapoddrx1
      port map (D0=>TXDATA0_dly, D1=>TXDATA1_dly, SCLK=>CLK_dly, RST=>LSR_ipd, 
                Q=>IOLDO_out);

    --  INPUT PATH DELAYs
    WireDelay : BLOCK
    BEGIN
      VitalWireDelay(TXDATA0_ipd, TXDATA0, tipd_TXDATA0);
      VitalWireDelay(TXDATA1_ipd, TXDATA1, tipd_TXDATA1);
      VitalWireDelay(LSR_ipd, LSR, tipd_LSR);
      VitalWireDelay(CLK_ipd, CLK, tipd_CLK);
    END BLOCK;

    --  Setup and Hold DELAYs
    SignalDelay : BLOCK
    BEGIN
      VitalSignalDelay(TXDATA0_dly, TXDATA0_ipd, tisd_TXDATA0_CLK);
      VitalSignalDelay(TXDATA1_dly, TXDATA1_ipd, tisd_TXDATA1_CLK);
      VitalSignalDelay(CLK_dly, CLK_ipd, ticd_CLK);
    END BLOCK;

    VitalBehavior : PROCESS (IOLDO_out, TXDATA0_dly, TXDATA1_dly, LSR_ipd, 
      CLK_dly)
    VARIABLE IOLDO_zd         	: std_logic := 'X';
    VARIABLE IOLDO_GlitchData 	: VitalGlitchDataType;

    VARIABLE tviol_TXDATA0_CLK       	: x01 := '0';
    VARIABLE TXDATA0_CLK_TimingDatash	: VitalTimingDataType;
    VARIABLE tviol_TXDATA1_CLK       	: x01 := '0';
    VARIABLE TXDATA1_CLK_TimingDatash	: VitalTimingDataType;
    VARIABLE tviol_CLK_CLK          	: x01 := '0';
    VARIABLE periodcheckinfo_CLK	: VitalPeriodDataType;

    BEGIN

    IF (TimingChecksOn) THEN
      VitalSetupHoldCheck (
        TestSignal => TXDATA0_dly,
        TestSignalName => "TXDATA0",
        TestDelay => tisd_TXDATA0_CLK,
        RefSignal => CLK_dly,
        RefSignalName => "CLK",
        RefDelay => ticd_CLK,
        SetupHigh => tsetup_TXDATA0_CLK_noedge_posedge,
        SetupLow => tsetup_TXDATA0_CLK_noedge_posedge,
        HoldHigh => thold_TXDATA0_CLK_noedge_posedge,
        HoldLow => thold_TXDATA0_CLK_noedge_posedge,
        CheckEnabled => TRUE,
        RefTransition => '/',
        MsgOn => MsgOn, XOn => XOn,
        HeaderMsg => InstancePath,
        TimingData => TXDATA0_CLK_TimingDatash,
        Violation => tviol_TXDATA0_CLK,
        MsgSeverity => warning);
      VitalSetupHoldCheck (
        TestSignal => TXDATA1_dly,
        TestSignalName => "TXDATA1",
        TestDelay => tisd_TXDATA1_CLK,
        RefSignal => CLK_dly,
        RefSignalName => "CLK",
        RefDelay => ticd_CLK,
        SetupHigh => tsetup_TXDATA1_CLK_noedge_posedge,
        SetupLow => tsetup_TXDATA1_CLK_noedge_posedge,
        HoldHigh => thold_TXDATA1_CLK_noedge_posedge,
        HoldLow => thold_TXDATA1_CLK_noedge_posedge,
        CheckEnabled => TRUE,
        RefTransition => '/',
        MsgOn => MsgOn, XOn => XOn,
        HeaderMsg => InstancePath,
        TimingData => TXDATA1_CLK_TimingDatash,
        Violation => tviol_TXDATA1_CLK,
        MsgSeverity => warning);
      VitalPeriodPulseCheck (
        TestSignal => CLK_ipd,
        TestSignalName => "CLK",
        Period => tperiod_CLK,
        PulseWidthHigh => tpw_CLK_posedge,
        PulseWidthLow => tpw_CLK_negedge,
        PeriodData => periodcheckinfo_CLK,
        Violation => tviol_CLK_CLK,
        MsgOn => MsgOn, XOn => XOn,
        HeaderMsg => InstancePath,
        CheckEnabled => TRUE,
        MsgSeverity => warning);

    END IF;

    IOLDO_zd 	:= IOLDO_out;

    VitalPathDelay01 (
      OutSignal => IOLDO, OutSignalName => "IOLDO", OutTemp => IOLDO_zd,
      Paths      => (0 => (InputChangeTime => CLK_dly'last_event,
                           PathDelay => tpd_CLK_IOLDO,
                           PathCondition => TRUE)),
      GlitchData => IOLDO_GlitchData,
      Mode       => ondetect, XOn => XOn, MsgOn => MsgOn);

    END PROCESS;

  end Structure;

-- entity fpga_ufl_p7B
  library IEEE, vital2000, ECP5U;
  use IEEE.STD_LOGIC_1164.all;
  use vital2000.vital_timing.all;
  use ECP5U.COMPONENTS.ALL;

  entity fpga_ufl_p7B is
    -- miscellaneous vital GENERICs
    GENERIC (
      TimingChecksOn	: boolean := TRUE;
      XOn           	: boolean := FALSE;
      MsgOn         	: boolean := TRUE;
      InstancePath  	: string := "fpga_ufl_p7B";

      tipd_PADDO  	: VitalDelayType01 := (0 ns, 0 ns);
      tpd_PADDO_fpgauflp7	 : VitalDelayType01 := (0 ns, 0 ns));

    port (PADDO: in Std_logic; fpgauflp7: out Std_logic);

    ATTRIBUTE Vital_Level0 OF fpga_ufl_p7B : ENTITY IS TRUE;

  end fpga_ufl_p7B;

  architecture Structure of fpga_ufl_p7B is
    ATTRIBUTE Vital_Level0 OF Structure : ARCHITECTURE IS TRUE;

    signal PADDO_ipd 	: std_logic := 'X';
    signal fpgauflp7_out 	: std_logic := 'X';

    component sapiobuf0003
      port (I: in Std_logic; PAD: out Std_logic);
    end component;
  begin
    fpga_ufl_p7_pad: sapiobuf0003
      port map (I=>PADDO_ipd, PAD=>fpgauflp7_out);

    --  INPUT PATH DELAYs
    WireDelay : BLOCK
    BEGIN
      VitalWireDelay(PADDO_ipd, PADDO, tipd_PADDO);
    END BLOCK;

    VitalBehavior : PROCESS (PADDO_ipd, fpgauflp7_out)
    VARIABLE fpgauflp7_zd         	: std_logic := 'X';
    VARIABLE fpgauflp7_GlitchData 	: VitalGlitchDataType;


    BEGIN

    IF (TimingChecksOn) THEN

    END IF;

    fpgauflp7_zd 	:= fpgauflp7_out;

    VitalPathDelay01 (
      OutSignal => fpgauflp7, OutSignalName => "fpgauflp7", OutTemp => fpgauflp7_zd,
      Paths      => (0 => (InputChangeTime => PADDO_ipd'last_event,
                           PathDelay => tpd_PADDO_fpgauflp7,
                           PathCondition => TRUE)),
      GlitchData => fpgauflp7_GlitchData,
      Mode       => vitaltransport, XOn => XOn, MsgOn => MsgOn);

    END PROCESS;

  end Structure;

-- entity fpga_ufl_p8B
  library IEEE, vital2000, ECP5U;
  use IEEE.STD_LOGIC_1164.all;
  use vital2000.vital_timing.all;
  use ECP5U.COMPONENTS.ALL;

  entity fpga_ufl_p8B is
    -- miscellaneous vital GENERICs
    GENERIC (
      TimingChecksOn	: boolean := TRUE;
      XOn           	: boolean := FALSE;
      MsgOn         	: boolean := TRUE;
      InstancePath  	: string := "fpga_ufl_p8B";

      tipd_PADDO  	: VitalDelayType01 := (0 ns, 0 ns);
      tpd_PADDO_fpgauflp8	 : VitalDelayType01 := (0 ns, 0 ns));

    port (PADDO: in Std_logic; fpgauflp8: out Std_logic);

    ATTRIBUTE Vital_Level0 OF fpga_ufl_p8B : ENTITY IS TRUE;

  end fpga_ufl_p8B;

  architecture Structure of fpga_ufl_p8B is
    ATTRIBUTE Vital_Level0 OF Structure : ARCHITECTURE IS TRUE;

    signal PADDO_ipd 	: std_logic := 'X';
    signal fpgauflp8_out 	: std_logic := 'X';

    component sapiobuf0003
      port (I: in Std_logic; PAD: out Std_logic);
    end component;
  begin
    fpga_ufl_p8_pad: sapiobuf0003
      port map (I=>PADDO_ipd, PAD=>fpgauflp8_out);

    --  INPUT PATH DELAYs
    WireDelay : BLOCK
    BEGIN
      VitalWireDelay(PADDO_ipd, PADDO, tipd_PADDO);
    END BLOCK;

    VitalBehavior : PROCESS (PADDO_ipd, fpgauflp8_out)
    VARIABLE fpgauflp8_zd         	: std_logic := 'X';
    VARIABLE fpgauflp8_GlitchData 	: VitalGlitchDataType;


    BEGIN

    IF (TimingChecksOn) THEN

    END IF;

    fpgauflp8_zd 	:= fpgauflp8_out;

    VitalPathDelay01 (
      OutSignal => fpgauflp8, OutSignalName => "fpgauflp8", OutTemp => fpgauflp8_zd,
      Paths      => (0 => (InputChangeTime => PADDO_ipd'last_event,
                           PathDelay => tpd_PADDO_fpgauflp8,
                           PathCondition => TRUE)),
      GlitchData => fpgauflp8_GlitchData,
      Mode       => vitaltransport, XOn => XOn, MsgOn => MsgOn);

    END PROCESS;

  end Structure;

-- entity sapiobuf0004
  library IEEE, vital2000, ECP5U;
  use IEEE.STD_LOGIC_1164.all;
  use vital2000.vital_timing.all;
  use ECP5U.COMPONENTS.ALL;

  entity sapiobuf0004 is
    port (Z: out Std_logic; PAD: in Std_logic);

    ATTRIBUTE Vital_Level0 OF sapiobuf0004 : ENTITY IS TRUE;

  end sapiobuf0004;

  architecture Structure of sapiobuf0004 is
  begin
    INST1: IBPD
      port map (I=>PAD, O=>Z);
  end Structure;

-- entity dpll_clkout2B
  library IEEE, vital2000, ECP5U;
  use IEEE.STD_LOGIC_1164.all;
  use vital2000.vital_timing.all;
  use ECP5U.COMPONENTS.ALL;

  entity dpll_clkout2B is
    -- miscellaneous vital GENERICs
    GENERIC (
      TimingChecksOn	: boolean := TRUE;
      XOn           	: boolean := FALSE;
      MsgOn         	: boolean := TRUE;
      InstancePath  	: string := "dpll_clkout2B";

      tipd_dpllclkout2  	: VitalDelayType01 := (0 ns, 0 ns);
      tpd_dpllclkout2_PADDI	 : VitalDelayType01 := (0 ns, 0 ns);
      tperiod_dpllclkout2 	: VitalDelayType := 0 ns;
      tpw_dpllclkout2_posedge	: VitalDelayType := 0 ns;
      tpw_dpllclkout2_negedge	: VitalDelayType := 0 ns);

    port (PADDI: out Std_logic; dpllclkout2: in Std_logic);

    ATTRIBUTE Vital_Level0 OF dpll_clkout2B : ENTITY IS TRUE;

  end dpll_clkout2B;

  architecture Structure of dpll_clkout2B is
    ATTRIBUTE Vital_Level0 OF Structure : ARCHITECTURE IS TRUE;

    signal PADDI_out 	: std_logic := 'X';
    signal dpllclkout2_ipd 	: std_logic := 'X';

    component sapiobuf0004
      port (Z: out Std_logic; PAD: in Std_logic);
    end component;
  begin
    dpll_clkout2_pad: sapiobuf0004
      port map (Z=>PADDI_out, PAD=>dpllclkout2_ipd);

    --  INPUT PATH DELAYs
    WireDelay : BLOCK
    BEGIN
      VitalWireDelay(dpllclkout2_ipd, dpllclkout2, tipd_dpllclkout2);
    END BLOCK;

    VitalBehavior : PROCESS (PADDI_out, dpllclkout2_ipd)
    VARIABLE PADDI_zd         	: std_logic := 'X';
    VARIABLE PADDI_GlitchData 	: VitalGlitchDataType;

    VARIABLE tviol_dpllclkout2_dpllclkout2          	: x01 := '0';
    VARIABLE periodcheckinfo_dpllclkout2	: VitalPeriodDataType;

    BEGIN

    IF (TimingChecksOn) THEN
      VitalPeriodPulseCheck (
        TestSignal => dpllclkout2_ipd,
        TestSignalName => "dpllclkout2",
        Period => tperiod_dpllclkout2,
        PulseWidthHigh => tpw_dpllclkout2_posedge,
        PulseWidthLow => tpw_dpllclkout2_negedge,
        PeriodData => periodcheckinfo_dpllclkout2,
        Violation => tviol_dpllclkout2_dpllclkout2,
        MsgOn => MsgOn, XOn => XOn,
        HeaderMsg => InstancePath,
        CheckEnabled => TRUE,
        MsgSeverity => warning);

    END IF;

    PADDI_zd 	:= PADDI_out;

    VitalPathDelay01 (
      OutSignal => PADDI, OutSignalName => "PADDI", OutTemp => PADDI_zd,
      Paths      => (0 => (InputChangeTime => dpllclkout2_ipd'last_event,
                           PathDelay => tpd_dpllclkout2_PADDI,
                           PathCondition => TRUE)),
      GlitchData => PADDI_GlitchData,
      Mode       => vitaltransport, XOn => XOn, MsgOn => MsgOn);

    END PROCESS;

  end Structure;

-- entity dpll_clkout0B
  library IEEE, vital2000, ECP5U;
  use IEEE.STD_LOGIC_1164.all;
  use vital2000.vital_timing.all;
  use ECP5U.COMPONENTS.ALL;

  entity dpll_clkout0B is
    -- miscellaneous vital GENERICs
    GENERIC (
      TimingChecksOn	: boolean := TRUE;
      XOn           	: boolean := FALSE;
      MsgOn         	: boolean := TRUE;
      InstancePath  	: string := "dpll_clkout0B";

      tipd_dpllclkout0  	: VitalDelayType01 := (0 ns, 0 ns);
      tpd_dpllclkout0_PADDI	 : VitalDelayType01 := (0 ns, 0 ns);
      tperiod_dpllclkout0 	: VitalDelayType := 0 ns;
      tpw_dpllclkout0_posedge	: VitalDelayType := 0 ns;
      tpw_dpllclkout0_negedge	: VitalDelayType := 0 ns);

    port (PADDI: out Std_logic; dpllclkout0: in Std_logic);

    ATTRIBUTE Vital_Level0 OF dpll_clkout0B : ENTITY IS TRUE;

  end dpll_clkout0B;

  architecture Structure of dpll_clkout0B is
    ATTRIBUTE Vital_Level0 OF Structure : ARCHITECTURE IS TRUE;

    signal PADDI_out 	: std_logic := 'X';
    signal dpllclkout0_ipd 	: std_logic := 'X';

    component sapiobuf0004
      port (Z: out Std_logic; PAD: in Std_logic);
    end component;
  begin
    dpll_clkout0_pad: sapiobuf0004
      port map (Z=>PADDI_out, PAD=>dpllclkout0_ipd);

    --  INPUT PATH DELAYs
    WireDelay : BLOCK
    BEGIN
      VitalWireDelay(dpllclkout0_ipd, dpllclkout0, tipd_dpllclkout0);
    END BLOCK;

    VitalBehavior : PROCESS (PADDI_out, dpllclkout0_ipd)
    VARIABLE PADDI_zd         	: std_logic := 'X';
    VARIABLE PADDI_GlitchData 	: VitalGlitchDataType;

    VARIABLE tviol_dpllclkout0_dpllclkout0          	: x01 := '0';
    VARIABLE periodcheckinfo_dpllclkout0	: VitalPeriodDataType;

    BEGIN

    IF (TimingChecksOn) THEN
      VitalPeriodPulseCheck (
        TestSignal => dpllclkout0_ipd,
        TestSignalName => "dpllclkout0",
        Period => tperiod_dpllclkout0,
        PulseWidthHigh => tpw_dpllclkout0_posedge,
        PulseWidthLow => tpw_dpllclkout0_negedge,
        PeriodData => periodcheckinfo_dpllclkout0,
        Violation => tviol_dpllclkout0_dpllclkout0,
        MsgOn => MsgOn, XOn => XOn,
        HeaderMsg => InstancePath,
        CheckEnabled => TRUE,
        MsgSeverity => warning);

    END IF;

    PADDI_zd 	:= PADDI_out;

    VitalPathDelay01 (
      OutSignal => PADDI, OutSignalName => "PADDI", OutTemp => PADDI_zd,
      Paths      => (0 => (InputChangeTime => dpllclkout0_ipd'last_event,
                           PathDelay => tpd_dpllclkout0_PADDI,
                           PathCondition => TRUE)),
      GlitchData => PADDI_GlitchData,
      Mode       => vitaltransport, XOn => XOn, MsgOn => MsgOn);

    END PROCESS;

  end Structure;

-- entity sapiobuf0005
  library IEEE, vital2000, ECP5U;
  use IEEE.STD_LOGIC_1164.all;
  use vital2000.vital_timing.all;
  use ECP5U.COMPONENTS.ALL;

  entity sapiobuf0005 is
    port (Z: out Std_logic; PAD: in Std_logic);

    ATTRIBUTE Vital_Level0 OF sapiobuf0005 : ENTITY IS TRUE;

  end sapiobuf0005;

  architecture Structure of sapiobuf0005 is
  begin
    INST1: IB
      port map (I=>PAD, O=>Z);
  end Structure;

-- entity sdr_rx_wifiB
  library IEEE, vital2000, ECP5U;
  use IEEE.STD_LOGIC_1164.all;
  use vital2000.vital_timing.all;
  use ECP5U.COMPONENTS.ALL;

  entity sdr_rx_wifiB is
    -- miscellaneous vital GENERICs
    GENERIC (
      TimingChecksOn	: boolean := TRUE;
      XOn           	: boolean := FALSE;
      MsgOn         	: boolean := TRUE;
      InstancePath  	: string := "sdr_rx_wifiB";

      tipd_sdrrxwifi  	: VitalDelayType01 := (0 ns, 0 ns);
      tpd_sdrrxwifi_PADDI	 : VitalDelayType01 := (0 ns, 0 ns);
      tperiod_sdrrxwifi 	: VitalDelayType := 0 ns;
      tpw_sdrrxwifi_posedge	: VitalDelayType := 0 ns;
      tpw_sdrrxwifi_negedge	: VitalDelayType := 0 ns);

    port (PADDI: out Std_logic; sdrrxwifi: in Std_logic);

    ATTRIBUTE Vital_Level0 OF sdr_rx_wifiB : ENTITY IS TRUE;

  end sdr_rx_wifiB;

  architecture Structure of sdr_rx_wifiB is
    ATTRIBUTE Vital_Level0 OF Structure : ARCHITECTURE IS TRUE;

    signal PADDI_out 	: std_logic := 'X';
    signal sdrrxwifi_ipd 	: std_logic := 'X';

    component sapiobuf0005
      port (Z: out Std_logic; PAD: in Std_logic);
    end component;
  begin
    sdr_rx_wifi_pad: sapiobuf0005
      port map (Z=>PADDI_out, PAD=>sdrrxwifi_ipd);

    --  INPUT PATH DELAYs
    WireDelay : BLOCK
    BEGIN
      VitalWireDelay(sdrrxwifi_ipd, sdrrxwifi, tipd_sdrrxwifi);
    END BLOCK;

    VitalBehavior : PROCESS (PADDI_out, sdrrxwifi_ipd)
    VARIABLE PADDI_zd         	: std_logic := 'X';
    VARIABLE PADDI_GlitchData 	: VitalGlitchDataType;

    VARIABLE tviol_sdrrxwifi_sdrrxwifi          	: x01 := '0';
    VARIABLE periodcheckinfo_sdrrxwifi	: VitalPeriodDataType;

    BEGIN

    IF (TimingChecksOn) THEN
      VitalPeriodPulseCheck (
        TestSignal => sdrrxwifi_ipd,
        TestSignalName => "sdrrxwifi",
        Period => tperiod_sdrrxwifi,
        PulseWidthHigh => tpw_sdrrxwifi_posedge,
        PulseWidthLow => tpw_sdrrxwifi_negedge,
        PeriodData => periodcheckinfo_sdrrxwifi,
        Violation => tviol_sdrrxwifi_sdrrxwifi,
        MsgOn => MsgOn, XOn => XOn,
        HeaderMsg => InstancePath,
        CheckEnabled => TRUE,
        MsgSeverity => warning);

    END IF;

    PADDI_zd 	:= PADDI_out;

    VitalPathDelay01 (
      OutSignal => PADDI, OutSignalName => "PADDI", OutTemp => PADDI_zd,
      Paths      => (0 => (InputChangeTime => sdrrxwifi_ipd'last_event,
                           PathDelay => tpd_sdrrxwifi_PADDI,
                           PathCondition => TRUE)),
      GlitchData => PADDI_GlitchData,
      Mode       => vitaltransport, XOn => XOn, MsgOn => MsgOn);

    END PROCESS;

  end Structure;

-- entity sapiddrx1
  library IEEE, vital2000, ECP5U;
  use IEEE.STD_LOGIC_1164.all;
  use vital2000.vital_timing.all;
  use ECP5U.COMPONENTS.ALL;

  entity sapiddrx1 is
    port (D: in Std_logic; SCLK: in Std_logic; RST: in Std_logic; 
          Q0: out Std_logic; Q1: out Std_logic);

    ATTRIBUTE Vital_Level0 OF sapiddrx1 : ENTITY IS TRUE;

  end sapiddrx1;

  architecture Structure of sapiddrx1 is
  begin
    INST0: IDDRX1F
      generic map (GSR => "ENABLED")
      port map (D=>D, SCLK=>SCLK, RST=>RST, Q0=>Q0, Q1=>Q1);
  end Structure;

-- entity sdr_rx_wifi_MGIOL
  library IEEE, vital2000, ECP5U;
  use IEEE.STD_LOGIC_1164.all;
  use vital2000.vital_timing.all;
  use ECP5U.COMPONENTS.ALL;

  entity sdr_rx_wifi_MGIOL is
    -- miscellaneous vital GENERICs
    GENERIC (
      TimingChecksOn	: boolean := TRUE;
      XOn           	: boolean := FALSE;
      MsgOn         	: boolean := TRUE;
      InstancePath  	: string := "sdr_rx_wifi_MGIOL";

      tipd_DI  	: VitalDelayType01 := (0 ns, 0 ns);
      tipd_LSR  	: VitalDelayType01 := (0 ns, 0 ns);
      tipd_CLK  	: VitalDelayType01 := (0 ns, 0 ns);
      tpd_CLK_RXDATA0	 : VitalDelayType01 := (0 ns, 0 ns);
      tpd_CLK_RXDATA1	 : VitalDelayType01 := (0 ns, 0 ns);
      ticd_CLK	: VitalDelayType := 0 ns;
      tisd_DI_CLK	: VitalDelayType := 0 ns;
      tsetup_DI_CLK_noedge_posedge	: VitalDelayType := 0 ns;
      thold_DI_CLK_noedge_posedge	: VitalDelayType := 0 ns;
      tperiod_CLK 	: VitalDelayType := 0 ns;
      tpw_CLK_posedge	: VitalDelayType := 0 ns;
      tpw_CLK_negedge	: VitalDelayType := 0 ns);

    port (DI: in Std_logic; LSR: in Std_logic; CLK: in Std_logic; 
          RXDATA0: out Std_logic; RXDATA1: out Std_logic);

    ATTRIBUTE Vital_Level0 OF sdr_rx_wifi_MGIOL : ENTITY IS TRUE;

  end sdr_rx_wifi_MGIOL;

  architecture Structure of sdr_rx_wifi_MGIOL is
    ATTRIBUTE Vital_Level0 OF Structure : ARCHITECTURE IS TRUE;

    signal DI_ipd 	: std_logic := 'X';
    signal DI_dly 	: std_logic := 'X';
    signal LSR_ipd 	: std_logic := 'X';
    signal CLK_ipd 	: std_logic := 'X';
    signal CLK_dly 	: std_logic := 'X';
    signal RXDATA0_out 	: std_logic := 'X';
    signal RXDATA1_out 	: std_logic := 'X';

    component sapiddrx1
      port (D: in Std_logic; SCLK: in Std_logic; RST: in Std_logic; 
            Q0: out Std_logic; Q1: out Std_logic);
    end component;
  begin
    wifi_iddr: sapiddrx1
      port map (D=>DI_dly, SCLK=>CLK_dly, RST=>LSR_ipd, Q0=>RXDATA0_out, 
                Q1=>RXDATA1_out);

    --  INPUT PATH DELAYs
    WireDelay : BLOCK
    BEGIN
      VitalWireDelay(DI_ipd, DI, tipd_DI);
      VitalWireDelay(LSR_ipd, LSR, tipd_LSR);
      VitalWireDelay(CLK_ipd, CLK, tipd_CLK);
    END BLOCK;

    --  Setup and Hold DELAYs
    SignalDelay : BLOCK
    BEGIN
      VitalSignalDelay(DI_dly, DI_ipd, tisd_DI_CLK);
      VitalSignalDelay(CLK_dly, CLK_ipd, ticd_CLK);
    END BLOCK;

    VitalBehavior : PROCESS (DI_dly, LSR_ipd, CLK_dly, RXDATA0_out, 
      RXDATA1_out)
    VARIABLE RXDATA0_zd         	: std_logic := 'X';
    VARIABLE RXDATA0_GlitchData 	: VitalGlitchDataType;
    VARIABLE RXDATA1_zd         	: std_logic := 'X';
    VARIABLE RXDATA1_GlitchData 	: VitalGlitchDataType;

    VARIABLE tviol_DI_CLK       	: x01 := '0';
    VARIABLE DI_CLK_TimingDatash	: VitalTimingDataType;
    VARIABLE tviol_CLK_CLK          	: x01 := '0';
    VARIABLE periodcheckinfo_CLK	: VitalPeriodDataType;

    BEGIN

    IF (TimingChecksOn) THEN
      VitalSetupHoldCheck (
        TestSignal => DI_dly,
        TestSignalName => "DI",
        TestDelay => tisd_DI_CLK,
        RefSignal => CLK_dly,
        RefSignalName => "CLK",
        RefDelay => ticd_CLK,
        SetupHigh => tsetup_DI_CLK_noedge_posedge,
        SetupLow => tsetup_DI_CLK_noedge_posedge,
        HoldHigh => thold_DI_CLK_noedge_posedge,
        HoldLow => thold_DI_CLK_noedge_posedge,
        CheckEnabled => TRUE,
        RefTransition => '/',
        MsgOn => MsgOn, XOn => XOn,
        HeaderMsg => InstancePath,
        TimingData => DI_CLK_TimingDatash,
        Violation => tviol_DI_CLK,
        MsgSeverity => warning);
      VitalPeriodPulseCheck (
        TestSignal => CLK_ipd,
        TestSignalName => "CLK",
        Period => tperiod_CLK,
        PulseWidthHigh => tpw_CLK_posedge,
        PulseWidthLow => tpw_CLK_negedge,
        PeriodData => periodcheckinfo_CLK,
        Violation => tviol_CLK_CLK,
        MsgOn => MsgOn, XOn => XOn,
        HeaderMsg => InstancePath,
        CheckEnabled => TRUE,
        MsgSeverity => warning);

    END IF;

    RXDATA0_zd 	:= RXDATA0_out;
    RXDATA1_zd 	:= RXDATA1_out;

    VitalPathDelay01 (
      OutSignal => RXDATA0, OutSignalName => "RXDATA0", OutTemp => RXDATA0_zd,
      Paths      => (0 => (InputChangeTime => CLK_dly'last_event,
                           PathDelay => tpd_CLK_RXDATA0,
                           PathCondition => TRUE)),
      GlitchData => RXDATA0_GlitchData,
      Mode       => ondetect, XOn => XOn, MsgOn => MsgOn);
    VitalPathDelay01 (
      OutSignal => RXDATA1, OutSignalName => "RXDATA1", OutTemp => RXDATA1_zd,
      Paths      => (0 => (InputChangeTime => CLK_dly'last_event,
                           PathDelay => tpd_CLK_RXDATA1,
                           PathCondition => TRUE)),
      GlitchData => RXDATA1_GlitchData,
      Mode       => ondetect, XOn => XOn, MsgOn => MsgOn);

    END PROCESS;

  end Structure;

-- entity sdr_rx_subgB
  library IEEE, vital2000, ECP5U;
  use IEEE.STD_LOGIC_1164.all;
  use vital2000.vital_timing.all;
  use ECP5U.COMPONENTS.ALL;

  entity sdr_rx_subgB is
    -- miscellaneous vital GENERICs
    GENERIC (
      TimingChecksOn	: boolean := TRUE;
      XOn           	: boolean := FALSE;
      MsgOn         	: boolean := TRUE;
      InstancePath  	: string := "sdr_rx_subgB";

      tipd_sdrrxsubg  	: VitalDelayType01 := (0 ns, 0 ns);
      tpd_sdrrxsubg_PADDI	 : VitalDelayType01 := (0 ns, 0 ns);
      tperiod_sdrrxsubg 	: VitalDelayType := 0 ns;
      tpw_sdrrxsubg_posedge	: VitalDelayType := 0 ns;
      tpw_sdrrxsubg_negedge	: VitalDelayType := 0 ns);

    port (PADDI: out Std_logic; sdrrxsubg: in Std_logic);

    ATTRIBUTE Vital_Level0 OF sdr_rx_subgB : ENTITY IS TRUE;

  end sdr_rx_subgB;

  architecture Structure of sdr_rx_subgB is
    ATTRIBUTE Vital_Level0 OF Structure : ARCHITECTURE IS TRUE;

    signal PADDI_out 	: std_logic := 'X';
    signal sdrrxsubg_ipd 	: std_logic := 'X';

    component sapiobuf0005
      port (Z: out Std_logic; PAD: in Std_logic);
    end component;
  begin
    fpga_ufl_p8_c_pad: sapiobuf0005
      port map (Z=>PADDI_out, PAD=>sdrrxsubg_ipd);

    --  INPUT PATH DELAYs
    WireDelay : BLOCK
    BEGIN
      VitalWireDelay(sdrrxsubg_ipd, sdrrxsubg, tipd_sdrrxsubg);
    END BLOCK;

    VitalBehavior : PROCESS (PADDI_out, sdrrxsubg_ipd)
    VARIABLE PADDI_zd         	: std_logic := 'X';
    VARIABLE PADDI_GlitchData 	: VitalGlitchDataType;

    VARIABLE tviol_sdrrxsubg_sdrrxsubg          	: x01 := '0';
    VARIABLE periodcheckinfo_sdrrxsubg	: VitalPeriodDataType;

    BEGIN

    IF (TimingChecksOn) THEN
      VitalPeriodPulseCheck (
        TestSignal => sdrrxsubg_ipd,
        TestSignalName => "sdrrxsubg",
        Period => tperiod_sdrrxsubg,
        PulseWidthHigh => tpw_sdrrxsubg_posedge,
        PulseWidthLow => tpw_sdrrxsubg_negedge,
        PeriodData => periodcheckinfo_sdrrxsubg,
        Violation => tviol_sdrrxsubg_sdrrxsubg,
        MsgOn => MsgOn, XOn => XOn,
        HeaderMsg => InstancePath,
        CheckEnabled => TRUE,
        MsgSeverity => warning);

    END IF;

    PADDI_zd 	:= PADDI_out;

    VitalPathDelay01 (
      OutSignal => PADDI, OutSignalName => "PADDI", OutTemp => PADDI_zd,
      Paths      => (0 => (InputChangeTime => sdrrxsubg_ipd'last_event,
                           PathDelay => tpd_sdrrxsubg_PADDI,
                           PathCondition => TRUE)),
      GlitchData => PADDI_GlitchData,
      Mode       => vitaltransport, XOn => XOn, MsgOn => MsgOn);

    END PROCESS;

  end Structure;

-- entity sdr_rx_subg_MGIOL
  library IEEE, vital2000, ECP5U;
  use IEEE.STD_LOGIC_1164.all;
  use vital2000.vital_timing.all;
  use ECP5U.COMPONENTS.ALL;

  entity sdr_rx_subg_MGIOL is
    -- miscellaneous vital GENERICs
    GENERIC (
      TimingChecksOn	: boolean := TRUE;
      XOn           	: boolean := FALSE;
      MsgOn         	: boolean := TRUE;
      InstancePath  	: string := "sdr_rx_subg_MGIOL";

      tipd_DI  	: VitalDelayType01 := (0 ns, 0 ns);
      tipd_LSR  	: VitalDelayType01 := (0 ns, 0 ns);
      tipd_CLK  	: VitalDelayType01 := (0 ns, 0 ns);
      tpd_CLK_RXDATA0	 : VitalDelayType01 := (0 ns, 0 ns);
      tpd_CLK_RXDATA1	 : VitalDelayType01 := (0 ns, 0 ns);
      ticd_CLK	: VitalDelayType := 0 ns;
      tisd_DI_CLK	: VitalDelayType := 0 ns;
      tsetup_DI_CLK_noedge_posedge	: VitalDelayType := 0 ns;
      thold_DI_CLK_noedge_posedge	: VitalDelayType := 0 ns;
      tperiod_CLK 	: VitalDelayType := 0 ns;
      tpw_CLK_posedge	: VitalDelayType := 0 ns;
      tpw_CLK_negedge	: VitalDelayType := 0 ns);

    port (DI: in Std_logic; LSR: in Std_logic; CLK: in Std_logic; 
          RXDATA0: out Std_logic; RXDATA1: out Std_logic);

    ATTRIBUTE Vital_Level0 OF sdr_rx_subg_MGIOL : ENTITY IS TRUE;

  end sdr_rx_subg_MGIOL;

  architecture Structure of sdr_rx_subg_MGIOL is
    ATTRIBUTE Vital_Level0 OF Structure : ARCHITECTURE IS TRUE;

    signal DI_ipd 	: std_logic := 'X';
    signal DI_dly 	: std_logic := 'X';
    signal LSR_ipd 	: std_logic := 'X';
    signal CLK_ipd 	: std_logic := 'X';
    signal CLK_dly 	: std_logic := 'X';
    signal RXDATA0_out 	: std_logic := 'X';
    signal RXDATA1_out 	: std_logic := 'X';

    component sapiddrx1
      port (D: in Std_logic; SCLK: in Std_logic; RST: in Std_logic; 
            Q0: out Std_logic; Q1: out Std_logic);
    end component;
  begin
    subg_iddr: sapiddrx1
      port map (D=>DI_dly, SCLK=>CLK_dly, RST=>LSR_ipd, Q0=>RXDATA0_out, 
                Q1=>RXDATA1_out);

    --  INPUT PATH DELAYs
    WireDelay : BLOCK
    BEGIN
      VitalWireDelay(DI_ipd, DI, tipd_DI);
      VitalWireDelay(LSR_ipd, LSR, tipd_LSR);
      VitalWireDelay(CLK_ipd, CLK, tipd_CLK);
    END BLOCK;

    --  Setup and Hold DELAYs
    SignalDelay : BLOCK
    BEGIN
      VitalSignalDelay(DI_dly, DI_ipd, tisd_DI_CLK);
      VitalSignalDelay(CLK_dly, CLK_ipd, ticd_CLK);
    END BLOCK;

    VitalBehavior : PROCESS (DI_dly, LSR_ipd, CLK_dly, RXDATA0_out, 
      RXDATA1_out)
    VARIABLE RXDATA0_zd         	: std_logic := 'X';
    VARIABLE RXDATA0_GlitchData 	: VitalGlitchDataType;
    VARIABLE RXDATA1_zd         	: std_logic := 'X';
    VARIABLE RXDATA1_GlitchData 	: VitalGlitchDataType;

    VARIABLE tviol_DI_CLK       	: x01 := '0';
    VARIABLE DI_CLK_TimingDatash	: VitalTimingDataType;
    VARIABLE tviol_CLK_CLK          	: x01 := '0';
    VARIABLE periodcheckinfo_CLK	: VitalPeriodDataType;

    BEGIN

    IF (TimingChecksOn) THEN
      VitalSetupHoldCheck (
        TestSignal => DI_dly,
        TestSignalName => "DI",
        TestDelay => tisd_DI_CLK,
        RefSignal => CLK_dly,
        RefSignalName => "CLK",
        RefDelay => ticd_CLK,
        SetupHigh => tsetup_DI_CLK_noedge_posedge,
        SetupLow => tsetup_DI_CLK_noedge_posedge,
        HoldHigh => thold_DI_CLK_noedge_posedge,
        HoldLow => thold_DI_CLK_noedge_posedge,
        CheckEnabled => TRUE,
        RefTransition => '/',
        MsgOn => MsgOn, XOn => XOn,
        HeaderMsg => InstancePath,
        TimingData => DI_CLK_TimingDatash,
        Violation => tviol_DI_CLK,
        MsgSeverity => warning);
      VitalPeriodPulseCheck (
        TestSignal => CLK_ipd,
        TestSignalName => "CLK",
        Period => tperiod_CLK,
        PulseWidthHigh => tpw_CLK_posedge,
        PulseWidthLow => tpw_CLK_negedge,
        PeriodData => periodcheckinfo_CLK,
        Violation => tviol_CLK_CLK,
        MsgOn => MsgOn, XOn => XOn,
        HeaderMsg => InstancePath,
        CheckEnabled => TRUE,
        MsgSeverity => warning);

    END IF;

    RXDATA0_zd 	:= RXDATA0_out;
    RXDATA1_zd 	:= RXDATA1_out;

    VitalPathDelay01 (
      OutSignal => RXDATA0, OutSignalName => "RXDATA0", OutTemp => RXDATA0_zd,
      Paths      => (0 => (InputChangeTime => CLK_dly'last_event,
                           PathDelay => tpd_CLK_RXDATA0,
                           PathCondition => TRUE)),
      GlitchData => RXDATA0_GlitchData,
      Mode       => ondetect, XOn => XOn, MsgOn => MsgOn);
    VitalPathDelay01 (
      OutSignal => RXDATA1, OutSignalName => "RXDATA1", OutTemp => RXDATA1_zd,
      Paths      => (0 => (InputChangeTime => CLK_dly'last_event,
                           PathDelay => tpd_CLK_RXDATA1,
                           PathCondition => TRUE)),
      GlitchData => RXDATA1_GlitchData,
      Mode       => ondetect, XOn => XOn, MsgOn => MsgOn);

    END PROCESS;

  end Structure;

-- entity sdr_rxclkB
  library IEEE, vital2000, ECP5U;
  use IEEE.STD_LOGIC_1164.all;
  use vital2000.vital_timing.all;
  use ECP5U.COMPONENTS.ALL;

  entity sdr_rxclkB is
    -- miscellaneous vital GENERICs
    GENERIC (
      TimingChecksOn	: boolean := TRUE;
      XOn           	: boolean := FALSE;
      MsgOn         	: boolean := TRUE;
      InstancePath  	: string := "sdr_rxclkB";

      tipd_sdrrxclk  	: VitalDelayType01 := (0 ns, 0 ns);
      tpd_sdrrxclk_PADDI	 : VitalDelayType01 := (0 ns, 0 ns);
      tperiod_sdrrxclk 	: VitalDelayType := 0 ns;
      tpw_sdrrxclk_posedge	: VitalDelayType := 0 ns;
      tpw_sdrrxclk_negedge	: VitalDelayType := 0 ns);

    port (PADDI: out Std_logic; sdrrxclk: in Std_logic);

    ATTRIBUTE Vital_Level0 OF sdr_rxclkB : ENTITY IS TRUE;

  end sdr_rxclkB;

  architecture Structure of sdr_rxclkB is
    ATTRIBUTE Vital_Level0 OF Structure : ARCHITECTURE IS TRUE;

    signal PADDI_out 	: std_logic := 'X';
    signal sdrrxclk_ipd 	: std_logic := 'X';

    component sapiobuf0005
      port (Z: out Std_logic; PAD: in Std_logic);
    end component;
  begin
    sdr_rxclk_pad: sapiobuf0005
      port map (Z=>PADDI_out, PAD=>sdrrxclk_ipd);

    --  INPUT PATH DELAYs
    WireDelay : BLOCK
    BEGIN
      VitalWireDelay(sdrrxclk_ipd, sdrrxclk, tipd_sdrrxclk);
    END BLOCK;

    VitalBehavior : PROCESS (PADDI_out, sdrrxclk_ipd)
    VARIABLE PADDI_zd         	: std_logic := 'X';
    VARIABLE PADDI_GlitchData 	: VitalGlitchDataType;

    VARIABLE tviol_sdrrxclk_sdrrxclk          	: x01 := '0';
    VARIABLE periodcheckinfo_sdrrxclk	: VitalPeriodDataType;

    BEGIN

    IF (TimingChecksOn) THEN
      VitalPeriodPulseCheck (
        TestSignal => sdrrxclk_ipd,
        TestSignalName => "sdrrxclk",
        Period => tperiod_sdrrxclk,
        PulseWidthHigh => tpw_sdrrxclk_posedge,
        PulseWidthLow => tpw_sdrrxclk_negedge,
        PeriodData => periodcheckinfo_sdrrxclk,
        Violation => tviol_sdrrxclk_sdrrxclk,
        MsgOn => MsgOn, XOn => XOn,
        HeaderMsg => InstancePath,
        CheckEnabled => TRUE,
        MsgSeverity => warning);

    END IF;

    PADDI_zd 	:= PADDI_out;

    VitalPathDelay01 (
      OutSignal => PADDI, OutSignalName => "PADDI", OutTemp => PADDI_zd,
      Paths      => (0 => (InputChangeTime => sdrrxclk_ipd'last_event,
                           PathDelay => tpd_sdrrxclk_PADDI,
                           PathCondition => TRUE)),
      GlitchData => PADDI_GlitchData,
      Mode       => vitaltransport, XOn => XOn, MsgOn => MsgOn);

    END PROCESS;

  end Structure;

-- entity stm_fpga_spare1B
  library IEEE, vital2000, ECP5U;
  use IEEE.STD_LOGIC_1164.all;
  use vital2000.vital_timing.all;
  use ECP5U.COMPONENTS.ALL;

  entity stm_fpga_spare1B is
    -- miscellaneous vital GENERICs
    GENERIC (
      TimingChecksOn	: boolean := TRUE;
      XOn           	: boolean := FALSE;
      MsgOn         	: boolean := TRUE;
      InstancePath  	: string := "stm_fpga_spare1B";

      tipd_stmfpgaspare1  	: VitalDelayType01 := (0 ns, 0 ns);
      tpd_stmfpgaspare1_PADDI	 : VitalDelayType01 := (0 ns, 0 ns);
      tperiod_stmfpgaspare1 	: VitalDelayType := 0 ns;
      tpw_stmfpgaspare1_posedge	: VitalDelayType := 0 ns;
      tpw_stmfpgaspare1_negedge	: VitalDelayType := 0 ns);

    port (PADDI: out Std_logic; stmfpgaspare1: in Std_logic);

    ATTRIBUTE Vital_Level0 OF stm_fpga_spare1B : ENTITY IS TRUE;

  end stm_fpga_spare1B;

  architecture Structure of stm_fpga_spare1B is
    ATTRIBUTE Vital_Level0 OF Structure : ARCHITECTURE IS TRUE;

    signal PADDI_out 	: std_logic := 'X';
    signal stmfpgaspare1_ipd 	: std_logic := 'X';

    component sapiobuf0004
      port (Z: out Std_logic; PAD: in Std_logic);
    end component;
  begin
    stm_fpga_spare1_pad: sapiobuf0004
      port map (Z=>PADDI_out, PAD=>stmfpgaspare1_ipd);

    --  INPUT PATH DELAYs
    WireDelay : BLOCK
    BEGIN
      VitalWireDelay(stmfpgaspare1_ipd, stmfpgaspare1, tipd_stmfpgaspare1);
    END BLOCK;

    VitalBehavior : PROCESS (PADDI_out, stmfpgaspare1_ipd)
    VARIABLE PADDI_zd         	: std_logic := 'X';
    VARIABLE PADDI_GlitchData 	: VitalGlitchDataType;

    VARIABLE tviol_stmfpgaspare1_stmfpgaspare1          	: x01 := '0';
    VARIABLE periodcheckinfo_stmfpgaspare1	: VitalPeriodDataType;

    BEGIN

    IF (TimingChecksOn) THEN
      VitalPeriodPulseCheck (
        TestSignal => stmfpgaspare1_ipd,
        TestSignalName => "stmfpgaspare1",
        Period => tperiod_stmfpgaspare1,
        PulseWidthHigh => tpw_stmfpgaspare1_posedge,
        PulseWidthLow => tpw_stmfpgaspare1_negedge,
        PeriodData => periodcheckinfo_stmfpgaspare1,
        Violation => tviol_stmfpgaspare1_stmfpgaspare1,
        MsgOn => MsgOn, XOn => XOn,
        HeaderMsg => InstancePath,
        CheckEnabled => TRUE,
        MsgSeverity => warning);

    END IF;

    PADDI_zd 	:= PADDI_out;

    VitalPathDelay01 (
      OutSignal => PADDI, OutSignalName => "PADDI", OutTemp => PADDI_zd,
      Paths      => (0 => (InputChangeTime => stmfpgaspare1_ipd'last_event,
                           PathDelay => tpd_stmfpgaspare1_PADDI,
                           PathCondition => TRUE)),
      GlitchData => PADDI_GlitchData,
      Mode       => vitaltransport, XOn => XOn, MsgOn => MsgOn);

    END PROCESS;

  end Structure;

-- entity stm_fpga_spare2B
  library IEEE, vital2000, ECP5U;
  use IEEE.STD_LOGIC_1164.all;
  use vital2000.vital_timing.all;
  use ECP5U.COMPONENTS.ALL;

  entity stm_fpga_spare2B is
    -- miscellaneous vital GENERICs
    GENERIC (
      TimingChecksOn	: boolean := TRUE;
      XOn           	: boolean := FALSE;
      MsgOn         	: boolean := TRUE;
      InstancePath  	: string := "stm_fpga_spare2B";

      tipd_stmfpgaspare2  	: VitalDelayType01 := (0 ns, 0 ns);
      tpd_stmfpgaspare2_PADDI	 : VitalDelayType01 := (0 ns, 0 ns);
      tperiod_stmfpgaspare2 	: VitalDelayType := 0 ns;
      tpw_stmfpgaspare2_posedge	: VitalDelayType := 0 ns;
      tpw_stmfpgaspare2_negedge	: VitalDelayType := 0 ns);

    port (PADDI: out Std_logic; stmfpgaspare2: in Std_logic);

    ATTRIBUTE Vital_Level0 OF stm_fpga_spare2B : ENTITY IS TRUE;

  end stm_fpga_spare2B;

  architecture Structure of stm_fpga_spare2B is
    ATTRIBUTE Vital_Level0 OF Structure : ARCHITECTURE IS TRUE;

    signal PADDI_out 	: std_logic := 'X';
    signal stmfpgaspare2_ipd 	: std_logic := 'X';

    component sapiobuf0004
      port (Z: out Std_logic; PAD: in Std_logic);
    end component;
  begin
    stm_fpga_spare2_pad: sapiobuf0004
      port map (Z=>PADDI_out, PAD=>stmfpgaspare2_ipd);

    --  INPUT PATH DELAYs
    WireDelay : BLOCK
    BEGIN
      VitalWireDelay(stmfpgaspare2_ipd, stmfpgaspare2, tipd_stmfpgaspare2);
    END BLOCK;

    VitalBehavior : PROCESS (PADDI_out, stmfpgaspare2_ipd)
    VARIABLE PADDI_zd         	: std_logic := 'X';
    VARIABLE PADDI_GlitchData 	: VitalGlitchDataType;

    VARIABLE tviol_stmfpgaspare2_stmfpgaspare2          	: x01 := '0';
    VARIABLE periodcheckinfo_stmfpgaspare2	: VitalPeriodDataType;

    BEGIN

    IF (TimingChecksOn) THEN
      VitalPeriodPulseCheck (
        TestSignal => stmfpgaspare2_ipd,
        TestSignalName => "stmfpgaspare2",
        Period => tperiod_stmfpgaspare2,
        PulseWidthHigh => tpw_stmfpgaspare2_posedge,
        PulseWidthLow => tpw_stmfpgaspare2_negedge,
        PeriodData => periodcheckinfo_stmfpgaspare2,
        Violation => tviol_stmfpgaspare2_stmfpgaspare2,
        MsgOn => MsgOn, XOn => XOn,
        HeaderMsg => InstancePath,
        CheckEnabled => TRUE,
        MsgSeverity => warning);

    END IF;

    PADDI_zd 	:= PADDI_out;

    VitalPathDelay01 (
      OutSignal => PADDI, OutSignalName => "PADDI", OutTemp => PADDI_zd,
      Paths      => (0 => (InputChangeTime => stmfpgaspare2_ipd'last_event,
                           PathDelay => tpd_stmfpgaspare2_PADDI,
                           PathCondition => TRUE)),
      GlitchData => PADDI_GlitchData,
      Mode       => vitaltransport, XOn => XOn, MsgOn => MsgOn);

    END PROCESS;

  end Structure;

-- entity stm_fpga_spare5B
  library IEEE, vital2000, ECP5U;
  use IEEE.STD_LOGIC_1164.all;
  use vital2000.vital_timing.all;
  use ECP5U.COMPONENTS.ALL;

  entity stm_fpga_spare5B is
    -- miscellaneous vital GENERICs
    GENERIC (
      TimingChecksOn	: boolean := TRUE;
      XOn           	: boolean := FALSE;
      MsgOn         	: boolean := TRUE;
      InstancePath  	: string := "stm_fpga_spare5B";

      tipd_stmfpgaspare5  	: VitalDelayType01 := (0 ns, 0 ns);
      tpd_stmfpgaspare5_PADDI	 : VitalDelayType01 := (0 ns, 0 ns);
      tperiod_stmfpgaspare5 	: VitalDelayType := 0 ns;
      tpw_stmfpgaspare5_posedge	: VitalDelayType := 0 ns;
      tpw_stmfpgaspare5_negedge	: VitalDelayType := 0 ns);

    port (PADDI: out Std_logic; stmfpgaspare5: in Std_logic);

    ATTRIBUTE Vital_Level0 OF stm_fpga_spare5B : ENTITY IS TRUE;

  end stm_fpga_spare5B;

  architecture Structure of stm_fpga_spare5B is
    ATTRIBUTE Vital_Level0 OF Structure : ARCHITECTURE IS TRUE;

    signal PADDI_out 	: std_logic := 'X';
    signal stmfpgaspare5_ipd 	: std_logic := 'X';

    component sapiobuf0004
      port (Z: out Std_logic; PAD: in Std_logic);
    end component;
  begin
    stm_fpga_spare5_pad: sapiobuf0004
      port map (Z=>PADDI_out, PAD=>stmfpgaspare5_ipd);

    --  INPUT PATH DELAYs
    WireDelay : BLOCK
    BEGIN
      VitalWireDelay(stmfpgaspare5_ipd, stmfpgaspare5, tipd_stmfpgaspare5);
    END BLOCK;

    VitalBehavior : PROCESS (PADDI_out, stmfpgaspare5_ipd)
    VARIABLE PADDI_zd         	: std_logic := 'X';
    VARIABLE PADDI_GlitchData 	: VitalGlitchDataType;

    VARIABLE tviol_stmfpgaspare5_stmfpgaspare5          	: x01 := '0';
    VARIABLE periodcheckinfo_stmfpgaspare5	: VitalPeriodDataType;

    BEGIN

    IF (TimingChecksOn) THEN
      VitalPeriodPulseCheck (
        TestSignal => stmfpgaspare5_ipd,
        TestSignalName => "stmfpgaspare5",
        Period => tperiod_stmfpgaspare5,
        PulseWidthHigh => tpw_stmfpgaspare5_posedge,
        PulseWidthLow => tpw_stmfpgaspare5_negedge,
        PeriodData => periodcheckinfo_stmfpgaspare5,
        Violation => tviol_stmfpgaspare5_stmfpgaspare5,
        MsgOn => MsgOn, XOn => XOn,
        HeaderMsg => InstancePath,
        CheckEnabled => TRUE,
        MsgSeverity => warning);

    END IF;

    PADDI_zd 	:= PADDI_out;

    VitalPathDelay01 (
      OutSignal => PADDI, OutSignalName => "PADDI", OutTemp => PADDI_zd,
      Paths      => (0 => (InputChangeTime => stmfpgaspare5_ipd'last_event,
                           PathDelay => tpd_stmfpgaspare5_PADDI,
                           PathCondition => TRUE)),
      GlitchData => PADDI_GlitchData,
      Mode       => vitaltransport, XOn => XOn, MsgOn => MsgOn);

    END PROCESS;

  end Structure;

-- entity EHXPLLLB
  library IEEE, vital2000, ECP5U;
  use IEEE.STD_LOGIC_1164.all;
  use vital2000.vital_timing.all;
  use ECP5U.COMPONENTS.ALL;

  entity EHXPLLLB is
    port (CLKI: in Std_logic; CLKFB: in Std_logic; PHASESEL1: in Std_logic; 
          PHASESEL0: in Std_logic; PHASEDIR: in Std_logic; 
          PHASESTEP: in Std_logic; PHASELOADREG: in Std_logic; 
          STDBY: in Std_logic; PLLWAKESYNC: in Std_logic; RST: in Std_logic; 
          ENCLKOP: in Std_logic; ENCLKOS: in Std_logic; ENCLKOS2: in Std_logic; 
          ENCLKOS3: in Std_logic; CLKOP: out Std_logic; CLKOS: out Std_logic; 
          CLKOS2: out Std_logic; CLKOS3: out Std_logic; LOCK: out Std_logic; 
          INTLOCK: out Std_logic; REFCLK: out Std_logic; 
          CLKINTFB: out Std_logic);



  end EHXPLLLB;

  architecture Structure of EHXPLLLB is
  begin
    INST10: EHXPLLL
      generic map (CLKFB_DIV => 8, CLKI_DIV => 1, CLKOP_CPHASE => 9, 
                   CLKOP_DIV => 10, CLKOP_ENABLE => "ENABLED", 
                   CLKOP_FPHASE => 0, CLKOP_TRIM_DELAY => 0, 
                   CLKOP_TRIM_POL => "FALLING", CLKOS2_CPHASE => 7, 
                   CLKOS2_DIV => 8, CLKOS2_ENABLE => "ENABLED", 
                   CLKOS2_FPHASE => 0, CLKOS3_CPHASE => 12, CLKOS3_DIV => 10, 
                   CLKOS3_ENABLE => "ENABLED", CLKOS3_FPHASE => 3, 
                   CLKOS_CPHASE => 3, CLKOS_DIV => 4, 
                   CLKOS_ENABLE => "ENABLED", CLKOS_FPHASE => 0, 
                   CLKOS_TRIM_DELAY => 0, CLKOS_TRIM_POL => "FALLING", 
                   DPHASE_SOURCE => "DISABLED", FEEDBK_PATH => "CLKOP", 
                   INTFB_WAKE => "DISABLED", INT_LOCK_STICKY => "ENABLED", 
                   OUTDIVIDER_MUXA => "DIVA", OUTDIVIDER_MUXB => "DIVB", 
                   OUTDIVIDER_MUXC => "DIVC", OUTDIVIDER_MUXD => "DIVD", 
                   PLLRST_ENA => "ENABLED", PLL_LOCK_DELAY => 200, 
                   PLL_LOCK_MODE => 0, REFIN_RESET => "DISABLED", 
                   STDBY_ENABLE => "DISABLED", SYNC_ENABLE => "DISABLED")
      port map (CLKI=>CLKI, CLKFB=>CLKFB, PHASESEL1=>PHASESEL1, 
                PHASESEL0=>PHASESEL0, PHASEDIR=>PHASEDIR, PHASESTEP=>PHASESTEP, 
                PHASELOADREG=>PHASELOADREG, STDBY=>STDBY, 
                PLLWAKESYNC=>PLLWAKESYNC, RST=>RST, ENCLKOP=>ENCLKOP, 
                ENCLKOS=>ENCLKOS, ENCLKOS2=>ENCLKOS2, ENCLKOS3=>ENCLKOS3, 
                CLKOP=>CLKOP, CLKOS=>CLKOS, CLKOS2=>CLKOS2, CLKOS3=>CLKOS3, 
                LOCK=>LOCK, INTLOCK=>INTLOCK, REFCLK=>REFCLK, 
                CLKINTFB=>CLKINTFB);
  end Structure;

-- entity my_pll_PLLInst_0
  library IEEE, vital2000, ECP5U;
  use IEEE.STD_LOGIC_1164.all;
  use vital2000.vital_timing.all;
  use ECP5U.COMPONENTS.ALL;

  entity my_pll_PLLInst_0 is
    -- miscellaneous vital GENERICs
    GENERIC (
      TimingChecksOn	: boolean := TRUE;
      XOn           	: boolean := FALSE;
      MsgOn         	: boolean := TRUE;
      InstancePath  	: string := "my_pll_PLLInst_0";

      tipd_CLKI  	: VitalDelayType01 := (0 ns, 0 ns);
      tipd_CLKFB  	: VitalDelayType01 := (0 ns, 0 ns);
      tipd_STDBY  	: VitalDelayType01 := (0 ns, 0 ns);
      tipd_RST  	: VitalDelayType01 := (0 ns, 0 ns);
      tpd_CLKI_CLKOS3	 : VitalDelayType01 := (0 ns, 0 ns);
      tpd_CLKI_CLKOS2	 : VitalDelayType01 := (0 ns, 0 ns);
      tpd_CLKI_CLKOP	 : VitalDelayType01 := (0 ns, 0 ns);
      tpd_CLKFB_CLKOS3	 : VitalDelayType01 := (0 ns, 0 ns);
      tpd_CLKFB_CLKOS2	 : VitalDelayType01 := (0 ns, 0 ns);
      tpd_CLKFB_CLKOP	 : VitalDelayType01 := (0 ns, 0 ns));

    port (CLKI: in Std_logic; CLKFB: in Std_logic; STDBY: in Std_logic; 
          RST: in Std_logic; LOCK: out Std_logic; CLKOS3: out Std_logic; 
          CLKOS2: out Std_logic; CLKOP: out Std_logic);



  end my_pll_PLLInst_0;

  architecture Structure of my_pll_PLLInst_0 is
    signal CLKI_ipd 	: std_logic := 'X';
    signal CLKFB_ipd 	: std_logic := 'X';
    signal STDBY_ipd 	: std_logic := 'X';
    signal RST_ipd 	: std_logic := 'X';
    signal LOCK_out 	: std_logic := 'X';
    signal CLKOS3_out 	: std_logic := 'X';
    signal CLKOS2_out 	: std_logic := 'X';
    signal CLKOP_out 	: std_logic := 'X';

    signal GNDI: Std_logic;
    component gnd
      port (PWR0: out Std_logic);
    end component;
    component EHXPLLLB
      port (CLKI: in Std_logic; CLKFB: in Std_logic; PHASESEL1: in Std_logic; 
            PHASESEL0: in Std_logic; PHASEDIR: in Std_logic; 
            PHASESTEP: in Std_logic; PHASELOADREG: in Std_logic; 
            STDBY: in Std_logic; PLLWAKESYNC: in Std_logic; RST: in Std_logic; 
            ENCLKOP: in Std_logic; ENCLKOS: in Std_logic; 
            ENCLKOS2: in Std_logic; ENCLKOS3: in Std_logic; 
            CLKOP: out Std_logic; CLKOS: out Std_logic; CLKOS2: out Std_logic; 
            CLKOS3: out Std_logic; LOCK: out Std_logic; INTLOCK: out Std_logic; 
            REFCLK: out Std_logic; CLKINTFB: out Std_logic);
    end component;
  begin
    my_pll_PLLInst_0_EHXPLLL: EHXPLLLB
      port map (CLKI=>CLKI_ipd, CLKFB=>CLKFB_ipd, PHASESEL1=>GNDI, 
                PHASESEL0=>GNDI, PHASEDIR=>GNDI, PHASESTEP=>GNDI, 
                PHASELOADREG=>GNDI, STDBY=>STDBY_ipd, PLLWAKESYNC=>GNDI, 
                RST=>RST_ipd, ENCLKOP=>GNDI, ENCLKOS=>GNDI, ENCLKOS2=>GNDI, 
                ENCLKOS3=>GNDI, CLKOP=>CLKOP_out, CLKOS=>open, 
                CLKOS2=>CLKOS2_out, CLKOS3=>CLKOS3_out, LOCK=>LOCK_out, 
                INTLOCK=>open, REFCLK=>open, CLKINTFB=>open);
    DRIVEGND: gnd
      port map (PWR0=>GNDI);

    --  INPUT PATH DELAYs
    WireDelay : BLOCK
    BEGIN
      VitalWireDelay(CLKI_ipd, CLKI, tipd_CLKI);
      VitalWireDelay(CLKFB_ipd, CLKFB, tipd_CLKFB);
      VitalWireDelay(STDBY_ipd, STDBY, tipd_STDBY);
      VitalWireDelay(RST_ipd, RST, tipd_RST);
    END BLOCK;

    VitalBehavior : PROCESS (CLKI_ipd, CLKFB_ipd, STDBY_ipd, RST_ipd, LOCK_out, 
      CLKOS3_out, CLKOS2_out, CLKOP_out)
    VARIABLE CLKOS3_zd         	: std_logic := 'X';
    VARIABLE CLKOS3_GlitchData 	: VitalGlitchDataType;
    VARIABLE CLKOS2_zd         	: std_logic := 'X';
    VARIABLE CLKOS2_GlitchData 	: VitalGlitchDataType;
    VARIABLE CLKOP_zd         	: std_logic := 'X';
    VARIABLE CLKOP_GlitchData 	: VitalGlitchDataType;


    BEGIN

    IF (TimingChecksOn) THEN

    END IF;

    LOCK 	<= LOCK_out;
    CLKOS3_zd 	:= CLKOS3_out;
    CLKOS2_zd 	:= CLKOS2_out;
    CLKOP_zd 	:= CLKOP_out;

    VitalPathDelay01 (
      OutSignal => CLKOS3, OutSignalName => "CLKOS3", OutTemp => CLKOS3_zd,
      Paths      => (0 => (InputChangeTime => CLKI_ipd'last_event,
                           PathDelay => tpd_CLKI_CLKOS3,
                           PathCondition => TRUE),
                     1 => (InputChangeTime => CLKFB_ipd'last_event,
                           PathDelay => tpd_CLKFB_CLKOS3,
                           PathCondition => TRUE)),
      GlitchData => CLKOS3_GlitchData,
      Mode       => ondetect, XOn => XOn, MsgOn => MsgOn);
    VitalPathDelay01 (
      OutSignal => CLKOS2, OutSignalName => "CLKOS2", OutTemp => CLKOS2_zd,
      Paths      => (0 => (InputChangeTime => CLKI_ipd'last_event,
                           PathDelay => tpd_CLKI_CLKOS2,
                           PathCondition => TRUE),
                     1 => (InputChangeTime => CLKFB_ipd'last_event,
                           PathDelay => tpd_CLKFB_CLKOS2,
                           PathCondition => TRUE)),
      GlitchData => CLKOS2_GlitchData,
      Mode       => ondetect, XOn => XOn, MsgOn => MsgOn);
    VitalPathDelay01 (
      OutSignal => CLKOP, OutSignalName => "CLKOP", OutTemp => CLKOP_zd,
      Paths      => (0 => (InputChangeTime => CLKI_ipd'last_event,
                           PathDelay => tpd_CLKI_CLKOP,
                           PathCondition => TRUE),
                     1 => (InputChangeTime => CLKFB_ipd'last_event,
                           PathDelay => tpd_CLKFB_CLKOP,
                           PathCondition => TRUE)),
      GlitchData => CLKOP_GlitchData,
      Mode       => ondetect, XOn => XOn, MsgOn => MsgOn);

    END PROCESS;

  end Structure;

-- entity OSCGB
  library IEEE, vital2000, ECP5U;
  use IEEE.STD_LOGIC_1164.all;
  use vital2000.vital_timing.all;
  use ECP5U.COMPONENTS.ALL;

  entity OSCGB is
    port (OSC: out Std_logic);

    ATTRIBUTE Vital_Level0 OF OSCGB : ENTITY IS TRUE;

  end OSCGB;

  architecture Structure of OSCGB is
  begin
    INST10: OSCG
      generic map (DIV => 32)
      port map (OSC=>OSC);
  end Structure;

-- entity osch_inst
  library IEEE, vital2000, ECP5U;
  use IEEE.STD_LOGIC_1164.all;
  use vital2000.vital_timing.all;
  use ECP5U.COMPONENTS.ALL;

  entity osch_inst is
    -- miscellaneous vital GENERICs
    GENERIC (
      TimingChecksOn	: boolean := TRUE;
      XOn           	: boolean := FALSE;
      MsgOn         	: boolean := TRUE;
      InstancePath  	: string := "osch_inst");

    port (OSC: out Std_logic);

    ATTRIBUTE Vital_Level0 OF osch_inst : ENTITY IS TRUE;

  end osch_inst;

  architecture Structure of osch_inst is
    signal OSC_out 	: std_logic := 'X';

    component OSCGB
      port (OSC: out Std_logic);
    end component;
  begin
    osch_inst_OSCG: OSCGB
      port map (OSC=>OSC_out);

    --  INPUT PATH DELAYs
    WireDelay : BLOCK
    BEGIN
    END BLOCK;

    VitalBehavior : PROCESS (OSC_out)


    BEGIN

    IF (TimingChecksOn) THEN

    END IF;

    OSC 	<= OSC_out;


    END PROCESS;

  end Structure;

-- entity DP16KDB
  library IEEE, vital2000, ECP5U;
  use IEEE.STD_LOGIC_1164.all;
  use vital2000.vital_timing.all;
  use ECP5U.COMPONENTS.ALL;

  entity DP16KDB is
    port (CEA: in Std_logic; OCEA: in Std_logic; CLKA: in Std_logic; 
          WEA: in Std_logic; CSA0: in Std_logic; CSA1: in Std_logic; 
          CSA2: in Std_logic; RSTA: in Std_logic; CEB: in Std_logic; 
          OCEB: in Std_logic; CLKB: in Std_logic; WEB: in Std_logic; 
          CSB0: in Std_logic; CSB1: in Std_logic; CSB2: in Std_logic; 
          RSTB: in Std_logic; DIA0: in Std_logic; DIA1: in Std_logic; 
          DIA2: in Std_logic; DIA3: in Std_logic; DIA4: in Std_logic; 
          DIA5: in Std_logic; DIA6: in Std_logic; DIA7: in Std_logic; 
          DIA8: in Std_logic; DIA9: in Std_logic; DIA10: in Std_logic; 
          DIA11: in Std_logic; DIA12: in Std_logic; DIA13: in Std_logic; 
          DIA14: in Std_logic; DIA15: in Std_logic; DIA16: in Std_logic; 
          DIA17: in Std_logic; ADA0: in Std_logic; ADA1: in Std_logic; 
          ADA2: in Std_logic; ADA3: in Std_logic; ADA4: in Std_logic; 
          ADA5: in Std_logic; ADA6: in Std_logic; ADA7: in Std_logic; 
          ADA8: in Std_logic; ADA9: in Std_logic; ADA10: in Std_logic; 
          ADA11: in Std_logic; ADA12: in Std_logic; ADA13: in Std_logic; 
          DIB0: in Std_logic; DIB1: in Std_logic; DIB2: in Std_logic; 
          DIB3: in Std_logic; DIB4: in Std_logic; DIB5: in Std_logic; 
          DIB6: in Std_logic; DIB7: in Std_logic; DIB8: in Std_logic; 
          DIB9: in Std_logic; DIB10: in Std_logic; DIB11: in Std_logic; 
          DIB12: in Std_logic; DIB13: in Std_logic; DIB14: in Std_logic; 
          DIB15: in Std_logic; DIB16: in Std_logic; DIB17: in Std_logic; 
          ADB0: in Std_logic; ADB1: in Std_logic; ADB2: in Std_logic; 
          ADB3: in Std_logic; ADB4: in Std_logic; ADB5: in Std_logic; 
          ADB6: in Std_logic; ADB7: in Std_logic; ADB8: in Std_logic; 
          ADB9: in Std_logic; ADB10: in Std_logic; ADB11: in Std_logic; 
          ADB12: in Std_logic; ADB13: in Std_logic; DOA0: out Std_logic; 
          DOA1: out Std_logic; DOA2: out Std_logic; DOA3: out Std_logic; 
          DOA4: out Std_logic; DOA5: out Std_logic; DOA6: out Std_logic; 
          DOA7: out Std_logic; DOA8: out Std_logic; DOA9: out Std_logic; 
          DOA10: out Std_logic; DOA11: out Std_logic; DOA12: out Std_logic; 
          DOA13: out Std_logic; DOA14: out Std_logic; DOA15: out Std_logic; 
          DOA16: out Std_logic; DOA17: out Std_logic; DOB0: out Std_logic; 
          DOB1: out Std_logic; DOB2: out Std_logic; DOB3: out Std_logic; 
          DOB4: out Std_logic; DOB5: out Std_logic; DOB6: out Std_logic; 
          DOB7: out Std_logic; DOB8: out Std_logic; DOB9: out Std_logic; 
          DOB10: out Std_logic; DOB11: out Std_logic; DOB12: out Std_logic; 
          DOB13: out Std_logic; DOB14: out Std_logic; DOB15: out Std_logic; 
          DOB16: out Std_logic; DOB17: out Std_logic);

    ATTRIBUTE Vital_Level0 OF DP16KDB : ENTITY IS TRUE;

  end DP16KDB;

  architecture Structure of DP16KDB is
  begin
    INST10: DP16KD
      generic map (ASYNC_RESET_RELEASE => "SYNC", CSDECODE_A => "0b000", 
                   CSDECODE_B => "0b000", DATA_WIDTH_A => 18, 
                   DATA_WIDTH_B => 18, GSR => "ENABLED", 
                   INITVAL_00 => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_01 => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_02 => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_03 => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_04 => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_05 => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_06 => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_07 => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_08 => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_09 => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_0A => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_0B => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_0C => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_0D => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_0E => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_0F => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_10 => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_11 => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_12 => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_13 => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_14 => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_15 => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_16 => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_17 => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_18 => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_19 => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_1A => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_1B => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_1C => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_1D => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_1E => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_1F => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_20 => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_21 => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_22 => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_23 => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_24 => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_25 => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_26 => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_27 => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_28 => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_29 => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_2A => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_2B => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_2C => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_2D => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_2E => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_2F => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_30 => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_31 => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_32 => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_33 => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_34 => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_35 => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_36 => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_37 => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_38 => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_39 => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_3A => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_3B => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_3C => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_3D => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_3E => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_3F => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , INIT_DATA => "STATIC", REGMODE_A => "NOREG", 
                   REGMODE_B => "NOREG", RESETMODE => "ASYNC", 
                   WRITEMODE_A => "NORMAL", WRITEMODE_B => "NORMAL")
      port map (DIA0=>DIA0, DIA1=>DIA1, DIA2=>DIA2, DIA3=>DIA3, DIA4=>DIA4, 
                DIA5=>DIA5, DIA6=>DIA6, DIA7=>DIA7, DIA8=>DIA8, DIA9=>DIA9, 
                DIA10=>DIA10, DIA11=>DIA11, DIA12=>DIA12, DIA13=>DIA13, 
                DIA14=>DIA14, DIA15=>DIA15, DIA16=>DIA16, DIA17=>DIA17, 
                ADA0=>ADA0, ADA1=>ADA1, ADA2=>ADA2, ADA3=>ADA3, ADA4=>ADA4, 
                ADA5=>ADA5, ADA6=>ADA6, ADA7=>ADA7, ADA8=>ADA8, ADA9=>ADA9, 
                ADA10=>ADA10, ADA11=>ADA11, ADA12=>ADA12, ADA13=>ADA13, 
                CEA=>CEA, OCEA=>OCEA, CLKA=>CLKA, WEA=>WEA, CSA0=>CSA0, 
                CSA1=>CSA1, CSA2=>CSA2, RSTA=>RSTA, DIB0=>DIB0, DIB1=>DIB1, 
                DIB2=>DIB2, DIB3=>DIB3, DIB4=>DIB4, DIB5=>DIB5, DIB6=>DIB6, 
                DIB7=>DIB7, DIB8=>DIB8, DIB9=>DIB9, DIB10=>DIB10, DIB11=>DIB11, 
                DIB12=>DIB12, DIB13=>DIB13, DIB14=>DIB14, DIB15=>DIB15, 
                DIB16=>DIB16, DIB17=>DIB17, ADB0=>ADB0, ADB1=>ADB1, ADB2=>ADB2, 
                ADB3=>ADB3, ADB4=>ADB4, ADB5=>ADB5, ADB6=>ADB6, ADB7=>ADB7, 
                ADB8=>ADB8, ADB9=>ADB9, ADB10=>ADB10, ADB11=>ADB11, 
                ADB12=>ADB12, ADB13=>ADB13, CEB=>CEB, OCEB=>OCEB, CLKB=>CLKB, 
                WEB=>WEB, CSB0=>CSB0, CSB1=>CSB1, CSB2=>CSB2, RSTB=>RSTB, 
                DOA0=>DOA0, DOA1=>DOA1, DOA2=>DOA2, DOA3=>DOA3, DOA4=>DOA4, 
                DOA5=>DOA5, DOA6=>DOA6, DOA7=>DOA7, DOA8=>DOA8, DOA9=>DOA9, 
                DOA10=>DOA10, DOA11=>DOA11, DOA12=>DOA12, DOA13=>DOA13, 
                DOA14=>DOA14, DOA15=>DOA15, DOA16=>DOA16, DOA17=>DOA17, 
                DOB0=>DOB0, DOB1=>DOB1, DOB2=>DOB2, DOB3=>DOB3, DOB4=>DOB4, 
                DOB5=>DOB5, DOB6=>DOB6, DOB7=>DOB7, DOB8=>DOB8, DOB9=>DOB9, 
                DOB10=>DOB10, DOB11=>DOB11, DOB12=>DOB12, DOB13=>DOB13, 
                DOB14=>DOB14, DOB15=>DOB15, DOB16=>DOB16, DOB17=>DOB17);
  end Structure;

-- entity inverter
  library IEEE, vital2000, ECP5U;
  use IEEE.STD_LOGIC_1164.all;
  use vital2000.vital_timing.all;
  use ECP5U.COMPONENTS.ALL;

  entity inverter is
    port (I: in Std_logic; Z: out Std_logic);

    ATTRIBUTE Vital_Level0 OF inverter : ENTITY IS TRUE;

  end inverter;

  architecture Structure of inverter is
  begin
    INST1: INV
      port map (A=>I, Z=>Z);
  end Structure;

-- entity subg_i_fifo_dc_pdp_ram_0_0_0
  library IEEE, vital2000, ECP5U;
  use IEEE.STD_LOGIC_1164.all;
  use vital2000.vital_timing.all;
  use ECP5U.COMPONENTS.ALL;

  entity subg_i_fifo_dc_pdp_ram_0_0_0 is
    -- miscellaneous vital GENERICs
    GENERIC (
      TimingChecksOn	: boolean := TRUE;
      XOn           	: boolean := FALSE;
      MsgOn         	: boolean := TRUE;
      InstancePath  	: string := "subg_i_fifo_dc_pdp_ram_0_0_0";

      tipd_DIA15  	: VitalDelayType01 := (0 ns, 0 ns);
      tipd_DIA14  	: VitalDelayType01 := (0 ns, 0 ns);
      tipd_DIA13  	: VitalDelayType01 := (0 ns, 0 ns);
      tipd_DIA12  	: VitalDelayType01 := (0 ns, 0 ns);
      tipd_DIA11  	: VitalDelayType01 := (0 ns, 0 ns);
      tipd_DIA10  	: VitalDelayType01 := (0 ns, 0 ns);
      tipd_DIA9  	: VitalDelayType01 := (0 ns, 0 ns);
      tipd_DIA8  	: VitalDelayType01 := (0 ns, 0 ns);
      tipd_DIA7  	: VitalDelayType01 := (0 ns, 0 ns);
      tipd_DIA6  	: VitalDelayType01 := (0 ns, 0 ns);
      tipd_DIA5  	: VitalDelayType01 := (0 ns, 0 ns);
      tipd_DIA4  	: VitalDelayType01 := (0 ns, 0 ns);
      tipd_DIA3  	: VitalDelayType01 := (0 ns, 0 ns);
      tipd_DIA2  	: VitalDelayType01 := (0 ns, 0 ns);
      tipd_DIA1  	: VitalDelayType01 := (0 ns, 0 ns);
      tipd_DIA0  	: VitalDelayType01 := (0 ns, 0 ns);
      tipd_ADA5  	: VitalDelayType01 := (0 ns, 0 ns);
      tipd_ADA4  	: VitalDelayType01 := (0 ns, 0 ns);
      tipd_CEA  	: VitalDelayType01 := (0 ns, 0 ns);
      tipd_OCEA  	: VitalDelayType01 := (0 ns, 0 ns);
      tipd_RSTA  	: VitalDelayType01 := (0 ns, 0 ns);
      tipd_CLKA  	: VitalDelayType01 := (0 ns, 0 ns);
      tipd_CLKB  	: VitalDelayType01 := (0 ns, 0 ns);
      tipd_RSTB  	: VitalDelayType01 := (0 ns, 0 ns);
      tipd_OCEB  	: VitalDelayType01 := (0 ns, 0 ns);
      tipd_CEB  	: VitalDelayType01 := (0 ns, 0 ns);
      tipd_ADB4  	: VitalDelayType01 := (0 ns, 0 ns);
      tipd_ADB5  	: VitalDelayType01 := (0 ns, 0 ns);
      tpd_CLKB_DOB0	 : VitalDelayType01 := (0 ns, 0 ns);
      tpd_CLKB_DOB1	 : VitalDelayType01 := (0 ns, 0 ns);
      tpd_CLKB_DOB2	 : VitalDelayType01 := (0 ns, 0 ns);
      tpd_CLKB_DOB3	 : VitalDelayType01 := (0 ns, 0 ns);
      tpd_CLKB_DOB4	 : VitalDelayType01 := (0 ns, 0 ns);
      tpd_CLKB_DOB5	 : VitalDelayType01 := (0 ns, 0 ns);
      tpd_CLKB_DOB6	 : VitalDelayType01 := (0 ns, 0 ns);
      tpd_CLKB_DOB7	 : VitalDelayType01 := (0 ns, 0 ns);
      tpd_CLKB_DOB8	 : VitalDelayType01 := (0 ns, 0 ns);
      tpd_CLKB_DOB9	 : VitalDelayType01 := (0 ns, 0 ns);
      tpd_CLKB_DOB10	 : VitalDelayType01 := (0 ns, 0 ns);
      tpd_CLKB_DOB11	 : VitalDelayType01 := (0 ns, 0 ns);
      tpd_CLKB_DOB12	 : VitalDelayType01 := (0 ns, 0 ns);
      tpd_CLKB_DOB13	 : VitalDelayType01 := (0 ns, 0 ns);
      tpd_CLKB_DOB14	 : VitalDelayType01 := (0 ns, 0 ns);
      tpd_CLKB_DOB15	 : VitalDelayType01 := (0 ns, 0 ns);
      tpd_RSTB_DOB0	 : VitalDelayType01 := (0 ns, 0 ns);
      tpd_RSTB_DOB1	 : VitalDelayType01 := (0 ns, 0 ns);
      tpd_RSTB_DOB2	 : VitalDelayType01 := (0 ns, 0 ns);
      tpd_RSTB_DOB3	 : VitalDelayType01 := (0 ns, 0 ns);
      tpd_RSTB_DOB4	 : VitalDelayType01 := (0 ns, 0 ns);
      tpd_RSTB_DOB5	 : VitalDelayType01 := (0 ns, 0 ns);
      tpd_RSTB_DOB6	 : VitalDelayType01 := (0 ns, 0 ns);
      tpd_RSTB_DOB7	 : VitalDelayType01 := (0 ns, 0 ns);
      tpd_RSTB_DOB8	 : VitalDelayType01 := (0 ns, 0 ns);
      tpd_RSTB_DOB9	 : VitalDelayType01 := (0 ns, 0 ns);
      tpd_RSTB_DOB10	 : VitalDelayType01 := (0 ns, 0 ns);
      tpd_RSTB_DOB11	 : VitalDelayType01 := (0 ns, 0 ns);
      tpd_RSTB_DOB12	 : VitalDelayType01 := (0 ns, 0 ns);
      tpd_RSTB_DOB13	 : VitalDelayType01 := (0 ns, 0 ns);
      tpd_RSTB_DOB14	 : VitalDelayType01 := (0 ns, 0 ns);
      tpd_RSTB_DOB15	 : VitalDelayType01 := (0 ns, 0 ns);
      ticd_CLKA	: VitalDelayType := 0 ns;
      tisd_DIA15_CLKA	: VitalDelayType := 0 ns;
      tsetup_DIA15_CLKA_noedge_posedge	: VitalDelayType := 0 ns;
      thold_DIA15_CLKA_noedge_posedge	: VitalDelayType := 0 ns;
      tisd_DIA14_CLKA	: VitalDelayType := 0 ns;
      tsetup_DIA14_CLKA_noedge_posedge	: VitalDelayType := 0 ns;
      thold_DIA14_CLKA_noedge_posedge	: VitalDelayType := 0 ns;
      tisd_DIA13_CLKA	: VitalDelayType := 0 ns;
      tsetup_DIA13_CLKA_noedge_posedge	: VitalDelayType := 0 ns;
      thold_DIA13_CLKA_noedge_posedge	: VitalDelayType := 0 ns;
      tisd_DIA12_CLKA	: VitalDelayType := 0 ns;
      tsetup_DIA12_CLKA_noedge_posedge	: VitalDelayType := 0 ns;
      thold_DIA12_CLKA_noedge_posedge	: VitalDelayType := 0 ns;
      tisd_DIA11_CLKA	: VitalDelayType := 0 ns;
      tsetup_DIA11_CLKA_noedge_posedge	: VitalDelayType := 0 ns;
      thold_DIA11_CLKA_noedge_posedge	: VitalDelayType := 0 ns;
      tisd_DIA10_CLKA	: VitalDelayType := 0 ns;
      tsetup_DIA10_CLKA_noedge_posedge	: VitalDelayType := 0 ns;
      thold_DIA10_CLKA_noedge_posedge	: VitalDelayType := 0 ns;
      tisd_DIA9_CLKA	: VitalDelayType := 0 ns;
      tsetup_DIA9_CLKA_noedge_posedge	: VitalDelayType := 0 ns;
      thold_DIA9_CLKA_noedge_posedge	: VitalDelayType := 0 ns;
      tisd_DIA8_CLKA	: VitalDelayType := 0 ns;
      tsetup_DIA8_CLKA_noedge_posedge	: VitalDelayType := 0 ns;
      thold_DIA8_CLKA_noedge_posedge	: VitalDelayType := 0 ns;
      tisd_DIA7_CLKA	: VitalDelayType := 0 ns;
      tsetup_DIA7_CLKA_noedge_posedge	: VitalDelayType := 0 ns;
      thold_DIA7_CLKA_noedge_posedge	: VitalDelayType := 0 ns;
      tisd_DIA6_CLKA	: VitalDelayType := 0 ns;
      tsetup_DIA6_CLKA_noedge_posedge	: VitalDelayType := 0 ns;
      thold_DIA6_CLKA_noedge_posedge	: VitalDelayType := 0 ns;
      tisd_DIA5_CLKA	: VitalDelayType := 0 ns;
      tsetup_DIA5_CLKA_noedge_posedge	: VitalDelayType := 0 ns;
      thold_DIA5_CLKA_noedge_posedge	: VitalDelayType := 0 ns;
      tisd_DIA4_CLKA	: VitalDelayType := 0 ns;
      tsetup_DIA4_CLKA_noedge_posedge	: VitalDelayType := 0 ns;
      thold_DIA4_CLKA_noedge_posedge	: VitalDelayType := 0 ns;
      tisd_DIA3_CLKA	: VitalDelayType := 0 ns;
      tsetup_DIA3_CLKA_noedge_posedge	: VitalDelayType := 0 ns;
      thold_DIA3_CLKA_noedge_posedge	: VitalDelayType := 0 ns;
      tisd_DIA2_CLKA	: VitalDelayType := 0 ns;
      tsetup_DIA2_CLKA_noedge_posedge	: VitalDelayType := 0 ns;
      thold_DIA2_CLKA_noedge_posedge	: VitalDelayType := 0 ns;
      tisd_DIA1_CLKA	: VitalDelayType := 0 ns;
      tsetup_DIA1_CLKA_noedge_posedge	: VitalDelayType := 0 ns;
      thold_DIA1_CLKA_noedge_posedge	: VitalDelayType := 0 ns;
      tisd_DIA0_CLKA	: VitalDelayType := 0 ns;
      tsetup_DIA0_CLKA_noedge_posedge	: VitalDelayType := 0 ns;
      thold_DIA0_CLKA_noedge_posedge	: VitalDelayType := 0 ns;
      tisd_ADA5_CLKA	: VitalDelayType := 0 ns;
      tsetup_ADA5_CLKA_noedge_posedge	: VitalDelayType := 0 ns;
      thold_ADA5_CLKA_noedge_posedge	: VitalDelayType := 0 ns;
      tisd_ADA4_CLKA	: VitalDelayType := 0 ns;
      tsetup_ADA4_CLKA_noedge_posedge	: VitalDelayType := 0 ns;
      thold_ADA4_CLKA_noedge_posedge	: VitalDelayType := 0 ns;
      tisd_CEA_CLKA	: VitalDelayType := 0 ns;
      tsetup_CEA_CLKA_noedge_posedge	: VitalDelayType := 0 ns;
      thold_CEA_CLKA_noedge_posedge	: VitalDelayType := 0 ns;
      tisd_OCEA_CLKA	: VitalDelayType := 0 ns;
      tsetup_OCEA_CLKA_noedge_posedge	: VitalDelayType := 0 ns;
      thold_OCEA_CLKA_noedge_posedge	: VitalDelayType := 0 ns;
      tisd_RSTA_CLKA	: VitalDelayType := 0 ns;
      tsetup_RSTA_CLKA_noedge_posedge	: VitalDelayType := 0 ns;
      thold_RSTA_CLKA_noedge_posedge	: VitalDelayType := 0 ns;
      ticd_CLKB	: VitalDelayType := 0 ns;
      tisd_RSTB_CLKB	: VitalDelayType := 0 ns;
      tsetup_RSTB_CLKB_noedge_posedge	: VitalDelayType := 0 ns;
      thold_RSTB_CLKB_noedge_posedge	: VitalDelayType := 0 ns;
      tisd_OCEB_CLKB	: VitalDelayType := 0 ns;
      tsetup_OCEB_CLKB_noedge_posedge	: VitalDelayType := 0 ns;
      thold_OCEB_CLKB_noedge_posedge	: VitalDelayType := 0 ns;
      tisd_CEB_CLKB	: VitalDelayType := 0 ns;
      tsetup_CEB_CLKB_noedge_posedge	: VitalDelayType := 0 ns;
      thold_CEB_CLKB_noedge_posedge	: VitalDelayType := 0 ns;
      tisd_ADB4_CLKB	: VitalDelayType := 0 ns;
      tsetup_ADB4_CLKB_noedge_posedge	: VitalDelayType := 0 ns;
      thold_ADB4_CLKB_noedge_posedge	: VitalDelayType := 0 ns;
      tisd_ADB5_CLKB	: VitalDelayType := 0 ns;
      tsetup_ADB5_CLKB_noedge_posedge	: VitalDelayType := 0 ns;
      thold_ADB5_CLKB_noedge_posedge	: VitalDelayType := 0 ns;
      tperiod_CLKA 	: VitalDelayType := 0 ns;
      tpw_CLKA_posedge	: VitalDelayType := 0 ns;
      tpw_CLKA_negedge	: VitalDelayType := 0 ns;
      tperiod_CLKB 	: VitalDelayType := 0 ns;
      tpw_CLKB_posedge	: VitalDelayType := 0 ns;
      tpw_CLKB_negedge	: VitalDelayType := 0 ns);

    port (DIA15: in Std_logic; DIA14: in Std_logic; DIA13: in Std_logic; 
          DIA12: in Std_logic; DIA11: in Std_logic; DIA10: in Std_logic; 
          DIA9: in Std_logic; DIA8: in Std_logic; DIA7: in Std_logic; 
          DIA6: in Std_logic; DIA5: in Std_logic; DIA4: in Std_logic; 
          DIA3: in Std_logic; DIA2: in Std_logic; DIA1: in Std_logic; 
          DIA0: in Std_logic; ADA5: in Std_logic; ADA4: in Std_logic; 
          CEA: in Std_logic; OCEA: in Std_logic; RSTA: in Std_logic; 
          CLKA: in Std_logic; CLKB: in Std_logic; RSTB: in Std_logic; 
          OCEB: in Std_logic; CEB: in Std_logic; DOB0: out Std_logic; 
          DOB1: out Std_logic; DOB2: out Std_logic; DOB3: out Std_logic; 
          DOB4: out Std_logic; DOB5: out Std_logic; DOB6: out Std_logic; 
          DOB7: out Std_logic; DOB8: out Std_logic; DOB9: out Std_logic; 
          DOB10: out Std_logic; DOB11: out Std_logic; DOB12: out Std_logic; 
          DOB13: out Std_logic; DOB14: out Std_logic; DOB15: out Std_logic; 
          ADB4: in Std_logic; ADB5: in Std_logic);

    ATTRIBUTE Vital_Level0 OF subg_i_fifo_dc_pdp_ram_0_0_0 : ENTITY IS TRUE;

  end subg_i_fifo_dc_pdp_ram_0_0_0;

  architecture Structure of subg_i_fifo_dc_pdp_ram_0_0_0 is
    ATTRIBUTE Vital_Level0 OF Structure : ARCHITECTURE IS TRUE;

    signal DIA15_ipd 	: std_logic := 'X';
    signal DIA15_dly 	: std_logic := 'X';
    signal DIA14_ipd 	: std_logic := 'X';
    signal DIA14_dly 	: std_logic := 'X';
    signal DIA13_ipd 	: std_logic := 'X';
    signal DIA13_dly 	: std_logic := 'X';
    signal DIA12_ipd 	: std_logic := 'X';
    signal DIA12_dly 	: std_logic := 'X';
    signal DIA11_ipd 	: std_logic := 'X';
    signal DIA11_dly 	: std_logic := 'X';
    signal DIA10_ipd 	: std_logic := 'X';
    signal DIA10_dly 	: std_logic := 'X';
    signal DIA9_ipd 	: std_logic := 'X';
    signal DIA9_dly 	: std_logic := 'X';
    signal DIA8_ipd 	: std_logic := 'X';
    signal DIA8_dly 	: std_logic := 'X';
    signal DIA7_ipd 	: std_logic := 'X';
    signal DIA7_dly 	: std_logic := 'X';
    signal DIA6_ipd 	: std_logic := 'X';
    signal DIA6_dly 	: std_logic := 'X';
    signal DIA5_ipd 	: std_logic := 'X';
    signal DIA5_dly 	: std_logic := 'X';
    signal DIA4_ipd 	: std_logic := 'X';
    signal DIA4_dly 	: std_logic := 'X';
    signal DIA3_ipd 	: std_logic := 'X';
    signal DIA3_dly 	: std_logic := 'X';
    signal DIA2_ipd 	: std_logic := 'X';
    signal DIA2_dly 	: std_logic := 'X';
    signal DIA1_ipd 	: std_logic := 'X';
    signal DIA1_dly 	: std_logic := 'X';
    signal DIA0_ipd 	: std_logic := 'X';
    signal DIA0_dly 	: std_logic := 'X';
    signal ADA5_ipd 	: std_logic := 'X';
    signal ADA5_dly 	: std_logic := 'X';
    signal ADA4_ipd 	: std_logic := 'X';
    signal ADA4_dly 	: std_logic := 'X';
    signal CEA_ipd 	: std_logic := 'X';
    signal CEA_dly 	: std_logic := 'X';
    signal OCEA_ipd 	: std_logic := 'X';
    signal OCEA_dly 	: std_logic := 'X';
    signal RSTA_ipd 	: std_logic := 'X';
    signal RSTA_dly 	: std_logic := 'X';
    signal CLKA_ipd 	: std_logic := 'X';
    signal CLKA_dly 	: std_logic := 'X';
    signal CLKB_ipd 	: std_logic := 'X';
    signal CLKB_dly 	: std_logic := 'X';
    signal RSTB_ipd 	: std_logic := 'X';
    signal RSTB_dly 	: std_logic := 'X';
    signal OCEB_ipd 	: std_logic := 'X';
    signal OCEB_dly 	: std_logic := 'X';
    signal CEB_ipd 	: std_logic := 'X';
    signal CEB_dly 	: std_logic := 'X';
    signal DOB0_out 	: std_logic := 'X';
    signal DOB1_out 	: std_logic := 'X';
    signal DOB2_out 	: std_logic := 'X';
    signal DOB3_out 	: std_logic := 'X';
    signal DOB4_out 	: std_logic := 'X';
    signal DOB5_out 	: std_logic := 'X';
    signal DOB6_out 	: std_logic := 'X';
    signal DOB7_out 	: std_logic := 'X';
    signal DOB8_out 	: std_logic := 'X';
    signal DOB9_out 	: std_logic := 'X';
    signal DOB10_out 	: std_logic := 'X';
    signal DOB11_out 	: std_logic := 'X';
    signal DOB12_out 	: std_logic := 'X';
    signal DOB13_out 	: std_logic := 'X';
    signal DOB14_out 	: std_logic := 'X';
    signal DOB15_out 	: std_logic := 'X';
    signal ADB4_ipd 	: std_logic := 'X';
    signal ADB4_dly 	: std_logic := 'X';
    signal ADB5_ipd 	: std_logic := 'X';
    signal ADB5_dly 	: std_logic := 'X';

    signal VCCI: Std_logic;
    signal GNDI: Std_logic;
    signal CEB_NOTIN: Std_logic;
    signal OCEB_NOTIN: Std_logic;
    component gnd
      port (PWR0: out Std_logic);
    end component;
    component vcc
      port (PWR1: out Std_logic);
    end component;
    component DP16KDB
      port (CEA: in Std_logic; OCEA: in Std_logic; CLKA: in Std_logic; 
            WEA: in Std_logic; CSA0: in Std_logic; CSA1: in Std_logic; 
            CSA2: in Std_logic; RSTA: in Std_logic; CEB: in Std_logic; 
            OCEB: in Std_logic; CLKB: in Std_logic; WEB: in Std_logic; 
            CSB0: in Std_logic; CSB1: in Std_logic; CSB2: in Std_logic; 
            RSTB: in Std_logic; DIA0: in Std_logic; DIA1: in Std_logic; 
            DIA2: in Std_logic; DIA3: in Std_logic; DIA4: in Std_logic; 
            DIA5: in Std_logic; DIA6: in Std_logic; DIA7: in Std_logic; 
            DIA8: in Std_logic; DIA9: in Std_logic; DIA10: in Std_logic; 
            DIA11: in Std_logic; DIA12: in Std_logic; DIA13: in Std_logic; 
            DIA14: in Std_logic; DIA15: in Std_logic; DIA16: in Std_logic; 
            DIA17: in Std_logic; ADA0: in Std_logic; ADA1: in Std_logic; 
            ADA2: in Std_logic; ADA3: in Std_logic; ADA4: in Std_logic; 
            ADA5: in Std_logic; ADA6: in Std_logic; ADA7: in Std_logic; 
            ADA8: in Std_logic; ADA9: in Std_logic; ADA10: in Std_logic; 
            ADA11: in Std_logic; ADA12: in Std_logic; ADA13: in Std_logic; 
            DIB0: in Std_logic; DIB1: in Std_logic; DIB2: in Std_logic; 
            DIB3: in Std_logic; DIB4: in Std_logic; DIB5: in Std_logic; 
            DIB6: in Std_logic; DIB7: in Std_logic; DIB8: in Std_logic; 
            DIB9: in Std_logic; DIB10: in Std_logic; DIB11: in Std_logic; 
            DIB12: in Std_logic; DIB13: in Std_logic; DIB14: in Std_logic; 
            DIB15: in Std_logic; DIB16: in Std_logic; DIB17: in Std_logic; 
            ADB0: in Std_logic; ADB1: in Std_logic; ADB2: in Std_logic; 
            ADB3: in Std_logic; ADB4: in Std_logic; ADB5: in Std_logic; 
            ADB6: in Std_logic; ADB7: in Std_logic; ADB8: in Std_logic; 
            ADB9: in Std_logic; ADB10: in Std_logic; ADB11: in Std_logic; 
            ADB12: in Std_logic; ADB13: in Std_logic; DOA0: out Std_logic; 
            DOA1: out Std_logic; DOA2: out Std_logic; DOA3: out Std_logic; 
            DOA4: out Std_logic; DOA5: out Std_logic; DOA6: out Std_logic; 
            DOA7: out Std_logic; DOA8: out Std_logic; DOA9: out Std_logic; 
            DOA10: out Std_logic; DOA11: out Std_logic; DOA12: out Std_logic; 
            DOA13: out Std_logic; DOA14: out Std_logic; DOA15: out Std_logic; 
            DOA16: out Std_logic; DOA17: out Std_logic; DOB0: out Std_logic; 
            DOB1: out Std_logic; DOB2: out Std_logic; DOB3: out Std_logic; 
            DOB4: out Std_logic; DOB5: out Std_logic; DOB6: out Std_logic; 
            DOB7: out Std_logic; DOB8: out Std_logic; DOB9: out Std_logic; 
            DOB10: out Std_logic; DOB11: out Std_logic; DOB12: out Std_logic; 
            DOB13: out Std_logic; DOB14: out Std_logic; DOB15: out Std_logic; 
            DOB16: out Std_logic; DOB17: out Std_logic);
    end component;
    component inverter
      port (I: in Std_logic; Z: out Std_logic);
    end component;
  begin
    subg_i_fifo_dc_pdp_ram_0_0_0_DP16KD: DP16KDB
      port map (CEA=>CEA_dly, OCEA=>OCEA_dly, CLKA=>CLKA_dly, WEA=>VCCI, 
                CSA0=>GNDI, CSA1=>GNDI, CSA2=>GNDI, RSTA=>RSTA_dly, 
                CEB=>CEB_NOTIN, OCEB=>OCEB_NOTIN, CLKB=>CLKB_dly, WEB=>GNDI, 
                CSB0=>GNDI, CSB1=>GNDI, CSB2=>GNDI, RSTB=>RSTB_dly, 
                DIA0=>DIA0_dly, DIA1=>DIA1_dly, DIA2=>DIA2_dly, DIA3=>DIA3_dly, 
                DIA4=>DIA4_dly, DIA5=>DIA5_dly, DIA6=>DIA6_dly, DIA7=>DIA7_dly, 
                DIA8=>DIA8_dly, DIA9=>DIA9_dly, DIA10=>DIA10_dly, 
                DIA11=>DIA11_dly, DIA12=>DIA12_dly, DIA13=>DIA13_dly, 
                DIA14=>DIA14_dly, DIA15=>DIA15_dly, DIA16=>GNDI, DIA17=>GNDI, 
                ADA0=>VCCI, ADA1=>VCCI, ADA2=>GNDI, ADA3=>GNDI, ADA4=>ADA4_dly, 
                ADA5=>ADA5_dly, ADA6=>GNDI, ADA7=>GNDI, ADA8=>GNDI, ADA9=>GNDI, 
                ADA10=>GNDI, ADA11=>GNDI, ADA12=>GNDI, ADA13=>GNDI, DIB0=>GNDI, 
                DIB1=>GNDI, DIB2=>GNDI, DIB3=>GNDI, DIB4=>GNDI, DIB5=>GNDI, 
                DIB6=>GNDI, DIB7=>GNDI, DIB8=>GNDI, DIB9=>GNDI, DIB10=>GNDI, 
                DIB11=>GNDI, DIB12=>GNDI, DIB13=>GNDI, DIB14=>GNDI, 
                DIB15=>GNDI, DIB16=>GNDI, DIB17=>GNDI, ADB0=>GNDI, ADB1=>GNDI, 
                ADB2=>GNDI, ADB3=>GNDI, ADB4=>ADB4_dly, ADB5=>ADB5_dly, 
                ADB6=>GNDI, ADB7=>GNDI, ADB8=>GNDI, ADB9=>GNDI, ADB10=>GNDI, 
                ADB11=>GNDI, ADB12=>GNDI, ADB13=>GNDI, DOA0=>open, DOA1=>open, 
                DOA2=>open, DOA3=>open, DOA4=>open, DOA5=>open, DOA6=>open, 
                DOA7=>open, DOA8=>open, DOA9=>open, DOA10=>open, DOA11=>open, 
                DOA12=>open, DOA13=>open, DOA14=>open, DOA15=>open, 
                DOA16=>open, DOA17=>open, DOB0=>DOB0_out, DOB1=>DOB1_out, 
                DOB2=>DOB2_out, DOB3=>DOB3_out, DOB4=>DOB4_out, DOB5=>DOB5_out, 
                DOB6=>DOB6_out, DOB7=>DOB7_out, DOB8=>DOB8_out, DOB9=>DOB9_out, 
                DOB10=>DOB10_out, DOB11=>DOB11_out, DOB12=>DOB12_out, 
                DOB13=>DOB13_out, DOB14=>DOB14_out, DOB15=>DOB15_out, 
                DOB16=>open, DOB17=>open);
    DRIVEVCC: vcc
      port map (PWR1=>VCCI);
    DRIVEGND: gnd
      port map (PWR0=>GNDI);
    CEB_INVERTERIN: inverter
      port map (I=>CEB_dly, Z=>CEB_NOTIN);
    OCEB_INVERTERIN: inverter
      port map (I=>OCEB_dly, Z=>OCEB_NOTIN);

    --  INPUT PATH DELAYs
    WireDelay : BLOCK
    BEGIN
      VitalWireDelay(DIA15_ipd, DIA15, tipd_DIA15);
      VitalWireDelay(DIA14_ipd, DIA14, tipd_DIA14);
      VitalWireDelay(DIA13_ipd, DIA13, tipd_DIA13);
      VitalWireDelay(DIA12_ipd, DIA12, tipd_DIA12);
      VitalWireDelay(DIA11_ipd, DIA11, tipd_DIA11);
      VitalWireDelay(DIA10_ipd, DIA10, tipd_DIA10);
      VitalWireDelay(DIA9_ipd, DIA9, tipd_DIA9);
      VitalWireDelay(DIA8_ipd, DIA8, tipd_DIA8);
      VitalWireDelay(DIA7_ipd, DIA7, tipd_DIA7);
      VitalWireDelay(DIA6_ipd, DIA6, tipd_DIA6);
      VitalWireDelay(DIA5_ipd, DIA5, tipd_DIA5);
      VitalWireDelay(DIA4_ipd, DIA4, tipd_DIA4);
      VitalWireDelay(DIA3_ipd, DIA3, tipd_DIA3);
      VitalWireDelay(DIA2_ipd, DIA2, tipd_DIA2);
      VitalWireDelay(DIA1_ipd, DIA1, tipd_DIA1);
      VitalWireDelay(DIA0_ipd, DIA0, tipd_DIA0);
      VitalWireDelay(ADA5_ipd, ADA5, tipd_ADA5);
      VitalWireDelay(ADA4_ipd, ADA4, tipd_ADA4);
      VitalWireDelay(CEA_ipd, CEA, tipd_CEA);
      VitalWireDelay(OCEA_ipd, OCEA, tipd_OCEA);
      VitalWireDelay(RSTA_ipd, RSTA, tipd_RSTA);
      VitalWireDelay(CLKA_ipd, CLKA, tipd_CLKA);
      VitalWireDelay(CLKB_ipd, CLKB, tipd_CLKB);
      VitalWireDelay(RSTB_ipd, RSTB, tipd_RSTB);
      VitalWireDelay(OCEB_ipd, OCEB, tipd_OCEB);
      VitalWireDelay(CEB_ipd, CEB, tipd_CEB);
      VitalWireDelay(ADB4_ipd, ADB4, tipd_ADB4);
      VitalWireDelay(ADB5_ipd, ADB5, tipd_ADB5);
    END BLOCK;

    --  Setup and Hold DELAYs
    SignalDelay : BLOCK
    BEGIN
      VitalSignalDelay(DIA15_dly, DIA15_ipd, tisd_DIA15_CLKA);
      VitalSignalDelay(DIA14_dly, DIA14_ipd, tisd_DIA14_CLKA);
      VitalSignalDelay(DIA13_dly, DIA13_ipd, tisd_DIA13_CLKA);
      VitalSignalDelay(DIA12_dly, DIA12_ipd, tisd_DIA12_CLKA);
      VitalSignalDelay(DIA11_dly, DIA11_ipd, tisd_DIA11_CLKA);
      VitalSignalDelay(DIA10_dly, DIA10_ipd, tisd_DIA10_CLKA);
      VitalSignalDelay(DIA9_dly, DIA9_ipd, tisd_DIA9_CLKA);
      VitalSignalDelay(DIA8_dly, DIA8_ipd, tisd_DIA8_CLKA);
      VitalSignalDelay(DIA7_dly, DIA7_ipd, tisd_DIA7_CLKA);
      VitalSignalDelay(DIA6_dly, DIA6_ipd, tisd_DIA6_CLKA);
      VitalSignalDelay(DIA5_dly, DIA5_ipd, tisd_DIA5_CLKA);
      VitalSignalDelay(DIA4_dly, DIA4_ipd, tisd_DIA4_CLKA);
      VitalSignalDelay(DIA3_dly, DIA3_ipd, tisd_DIA3_CLKA);
      VitalSignalDelay(DIA2_dly, DIA2_ipd, tisd_DIA2_CLKA);
      VitalSignalDelay(DIA1_dly, DIA1_ipd, tisd_DIA1_CLKA);
      VitalSignalDelay(DIA0_dly, DIA0_ipd, tisd_DIA0_CLKA);
      VitalSignalDelay(ADA5_dly, ADA5_ipd, tisd_ADA5_CLKA);
      VitalSignalDelay(ADA4_dly, ADA4_ipd, tisd_ADA4_CLKA);
      VitalSignalDelay(CEA_dly, CEA_ipd, tisd_CEA_CLKA);
      VitalSignalDelay(OCEA_dly, OCEA_ipd, tisd_OCEA_CLKA);
      VitalSignalDelay(RSTA_dly, RSTA_ipd, tisd_RSTA_CLKA);
      VitalSignalDelay(CLKA_dly, CLKA_ipd, ticd_CLKA);
      VitalSignalDelay(CLKB_dly, CLKB_ipd, ticd_CLKB);
      VitalSignalDelay(RSTB_dly, RSTB_ipd, tisd_RSTB_CLKB);
      VitalSignalDelay(OCEB_dly, OCEB_ipd, tisd_OCEB_CLKB);
      VitalSignalDelay(CEB_dly, CEB_ipd, tisd_CEB_CLKB);
      VitalSignalDelay(ADB4_dly, ADB4_ipd, tisd_ADB4_CLKB);
      VitalSignalDelay(ADB5_dly, ADB5_ipd, tisd_ADB5_CLKB);
    END BLOCK;

    VitalBehavior : PROCESS (DIA15_dly, DIA14_dly, DIA13_dly, DIA12_dly, 
      DIA11_dly, DIA10_dly, DIA9_dly, DIA8_dly, DIA7_dly, DIA6_dly, DIA5_dly, 
      DIA4_dly, DIA3_dly, DIA2_dly, DIA1_dly, DIA0_dly, ADA5_dly, ADA4_dly, 
      CEA_dly, OCEA_dly, RSTA_dly, CLKA_dly, CLKB_dly, RSTB_dly, OCEB_dly, 
      CEB_dly, DOB0_out, DOB1_out, DOB2_out, DOB3_out, DOB4_out, DOB5_out, 
      DOB6_out, DOB7_out, DOB8_out, DOB9_out, DOB10_out, DOB11_out, DOB12_out, 
      DOB13_out, DOB14_out, DOB15_out, ADB4_dly, ADB5_dly)
    VARIABLE DOB0_zd         	: std_logic := 'X';
    VARIABLE DOB0_GlitchData 	: VitalGlitchDataType;
    VARIABLE DOB1_zd         	: std_logic := 'X';
    VARIABLE DOB1_GlitchData 	: VitalGlitchDataType;
    VARIABLE DOB2_zd         	: std_logic := 'X';
    VARIABLE DOB2_GlitchData 	: VitalGlitchDataType;
    VARIABLE DOB3_zd         	: std_logic := 'X';
    VARIABLE DOB3_GlitchData 	: VitalGlitchDataType;
    VARIABLE DOB4_zd         	: std_logic := 'X';
    VARIABLE DOB4_GlitchData 	: VitalGlitchDataType;
    VARIABLE DOB5_zd         	: std_logic := 'X';
    VARIABLE DOB5_GlitchData 	: VitalGlitchDataType;
    VARIABLE DOB6_zd         	: std_logic := 'X';
    VARIABLE DOB6_GlitchData 	: VitalGlitchDataType;
    VARIABLE DOB7_zd         	: std_logic := 'X';
    VARIABLE DOB7_GlitchData 	: VitalGlitchDataType;
    VARIABLE DOB8_zd         	: std_logic := 'X';
    VARIABLE DOB8_GlitchData 	: VitalGlitchDataType;
    VARIABLE DOB9_zd         	: std_logic := 'X';
    VARIABLE DOB9_GlitchData 	: VitalGlitchDataType;
    VARIABLE DOB10_zd         	: std_logic := 'X';
    VARIABLE DOB10_GlitchData 	: VitalGlitchDataType;
    VARIABLE DOB11_zd         	: std_logic := 'X';
    VARIABLE DOB11_GlitchData 	: VitalGlitchDataType;
    VARIABLE DOB12_zd         	: std_logic := 'X';
    VARIABLE DOB12_GlitchData 	: VitalGlitchDataType;
    VARIABLE DOB13_zd         	: std_logic := 'X';
    VARIABLE DOB13_GlitchData 	: VitalGlitchDataType;
    VARIABLE DOB14_zd         	: std_logic := 'X';
    VARIABLE DOB14_GlitchData 	: VitalGlitchDataType;
    VARIABLE DOB15_zd         	: std_logic := 'X';
    VARIABLE DOB15_GlitchData 	: VitalGlitchDataType;

    VARIABLE tviol_DIA15_CLKA       	: x01 := '0';
    VARIABLE DIA15_CLKA_TimingDatash	: VitalTimingDataType;
    VARIABLE tviol_DIA14_CLKA       	: x01 := '0';
    VARIABLE DIA14_CLKA_TimingDatash	: VitalTimingDataType;
    VARIABLE tviol_DIA13_CLKA       	: x01 := '0';
    VARIABLE DIA13_CLKA_TimingDatash	: VitalTimingDataType;
    VARIABLE tviol_DIA12_CLKA       	: x01 := '0';
    VARIABLE DIA12_CLKA_TimingDatash	: VitalTimingDataType;
    VARIABLE tviol_DIA11_CLKA       	: x01 := '0';
    VARIABLE DIA11_CLKA_TimingDatash	: VitalTimingDataType;
    VARIABLE tviol_DIA10_CLKA       	: x01 := '0';
    VARIABLE DIA10_CLKA_TimingDatash	: VitalTimingDataType;
    VARIABLE tviol_DIA9_CLKA       	: x01 := '0';
    VARIABLE DIA9_CLKA_TimingDatash	: VitalTimingDataType;
    VARIABLE tviol_DIA8_CLKA       	: x01 := '0';
    VARIABLE DIA8_CLKA_TimingDatash	: VitalTimingDataType;
    VARIABLE tviol_DIA7_CLKA       	: x01 := '0';
    VARIABLE DIA7_CLKA_TimingDatash	: VitalTimingDataType;
    VARIABLE tviol_DIA6_CLKA       	: x01 := '0';
    VARIABLE DIA6_CLKA_TimingDatash	: VitalTimingDataType;
    VARIABLE tviol_DIA5_CLKA       	: x01 := '0';
    VARIABLE DIA5_CLKA_TimingDatash	: VitalTimingDataType;
    VARIABLE tviol_DIA4_CLKA       	: x01 := '0';
    VARIABLE DIA4_CLKA_TimingDatash	: VitalTimingDataType;
    VARIABLE tviol_DIA3_CLKA       	: x01 := '0';
    VARIABLE DIA3_CLKA_TimingDatash	: VitalTimingDataType;
    VARIABLE tviol_DIA2_CLKA       	: x01 := '0';
    VARIABLE DIA2_CLKA_TimingDatash	: VitalTimingDataType;
    VARIABLE tviol_DIA1_CLKA       	: x01 := '0';
    VARIABLE DIA1_CLKA_TimingDatash	: VitalTimingDataType;
    VARIABLE tviol_DIA0_CLKA       	: x01 := '0';
    VARIABLE DIA0_CLKA_TimingDatash	: VitalTimingDataType;
    VARIABLE tviol_ADA5_CLKA       	: x01 := '0';
    VARIABLE ADA5_CLKA_TimingDatash	: VitalTimingDataType;
    VARIABLE tviol_ADA4_CLKA       	: x01 := '0';
    VARIABLE ADA4_CLKA_TimingDatash	: VitalTimingDataType;
    VARIABLE tviol_CEA_CLKA       	: x01 := '0';
    VARIABLE CEA_CLKA_TimingDatash	: VitalTimingDataType;
    VARIABLE tviol_OCEA_CLKA       	: x01 := '0';
    VARIABLE OCEA_CLKA_TimingDatash	: VitalTimingDataType;
    VARIABLE tviol_RSTA_CLKA       	: x01 := '0';
    VARIABLE RSTA_CLKA_TimingDatash	: VitalTimingDataType;
    VARIABLE tviol_RSTB_CLKB       	: x01 := '0';
    VARIABLE RSTB_CLKB_TimingDatash	: VitalTimingDataType;
    VARIABLE tviol_OCEB_CLKB       	: x01 := '0';
    VARIABLE OCEB_CLKB_TimingDatash	: VitalTimingDataType;
    VARIABLE tviol_CEB_CLKB       	: x01 := '0';
    VARIABLE CEB_CLKB_TimingDatash	: VitalTimingDataType;
    VARIABLE tviol_ADB4_CLKB       	: x01 := '0';
    VARIABLE ADB4_CLKB_TimingDatash	: VitalTimingDataType;
    VARIABLE tviol_ADB5_CLKB       	: x01 := '0';
    VARIABLE ADB5_CLKB_TimingDatash	: VitalTimingDataType;
    VARIABLE tviol_CLKA_CLKA          	: x01 := '0';
    VARIABLE periodcheckinfo_CLKA	: VitalPeriodDataType;
    VARIABLE tviol_CLKB_CLKB          	: x01 := '0';
    VARIABLE periodcheckinfo_CLKB	: VitalPeriodDataType;

    BEGIN

    IF (TimingChecksOn) THEN
      VitalSetupHoldCheck (
        TestSignal => DIA15_dly,
        TestSignalName => "DIA15",
        TestDelay => tisd_DIA15_CLKA,
        RefSignal => CLKA_dly,
        RefSignalName => "CLKA",
        RefDelay => ticd_CLKA,
        SetupHigh => tsetup_DIA15_CLKA_noedge_posedge,
        SetupLow => tsetup_DIA15_CLKA_noedge_posedge,
        HoldHigh => thold_DIA15_CLKA_noedge_posedge,
        HoldLow => thold_DIA15_CLKA_noedge_posedge,
        CheckEnabled => TRUE,
        RefTransition => '/',
        MsgOn => MsgOn, XOn => XOn,
        HeaderMsg => InstancePath,
        TimingData => DIA15_CLKA_TimingDatash,
        Violation => tviol_DIA15_CLKA,
        MsgSeverity => warning);
      VitalSetupHoldCheck (
        TestSignal => DIA14_dly,
        TestSignalName => "DIA14",
        TestDelay => tisd_DIA14_CLKA,
        RefSignal => CLKA_dly,
        RefSignalName => "CLKA",
        RefDelay => ticd_CLKA,
        SetupHigh => tsetup_DIA14_CLKA_noedge_posedge,
        SetupLow => tsetup_DIA14_CLKA_noedge_posedge,
        HoldHigh => thold_DIA14_CLKA_noedge_posedge,
        HoldLow => thold_DIA14_CLKA_noedge_posedge,
        CheckEnabled => TRUE,
        RefTransition => '/',
        MsgOn => MsgOn, XOn => XOn,
        HeaderMsg => InstancePath,
        TimingData => DIA14_CLKA_TimingDatash,
        Violation => tviol_DIA14_CLKA,
        MsgSeverity => warning);
      VitalSetupHoldCheck (
        TestSignal => DIA13_dly,
        TestSignalName => "DIA13",
        TestDelay => tisd_DIA13_CLKA,
        RefSignal => CLKA_dly,
        RefSignalName => "CLKA",
        RefDelay => ticd_CLKA,
        SetupHigh => tsetup_DIA13_CLKA_noedge_posedge,
        SetupLow => tsetup_DIA13_CLKA_noedge_posedge,
        HoldHigh => thold_DIA13_CLKA_noedge_posedge,
        HoldLow => thold_DIA13_CLKA_noedge_posedge,
        CheckEnabled => TRUE,
        RefTransition => '/',
        MsgOn => MsgOn, XOn => XOn,
        HeaderMsg => InstancePath,
        TimingData => DIA13_CLKA_TimingDatash,
        Violation => tviol_DIA13_CLKA,
        MsgSeverity => warning);
      VitalSetupHoldCheck (
        TestSignal => DIA12_dly,
        TestSignalName => "DIA12",
        TestDelay => tisd_DIA12_CLKA,
        RefSignal => CLKA_dly,
        RefSignalName => "CLKA",
        RefDelay => ticd_CLKA,
        SetupHigh => tsetup_DIA12_CLKA_noedge_posedge,
        SetupLow => tsetup_DIA12_CLKA_noedge_posedge,
        HoldHigh => thold_DIA12_CLKA_noedge_posedge,
        HoldLow => thold_DIA12_CLKA_noedge_posedge,
        CheckEnabled => TRUE,
        RefTransition => '/',
        MsgOn => MsgOn, XOn => XOn,
        HeaderMsg => InstancePath,
        TimingData => DIA12_CLKA_TimingDatash,
        Violation => tviol_DIA12_CLKA,
        MsgSeverity => warning);
      VitalSetupHoldCheck (
        TestSignal => DIA11_dly,
        TestSignalName => "DIA11",
        TestDelay => tisd_DIA11_CLKA,
        RefSignal => CLKA_dly,
        RefSignalName => "CLKA",
        RefDelay => ticd_CLKA,
        SetupHigh => tsetup_DIA11_CLKA_noedge_posedge,
        SetupLow => tsetup_DIA11_CLKA_noedge_posedge,
        HoldHigh => thold_DIA11_CLKA_noedge_posedge,
        HoldLow => thold_DIA11_CLKA_noedge_posedge,
        CheckEnabled => TRUE,
        RefTransition => '/',
        MsgOn => MsgOn, XOn => XOn,
        HeaderMsg => InstancePath,
        TimingData => DIA11_CLKA_TimingDatash,
        Violation => tviol_DIA11_CLKA,
        MsgSeverity => warning);
      VitalSetupHoldCheck (
        TestSignal => DIA10_dly,
        TestSignalName => "DIA10",
        TestDelay => tisd_DIA10_CLKA,
        RefSignal => CLKA_dly,
        RefSignalName => "CLKA",
        RefDelay => ticd_CLKA,
        SetupHigh => tsetup_DIA10_CLKA_noedge_posedge,
        SetupLow => tsetup_DIA10_CLKA_noedge_posedge,
        HoldHigh => thold_DIA10_CLKA_noedge_posedge,
        HoldLow => thold_DIA10_CLKA_noedge_posedge,
        CheckEnabled => TRUE,
        RefTransition => '/',
        MsgOn => MsgOn, XOn => XOn,
        HeaderMsg => InstancePath,
        TimingData => DIA10_CLKA_TimingDatash,
        Violation => tviol_DIA10_CLKA,
        MsgSeverity => warning);
      VitalSetupHoldCheck (
        TestSignal => DIA9_dly,
        TestSignalName => "DIA9",
        TestDelay => tisd_DIA9_CLKA,
        RefSignal => CLKA_dly,
        RefSignalName => "CLKA",
        RefDelay => ticd_CLKA,
        SetupHigh => tsetup_DIA9_CLKA_noedge_posedge,
        SetupLow => tsetup_DIA9_CLKA_noedge_posedge,
        HoldHigh => thold_DIA9_CLKA_noedge_posedge,
        HoldLow => thold_DIA9_CLKA_noedge_posedge,
        CheckEnabled => TRUE,
        RefTransition => '/',
        MsgOn => MsgOn, XOn => XOn,
        HeaderMsg => InstancePath,
        TimingData => DIA9_CLKA_TimingDatash,
        Violation => tviol_DIA9_CLKA,
        MsgSeverity => warning);
      VitalSetupHoldCheck (
        TestSignal => DIA8_dly,
        TestSignalName => "DIA8",
        TestDelay => tisd_DIA8_CLKA,
        RefSignal => CLKA_dly,
        RefSignalName => "CLKA",
        RefDelay => ticd_CLKA,
        SetupHigh => tsetup_DIA8_CLKA_noedge_posedge,
        SetupLow => tsetup_DIA8_CLKA_noedge_posedge,
        HoldHigh => thold_DIA8_CLKA_noedge_posedge,
        HoldLow => thold_DIA8_CLKA_noedge_posedge,
        CheckEnabled => TRUE,
        RefTransition => '/',
        MsgOn => MsgOn, XOn => XOn,
        HeaderMsg => InstancePath,
        TimingData => DIA8_CLKA_TimingDatash,
        Violation => tviol_DIA8_CLKA,
        MsgSeverity => warning);
      VitalSetupHoldCheck (
        TestSignal => DIA7_dly,
        TestSignalName => "DIA7",
        TestDelay => tisd_DIA7_CLKA,
        RefSignal => CLKA_dly,
        RefSignalName => "CLKA",
        RefDelay => ticd_CLKA,
        SetupHigh => tsetup_DIA7_CLKA_noedge_posedge,
        SetupLow => tsetup_DIA7_CLKA_noedge_posedge,
        HoldHigh => thold_DIA7_CLKA_noedge_posedge,
        HoldLow => thold_DIA7_CLKA_noedge_posedge,
        CheckEnabled => TRUE,
        RefTransition => '/',
        MsgOn => MsgOn, XOn => XOn,
        HeaderMsg => InstancePath,
        TimingData => DIA7_CLKA_TimingDatash,
        Violation => tviol_DIA7_CLKA,
        MsgSeverity => warning);
      VitalSetupHoldCheck (
        TestSignal => DIA6_dly,
        TestSignalName => "DIA6",
        TestDelay => tisd_DIA6_CLKA,
        RefSignal => CLKA_dly,
        RefSignalName => "CLKA",
        RefDelay => ticd_CLKA,
        SetupHigh => tsetup_DIA6_CLKA_noedge_posedge,
        SetupLow => tsetup_DIA6_CLKA_noedge_posedge,
        HoldHigh => thold_DIA6_CLKA_noedge_posedge,
        HoldLow => thold_DIA6_CLKA_noedge_posedge,
        CheckEnabled => TRUE,
        RefTransition => '/',
        MsgOn => MsgOn, XOn => XOn,
        HeaderMsg => InstancePath,
        TimingData => DIA6_CLKA_TimingDatash,
        Violation => tviol_DIA6_CLKA,
        MsgSeverity => warning);
      VitalSetupHoldCheck (
        TestSignal => DIA5_dly,
        TestSignalName => "DIA5",
        TestDelay => tisd_DIA5_CLKA,
        RefSignal => CLKA_dly,
        RefSignalName => "CLKA",
        RefDelay => ticd_CLKA,
        SetupHigh => tsetup_DIA5_CLKA_noedge_posedge,
        SetupLow => tsetup_DIA5_CLKA_noedge_posedge,
        HoldHigh => thold_DIA5_CLKA_noedge_posedge,
        HoldLow => thold_DIA5_CLKA_noedge_posedge,
        CheckEnabled => TRUE,
        RefTransition => '/',
        MsgOn => MsgOn, XOn => XOn,
        HeaderMsg => InstancePath,
        TimingData => DIA5_CLKA_TimingDatash,
        Violation => tviol_DIA5_CLKA,
        MsgSeverity => warning);
      VitalSetupHoldCheck (
        TestSignal => DIA4_dly,
        TestSignalName => "DIA4",
        TestDelay => tisd_DIA4_CLKA,
        RefSignal => CLKA_dly,
        RefSignalName => "CLKA",
        RefDelay => ticd_CLKA,
        SetupHigh => tsetup_DIA4_CLKA_noedge_posedge,
        SetupLow => tsetup_DIA4_CLKA_noedge_posedge,
        HoldHigh => thold_DIA4_CLKA_noedge_posedge,
        HoldLow => thold_DIA4_CLKA_noedge_posedge,
        CheckEnabled => TRUE,
        RefTransition => '/',
        MsgOn => MsgOn, XOn => XOn,
        HeaderMsg => InstancePath,
        TimingData => DIA4_CLKA_TimingDatash,
        Violation => tviol_DIA4_CLKA,
        MsgSeverity => warning);
      VitalSetupHoldCheck (
        TestSignal => DIA3_dly,
        TestSignalName => "DIA3",
        TestDelay => tisd_DIA3_CLKA,
        RefSignal => CLKA_dly,
        RefSignalName => "CLKA",
        RefDelay => ticd_CLKA,
        SetupHigh => tsetup_DIA3_CLKA_noedge_posedge,
        SetupLow => tsetup_DIA3_CLKA_noedge_posedge,
        HoldHigh => thold_DIA3_CLKA_noedge_posedge,
        HoldLow => thold_DIA3_CLKA_noedge_posedge,
        CheckEnabled => TRUE,
        RefTransition => '/',
        MsgOn => MsgOn, XOn => XOn,
        HeaderMsg => InstancePath,
        TimingData => DIA3_CLKA_TimingDatash,
        Violation => tviol_DIA3_CLKA,
        MsgSeverity => warning);
      VitalSetupHoldCheck (
        TestSignal => DIA2_dly,
        TestSignalName => "DIA2",
        TestDelay => tisd_DIA2_CLKA,
        RefSignal => CLKA_dly,
        RefSignalName => "CLKA",
        RefDelay => ticd_CLKA,
        SetupHigh => tsetup_DIA2_CLKA_noedge_posedge,
        SetupLow => tsetup_DIA2_CLKA_noedge_posedge,
        HoldHigh => thold_DIA2_CLKA_noedge_posedge,
        HoldLow => thold_DIA2_CLKA_noedge_posedge,
        CheckEnabled => TRUE,
        RefTransition => '/',
        MsgOn => MsgOn, XOn => XOn,
        HeaderMsg => InstancePath,
        TimingData => DIA2_CLKA_TimingDatash,
        Violation => tviol_DIA2_CLKA,
        MsgSeverity => warning);
      VitalSetupHoldCheck (
        TestSignal => DIA1_dly,
        TestSignalName => "DIA1",
        TestDelay => tisd_DIA1_CLKA,
        RefSignal => CLKA_dly,
        RefSignalName => "CLKA",
        RefDelay => ticd_CLKA,
        SetupHigh => tsetup_DIA1_CLKA_noedge_posedge,
        SetupLow => tsetup_DIA1_CLKA_noedge_posedge,
        HoldHigh => thold_DIA1_CLKA_noedge_posedge,
        HoldLow => thold_DIA1_CLKA_noedge_posedge,
        CheckEnabled => TRUE,
        RefTransition => '/',
        MsgOn => MsgOn, XOn => XOn,
        HeaderMsg => InstancePath,
        TimingData => DIA1_CLKA_TimingDatash,
        Violation => tviol_DIA1_CLKA,
        MsgSeverity => warning);
      VitalSetupHoldCheck (
        TestSignal => DIA0_dly,
        TestSignalName => "DIA0",
        TestDelay => tisd_DIA0_CLKA,
        RefSignal => CLKA_dly,
        RefSignalName => "CLKA",
        RefDelay => ticd_CLKA,
        SetupHigh => tsetup_DIA0_CLKA_noedge_posedge,
        SetupLow => tsetup_DIA0_CLKA_noedge_posedge,
        HoldHigh => thold_DIA0_CLKA_noedge_posedge,
        HoldLow => thold_DIA0_CLKA_noedge_posedge,
        CheckEnabled => TRUE,
        RefTransition => '/',
        MsgOn => MsgOn, XOn => XOn,
        HeaderMsg => InstancePath,
        TimingData => DIA0_CLKA_TimingDatash,
        Violation => tviol_DIA0_CLKA,
        MsgSeverity => warning);
      VitalSetupHoldCheck (
        TestSignal => ADA5_dly,
        TestSignalName => "ADA5",
        TestDelay => tisd_ADA5_CLKA,
        RefSignal => CLKA_dly,
        RefSignalName => "CLKA",
        RefDelay => ticd_CLKA,
        SetupHigh => tsetup_ADA5_CLKA_noedge_posedge,
        SetupLow => tsetup_ADA5_CLKA_noedge_posedge,
        HoldHigh => thold_ADA5_CLKA_noedge_posedge,
        HoldLow => thold_ADA5_CLKA_noedge_posedge,
        CheckEnabled => TRUE,
        RefTransition => '/',
        MsgOn => MsgOn, XOn => XOn,
        HeaderMsg => InstancePath,
        TimingData => ADA5_CLKA_TimingDatash,
        Violation => tviol_ADA5_CLKA,
        MsgSeverity => warning);
      VitalSetupHoldCheck (
        TestSignal => ADA4_dly,
        TestSignalName => "ADA4",
        TestDelay => tisd_ADA4_CLKA,
        RefSignal => CLKA_dly,
        RefSignalName => "CLKA",
        RefDelay => ticd_CLKA,
        SetupHigh => tsetup_ADA4_CLKA_noedge_posedge,
        SetupLow => tsetup_ADA4_CLKA_noedge_posedge,
        HoldHigh => thold_ADA4_CLKA_noedge_posedge,
        HoldLow => thold_ADA4_CLKA_noedge_posedge,
        CheckEnabled => TRUE,
        RefTransition => '/',
        MsgOn => MsgOn, XOn => XOn,
        HeaderMsg => InstancePath,
        TimingData => ADA4_CLKA_TimingDatash,
        Violation => tviol_ADA4_CLKA,
        MsgSeverity => warning);
      VitalSetupHoldCheck (
        TestSignal => CEA_dly,
        TestSignalName => "CEA",
        TestDelay => tisd_CEA_CLKA,
        RefSignal => CLKA_dly,
        RefSignalName => "CLKA",
        RefDelay => ticd_CLKA,
        SetupHigh => tsetup_CEA_CLKA_noedge_posedge,
        SetupLow => tsetup_CEA_CLKA_noedge_posedge,
        HoldHigh => thold_CEA_CLKA_noedge_posedge,
        HoldLow => thold_CEA_CLKA_noedge_posedge,
        CheckEnabled => TRUE,
        RefTransition => '/',
        MsgOn => MsgOn, XOn => XOn,
        HeaderMsg => InstancePath,
        TimingData => CEA_CLKA_TimingDatash,
        Violation => tviol_CEA_CLKA,
        MsgSeverity => warning);
      VitalSetupHoldCheck (
        TestSignal => OCEA_dly,
        TestSignalName => "OCEA",
        TestDelay => tisd_OCEA_CLKA,
        RefSignal => CLKA_dly,
        RefSignalName => "CLKA",
        RefDelay => ticd_CLKA,
        SetupHigh => tsetup_OCEA_CLKA_noedge_posedge,
        SetupLow => tsetup_OCEA_CLKA_noedge_posedge,
        HoldHigh => thold_OCEA_CLKA_noedge_posedge,
        HoldLow => thold_OCEA_CLKA_noedge_posedge,
        CheckEnabled => TRUE,
        RefTransition => '/',
        MsgOn => MsgOn, XOn => XOn,
        HeaderMsg => InstancePath,
        TimingData => OCEA_CLKA_TimingDatash,
        Violation => tviol_OCEA_CLKA,
        MsgSeverity => warning);
      VitalSetupHoldCheck (
        TestSignal => RSTA_dly,
        TestSignalName => "RSTA",
        TestDelay => tisd_RSTA_CLKA,
        RefSignal => CLKA_dly,
        RefSignalName => "CLKA",
        RefDelay => ticd_CLKA,
        SetupHigh => tsetup_RSTA_CLKA_noedge_posedge,
        SetupLow => tsetup_RSTA_CLKA_noedge_posedge,
        HoldHigh => thold_RSTA_CLKA_noedge_posedge,
        HoldLow => thold_RSTA_CLKA_noedge_posedge,
        CheckEnabled => TRUE,
        RefTransition => '/',
        MsgOn => MsgOn, XOn => XOn,
        HeaderMsg => InstancePath,
        TimingData => RSTA_CLKA_TimingDatash,
        Violation => tviol_RSTA_CLKA,
        MsgSeverity => warning);
      VitalSetupHoldCheck (
        TestSignal => RSTB_dly,
        TestSignalName => "RSTB",
        TestDelay => tisd_RSTB_CLKB,
        RefSignal => CLKB_dly,
        RefSignalName => "CLKB",
        RefDelay => ticd_CLKB,
        SetupHigh => tsetup_RSTB_CLKB_noedge_posedge,
        SetupLow => tsetup_RSTB_CLKB_noedge_posedge,
        HoldHigh => thold_RSTB_CLKB_noedge_posedge,
        HoldLow => thold_RSTB_CLKB_noedge_posedge,
        CheckEnabled => TRUE,
        RefTransition => '/',
        MsgOn => MsgOn, XOn => XOn,
        HeaderMsg => InstancePath,
        TimingData => RSTB_CLKB_TimingDatash,
        Violation => tviol_RSTB_CLKB,
        MsgSeverity => warning);
      VitalSetupHoldCheck (
        TestSignal => OCEB_dly,
        TestSignalName => "OCEB",
        TestDelay => tisd_OCEB_CLKB,
        RefSignal => CLKB_dly,
        RefSignalName => "CLKB",
        RefDelay => ticd_CLKB,
        SetupHigh => tsetup_OCEB_CLKB_noedge_posedge,
        SetupLow => tsetup_OCEB_CLKB_noedge_posedge,
        HoldHigh => thold_OCEB_CLKB_noedge_posedge,
        HoldLow => thold_OCEB_CLKB_noedge_posedge,
        CheckEnabled => TRUE,
        RefTransition => '/',
        MsgOn => MsgOn, XOn => XOn,
        HeaderMsg => InstancePath,
        TimingData => OCEB_CLKB_TimingDatash,
        Violation => tviol_OCEB_CLKB,
        MsgSeverity => warning);
      VitalSetupHoldCheck (
        TestSignal => CEB_dly,
        TestSignalName => "CEB",
        TestDelay => tisd_CEB_CLKB,
        RefSignal => CLKB_dly,
        RefSignalName => "CLKB",
        RefDelay => ticd_CLKB,
        SetupHigh => tsetup_CEB_CLKB_noedge_posedge,
        SetupLow => tsetup_CEB_CLKB_noedge_posedge,
        HoldHigh => thold_CEB_CLKB_noedge_posedge,
        HoldLow => thold_CEB_CLKB_noedge_posedge,
        CheckEnabled => TRUE,
        RefTransition => '/',
        MsgOn => MsgOn, XOn => XOn,
        HeaderMsg => InstancePath,
        TimingData => CEB_CLKB_TimingDatash,
        Violation => tviol_CEB_CLKB,
        MsgSeverity => warning);
      VitalSetupHoldCheck (
        TestSignal => ADB4_dly,
        TestSignalName => "ADB4",
        TestDelay => tisd_ADB4_CLKB,
        RefSignal => CLKB_dly,
        RefSignalName => "CLKB",
        RefDelay => ticd_CLKB,
        SetupHigh => tsetup_ADB4_CLKB_noedge_posedge,
        SetupLow => tsetup_ADB4_CLKB_noedge_posedge,
        HoldHigh => thold_ADB4_CLKB_noedge_posedge,
        HoldLow => thold_ADB4_CLKB_noedge_posedge,
        CheckEnabled => TRUE,
        RefTransition => '/',
        MsgOn => MsgOn, XOn => XOn,
        HeaderMsg => InstancePath,
        TimingData => ADB4_CLKB_TimingDatash,
        Violation => tviol_ADB4_CLKB,
        MsgSeverity => warning);
      VitalSetupHoldCheck (
        TestSignal => ADB5_dly,
        TestSignalName => "ADB5",
        TestDelay => tisd_ADB5_CLKB,
        RefSignal => CLKB_dly,
        RefSignalName => "CLKB",
        RefDelay => ticd_CLKB,
        SetupHigh => tsetup_ADB5_CLKB_noedge_posedge,
        SetupLow => tsetup_ADB5_CLKB_noedge_posedge,
        HoldHigh => thold_ADB5_CLKB_noedge_posedge,
        HoldLow => thold_ADB5_CLKB_noedge_posedge,
        CheckEnabled => TRUE,
        RefTransition => '/',
        MsgOn => MsgOn, XOn => XOn,
        HeaderMsg => InstancePath,
        TimingData => ADB5_CLKB_TimingDatash,
        Violation => tviol_ADB5_CLKB,
        MsgSeverity => warning);
      VitalPeriodPulseCheck (
        TestSignal => CLKA_ipd,
        TestSignalName => "CLKA",
        Period => tperiod_CLKA,
        PulseWidthHigh => tpw_CLKA_posedge,
        PulseWidthLow => tpw_CLKA_negedge,
        PeriodData => periodcheckinfo_CLKA,
        Violation => tviol_CLKA_CLKA,
        MsgOn => MsgOn, XOn => XOn,
        HeaderMsg => InstancePath,
        CheckEnabled => TRUE,
        MsgSeverity => warning);
      VitalPeriodPulseCheck (
        TestSignal => CLKB_ipd,
        TestSignalName => "CLKB",
        Period => tperiod_CLKB,
        PulseWidthHigh => tpw_CLKB_posedge,
        PulseWidthLow => tpw_CLKB_negedge,
        PeriodData => periodcheckinfo_CLKB,
        Violation => tviol_CLKB_CLKB,
        MsgOn => MsgOn, XOn => XOn,
        HeaderMsg => InstancePath,
        CheckEnabled => TRUE,
        MsgSeverity => warning);

    END IF;

    DOB0_zd 	:= DOB0_out;
    DOB1_zd 	:= DOB1_out;
    DOB2_zd 	:= DOB2_out;
    DOB3_zd 	:= DOB3_out;
    DOB4_zd 	:= DOB4_out;
    DOB5_zd 	:= DOB5_out;
    DOB6_zd 	:= DOB6_out;
    DOB7_zd 	:= DOB7_out;
    DOB8_zd 	:= DOB8_out;
    DOB9_zd 	:= DOB9_out;
    DOB10_zd 	:= DOB10_out;
    DOB11_zd 	:= DOB11_out;
    DOB12_zd 	:= DOB12_out;
    DOB13_zd 	:= DOB13_out;
    DOB14_zd 	:= DOB14_out;
    DOB15_zd 	:= DOB15_out;

    VitalPathDelay01 (
      OutSignal => DOB0, OutSignalName => "DOB0", OutTemp => DOB0_zd,
      Paths      => (0 => (InputChangeTime => CLKB_dly'last_event,
                           PathDelay => tpd_CLKB_DOB0,
                           PathCondition => TRUE),
                     1 => (InputChangeTime => RSTB_dly'last_event,
                           PathDelay => tpd_RSTB_DOB0,
                           PathCondition => TRUE)),
      GlitchData => DOB0_GlitchData,
      Mode       => ondetect, XOn => XOn, MsgOn => MsgOn);
    VitalPathDelay01 (
      OutSignal => DOB1, OutSignalName => "DOB1", OutTemp => DOB1_zd,
      Paths      => (0 => (InputChangeTime => CLKB_dly'last_event,
                           PathDelay => tpd_CLKB_DOB1,
                           PathCondition => TRUE),
                     1 => (InputChangeTime => RSTB_dly'last_event,
                           PathDelay => tpd_RSTB_DOB1,
                           PathCondition => TRUE)),
      GlitchData => DOB1_GlitchData,
      Mode       => ondetect, XOn => XOn, MsgOn => MsgOn);
    VitalPathDelay01 (
      OutSignal => DOB2, OutSignalName => "DOB2", OutTemp => DOB2_zd,
      Paths      => (0 => (InputChangeTime => CLKB_dly'last_event,
                           PathDelay => tpd_CLKB_DOB2,
                           PathCondition => TRUE),
                     1 => (InputChangeTime => RSTB_dly'last_event,
                           PathDelay => tpd_RSTB_DOB2,
                           PathCondition => TRUE)),
      GlitchData => DOB2_GlitchData,
      Mode       => ondetect, XOn => XOn, MsgOn => MsgOn);
    VitalPathDelay01 (
      OutSignal => DOB3, OutSignalName => "DOB3", OutTemp => DOB3_zd,
      Paths      => (0 => (InputChangeTime => CLKB_dly'last_event,
                           PathDelay => tpd_CLKB_DOB3,
                           PathCondition => TRUE),
                     1 => (InputChangeTime => RSTB_dly'last_event,
                           PathDelay => tpd_RSTB_DOB3,
                           PathCondition => TRUE)),
      GlitchData => DOB3_GlitchData,
      Mode       => ondetect, XOn => XOn, MsgOn => MsgOn);
    VitalPathDelay01 (
      OutSignal => DOB4, OutSignalName => "DOB4", OutTemp => DOB4_zd,
      Paths      => (0 => (InputChangeTime => CLKB_dly'last_event,
                           PathDelay => tpd_CLKB_DOB4,
                           PathCondition => TRUE),
                     1 => (InputChangeTime => RSTB_dly'last_event,
                           PathDelay => tpd_RSTB_DOB4,
                           PathCondition => TRUE)),
      GlitchData => DOB4_GlitchData,
      Mode       => ondetect, XOn => XOn, MsgOn => MsgOn);
    VitalPathDelay01 (
      OutSignal => DOB5, OutSignalName => "DOB5", OutTemp => DOB5_zd,
      Paths      => (0 => (InputChangeTime => CLKB_dly'last_event,
                           PathDelay => tpd_CLKB_DOB5,
                           PathCondition => TRUE),
                     1 => (InputChangeTime => RSTB_dly'last_event,
                           PathDelay => tpd_RSTB_DOB5,
                           PathCondition => TRUE)),
      GlitchData => DOB5_GlitchData,
      Mode       => ondetect, XOn => XOn, MsgOn => MsgOn);
    VitalPathDelay01 (
      OutSignal => DOB6, OutSignalName => "DOB6", OutTemp => DOB6_zd,
      Paths      => (0 => (InputChangeTime => CLKB_dly'last_event,
                           PathDelay => tpd_CLKB_DOB6,
                           PathCondition => TRUE),
                     1 => (InputChangeTime => RSTB_dly'last_event,
                           PathDelay => tpd_RSTB_DOB6,
                           PathCondition => TRUE)),
      GlitchData => DOB6_GlitchData,
      Mode       => ondetect, XOn => XOn, MsgOn => MsgOn);
    VitalPathDelay01 (
      OutSignal => DOB7, OutSignalName => "DOB7", OutTemp => DOB7_zd,
      Paths      => (0 => (InputChangeTime => CLKB_dly'last_event,
                           PathDelay => tpd_CLKB_DOB7,
                           PathCondition => TRUE),
                     1 => (InputChangeTime => RSTB_dly'last_event,
                           PathDelay => tpd_RSTB_DOB7,
                           PathCondition => TRUE)),
      GlitchData => DOB7_GlitchData,
      Mode       => ondetect, XOn => XOn, MsgOn => MsgOn);
    VitalPathDelay01 (
      OutSignal => DOB8, OutSignalName => "DOB8", OutTemp => DOB8_zd,
      Paths      => (0 => (InputChangeTime => CLKB_dly'last_event,
                           PathDelay => tpd_CLKB_DOB8,
                           PathCondition => TRUE),
                     1 => (InputChangeTime => RSTB_dly'last_event,
                           PathDelay => tpd_RSTB_DOB8,
                           PathCondition => TRUE)),
      GlitchData => DOB8_GlitchData,
      Mode       => ondetect, XOn => XOn, MsgOn => MsgOn);
    VitalPathDelay01 (
      OutSignal => DOB9, OutSignalName => "DOB9", OutTemp => DOB9_zd,
      Paths      => (0 => (InputChangeTime => CLKB_dly'last_event,
                           PathDelay => tpd_CLKB_DOB9,
                           PathCondition => TRUE),
                     1 => (InputChangeTime => RSTB_dly'last_event,
                           PathDelay => tpd_RSTB_DOB9,
                           PathCondition => TRUE)),
      GlitchData => DOB9_GlitchData,
      Mode       => ondetect, XOn => XOn, MsgOn => MsgOn);
    VitalPathDelay01 (
      OutSignal => DOB10, OutSignalName => "DOB10", OutTemp => DOB10_zd,
      Paths      => (0 => (InputChangeTime => CLKB_dly'last_event,
                           PathDelay => tpd_CLKB_DOB10,
                           PathCondition => TRUE),
                     1 => (InputChangeTime => RSTB_dly'last_event,
                           PathDelay => tpd_RSTB_DOB10,
                           PathCondition => TRUE)),
      GlitchData => DOB10_GlitchData,
      Mode       => ondetect, XOn => XOn, MsgOn => MsgOn);
    VitalPathDelay01 (
      OutSignal => DOB11, OutSignalName => "DOB11", OutTemp => DOB11_zd,
      Paths      => (0 => (InputChangeTime => CLKB_dly'last_event,
                           PathDelay => tpd_CLKB_DOB11,
                           PathCondition => TRUE),
                     1 => (InputChangeTime => RSTB_dly'last_event,
                           PathDelay => tpd_RSTB_DOB11,
                           PathCondition => TRUE)),
      GlitchData => DOB11_GlitchData,
      Mode       => ondetect, XOn => XOn, MsgOn => MsgOn);
    VitalPathDelay01 (
      OutSignal => DOB12, OutSignalName => "DOB12", OutTemp => DOB12_zd,
      Paths      => (0 => (InputChangeTime => CLKB_dly'last_event,
                           PathDelay => tpd_CLKB_DOB12,
                           PathCondition => TRUE),
                     1 => (InputChangeTime => RSTB_dly'last_event,
                           PathDelay => tpd_RSTB_DOB12,
                           PathCondition => TRUE)),
      GlitchData => DOB12_GlitchData,
      Mode       => ondetect, XOn => XOn, MsgOn => MsgOn);
    VitalPathDelay01 (
      OutSignal => DOB13, OutSignalName => "DOB13", OutTemp => DOB13_zd,
      Paths      => (0 => (InputChangeTime => CLKB_dly'last_event,
                           PathDelay => tpd_CLKB_DOB13,
                           PathCondition => TRUE),
                     1 => (InputChangeTime => RSTB_dly'last_event,
                           PathDelay => tpd_RSTB_DOB13,
                           PathCondition => TRUE)),
      GlitchData => DOB13_GlitchData,
      Mode       => ondetect, XOn => XOn, MsgOn => MsgOn);
    VitalPathDelay01 (
      OutSignal => DOB14, OutSignalName => "DOB14", OutTemp => DOB14_zd,
      Paths      => (0 => (InputChangeTime => CLKB_dly'last_event,
                           PathDelay => tpd_CLKB_DOB14,
                           PathCondition => TRUE),
                     1 => (InputChangeTime => RSTB_dly'last_event,
                           PathDelay => tpd_RSTB_DOB14,
                           PathCondition => TRUE)),
      GlitchData => DOB14_GlitchData,
      Mode       => ondetect, XOn => XOn, MsgOn => MsgOn);
    VitalPathDelay01 (
      OutSignal => DOB15, OutSignalName => "DOB15", OutTemp => DOB15_zd,
      Paths      => (0 => (InputChangeTime => CLKB_dly'last_event,
                           PathDelay => tpd_CLKB_DOB15,
                           PathCondition => TRUE),
                     1 => (InputChangeTime => RSTB_dly'last_event,
                           PathDelay => tpd_RSTB_DOB15,
                           PathCondition => TRUE)),
      GlitchData => DOB15_GlitchData,
      Mode       => ondetect, XOn => XOn, MsgOn => MsgOn);

    END PROCESS;

  end Structure;

-- entity DP16KD0006
  library IEEE, vital2000, ECP5U;
  use IEEE.STD_LOGIC_1164.all;
  use vital2000.vital_timing.all;
  use ECP5U.COMPONENTS.ALL;

  entity DP16KD0006 is
    port (CEA: in Std_logic; OCEA: in Std_logic; CLKA: in Std_logic; 
          WEA: in Std_logic; CSA0: in Std_logic; CSA1: in Std_logic; 
          CSA2: in Std_logic; RSTA: in Std_logic; CEB: in Std_logic; 
          OCEB: in Std_logic; CLKB: in Std_logic; WEB: in Std_logic; 
          CSB0: in Std_logic; CSB1: in Std_logic; CSB2: in Std_logic; 
          RSTB: in Std_logic; DIA0: in Std_logic; DIA1: in Std_logic; 
          DIA2: in Std_logic; DIA3: in Std_logic; DIA4: in Std_logic; 
          DIA5: in Std_logic; DIA6: in Std_logic; DIA7: in Std_logic; 
          DIA8: in Std_logic; DIA9: in Std_logic; DIA10: in Std_logic; 
          DIA11: in Std_logic; DIA12: in Std_logic; DIA13: in Std_logic; 
          DIA14: in Std_logic; DIA15: in Std_logic; DIA16: in Std_logic; 
          DIA17: in Std_logic; ADA0: in Std_logic; ADA1: in Std_logic; 
          ADA2: in Std_logic; ADA3: in Std_logic; ADA4: in Std_logic; 
          ADA5: in Std_logic; ADA6: in Std_logic; ADA7: in Std_logic; 
          ADA8: in Std_logic; ADA9: in Std_logic; ADA10: in Std_logic; 
          ADA11: in Std_logic; ADA12: in Std_logic; ADA13: in Std_logic; 
          DIB0: in Std_logic; DIB1: in Std_logic; DIB2: in Std_logic; 
          DIB3: in Std_logic; DIB4: in Std_logic; DIB5: in Std_logic; 
          DIB6: in Std_logic; DIB7: in Std_logic; DIB8: in Std_logic; 
          DIB9: in Std_logic; DIB10: in Std_logic; DIB11: in Std_logic; 
          DIB12: in Std_logic; DIB13: in Std_logic; DIB14: in Std_logic; 
          DIB15: in Std_logic; DIB16: in Std_logic; DIB17: in Std_logic; 
          ADB0: in Std_logic; ADB1: in Std_logic; ADB2: in Std_logic; 
          ADB3: in Std_logic; ADB4: in Std_logic; ADB5: in Std_logic; 
          ADB6: in Std_logic; ADB7: in Std_logic; ADB8: in Std_logic; 
          ADB9: in Std_logic; ADB10: in Std_logic; ADB11: in Std_logic; 
          ADB12: in Std_logic; ADB13: in Std_logic; DOA0: out Std_logic; 
          DOA1: out Std_logic; DOA2: out Std_logic; DOA3: out Std_logic; 
          DOA4: out Std_logic; DOA5: out Std_logic; DOA6: out Std_logic; 
          DOA7: out Std_logic; DOA8: out Std_logic; DOA9: out Std_logic; 
          DOA10: out Std_logic; DOA11: out Std_logic; DOA12: out Std_logic; 
          DOA13: out Std_logic; DOA14: out Std_logic; DOA15: out Std_logic; 
          DOA16: out Std_logic; DOA17: out Std_logic; DOB0: out Std_logic; 
          DOB1: out Std_logic; DOB2: out Std_logic; DOB3: out Std_logic; 
          DOB4: out Std_logic; DOB5: out Std_logic; DOB6: out Std_logic; 
          DOB7: out Std_logic; DOB8: out Std_logic; DOB9: out Std_logic; 
          DOB10: out Std_logic; DOB11: out Std_logic; DOB12: out Std_logic; 
          DOB13: out Std_logic; DOB14: out Std_logic; DOB15: out Std_logic; 
          DOB16: out Std_logic; DOB17: out Std_logic);

    ATTRIBUTE Vital_Level0 OF DP16KD0006 : ENTITY IS TRUE;

  end DP16KD0006;

  architecture Structure of DP16KD0006 is
  begin
    INST10: DP16KD
      generic map (ASYNC_RESET_RELEASE => "SYNC", CSDECODE_A => "0b000", 
                   CSDECODE_B => "0b000", DATA_WIDTH_A => 18, 
                   DATA_WIDTH_B => 18, GSR => "ENABLED", 
                   INITVAL_00 => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_01 => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_02 => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_03 => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_04 => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_05 => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_06 => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_07 => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_08 => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_09 => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_0A => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_0B => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_0C => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_0D => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_0E => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_0F => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_10 => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_11 => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_12 => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_13 => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_14 => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_15 => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_16 => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_17 => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_18 => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_19 => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_1A => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_1B => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_1C => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_1D => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_1E => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_1F => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_20 => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_21 => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_22 => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_23 => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_24 => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_25 => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_26 => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_27 => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_28 => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_29 => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_2A => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_2B => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_2C => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_2D => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_2E => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_2F => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_30 => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_31 => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_32 => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_33 => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_34 => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_35 => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_36 => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_37 => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_38 => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_39 => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_3A => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_3B => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_3C => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_3D => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_3E => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_3F => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , INIT_DATA => "STATIC", REGMODE_A => "NOREG", 
                   REGMODE_B => "NOREG", RESETMODE => "ASYNC", 
                   WRITEMODE_A => "NORMAL", WRITEMODE_B => "NORMAL")
      port map (DIA0=>DIA0, DIA1=>DIA1, DIA2=>DIA2, DIA3=>DIA3, DIA4=>DIA4, 
                DIA5=>DIA5, DIA6=>DIA6, DIA7=>DIA7, DIA8=>DIA8, DIA9=>DIA9, 
                DIA10=>DIA10, DIA11=>DIA11, DIA12=>DIA12, DIA13=>DIA13, 
                DIA14=>DIA14, DIA15=>DIA15, DIA16=>DIA16, DIA17=>DIA17, 
                ADA0=>ADA0, ADA1=>ADA1, ADA2=>ADA2, ADA3=>ADA3, ADA4=>ADA4, 
                ADA5=>ADA5, ADA6=>ADA6, ADA7=>ADA7, ADA8=>ADA8, ADA9=>ADA9, 
                ADA10=>ADA10, ADA11=>ADA11, ADA12=>ADA12, ADA13=>ADA13, 
                CEA=>CEA, OCEA=>OCEA, CLKA=>CLKA, WEA=>WEA, CSA0=>CSA0, 
                CSA1=>CSA1, CSA2=>CSA2, RSTA=>RSTA, DIB0=>DIB0, DIB1=>DIB1, 
                DIB2=>DIB2, DIB3=>DIB3, DIB4=>DIB4, DIB5=>DIB5, DIB6=>DIB6, 
                DIB7=>DIB7, DIB8=>DIB8, DIB9=>DIB9, DIB10=>DIB10, DIB11=>DIB11, 
                DIB12=>DIB12, DIB13=>DIB13, DIB14=>DIB14, DIB15=>DIB15, 
                DIB16=>DIB16, DIB17=>DIB17, ADB0=>ADB0, ADB1=>ADB1, ADB2=>ADB2, 
                ADB3=>ADB3, ADB4=>ADB4, ADB5=>ADB5, ADB6=>ADB6, ADB7=>ADB7, 
                ADB8=>ADB8, ADB9=>ADB9, ADB10=>ADB10, ADB11=>ADB11, 
                ADB12=>ADB12, ADB13=>ADB13, CEB=>CEB, OCEB=>OCEB, CLKB=>CLKB, 
                WEB=>WEB, CSB0=>CSB0, CSB1=>CSB1, CSB2=>CSB2, RSTB=>RSTB, 
                DOA0=>DOA0, DOA1=>DOA1, DOA2=>DOA2, DOA3=>DOA3, DOA4=>DOA4, 
                DOA5=>DOA5, DOA6=>DOA6, DOA7=>DOA7, DOA8=>DOA8, DOA9=>DOA9, 
                DOA10=>DOA10, DOA11=>DOA11, DOA12=>DOA12, DOA13=>DOA13, 
                DOA14=>DOA14, DOA15=>DOA15, DOA16=>DOA16, DOA17=>DOA17, 
                DOB0=>DOB0, DOB1=>DOB1, DOB2=>DOB2, DOB3=>DOB3, DOB4=>DOB4, 
                DOB5=>DOB5, DOB6=>DOB6, DOB7=>DOB7, DOB8=>DOB8, DOB9=>DOB9, 
                DOB10=>DOB10, DOB11=>DOB11, DOB12=>DOB12, DOB13=>DOB13, 
                DOB14=>DOB14, DOB15=>DOB15, DOB16=>DOB16, DOB17=>DOB17);
  end Structure;

-- entity wifi_i_fifo_dc_pdp_ram_0_0_0
  library IEEE, vital2000, ECP5U;
  use IEEE.STD_LOGIC_1164.all;
  use vital2000.vital_timing.all;
  use ECP5U.COMPONENTS.ALL;

  entity wifi_i_fifo_dc_pdp_ram_0_0_0 is
    -- miscellaneous vital GENERICs
    GENERIC (
      TimingChecksOn	: boolean := TRUE;
      XOn           	: boolean := FALSE;
      MsgOn         	: boolean := TRUE;
      InstancePath  	: string := "wifi_i_fifo_dc_pdp_ram_0_0_0";

      tipd_DIA15  	: VitalDelayType01 := (0 ns, 0 ns);
      tipd_DIA14  	: VitalDelayType01 := (0 ns, 0 ns);
      tipd_DIA13  	: VitalDelayType01 := (0 ns, 0 ns);
      tipd_DIA12  	: VitalDelayType01 := (0 ns, 0 ns);
      tipd_DIA11  	: VitalDelayType01 := (0 ns, 0 ns);
      tipd_DIA10  	: VitalDelayType01 := (0 ns, 0 ns);
      tipd_DIA9  	: VitalDelayType01 := (0 ns, 0 ns);
      tipd_DIA8  	: VitalDelayType01 := (0 ns, 0 ns);
      tipd_DIA7  	: VitalDelayType01 := (0 ns, 0 ns);
      tipd_DIA6  	: VitalDelayType01 := (0 ns, 0 ns);
      tipd_DIA5  	: VitalDelayType01 := (0 ns, 0 ns);
      tipd_DIA4  	: VitalDelayType01 := (0 ns, 0 ns);
      tipd_DIA3  	: VitalDelayType01 := (0 ns, 0 ns);
      tipd_DIA2  	: VitalDelayType01 := (0 ns, 0 ns);
      tipd_DIA1  	: VitalDelayType01 := (0 ns, 0 ns);
      tipd_DIA0  	: VitalDelayType01 := (0 ns, 0 ns);
      tipd_ADA5  	: VitalDelayType01 := (0 ns, 0 ns);
      tipd_ADA4  	: VitalDelayType01 := (0 ns, 0 ns);
      tipd_CEA  	: VitalDelayType01 := (0 ns, 0 ns);
      tipd_OCEA  	: VitalDelayType01 := (0 ns, 0 ns);
      tipd_RSTA  	: VitalDelayType01 := (0 ns, 0 ns);
      tipd_CLKA  	: VitalDelayType01 := (0 ns, 0 ns);
      tipd_CLKB  	: VitalDelayType01 := (0 ns, 0 ns);
      tipd_RSTB  	: VitalDelayType01 := (0 ns, 0 ns);
      tipd_OCEB  	: VitalDelayType01 := (0 ns, 0 ns);
      tipd_CEB  	: VitalDelayType01 := (0 ns, 0 ns);
      tipd_ADB4  	: VitalDelayType01 := (0 ns, 0 ns);
      tipd_ADB5  	: VitalDelayType01 := (0 ns, 0 ns);
      tpd_CLKB_DOB0	 : VitalDelayType01 := (0 ns, 0 ns);
      tpd_CLKB_DOB1	 : VitalDelayType01 := (0 ns, 0 ns);
      tpd_CLKB_DOB2	 : VitalDelayType01 := (0 ns, 0 ns);
      tpd_CLKB_DOB3	 : VitalDelayType01 := (0 ns, 0 ns);
      tpd_CLKB_DOB4	 : VitalDelayType01 := (0 ns, 0 ns);
      tpd_CLKB_DOB5	 : VitalDelayType01 := (0 ns, 0 ns);
      tpd_CLKB_DOB6	 : VitalDelayType01 := (0 ns, 0 ns);
      tpd_CLKB_DOB7	 : VitalDelayType01 := (0 ns, 0 ns);
      tpd_CLKB_DOB8	 : VitalDelayType01 := (0 ns, 0 ns);
      tpd_CLKB_DOB9	 : VitalDelayType01 := (0 ns, 0 ns);
      tpd_CLKB_DOB10	 : VitalDelayType01 := (0 ns, 0 ns);
      tpd_CLKB_DOB11	 : VitalDelayType01 := (0 ns, 0 ns);
      tpd_CLKB_DOB12	 : VitalDelayType01 := (0 ns, 0 ns);
      tpd_CLKB_DOB13	 : VitalDelayType01 := (0 ns, 0 ns);
      tpd_CLKB_DOB14	 : VitalDelayType01 := (0 ns, 0 ns);
      tpd_CLKB_DOB15	 : VitalDelayType01 := (0 ns, 0 ns);
      tpd_RSTB_DOB0	 : VitalDelayType01 := (0 ns, 0 ns);
      tpd_RSTB_DOB1	 : VitalDelayType01 := (0 ns, 0 ns);
      tpd_RSTB_DOB2	 : VitalDelayType01 := (0 ns, 0 ns);
      tpd_RSTB_DOB3	 : VitalDelayType01 := (0 ns, 0 ns);
      tpd_RSTB_DOB4	 : VitalDelayType01 := (0 ns, 0 ns);
      tpd_RSTB_DOB5	 : VitalDelayType01 := (0 ns, 0 ns);
      tpd_RSTB_DOB6	 : VitalDelayType01 := (0 ns, 0 ns);
      tpd_RSTB_DOB7	 : VitalDelayType01 := (0 ns, 0 ns);
      tpd_RSTB_DOB8	 : VitalDelayType01 := (0 ns, 0 ns);
      tpd_RSTB_DOB9	 : VitalDelayType01 := (0 ns, 0 ns);
      tpd_RSTB_DOB10	 : VitalDelayType01 := (0 ns, 0 ns);
      tpd_RSTB_DOB11	 : VitalDelayType01 := (0 ns, 0 ns);
      tpd_RSTB_DOB12	 : VitalDelayType01 := (0 ns, 0 ns);
      tpd_RSTB_DOB13	 : VitalDelayType01 := (0 ns, 0 ns);
      tpd_RSTB_DOB14	 : VitalDelayType01 := (0 ns, 0 ns);
      tpd_RSTB_DOB15	 : VitalDelayType01 := (0 ns, 0 ns);
      ticd_CLKA	: VitalDelayType := 0 ns;
      tisd_DIA15_CLKA	: VitalDelayType := 0 ns;
      tsetup_DIA15_CLKA_noedge_posedge	: VitalDelayType := 0 ns;
      thold_DIA15_CLKA_noedge_posedge	: VitalDelayType := 0 ns;
      tisd_DIA14_CLKA	: VitalDelayType := 0 ns;
      tsetup_DIA14_CLKA_noedge_posedge	: VitalDelayType := 0 ns;
      thold_DIA14_CLKA_noedge_posedge	: VitalDelayType := 0 ns;
      tisd_DIA13_CLKA	: VitalDelayType := 0 ns;
      tsetup_DIA13_CLKA_noedge_posedge	: VitalDelayType := 0 ns;
      thold_DIA13_CLKA_noedge_posedge	: VitalDelayType := 0 ns;
      tisd_DIA12_CLKA	: VitalDelayType := 0 ns;
      tsetup_DIA12_CLKA_noedge_posedge	: VitalDelayType := 0 ns;
      thold_DIA12_CLKA_noedge_posedge	: VitalDelayType := 0 ns;
      tisd_DIA11_CLKA	: VitalDelayType := 0 ns;
      tsetup_DIA11_CLKA_noedge_posedge	: VitalDelayType := 0 ns;
      thold_DIA11_CLKA_noedge_posedge	: VitalDelayType := 0 ns;
      tisd_DIA10_CLKA	: VitalDelayType := 0 ns;
      tsetup_DIA10_CLKA_noedge_posedge	: VitalDelayType := 0 ns;
      thold_DIA10_CLKA_noedge_posedge	: VitalDelayType := 0 ns;
      tisd_DIA9_CLKA	: VitalDelayType := 0 ns;
      tsetup_DIA9_CLKA_noedge_posedge	: VitalDelayType := 0 ns;
      thold_DIA9_CLKA_noedge_posedge	: VitalDelayType := 0 ns;
      tisd_DIA8_CLKA	: VitalDelayType := 0 ns;
      tsetup_DIA8_CLKA_noedge_posedge	: VitalDelayType := 0 ns;
      thold_DIA8_CLKA_noedge_posedge	: VitalDelayType := 0 ns;
      tisd_DIA7_CLKA	: VitalDelayType := 0 ns;
      tsetup_DIA7_CLKA_noedge_posedge	: VitalDelayType := 0 ns;
      thold_DIA7_CLKA_noedge_posedge	: VitalDelayType := 0 ns;
      tisd_DIA6_CLKA	: VitalDelayType := 0 ns;
      tsetup_DIA6_CLKA_noedge_posedge	: VitalDelayType := 0 ns;
      thold_DIA6_CLKA_noedge_posedge	: VitalDelayType := 0 ns;
      tisd_DIA5_CLKA	: VitalDelayType := 0 ns;
      tsetup_DIA5_CLKA_noedge_posedge	: VitalDelayType := 0 ns;
      thold_DIA5_CLKA_noedge_posedge	: VitalDelayType := 0 ns;
      tisd_DIA4_CLKA	: VitalDelayType := 0 ns;
      tsetup_DIA4_CLKA_noedge_posedge	: VitalDelayType := 0 ns;
      thold_DIA4_CLKA_noedge_posedge	: VitalDelayType := 0 ns;
      tisd_DIA3_CLKA	: VitalDelayType := 0 ns;
      tsetup_DIA3_CLKA_noedge_posedge	: VitalDelayType := 0 ns;
      thold_DIA3_CLKA_noedge_posedge	: VitalDelayType := 0 ns;
      tisd_DIA2_CLKA	: VitalDelayType := 0 ns;
      tsetup_DIA2_CLKA_noedge_posedge	: VitalDelayType := 0 ns;
      thold_DIA2_CLKA_noedge_posedge	: VitalDelayType := 0 ns;
      tisd_DIA1_CLKA	: VitalDelayType := 0 ns;
      tsetup_DIA1_CLKA_noedge_posedge	: VitalDelayType := 0 ns;
      thold_DIA1_CLKA_noedge_posedge	: VitalDelayType := 0 ns;
      tisd_DIA0_CLKA	: VitalDelayType := 0 ns;
      tsetup_DIA0_CLKA_noedge_posedge	: VitalDelayType := 0 ns;
      thold_DIA0_CLKA_noedge_posedge	: VitalDelayType := 0 ns;
      tisd_ADA5_CLKA	: VitalDelayType := 0 ns;
      tsetup_ADA5_CLKA_noedge_posedge	: VitalDelayType := 0 ns;
      thold_ADA5_CLKA_noedge_posedge	: VitalDelayType := 0 ns;
      tisd_ADA4_CLKA	: VitalDelayType := 0 ns;
      tsetup_ADA4_CLKA_noedge_posedge	: VitalDelayType := 0 ns;
      thold_ADA4_CLKA_noedge_posedge	: VitalDelayType := 0 ns;
      tisd_CEA_CLKA	: VitalDelayType := 0 ns;
      tsetup_CEA_CLKA_noedge_posedge	: VitalDelayType := 0 ns;
      thold_CEA_CLKA_noedge_posedge	: VitalDelayType := 0 ns;
      tisd_OCEA_CLKA	: VitalDelayType := 0 ns;
      tsetup_OCEA_CLKA_noedge_posedge	: VitalDelayType := 0 ns;
      thold_OCEA_CLKA_noedge_posedge	: VitalDelayType := 0 ns;
      tisd_RSTA_CLKA	: VitalDelayType := 0 ns;
      tsetup_RSTA_CLKA_noedge_posedge	: VitalDelayType := 0 ns;
      thold_RSTA_CLKA_noedge_posedge	: VitalDelayType := 0 ns;
      ticd_CLKB	: VitalDelayType := 0 ns;
      tisd_RSTB_CLKB	: VitalDelayType := 0 ns;
      tsetup_RSTB_CLKB_noedge_posedge	: VitalDelayType := 0 ns;
      thold_RSTB_CLKB_noedge_posedge	: VitalDelayType := 0 ns;
      tisd_OCEB_CLKB	: VitalDelayType := 0 ns;
      tsetup_OCEB_CLKB_noedge_posedge	: VitalDelayType := 0 ns;
      thold_OCEB_CLKB_noedge_posedge	: VitalDelayType := 0 ns;
      tisd_CEB_CLKB	: VitalDelayType := 0 ns;
      tsetup_CEB_CLKB_noedge_posedge	: VitalDelayType := 0 ns;
      thold_CEB_CLKB_noedge_posedge	: VitalDelayType := 0 ns;
      tisd_ADB4_CLKB	: VitalDelayType := 0 ns;
      tsetup_ADB4_CLKB_noedge_posedge	: VitalDelayType := 0 ns;
      thold_ADB4_CLKB_noedge_posedge	: VitalDelayType := 0 ns;
      tisd_ADB5_CLKB	: VitalDelayType := 0 ns;
      tsetup_ADB5_CLKB_noedge_posedge	: VitalDelayType := 0 ns;
      thold_ADB5_CLKB_noedge_posedge	: VitalDelayType := 0 ns;
      tperiod_CLKA 	: VitalDelayType := 0 ns;
      tpw_CLKA_posedge	: VitalDelayType := 0 ns;
      tpw_CLKA_negedge	: VitalDelayType := 0 ns;
      tperiod_CLKB 	: VitalDelayType := 0 ns;
      tpw_CLKB_posedge	: VitalDelayType := 0 ns;
      tpw_CLKB_negedge	: VitalDelayType := 0 ns);

    port (DIA15: in Std_logic; DIA14: in Std_logic; DIA13: in Std_logic; 
          DIA12: in Std_logic; DIA11: in Std_logic; DIA10: in Std_logic; 
          DIA9: in Std_logic; DIA8: in Std_logic; DIA7: in Std_logic; 
          DIA6: in Std_logic; DIA5: in Std_logic; DIA4: in Std_logic; 
          DIA3: in Std_logic; DIA2: in Std_logic; DIA1: in Std_logic; 
          DIA0: in Std_logic; ADA5: in Std_logic; ADA4: in Std_logic; 
          CEA: in Std_logic; OCEA: in Std_logic; RSTA: in Std_logic; 
          CLKA: in Std_logic; CLKB: in Std_logic; RSTB: in Std_logic; 
          OCEB: in Std_logic; CEB: in Std_logic; DOB0: out Std_logic; 
          DOB1: out Std_logic; DOB2: out Std_logic; DOB3: out Std_logic; 
          DOB4: out Std_logic; DOB5: out Std_logic; DOB6: out Std_logic; 
          DOB7: out Std_logic; DOB8: out Std_logic; DOB9: out Std_logic; 
          DOB10: out Std_logic; DOB11: out Std_logic; DOB12: out Std_logic; 
          DOB13: out Std_logic; DOB14: out Std_logic; DOB15: out Std_logic; 
          ADB4: in Std_logic; ADB5: in Std_logic);

    ATTRIBUTE Vital_Level0 OF wifi_i_fifo_dc_pdp_ram_0_0_0 : ENTITY IS TRUE;

  end wifi_i_fifo_dc_pdp_ram_0_0_0;

  architecture Structure of wifi_i_fifo_dc_pdp_ram_0_0_0 is
    ATTRIBUTE Vital_Level0 OF Structure : ARCHITECTURE IS TRUE;

    signal DIA15_ipd 	: std_logic := 'X';
    signal DIA15_dly 	: std_logic := 'X';
    signal DIA14_ipd 	: std_logic := 'X';
    signal DIA14_dly 	: std_logic := 'X';
    signal DIA13_ipd 	: std_logic := 'X';
    signal DIA13_dly 	: std_logic := 'X';
    signal DIA12_ipd 	: std_logic := 'X';
    signal DIA12_dly 	: std_logic := 'X';
    signal DIA11_ipd 	: std_logic := 'X';
    signal DIA11_dly 	: std_logic := 'X';
    signal DIA10_ipd 	: std_logic := 'X';
    signal DIA10_dly 	: std_logic := 'X';
    signal DIA9_ipd 	: std_logic := 'X';
    signal DIA9_dly 	: std_logic := 'X';
    signal DIA8_ipd 	: std_logic := 'X';
    signal DIA8_dly 	: std_logic := 'X';
    signal DIA7_ipd 	: std_logic := 'X';
    signal DIA7_dly 	: std_logic := 'X';
    signal DIA6_ipd 	: std_logic := 'X';
    signal DIA6_dly 	: std_logic := 'X';
    signal DIA5_ipd 	: std_logic := 'X';
    signal DIA5_dly 	: std_logic := 'X';
    signal DIA4_ipd 	: std_logic := 'X';
    signal DIA4_dly 	: std_logic := 'X';
    signal DIA3_ipd 	: std_logic := 'X';
    signal DIA3_dly 	: std_logic := 'X';
    signal DIA2_ipd 	: std_logic := 'X';
    signal DIA2_dly 	: std_logic := 'X';
    signal DIA1_ipd 	: std_logic := 'X';
    signal DIA1_dly 	: std_logic := 'X';
    signal DIA0_ipd 	: std_logic := 'X';
    signal DIA0_dly 	: std_logic := 'X';
    signal ADA5_ipd 	: std_logic := 'X';
    signal ADA5_dly 	: std_logic := 'X';
    signal ADA4_ipd 	: std_logic := 'X';
    signal ADA4_dly 	: std_logic := 'X';
    signal CEA_ipd 	: std_logic := 'X';
    signal CEA_dly 	: std_logic := 'X';
    signal OCEA_ipd 	: std_logic := 'X';
    signal OCEA_dly 	: std_logic := 'X';
    signal RSTA_ipd 	: std_logic := 'X';
    signal RSTA_dly 	: std_logic := 'X';
    signal CLKA_ipd 	: std_logic := 'X';
    signal CLKA_dly 	: std_logic := 'X';
    signal CLKB_ipd 	: std_logic := 'X';
    signal CLKB_dly 	: std_logic := 'X';
    signal RSTB_ipd 	: std_logic := 'X';
    signal RSTB_dly 	: std_logic := 'X';
    signal OCEB_ipd 	: std_logic := 'X';
    signal OCEB_dly 	: std_logic := 'X';
    signal CEB_ipd 	: std_logic := 'X';
    signal CEB_dly 	: std_logic := 'X';
    signal DOB0_out 	: std_logic := 'X';
    signal DOB1_out 	: std_logic := 'X';
    signal DOB2_out 	: std_logic := 'X';
    signal DOB3_out 	: std_logic := 'X';
    signal DOB4_out 	: std_logic := 'X';
    signal DOB5_out 	: std_logic := 'X';
    signal DOB6_out 	: std_logic := 'X';
    signal DOB7_out 	: std_logic := 'X';
    signal DOB8_out 	: std_logic := 'X';
    signal DOB9_out 	: std_logic := 'X';
    signal DOB10_out 	: std_logic := 'X';
    signal DOB11_out 	: std_logic := 'X';
    signal DOB12_out 	: std_logic := 'X';
    signal DOB13_out 	: std_logic := 'X';
    signal DOB14_out 	: std_logic := 'X';
    signal DOB15_out 	: std_logic := 'X';
    signal ADB4_ipd 	: std_logic := 'X';
    signal ADB4_dly 	: std_logic := 'X';
    signal ADB5_ipd 	: std_logic := 'X';
    signal ADB5_dly 	: std_logic := 'X';

    signal VCCI: Std_logic;
    signal GNDI: Std_logic;
    signal CEB_NOTIN: Std_logic;
    signal OCEB_NOTIN: Std_logic;
    component gnd
      port (PWR0: out Std_logic);
    end component;
    component vcc
      port (PWR1: out Std_logic);
    end component;
    component inverter
      port (I: in Std_logic; Z: out Std_logic);
    end component;
    component DP16KD0006
      port (CEA: in Std_logic; OCEA: in Std_logic; CLKA: in Std_logic; 
            WEA: in Std_logic; CSA0: in Std_logic; CSA1: in Std_logic; 
            CSA2: in Std_logic; RSTA: in Std_logic; CEB: in Std_logic; 
            OCEB: in Std_logic; CLKB: in Std_logic; WEB: in Std_logic; 
            CSB0: in Std_logic; CSB1: in Std_logic; CSB2: in Std_logic; 
            RSTB: in Std_logic; DIA0: in Std_logic; DIA1: in Std_logic; 
            DIA2: in Std_logic; DIA3: in Std_logic; DIA4: in Std_logic; 
            DIA5: in Std_logic; DIA6: in Std_logic; DIA7: in Std_logic; 
            DIA8: in Std_logic; DIA9: in Std_logic; DIA10: in Std_logic; 
            DIA11: in Std_logic; DIA12: in Std_logic; DIA13: in Std_logic; 
            DIA14: in Std_logic; DIA15: in Std_logic; DIA16: in Std_logic; 
            DIA17: in Std_logic; ADA0: in Std_logic; ADA1: in Std_logic; 
            ADA2: in Std_logic; ADA3: in Std_logic; ADA4: in Std_logic; 
            ADA5: in Std_logic; ADA6: in Std_logic; ADA7: in Std_logic; 
            ADA8: in Std_logic; ADA9: in Std_logic; ADA10: in Std_logic; 
            ADA11: in Std_logic; ADA12: in Std_logic; ADA13: in Std_logic; 
            DIB0: in Std_logic; DIB1: in Std_logic; DIB2: in Std_logic; 
            DIB3: in Std_logic; DIB4: in Std_logic; DIB5: in Std_logic; 
            DIB6: in Std_logic; DIB7: in Std_logic; DIB8: in Std_logic; 
            DIB9: in Std_logic; DIB10: in Std_logic; DIB11: in Std_logic; 
            DIB12: in Std_logic; DIB13: in Std_logic; DIB14: in Std_logic; 
            DIB15: in Std_logic; DIB16: in Std_logic; DIB17: in Std_logic; 
            ADB0: in Std_logic; ADB1: in Std_logic; ADB2: in Std_logic; 
            ADB3: in Std_logic; ADB4: in Std_logic; ADB5: in Std_logic; 
            ADB6: in Std_logic; ADB7: in Std_logic; ADB8: in Std_logic; 
            ADB9: in Std_logic; ADB10: in Std_logic; ADB11: in Std_logic; 
            ADB12: in Std_logic; ADB13: in Std_logic; DOA0: out Std_logic; 
            DOA1: out Std_logic; DOA2: out Std_logic; DOA3: out Std_logic; 
            DOA4: out Std_logic; DOA5: out Std_logic; DOA6: out Std_logic; 
            DOA7: out Std_logic; DOA8: out Std_logic; DOA9: out Std_logic; 
            DOA10: out Std_logic; DOA11: out Std_logic; DOA12: out Std_logic; 
            DOA13: out Std_logic; DOA14: out Std_logic; DOA15: out Std_logic; 
            DOA16: out Std_logic; DOA17: out Std_logic; DOB0: out Std_logic; 
            DOB1: out Std_logic; DOB2: out Std_logic; DOB3: out Std_logic; 
            DOB4: out Std_logic; DOB5: out Std_logic; DOB6: out Std_logic; 
            DOB7: out Std_logic; DOB8: out Std_logic; DOB9: out Std_logic; 
            DOB10: out Std_logic; DOB11: out Std_logic; DOB12: out Std_logic; 
            DOB13: out Std_logic; DOB14: out Std_logic; DOB15: out Std_logic; 
            DOB16: out Std_logic; DOB17: out Std_logic);
    end component;
  begin
    wifi_i_fifo_dc_pdp_ram_0_0_0_DP16KD: DP16KD0006
      port map (CEA=>CEA_dly, OCEA=>OCEA_dly, CLKA=>CLKA_dly, WEA=>VCCI, 
                CSA0=>GNDI, CSA1=>GNDI, CSA2=>GNDI, RSTA=>RSTA_dly, 
                CEB=>CEB_NOTIN, OCEB=>OCEB_NOTIN, CLKB=>CLKB_dly, WEB=>GNDI, 
                CSB0=>GNDI, CSB1=>GNDI, CSB2=>GNDI, RSTB=>RSTB_dly, 
                DIA0=>DIA0_dly, DIA1=>DIA1_dly, DIA2=>DIA2_dly, DIA3=>DIA3_dly, 
                DIA4=>DIA4_dly, DIA5=>DIA5_dly, DIA6=>DIA6_dly, DIA7=>DIA7_dly, 
                DIA8=>DIA8_dly, DIA9=>DIA9_dly, DIA10=>DIA10_dly, 
                DIA11=>DIA11_dly, DIA12=>DIA12_dly, DIA13=>DIA13_dly, 
                DIA14=>DIA14_dly, DIA15=>DIA15_dly, DIA16=>GNDI, DIA17=>GNDI, 
                ADA0=>VCCI, ADA1=>VCCI, ADA2=>GNDI, ADA3=>GNDI, ADA4=>ADA4_dly, 
                ADA5=>ADA5_dly, ADA6=>GNDI, ADA7=>GNDI, ADA8=>GNDI, ADA9=>GNDI, 
                ADA10=>GNDI, ADA11=>GNDI, ADA12=>GNDI, ADA13=>GNDI, DIB0=>GNDI, 
                DIB1=>GNDI, DIB2=>GNDI, DIB3=>GNDI, DIB4=>GNDI, DIB5=>GNDI, 
                DIB6=>GNDI, DIB7=>GNDI, DIB8=>GNDI, DIB9=>GNDI, DIB10=>GNDI, 
                DIB11=>GNDI, DIB12=>GNDI, DIB13=>GNDI, DIB14=>GNDI, 
                DIB15=>GNDI, DIB16=>GNDI, DIB17=>GNDI, ADB0=>GNDI, ADB1=>GNDI, 
                ADB2=>GNDI, ADB3=>GNDI, ADB4=>ADB4_dly, ADB5=>ADB5_dly, 
                ADB6=>GNDI, ADB7=>GNDI, ADB8=>GNDI, ADB9=>GNDI, ADB10=>GNDI, 
                ADB11=>GNDI, ADB12=>GNDI, ADB13=>GNDI, DOA0=>open, DOA1=>open, 
                DOA2=>open, DOA3=>open, DOA4=>open, DOA5=>open, DOA6=>open, 
                DOA7=>open, DOA8=>open, DOA9=>open, DOA10=>open, DOA11=>open, 
                DOA12=>open, DOA13=>open, DOA14=>open, DOA15=>open, 
                DOA16=>open, DOA17=>open, DOB0=>DOB0_out, DOB1=>DOB1_out, 
                DOB2=>DOB2_out, DOB3=>DOB3_out, DOB4=>DOB4_out, DOB5=>DOB5_out, 
                DOB6=>DOB6_out, DOB7=>DOB7_out, DOB8=>DOB8_out, DOB9=>DOB9_out, 
                DOB10=>DOB10_out, DOB11=>DOB11_out, DOB12=>DOB12_out, 
                DOB13=>DOB13_out, DOB14=>DOB14_out, DOB15=>DOB15_out, 
                DOB16=>open, DOB17=>open);
    DRIVEVCC: vcc
      port map (PWR1=>VCCI);
    DRIVEGND: gnd
      port map (PWR0=>GNDI);
    CEB_INVERTERIN: inverter
      port map (I=>CEB_dly, Z=>CEB_NOTIN);
    OCEB_INVERTERIN: inverter
      port map (I=>OCEB_dly, Z=>OCEB_NOTIN);

    --  INPUT PATH DELAYs
    WireDelay : BLOCK
    BEGIN
      VitalWireDelay(DIA15_ipd, DIA15, tipd_DIA15);
      VitalWireDelay(DIA14_ipd, DIA14, tipd_DIA14);
      VitalWireDelay(DIA13_ipd, DIA13, tipd_DIA13);
      VitalWireDelay(DIA12_ipd, DIA12, tipd_DIA12);
      VitalWireDelay(DIA11_ipd, DIA11, tipd_DIA11);
      VitalWireDelay(DIA10_ipd, DIA10, tipd_DIA10);
      VitalWireDelay(DIA9_ipd, DIA9, tipd_DIA9);
      VitalWireDelay(DIA8_ipd, DIA8, tipd_DIA8);
      VitalWireDelay(DIA7_ipd, DIA7, tipd_DIA7);
      VitalWireDelay(DIA6_ipd, DIA6, tipd_DIA6);
      VitalWireDelay(DIA5_ipd, DIA5, tipd_DIA5);
      VitalWireDelay(DIA4_ipd, DIA4, tipd_DIA4);
      VitalWireDelay(DIA3_ipd, DIA3, tipd_DIA3);
      VitalWireDelay(DIA2_ipd, DIA2, tipd_DIA2);
      VitalWireDelay(DIA1_ipd, DIA1, tipd_DIA1);
      VitalWireDelay(DIA0_ipd, DIA0, tipd_DIA0);
      VitalWireDelay(ADA5_ipd, ADA5, tipd_ADA5);
      VitalWireDelay(ADA4_ipd, ADA4, tipd_ADA4);
      VitalWireDelay(CEA_ipd, CEA, tipd_CEA);
      VitalWireDelay(OCEA_ipd, OCEA, tipd_OCEA);
      VitalWireDelay(RSTA_ipd, RSTA, tipd_RSTA);
      VitalWireDelay(CLKA_ipd, CLKA, tipd_CLKA);
      VitalWireDelay(CLKB_ipd, CLKB, tipd_CLKB);
      VitalWireDelay(RSTB_ipd, RSTB, tipd_RSTB);
      VitalWireDelay(OCEB_ipd, OCEB, tipd_OCEB);
      VitalWireDelay(CEB_ipd, CEB, tipd_CEB);
      VitalWireDelay(ADB4_ipd, ADB4, tipd_ADB4);
      VitalWireDelay(ADB5_ipd, ADB5, tipd_ADB5);
    END BLOCK;

    --  Setup and Hold DELAYs
    SignalDelay : BLOCK
    BEGIN
      VitalSignalDelay(DIA15_dly, DIA15_ipd, tisd_DIA15_CLKA);
      VitalSignalDelay(DIA14_dly, DIA14_ipd, tisd_DIA14_CLKA);
      VitalSignalDelay(DIA13_dly, DIA13_ipd, tisd_DIA13_CLKA);
      VitalSignalDelay(DIA12_dly, DIA12_ipd, tisd_DIA12_CLKA);
      VitalSignalDelay(DIA11_dly, DIA11_ipd, tisd_DIA11_CLKA);
      VitalSignalDelay(DIA10_dly, DIA10_ipd, tisd_DIA10_CLKA);
      VitalSignalDelay(DIA9_dly, DIA9_ipd, tisd_DIA9_CLKA);
      VitalSignalDelay(DIA8_dly, DIA8_ipd, tisd_DIA8_CLKA);
      VitalSignalDelay(DIA7_dly, DIA7_ipd, tisd_DIA7_CLKA);
      VitalSignalDelay(DIA6_dly, DIA6_ipd, tisd_DIA6_CLKA);
      VitalSignalDelay(DIA5_dly, DIA5_ipd, tisd_DIA5_CLKA);
      VitalSignalDelay(DIA4_dly, DIA4_ipd, tisd_DIA4_CLKA);
      VitalSignalDelay(DIA3_dly, DIA3_ipd, tisd_DIA3_CLKA);
      VitalSignalDelay(DIA2_dly, DIA2_ipd, tisd_DIA2_CLKA);
      VitalSignalDelay(DIA1_dly, DIA1_ipd, tisd_DIA1_CLKA);
      VitalSignalDelay(DIA0_dly, DIA0_ipd, tisd_DIA0_CLKA);
      VitalSignalDelay(ADA5_dly, ADA5_ipd, tisd_ADA5_CLKA);
      VitalSignalDelay(ADA4_dly, ADA4_ipd, tisd_ADA4_CLKA);
      VitalSignalDelay(CEA_dly, CEA_ipd, tisd_CEA_CLKA);
      VitalSignalDelay(OCEA_dly, OCEA_ipd, tisd_OCEA_CLKA);
      VitalSignalDelay(RSTA_dly, RSTA_ipd, tisd_RSTA_CLKA);
      VitalSignalDelay(CLKA_dly, CLKA_ipd, ticd_CLKA);
      VitalSignalDelay(CLKB_dly, CLKB_ipd, ticd_CLKB);
      VitalSignalDelay(RSTB_dly, RSTB_ipd, tisd_RSTB_CLKB);
      VitalSignalDelay(OCEB_dly, OCEB_ipd, tisd_OCEB_CLKB);
      VitalSignalDelay(CEB_dly, CEB_ipd, tisd_CEB_CLKB);
      VitalSignalDelay(ADB4_dly, ADB4_ipd, tisd_ADB4_CLKB);
      VitalSignalDelay(ADB5_dly, ADB5_ipd, tisd_ADB5_CLKB);
    END BLOCK;

    VitalBehavior : PROCESS (DIA15_dly, DIA14_dly, DIA13_dly, DIA12_dly, 
      DIA11_dly, DIA10_dly, DIA9_dly, DIA8_dly, DIA7_dly, DIA6_dly, DIA5_dly, 
      DIA4_dly, DIA3_dly, DIA2_dly, DIA1_dly, DIA0_dly, ADA5_dly, ADA4_dly, 
      CEA_dly, OCEA_dly, RSTA_dly, CLKA_dly, CLKB_dly, RSTB_dly, OCEB_dly, 
      CEB_dly, DOB0_out, DOB1_out, DOB2_out, DOB3_out, DOB4_out, DOB5_out, 
      DOB6_out, DOB7_out, DOB8_out, DOB9_out, DOB10_out, DOB11_out, DOB12_out, 
      DOB13_out, DOB14_out, DOB15_out, ADB4_dly, ADB5_dly)
    VARIABLE DOB0_zd         	: std_logic := 'X';
    VARIABLE DOB0_GlitchData 	: VitalGlitchDataType;
    VARIABLE DOB1_zd         	: std_logic := 'X';
    VARIABLE DOB1_GlitchData 	: VitalGlitchDataType;
    VARIABLE DOB2_zd         	: std_logic := 'X';
    VARIABLE DOB2_GlitchData 	: VitalGlitchDataType;
    VARIABLE DOB3_zd         	: std_logic := 'X';
    VARIABLE DOB3_GlitchData 	: VitalGlitchDataType;
    VARIABLE DOB4_zd         	: std_logic := 'X';
    VARIABLE DOB4_GlitchData 	: VitalGlitchDataType;
    VARIABLE DOB5_zd         	: std_logic := 'X';
    VARIABLE DOB5_GlitchData 	: VitalGlitchDataType;
    VARIABLE DOB6_zd         	: std_logic := 'X';
    VARIABLE DOB6_GlitchData 	: VitalGlitchDataType;
    VARIABLE DOB7_zd         	: std_logic := 'X';
    VARIABLE DOB7_GlitchData 	: VitalGlitchDataType;
    VARIABLE DOB8_zd         	: std_logic := 'X';
    VARIABLE DOB8_GlitchData 	: VitalGlitchDataType;
    VARIABLE DOB9_zd         	: std_logic := 'X';
    VARIABLE DOB9_GlitchData 	: VitalGlitchDataType;
    VARIABLE DOB10_zd         	: std_logic := 'X';
    VARIABLE DOB10_GlitchData 	: VitalGlitchDataType;
    VARIABLE DOB11_zd         	: std_logic := 'X';
    VARIABLE DOB11_GlitchData 	: VitalGlitchDataType;
    VARIABLE DOB12_zd         	: std_logic := 'X';
    VARIABLE DOB12_GlitchData 	: VitalGlitchDataType;
    VARIABLE DOB13_zd         	: std_logic := 'X';
    VARIABLE DOB13_GlitchData 	: VitalGlitchDataType;
    VARIABLE DOB14_zd         	: std_logic := 'X';
    VARIABLE DOB14_GlitchData 	: VitalGlitchDataType;
    VARIABLE DOB15_zd         	: std_logic := 'X';
    VARIABLE DOB15_GlitchData 	: VitalGlitchDataType;

    VARIABLE tviol_DIA15_CLKA       	: x01 := '0';
    VARIABLE DIA15_CLKA_TimingDatash	: VitalTimingDataType;
    VARIABLE tviol_DIA14_CLKA       	: x01 := '0';
    VARIABLE DIA14_CLKA_TimingDatash	: VitalTimingDataType;
    VARIABLE tviol_DIA13_CLKA       	: x01 := '0';
    VARIABLE DIA13_CLKA_TimingDatash	: VitalTimingDataType;
    VARIABLE tviol_DIA12_CLKA       	: x01 := '0';
    VARIABLE DIA12_CLKA_TimingDatash	: VitalTimingDataType;
    VARIABLE tviol_DIA11_CLKA       	: x01 := '0';
    VARIABLE DIA11_CLKA_TimingDatash	: VitalTimingDataType;
    VARIABLE tviol_DIA10_CLKA       	: x01 := '0';
    VARIABLE DIA10_CLKA_TimingDatash	: VitalTimingDataType;
    VARIABLE tviol_DIA9_CLKA       	: x01 := '0';
    VARIABLE DIA9_CLKA_TimingDatash	: VitalTimingDataType;
    VARIABLE tviol_DIA8_CLKA       	: x01 := '0';
    VARIABLE DIA8_CLKA_TimingDatash	: VitalTimingDataType;
    VARIABLE tviol_DIA7_CLKA       	: x01 := '0';
    VARIABLE DIA7_CLKA_TimingDatash	: VitalTimingDataType;
    VARIABLE tviol_DIA6_CLKA       	: x01 := '0';
    VARIABLE DIA6_CLKA_TimingDatash	: VitalTimingDataType;
    VARIABLE tviol_DIA5_CLKA       	: x01 := '0';
    VARIABLE DIA5_CLKA_TimingDatash	: VitalTimingDataType;
    VARIABLE tviol_DIA4_CLKA       	: x01 := '0';
    VARIABLE DIA4_CLKA_TimingDatash	: VitalTimingDataType;
    VARIABLE tviol_DIA3_CLKA       	: x01 := '0';
    VARIABLE DIA3_CLKA_TimingDatash	: VitalTimingDataType;
    VARIABLE tviol_DIA2_CLKA       	: x01 := '0';
    VARIABLE DIA2_CLKA_TimingDatash	: VitalTimingDataType;
    VARIABLE tviol_DIA1_CLKA       	: x01 := '0';
    VARIABLE DIA1_CLKA_TimingDatash	: VitalTimingDataType;
    VARIABLE tviol_DIA0_CLKA       	: x01 := '0';
    VARIABLE DIA0_CLKA_TimingDatash	: VitalTimingDataType;
    VARIABLE tviol_ADA5_CLKA       	: x01 := '0';
    VARIABLE ADA5_CLKA_TimingDatash	: VitalTimingDataType;
    VARIABLE tviol_ADA4_CLKA       	: x01 := '0';
    VARIABLE ADA4_CLKA_TimingDatash	: VitalTimingDataType;
    VARIABLE tviol_CEA_CLKA       	: x01 := '0';
    VARIABLE CEA_CLKA_TimingDatash	: VitalTimingDataType;
    VARIABLE tviol_OCEA_CLKA       	: x01 := '0';
    VARIABLE OCEA_CLKA_TimingDatash	: VitalTimingDataType;
    VARIABLE tviol_RSTA_CLKA       	: x01 := '0';
    VARIABLE RSTA_CLKA_TimingDatash	: VitalTimingDataType;
    VARIABLE tviol_RSTB_CLKB       	: x01 := '0';
    VARIABLE RSTB_CLKB_TimingDatash	: VitalTimingDataType;
    VARIABLE tviol_OCEB_CLKB       	: x01 := '0';
    VARIABLE OCEB_CLKB_TimingDatash	: VitalTimingDataType;
    VARIABLE tviol_CEB_CLKB       	: x01 := '0';
    VARIABLE CEB_CLKB_TimingDatash	: VitalTimingDataType;
    VARIABLE tviol_ADB4_CLKB       	: x01 := '0';
    VARIABLE ADB4_CLKB_TimingDatash	: VitalTimingDataType;
    VARIABLE tviol_ADB5_CLKB       	: x01 := '0';
    VARIABLE ADB5_CLKB_TimingDatash	: VitalTimingDataType;
    VARIABLE tviol_CLKA_CLKA          	: x01 := '0';
    VARIABLE periodcheckinfo_CLKA	: VitalPeriodDataType;
    VARIABLE tviol_CLKB_CLKB          	: x01 := '0';
    VARIABLE periodcheckinfo_CLKB	: VitalPeriodDataType;

    BEGIN

    IF (TimingChecksOn) THEN
      VitalSetupHoldCheck (
        TestSignal => DIA15_dly,
        TestSignalName => "DIA15",
        TestDelay => tisd_DIA15_CLKA,
        RefSignal => CLKA_dly,
        RefSignalName => "CLKA",
        RefDelay => ticd_CLKA,
        SetupHigh => tsetup_DIA15_CLKA_noedge_posedge,
        SetupLow => tsetup_DIA15_CLKA_noedge_posedge,
        HoldHigh => thold_DIA15_CLKA_noedge_posedge,
        HoldLow => thold_DIA15_CLKA_noedge_posedge,
        CheckEnabled => TRUE,
        RefTransition => '/',
        MsgOn => MsgOn, XOn => XOn,
        HeaderMsg => InstancePath,
        TimingData => DIA15_CLKA_TimingDatash,
        Violation => tviol_DIA15_CLKA,
        MsgSeverity => warning);
      VitalSetupHoldCheck (
        TestSignal => DIA14_dly,
        TestSignalName => "DIA14",
        TestDelay => tisd_DIA14_CLKA,
        RefSignal => CLKA_dly,
        RefSignalName => "CLKA",
        RefDelay => ticd_CLKA,
        SetupHigh => tsetup_DIA14_CLKA_noedge_posedge,
        SetupLow => tsetup_DIA14_CLKA_noedge_posedge,
        HoldHigh => thold_DIA14_CLKA_noedge_posedge,
        HoldLow => thold_DIA14_CLKA_noedge_posedge,
        CheckEnabled => TRUE,
        RefTransition => '/',
        MsgOn => MsgOn, XOn => XOn,
        HeaderMsg => InstancePath,
        TimingData => DIA14_CLKA_TimingDatash,
        Violation => tviol_DIA14_CLKA,
        MsgSeverity => warning);
      VitalSetupHoldCheck (
        TestSignal => DIA13_dly,
        TestSignalName => "DIA13",
        TestDelay => tisd_DIA13_CLKA,
        RefSignal => CLKA_dly,
        RefSignalName => "CLKA",
        RefDelay => ticd_CLKA,
        SetupHigh => tsetup_DIA13_CLKA_noedge_posedge,
        SetupLow => tsetup_DIA13_CLKA_noedge_posedge,
        HoldHigh => thold_DIA13_CLKA_noedge_posedge,
        HoldLow => thold_DIA13_CLKA_noedge_posedge,
        CheckEnabled => TRUE,
        RefTransition => '/',
        MsgOn => MsgOn, XOn => XOn,
        HeaderMsg => InstancePath,
        TimingData => DIA13_CLKA_TimingDatash,
        Violation => tviol_DIA13_CLKA,
        MsgSeverity => warning);
      VitalSetupHoldCheck (
        TestSignal => DIA12_dly,
        TestSignalName => "DIA12",
        TestDelay => tisd_DIA12_CLKA,
        RefSignal => CLKA_dly,
        RefSignalName => "CLKA",
        RefDelay => ticd_CLKA,
        SetupHigh => tsetup_DIA12_CLKA_noedge_posedge,
        SetupLow => tsetup_DIA12_CLKA_noedge_posedge,
        HoldHigh => thold_DIA12_CLKA_noedge_posedge,
        HoldLow => thold_DIA12_CLKA_noedge_posedge,
        CheckEnabled => TRUE,
        RefTransition => '/',
        MsgOn => MsgOn, XOn => XOn,
        HeaderMsg => InstancePath,
        TimingData => DIA12_CLKA_TimingDatash,
        Violation => tviol_DIA12_CLKA,
        MsgSeverity => warning);
      VitalSetupHoldCheck (
        TestSignal => DIA11_dly,
        TestSignalName => "DIA11",
        TestDelay => tisd_DIA11_CLKA,
        RefSignal => CLKA_dly,
        RefSignalName => "CLKA",
        RefDelay => ticd_CLKA,
        SetupHigh => tsetup_DIA11_CLKA_noedge_posedge,
        SetupLow => tsetup_DIA11_CLKA_noedge_posedge,
        HoldHigh => thold_DIA11_CLKA_noedge_posedge,
        HoldLow => thold_DIA11_CLKA_noedge_posedge,
        CheckEnabled => TRUE,
        RefTransition => '/',
        MsgOn => MsgOn, XOn => XOn,
        HeaderMsg => InstancePath,
        TimingData => DIA11_CLKA_TimingDatash,
        Violation => tviol_DIA11_CLKA,
        MsgSeverity => warning);
      VitalSetupHoldCheck (
        TestSignal => DIA10_dly,
        TestSignalName => "DIA10",
        TestDelay => tisd_DIA10_CLKA,
        RefSignal => CLKA_dly,
        RefSignalName => "CLKA",
        RefDelay => ticd_CLKA,
        SetupHigh => tsetup_DIA10_CLKA_noedge_posedge,
        SetupLow => tsetup_DIA10_CLKA_noedge_posedge,
        HoldHigh => thold_DIA10_CLKA_noedge_posedge,
        HoldLow => thold_DIA10_CLKA_noedge_posedge,
        CheckEnabled => TRUE,
        RefTransition => '/',
        MsgOn => MsgOn, XOn => XOn,
        HeaderMsg => InstancePath,
        TimingData => DIA10_CLKA_TimingDatash,
        Violation => tviol_DIA10_CLKA,
        MsgSeverity => warning);
      VitalSetupHoldCheck (
        TestSignal => DIA9_dly,
        TestSignalName => "DIA9",
        TestDelay => tisd_DIA9_CLKA,
        RefSignal => CLKA_dly,
        RefSignalName => "CLKA",
        RefDelay => ticd_CLKA,
        SetupHigh => tsetup_DIA9_CLKA_noedge_posedge,
        SetupLow => tsetup_DIA9_CLKA_noedge_posedge,
        HoldHigh => thold_DIA9_CLKA_noedge_posedge,
        HoldLow => thold_DIA9_CLKA_noedge_posedge,
        CheckEnabled => TRUE,
        RefTransition => '/',
        MsgOn => MsgOn, XOn => XOn,
        HeaderMsg => InstancePath,
        TimingData => DIA9_CLKA_TimingDatash,
        Violation => tviol_DIA9_CLKA,
        MsgSeverity => warning);
      VitalSetupHoldCheck (
        TestSignal => DIA8_dly,
        TestSignalName => "DIA8",
        TestDelay => tisd_DIA8_CLKA,
        RefSignal => CLKA_dly,
        RefSignalName => "CLKA",
        RefDelay => ticd_CLKA,
        SetupHigh => tsetup_DIA8_CLKA_noedge_posedge,
        SetupLow => tsetup_DIA8_CLKA_noedge_posedge,
        HoldHigh => thold_DIA8_CLKA_noedge_posedge,
        HoldLow => thold_DIA8_CLKA_noedge_posedge,
        CheckEnabled => TRUE,
        RefTransition => '/',
        MsgOn => MsgOn, XOn => XOn,
        HeaderMsg => InstancePath,
        TimingData => DIA8_CLKA_TimingDatash,
        Violation => tviol_DIA8_CLKA,
        MsgSeverity => warning);
      VitalSetupHoldCheck (
        TestSignal => DIA7_dly,
        TestSignalName => "DIA7",
        TestDelay => tisd_DIA7_CLKA,
        RefSignal => CLKA_dly,
        RefSignalName => "CLKA",
        RefDelay => ticd_CLKA,
        SetupHigh => tsetup_DIA7_CLKA_noedge_posedge,
        SetupLow => tsetup_DIA7_CLKA_noedge_posedge,
        HoldHigh => thold_DIA7_CLKA_noedge_posedge,
        HoldLow => thold_DIA7_CLKA_noedge_posedge,
        CheckEnabled => TRUE,
        RefTransition => '/',
        MsgOn => MsgOn, XOn => XOn,
        HeaderMsg => InstancePath,
        TimingData => DIA7_CLKA_TimingDatash,
        Violation => tviol_DIA7_CLKA,
        MsgSeverity => warning);
      VitalSetupHoldCheck (
        TestSignal => DIA6_dly,
        TestSignalName => "DIA6",
        TestDelay => tisd_DIA6_CLKA,
        RefSignal => CLKA_dly,
        RefSignalName => "CLKA",
        RefDelay => ticd_CLKA,
        SetupHigh => tsetup_DIA6_CLKA_noedge_posedge,
        SetupLow => tsetup_DIA6_CLKA_noedge_posedge,
        HoldHigh => thold_DIA6_CLKA_noedge_posedge,
        HoldLow => thold_DIA6_CLKA_noedge_posedge,
        CheckEnabled => TRUE,
        RefTransition => '/',
        MsgOn => MsgOn, XOn => XOn,
        HeaderMsg => InstancePath,
        TimingData => DIA6_CLKA_TimingDatash,
        Violation => tviol_DIA6_CLKA,
        MsgSeverity => warning);
      VitalSetupHoldCheck (
        TestSignal => DIA5_dly,
        TestSignalName => "DIA5",
        TestDelay => tisd_DIA5_CLKA,
        RefSignal => CLKA_dly,
        RefSignalName => "CLKA",
        RefDelay => ticd_CLKA,
        SetupHigh => tsetup_DIA5_CLKA_noedge_posedge,
        SetupLow => tsetup_DIA5_CLKA_noedge_posedge,
        HoldHigh => thold_DIA5_CLKA_noedge_posedge,
        HoldLow => thold_DIA5_CLKA_noedge_posedge,
        CheckEnabled => TRUE,
        RefTransition => '/',
        MsgOn => MsgOn, XOn => XOn,
        HeaderMsg => InstancePath,
        TimingData => DIA5_CLKA_TimingDatash,
        Violation => tviol_DIA5_CLKA,
        MsgSeverity => warning);
      VitalSetupHoldCheck (
        TestSignal => DIA4_dly,
        TestSignalName => "DIA4",
        TestDelay => tisd_DIA4_CLKA,
        RefSignal => CLKA_dly,
        RefSignalName => "CLKA",
        RefDelay => ticd_CLKA,
        SetupHigh => tsetup_DIA4_CLKA_noedge_posedge,
        SetupLow => tsetup_DIA4_CLKA_noedge_posedge,
        HoldHigh => thold_DIA4_CLKA_noedge_posedge,
        HoldLow => thold_DIA4_CLKA_noedge_posedge,
        CheckEnabled => TRUE,
        RefTransition => '/',
        MsgOn => MsgOn, XOn => XOn,
        HeaderMsg => InstancePath,
        TimingData => DIA4_CLKA_TimingDatash,
        Violation => tviol_DIA4_CLKA,
        MsgSeverity => warning);
      VitalSetupHoldCheck (
        TestSignal => DIA3_dly,
        TestSignalName => "DIA3",
        TestDelay => tisd_DIA3_CLKA,
        RefSignal => CLKA_dly,
        RefSignalName => "CLKA",
        RefDelay => ticd_CLKA,
        SetupHigh => tsetup_DIA3_CLKA_noedge_posedge,
        SetupLow => tsetup_DIA3_CLKA_noedge_posedge,
        HoldHigh => thold_DIA3_CLKA_noedge_posedge,
        HoldLow => thold_DIA3_CLKA_noedge_posedge,
        CheckEnabled => TRUE,
        RefTransition => '/',
        MsgOn => MsgOn, XOn => XOn,
        HeaderMsg => InstancePath,
        TimingData => DIA3_CLKA_TimingDatash,
        Violation => tviol_DIA3_CLKA,
        MsgSeverity => warning);
      VitalSetupHoldCheck (
        TestSignal => DIA2_dly,
        TestSignalName => "DIA2",
        TestDelay => tisd_DIA2_CLKA,
        RefSignal => CLKA_dly,
        RefSignalName => "CLKA",
        RefDelay => ticd_CLKA,
        SetupHigh => tsetup_DIA2_CLKA_noedge_posedge,
        SetupLow => tsetup_DIA2_CLKA_noedge_posedge,
        HoldHigh => thold_DIA2_CLKA_noedge_posedge,
        HoldLow => thold_DIA2_CLKA_noedge_posedge,
        CheckEnabled => TRUE,
        RefTransition => '/',
        MsgOn => MsgOn, XOn => XOn,
        HeaderMsg => InstancePath,
        TimingData => DIA2_CLKA_TimingDatash,
        Violation => tviol_DIA2_CLKA,
        MsgSeverity => warning);
      VitalSetupHoldCheck (
        TestSignal => DIA1_dly,
        TestSignalName => "DIA1",
        TestDelay => tisd_DIA1_CLKA,
        RefSignal => CLKA_dly,
        RefSignalName => "CLKA",
        RefDelay => ticd_CLKA,
        SetupHigh => tsetup_DIA1_CLKA_noedge_posedge,
        SetupLow => tsetup_DIA1_CLKA_noedge_posedge,
        HoldHigh => thold_DIA1_CLKA_noedge_posedge,
        HoldLow => thold_DIA1_CLKA_noedge_posedge,
        CheckEnabled => TRUE,
        RefTransition => '/',
        MsgOn => MsgOn, XOn => XOn,
        HeaderMsg => InstancePath,
        TimingData => DIA1_CLKA_TimingDatash,
        Violation => tviol_DIA1_CLKA,
        MsgSeverity => warning);
      VitalSetupHoldCheck (
        TestSignal => DIA0_dly,
        TestSignalName => "DIA0",
        TestDelay => tisd_DIA0_CLKA,
        RefSignal => CLKA_dly,
        RefSignalName => "CLKA",
        RefDelay => ticd_CLKA,
        SetupHigh => tsetup_DIA0_CLKA_noedge_posedge,
        SetupLow => tsetup_DIA0_CLKA_noedge_posedge,
        HoldHigh => thold_DIA0_CLKA_noedge_posedge,
        HoldLow => thold_DIA0_CLKA_noedge_posedge,
        CheckEnabled => TRUE,
        RefTransition => '/',
        MsgOn => MsgOn, XOn => XOn,
        HeaderMsg => InstancePath,
        TimingData => DIA0_CLKA_TimingDatash,
        Violation => tviol_DIA0_CLKA,
        MsgSeverity => warning);
      VitalSetupHoldCheck (
        TestSignal => ADA5_dly,
        TestSignalName => "ADA5",
        TestDelay => tisd_ADA5_CLKA,
        RefSignal => CLKA_dly,
        RefSignalName => "CLKA",
        RefDelay => ticd_CLKA,
        SetupHigh => tsetup_ADA5_CLKA_noedge_posedge,
        SetupLow => tsetup_ADA5_CLKA_noedge_posedge,
        HoldHigh => thold_ADA5_CLKA_noedge_posedge,
        HoldLow => thold_ADA5_CLKA_noedge_posedge,
        CheckEnabled => TRUE,
        RefTransition => '/',
        MsgOn => MsgOn, XOn => XOn,
        HeaderMsg => InstancePath,
        TimingData => ADA5_CLKA_TimingDatash,
        Violation => tviol_ADA5_CLKA,
        MsgSeverity => warning);
      VitalSetupHoldCheck (
        TestSignal => ADA4_dly,
        TestSignalName => "ADA4",
        TestDelay => tisd_ADA4_CLKA,
        RefSignal => CLKA_dly,
        RefSignalName => "CLKA",
        RefDelay => ticd_CLKA,
        SetupHigh => tsetup_ADA4_CLKA_noedge_posedge,
        SetupLow => tsetup_ADA4_CLKA_noedge_posedge,
        HoldHigh => thold_ADA4_CLKA_noedge_posedge,
        HoldLow => thold_ADA4_CLKA_noedge_posedge,
        CheckEnabled => TRUE,
        RefTransition => '/',
        MsgOn => MsgOn, XOn => XOn,
        HeaderMsg => InstancePath,
        TimingData => ADA4_CLKA_TimingDatash,
        Violation => tviol_ADA4_CLKA,
        MsgSeverity => warning);
      VitalSetupHoldCheck (
        TestSignal => CEA_dly,
        TestSignalName => "CEA",
        TestDelay => tisd_CEA_CLKA,
        RefSignal => CLKA_dly,
        RefSignalName => "CLKA",
        RefDelay => ticd_CLKA,
        SetupHigh => tsetup_CEA_CLKA_noedge_posedge,
        SetupLow => tsetup_CEA_CLKA_noedge_posedge,
        HoldHigh => thold_CEA_CLKA_noedge_posedge,
        HoldLow => thold_CEA_CLKA_noedge_posedge,
        CheckEnabled => TRUE,
        RefTransition => '/',
        MsgOn => MsgOn, XOn => XOn,
        HeaderMsg => InstancePath,
        TimingData => CEA_CLKA_TimingDatash,
        Violation => tviol_CEA_CLKA,
        MsgSeverity => warning);
      VitalSetupHoldCheck (
        TestSignal => OCEA_dly,
        TestSignalName => "OCEA",
        TestDelay => tisd_OCEA_CLKA,
        RefSignal => CLKA_dly,
        RefSignalName => "CLKA",
        RefDelay => ticd_CLKA,
        SetupHigh => tsetup_OCEA_CLKA_noedge_posedge,
        SetupLow => tsetup_OCEA_CLKA_noedge_posedge,
        HoldHigh => thold_OCEA_CLKA_noedge_posedge,
        HoldLow => thold_OCEA_CLKA_noedge_posedge,
        CheckEnabled => TRUE,
        RefTransition => '/',
        MsgOn => MsgOn, XOn => XOn,
        HeaderMsg => InstancePath,
        TimingData => OCEA_CLKA_TimingDatash,
        Violation => tviol_OCEA_CLKA,
        MsgSeverity => warning);
      VitalSetupHoldCheck (
        TestSignal => RSTA_dly,
        TestSignalName => "RSTA",
        TestDelay => tisd_RSTA_CLKA,
        RefSignal => CLKA_dly,
        RefSignalName => "CLKA",
        RefDelay => ticd_CLKA,
        SetupHigh => tsetup_RSTA_CLKA_noedge_posedge,
        SetupLow => tsetup_RSTA_CLKA_noedge_posedge,
        HoldHigh => thold_RSTA_CLKA_noedge_posedge,
        HoldLow => thold_RSTA_CLKA_noedge_posedge,
        CheckEnabled => TRUE,
        RefTransition => '/',
        MsgOn => MsgOn, XOn => XOn,
        HeaderMsg => InstancePath,
        TimingData => RSTA_CLKA_TimingDatash,
        Violation => tviol_RSTA_CLKA,
        MsgSeverity => warning);
      VitalSetupHoldCheck (
        TestSignal => RSTB_dly,
        TestSignalName => "RSTB",
        TestDelay => tisd_RSTB_CLKB,
        RefSignal => CLKB_dly,
        RefSignalName => "CLKB",
        RefDelay => ticd_CLKB,
        SetupHigh => tsetup_RSTB_CLKB_noedge_posedge,
        SetupLow => tsetup_RSTB_CLKB_noedge_posedge,
        HoldHigh => thold_RSTB_CLKB_noedge_posedge,
        HoldLow => thold_RSTB_CLKB_noedge_posedge,
        CheckEnabled => TRUE,
        RefTransition => '/',
        MsgOn => MsgOn, XOn => XOn,
        HeaderMsg => InstancePath,
        TimingData => RSTB_CLKB_TimingDatash,
        Violation => tviol_RSTB_CLKB,
        MsgSeverity => warning);
      VitalSetupHoldCheck (
        TestSignal => OCEB_dly,
        TestSignalName => "OCEB",
        TestDelay => tisd_OCEB_CLKB,
        RefSignal => CLKB_dly,
        RefSignalName => "CLKB",
        RefDelay => ticd_CLKB,
        SetupHigh => tsetup_OCEB_CLKB_noedge_posedge,
        SetupLow => tsetup_OCEB_CLKB_noedge_posedge,
        HoldHigh => thold_OCEB_CLKB_noedge_posedge,
        HoldLow => thold_OCEB_CLKB_noedge_posedge,
        CheckEnabled => TRUE,
        RefTransition => '/',
        MsgOn => MsgOn, XOn => XOn,
        HeaderMsg => InstancePath,
        TimingData => OCEB_CLKB_TimingDatash,
        Violation => tviol_OCEB_CLKB,
        MsgSeverity => warning);
      VitalSetupHoldCheck (
        TestSignal => CEB_dly,
        TestSignalName => "CEB",
        TestDelay => tisd_CEB_CLKB,
        RefSignal => CLKB_dly,
        RefSignalName => "CLKB",
        RefDelay => ticd_CLKB,
        SetupHigh => tsetup_CEB_CLKB_noedge_posedge,
        SetupLow => tsetup_CEB_CLKB_noedge_posedge,
        HoldHigh => thold_CEB_CLKB_noedge_posedge,
        HoldLow => thold_CEB_CLKB_noedge_posedge,
        CheckEnabled => TRUE,
        RefTransition => '/',
        MsgOn => MsgOn, XOn => XOn,
        HeaderMsg => InstancePath,
        TimingData => CEB_CLKB_TimingDatash,
        Violation => tviol_CEB_CLKB,
        MsgSeverity => warning);
      VitalSetupHoldCheck (
        TestSignal => ADB4_dly,
        TestSignalName => "ADB4",
        TestDelay => tisd_ADB4_CLKB,
        RefSignal => CLKB_dly,
        RefSignalName => "CLKB",
        RefDelay => ticd_CLKB,
        SetupHigh => tsetup_ADB4_CLKB_noedge_posedge,
        SetupLow => tsetup_ADB4_CLKB_noedge_posedge,
        HoldHigh => thold_ADB4_CLKB_noedge_posedge,
        HoldLow => thold_ADB4_CLKB_noedge_posedge,
        CheckEnabled => TRUE,
        RefTransition => '/',
        MsgOn => MsgOn, XOn => XOn,
        HeaderMsg => InstancePath,
        TimingData => ADB4_CLKB_TimingDatash,
        Violation => tviol_ADB4_CLKB,
        MsgSeverity => warning);
      VitalSetupHoldCheck (
        TestSignal => ADB5_dly,
        TestSignalName => "ADB5",
        TestDelay => tisd_ADB5_CLKB,
        RefSignal => CLKB_dly,
        RefSignalName => "CLKB",
        RefDelay => ticd_CLKB,
        SetupHigh => tsetup_ADB5_CLKB_noedge_posedge,
        SetupLow => tsetup_ADB5_CLKB_noedge_posedge,
        HoldHigh => thold_ADB5_CLKB_noedge_posedge,
        HoldLow => thold_ADB5_CLKB_noedge_posedge,
        CheckEnabled => TRUE,
        RefTransition => '/',
        MsgOn => MsgOn, XOn => XOn,
        HeaderMsg => InstancePath,
        TimingData => ADB5_CLKB_TimingDatash,
        Violation => tviol_ADB5_CLKB,
        MsgSeverity => warning);
      VitalPeriodPulseCheck (
        TestSignal => CLKA_ipd,
        TestSignalName => "CLKA",
        Period => tperiod_CLKA,
        PulseWidthHigh => tpw_CLKA_posedge,
        PulseWidthLow => tpw_CLKA_negedge,
        PeriodData => periodcheckinfo_CLKA,
        Violation => tviol_CLKA_CLKA,
        MsgOn => MsgOn, XOn => XOn,
        HeaderMsg => InstancePath,
        CheckEnabled => TRUE,
        MsgSeverity => warning);
      VitalPeriodPulseCheck (
        TestSignal => CLKB_ipd,
        TestSignalName => "CLKB",
        Period => tperiod_CLKB,
        PulseWidthHigh => tpw_CLKB_posedge,
        PulseWidthLow => tpw_CLKB_negedge,
        PeriodData => periodcheckinfo_CLKB,
        Violation => tviol_CLKB_CLKB,
        MsgOn => MsgOn, XOn => XOn,
        HeaderMsg => InstancePath,
        CheckEnabled => TRUE,
        MsgSeverity => warning);

    END IF;

    DOB0_zd 	:= DOB0_out;
    DOB1_zd 	:= DOB1_out;
    DOB2_zd 	:= DOB2_out;
    DOB3_zd 	:= DOB3_out;
    DOB4_zd 	:= DOB4_out;
    DOB5_zd 	:= DOB5_out;
    DOB6_zd 	:= DOB6_out;
    DOB7_zd 	:= DOB7_out;
    DOB8_zd 	:= DOB8_out;
    DOB9_zd 	:= DOB9_out;
    DOB10_zd 	:= DOB10_out;
    DOB11_zd 	:= DOB11_out;
    DOB12_zd 	:= DOB12_out;
    DOB13_zd 	:= DOB13_out;
    DOB14_zd 	:= DOB14_out;
    DOB15_zd 	:= DOB15_out;

    VitalPathDelay01 (
      OutSignal => DOB0, OutSignalName => "DOB0", OutTemp => DOB0_zd,
      Paths      => (0 => (InputChangeTime => CLKB_dly'last_event,
                           PathDelay => tpd_CLKB_DOB0,
                           PathCondition => TRUE),
                     1 => (InputChangeTime => RSTB_dly'last_event,
                           PathDelay => tpd_RSTB_DOB0,
                           PathCondition => TRUE)),
      GlitchData => DOB0_GlitchData,
      Mode       => ondetect, XOn => XOn, MsgOn => MsgOn);
    VitalPathDelay01 (
      OutSignal => DOB1, OutSignalName => "DOB1", OutTemp => DOB1_zd,
      Paths      => (0 => (InputChangeTime => CLKB_dly'last_event,
                           PathDelay => tpd_CLKB_DOB1,
                           PathCondition => TRUE),
                     1 => (InputChangeTime => RSTB_dly'last_event,
                           PathDelay => tpd_RSTB_DOB1,
                           PathCondition => TRUE)),
      GlitchData => DOB1_GlitchData,
      Mode       => ondetect, XOn => XOn, MsgOn => MsgOn);
    VitalPathDelay01 (
      OutSignal => DOB2, OutSignalName => "DOB2", OutTemp => DOB2_zd,
      Paths      => (0 => (InputChangeTime => CLKB_dly'last_event,
                           PathDelay => tpd_CLKB_DOB2,
                           PathCondition => TRUE),
                     1 => (InputChangeTime => RSTB_dly'last_event,
                           PathDelay => tpd_RSTB_DOB2,
                           PathCondition => TRUE)),
      GlitchData => DOB2_GlitchData,
      Mode       => ondetect, XOn => XOn, MsgOn => MsgOn);
    VitalPathDelay01 (
      OutSignal => DOB3, OutSignalName => "DOB3", OutTemp => DOB3_zd,
      Paths      => (0 => (InputChangeTime => CLKB_dly'last_event,
                           PathDelay => tpd_CLKB_DOB3,
                           PathCondition => TRUE),
                     1 => (InputChangeTime => RSTB_dly'last_event,
                           PathDelay => tpd_RSTB_DOB3,
                           PathCondition => TRUE)),
      GlitchData => DOB3_GlitchData,
      Mode       => ondetect, XOn => XOn, MsgOn => MsgOn);
    VitalPathDelay01 (
      OutSignal => DOB4, OutSignalName => "DOB4", OutTemp => DOB4_zd,
      Paths      => (0 => (InputChangeTime => CLKB_dly'last_event,
                           PathDelay => tpd_CLKB_DOB4,
                           PathCondition => TRUE),
                     1 => (InputChangeTime => RSTB_dly'last_event,
                           PathDelay => tpd_RSTB_DOB4,
                           PathCondition => TRUE)),
      GlitchData => DOB4_GlitchData,
      Mode       => ondetect, XOn => XOn, MsgOn => MsgOn);
    VitalPathDelay01 (
      OutSignal => DOB5, OutSignalName => "DOB5", OutTemp => DOB5_zd,
      Paths      => (0 => (InputChangeTime => CLKB_dly'last_event,
                           PathDelay => tpd_CLKB_DOB5,
                           PathCondition => TRUE),
                     1 => (InputChangeTime => RSTB_dly'last_event,
                           PathDelay => tpd_RSTB_DOB5,
                           PathCondition => TRUE)),
      GlitchData => DOB5_GlitchData,
      Mode       => ondetect, XOn => XOn, MsgOn => MsgOn);
    VitalPathDelay01 (
      OutSignal => DOB6, OutSignalName => "DOB6", OutTemp => DOB6_zd,
      Paths      => (0 => (InputChangeTime => CLKB_dly'last_event,
                           PathDelay => tpd_CLKB_DOB6,
                           PathCondition => TRUE),
                     1 => (InputChangeTime => RSTB_dly'last_event,
                           PathDelay => tpd_RSTB_DOB6,
                           PathCondition => TRUE)),
      GlitchData => DOB6_GlitchData,
      Mode       => ondetect, XOn => XOn, MsgOn => MsgOn);
    VitalPathDelay01 (
      OutSignal => DOB7, OutSignalName => "DOB7", OutTemp => DOB7_zd,
      Paths      => (0 => (InputChangeTime => CLKB_dly'last_event,
                           PathDelay => tpd_CLKB_DOB7,
                           PathCondition => TRUE),
                     1 => (InputChangeTime => RSTB_dly'last_event,
                           PathDelay => tpd_RSTB_DOB7,
                           PathCondition => TRUE)),
      GlitchData => DOB7_GlitchData,
      Mode       => ondetect, XOn => XOn, MsgOn => MsgOn);
    VitalPathDelay01 (
      OutSignal => DOB8, OutSignalName => "DOB8", OutTemp => DOB8_zd,
      Paths      => (0 => (InputChangeTime => CLKB_dly'last_event,
                           PathDelay => tpd_CLKB_DOB8,
                           PathCondition => TRUE),
                     1 => (InputChangeTime => RSTB_dly'last_event,
                           PathDelay => tpd_RSTB_DOB8,
                           PathCondition => TRUE)),
      GlitchData => DOB8_GlitchData,
      Mode       => ondetect, XOn => XOn, MsgOn => MsgOn);
    VitalPathDelay01 (
      OutSignal => DOB9, OutSignalName => "DOB9", OutTemp => DOB9_zd,
      Paths      => (0 => (InputChangeTime => CLKB_dly'last_event,
                           PathDelay => tpd_CLKB_DOB9,
                           PathCondition => TRUE),
                     1 => (InputChangeTime => RSTB_dly'last_event,
                           PathDelay => tpd_RSTB_DOB9,
                           PathCondition => TRUE)),
      GlitchData => DOB9_GlitchData,
      Mode       => ondetect, XOn => XOn, MsgOn => MsgOn);
    VitalPathDelay01 (
      OutSignal => DOB10, OutSignalName => "DOB10", OutTemp => DOB10_zd,
      Paths      => (0 => (InputChangeTime => CLKB_dly'last_event,
                           PathDelay => tpd_CLKB_DOB10,
                           PathCondition => TRUE),
                     1 => (InputChangeTime => RSTB_dly'last_event,
                           PathDelay => tpd_RSTB_DOB10,
                           PathCondition => TRUE)),
      GlitchData => DOB10_GlitchData,
      Mode       => ondetect, XOn => XOn, MsgOn => MsgOn);
    VitalPathDelay01 (
      OutSignal => DOB11, OutSignalName => "DOB11", OutTemp => DOB11_zd,
      Paths      => (0 => (InputChangeTime => CLKB_dly'last_event,
                           PathDelay => tpd_CLKB_DOB11,
                           PathCondition => TRUE),
                     1 => (InputChangeTime => RSTB_dly'last_event,
                           PathDelay => tpd_RSTB_DOB11,
                           PathCondition => TRUE)),
      GlitchData => DOB11_GlitchData,
      Mode       => ondetect, XOn => XOn, MsgOn => MsgOn);
    VitalPathDelay01 (
      OutSignal => DOB12, OutSignalName => "DOB12", OutTemp => DOB12_zd,
      Paths      => (0 => (InputChangeTime => CLKB_dly'last_event,
                           PathDelay => tpd_CLKB_DOB12,
                           PathCondition => TRUE),
                     1 => (InputChangeTime => RSTB_dly'last_event,
                           PathDelay => tpd_RSTB_DOB12,
                           PathCondition => TRUE)),
      GlitchData => DOB12_GlitchData,
      Mode       => ondetect, XOn => XOn, MsgOn => MsgOn);
    VitalPathDelay01 (
      OutSignal => DOB13, OutSignalName => "DOB13", OutTemp => DOB13_zd,
      Paths      => (0 => (InputChangeTime => CLKB_dly'last_event,
                           PathDelay => tpd_CLKB_DOB13,
                           PathCondition => TRUE),
                     1 => (InputChangeTime => RSTB_dly'last_event,
                           PathDelay => tpd_RSTB_DOB13,
                           PathCondition => TRUE)),
      GlitchData => DOB13_GlitchData,
      Mode       => ondetect, XOn => XOn, MsgOn => MsgOn);
    VitalPathDelay01 (
      OutSignal => DOB14, OutSignalName => "DOB14", OutTemp => DOB14_zd,
      Paths      => (0 => (InputChangeTime => CLKB_dly'last_event,
                           PathDelay => tpd_CLKB_DOB14,
                           PathCondition => TRUE),
                     1 => (InputChangeTime => RSTB_dly'last_event,
                           PathDelay => tpd_RSTB_DOB14,
                           PathCondition => TRUE)),
      GlitchData => DOB14_GlitchData,
      Mode       => ondetect, XOn => XOn, MsgOn => MsgOn);
    VitalPathDelay01 (
      OutSignal => DOB15, OutSignalName => "DOB15", OutTemp => DOB15_zd,
      Paths      => (0 => (InputChangeTime => CLKB_dly'last_event,
                           PathDelay => tpd_CLKB_DOB15,
                           PathCondition => TRUE),
                     1 => (InputChangeTime => RSTB_dly'last_event,
                           PathDelay => tpd_RSTB_DOB15,
                           PathCondition => TRUE)),
      GlitchData => DOB15_GlitchData,
      Mode       => ondetect, XOn => XOn, MsgOn => MsgOn);

    END PROCESS;

  end Structure;

-- entity DP16KD0007
  library IEEE, vital2000, ECP5U;
  use IEEE.STD_LOGIC_1164.all;
  use vital2000.vital_timing.all;
  use ECP5U.COMPONENTS.ALL;

  entity DP16KD0007 is
    port (CEA: in Std_logic; OCEA: in Std_logic; CLKA: in Std_logic; 
          WEA: in Std_logic; CSA0: in Std_logic; CSA1: in Std_logic; 
          CSA2: in Std_logic; RSTA: in Std_logic; CEB: in Std_logic; 
          OCEB: in Std_logic; CLKB: in Std_logic; WEB: in Std_logic; 
          CSB0: in Std_logic; CSB1: in Std_logic; CSB2: in Std_logic; 
          RSTB: in Std_logic; DIA0: in Std_logic; DIA1: in Std_logic; 
          DIA2: in Std_logic; DIA3: in Std_logic; DIA4: in Std_logic; 
          DIA5: in Std_logic; DIA6: in Std_logic; DIA7: in Std_logic; 
          DIA8: in Std_logic; DIA9: in Std_logic; DIA10: in Std_logic; 
          DIA11: in Std_logic; DIA12: in Std_logic; DIA13: in Std_logic; 
          DIA14: in Std_logic; DIA15: in Std_logic; DIA16: in Std_logic; 
          DIA17: in Std_logic; ADA0: in Std_logic; ADA1: in Std_logic; 
          ADA2: in Std_logic; ADA3: in Std_logic; ADA4: in Std_logic; 
          ADA5: in Std_logic; ADA6: in Std_logic; ADA7: in Std_logic; 
          ADA8: in Std_logic; ADA9: in Std_logic; ADA10: in Std_logic; 
          ADA11: in Std_logic; ADA12: in Std_logic; ADA13: in Std_logic; 
          DIB0: in Std_logic; DIB1: in Std_logic; DIB2: in Std_logic; 
          DIB3: in Std_logic; DIB4: in Std_logic; DIB5: in Std_logic; 
          DIB6: in Std_logic; DIB7: in Std_logic; DIB8: in Std_logic; 
          DIB9: in Std_logic; DIB10: in Std_logic; DIB11: in Std_logic; 
          DIB12: in Std_logic; DIB13: in Std_logic; DIB14: in Std_logic; 
          DIB15: in Std_logic; DIB16: in Std_logic; DIB17: in Std_logic; 
          ADB0: in Std_logic; ADB1: in Std_logic; ADB2: in Std_logic; 
          ADB3: in Std_logic; ADB4: in Std_logic; ADB5: in Std_logic; 
          ADB6: in Std_logic; ADB7: in Std_logic; ADB8: in Std_logic; 
          ADB9: in Std_logic; ADB10: in Std_logic; ADB11: in Std_logic; 
          ADB12: in Std_logic; ADB13: in Std_logic; DOA0: out Std_logic; 
          DOA1: out Std_logic; DOA2: out Std_logic; DOA3: out Std_logic; 
          DOA4: out Std_logic; DOA5: out Std_logic; DOA6: out Std_logic; 
          DOA7: out Std_logic; DOA8: out Std_logic; DOA9: out Std_logic; 
          DOA10: out Std_logic; DOA11: out Std_logic; DOA12: out Std_logic; 
          DOA13: out Std_logic; DOA14: out Std_logic; DOA15: out Std_logic; 
          DOA16: out Std_logic; DOA17: out Std_logic; DOB0: out Std_logic; 
          DOB1: out Std_logic; DOB2: out Std_logic; DOB3: out Std_logic; 
          DOB4: out Std_logic; DOB5: out Std_logic; DOB6: out Std_logic; 
          DOB7: out Std_logic; DOB8: out Std_logic; DOB9: out Std_logic; 
          DOB10: out Std_logic; DOB11: out Std_logic; DOB12: out Std_logic; 
          DOB13: out Std_logic; DOB14: out Std_logic; DOB15: out Std_logic; 
          DOB16: out Std_logic; DOB17: out Std_logic);

    ATTRIBUTE Vital_Level0 OF DP16KD0007 : ENTITY IS TRUE;

  end DP16KD0007;

  architecture Structure of DP16KD0007 is
  begin
    INST10: DP16KD
      generic map (ASYNC_RESET_RELEASE => "SYNC", CSDECODE_A => "0b000", 
                   CSDECODE_B => "0b000", DATA_WIDTH_A => 18, 
                   DATA_WIDTH_B => 18, GSR => "ENABLED", 
                   INITVAL_00 => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_01 => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_02 => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_03 => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_04 => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_05 => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_06 => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_07 => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_08 => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_09 => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_0A => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_0B => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_0C => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_0D => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_0E => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_0F => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_10 => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_11 => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_12 => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_13 => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_14 => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_15 => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_16 => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_17 => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_18 => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_19 => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_1A => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_1B => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_1C => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_1D => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_1E => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_1F => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_20 => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_21 => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_22 => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_23 => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_24 => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_25 => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_26 => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_27 => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_28 => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_29 => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_2A => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_2B => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_2C => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_2D => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_2E => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_2F => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_30 => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_31 => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_32 => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_33 => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_34 => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_35 => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_36 => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_37 => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_38 => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_39 => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_3A => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_3B => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_3C => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_3D => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_3E => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_3F => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , INIT_DATA => "STATIC", REGMODE_A => "NOREG", 
                   REGMODE_B => "NOREG", RESETMODE => "ASYNC", 
                   WRITEMODE_A => "NORMAL", WRITEMODE_B => "NORMAL")
      port map (DIA0=>DIA0, DIA1=>DIA1, DIA2=>DIA2, DIA3=>DIA3, DIA4=>DIA4, 
                DIA5=>DIA5, DIA6=>DIA6, DIA7=>DIA7, DIA8=>DIA8, DIA9=>DIA9, 
                DIA10=>DIA10, DIA11=>DIA11, DIA12=>DIA12, DIA13=>DIA13, 
                DIA14=>DIA14, DIA15=>DIA15, DIA16=>DIA16, DIA17=>DIA17, 
                ADA0=>ADA0, ADA1=>ADA1, ADA2=>ADA2, ADA3=>ADA3, ADA4=>ADA4, 
                ADA5=>ADA5, ADA6=>ADA6, ADA7=>ADA7, ADA8=>ADA8, ADA9=>ADA9, 
                ADA10=>ADA10, ADA11=>ADA11, ADA12=>ADA12, ADA13=>ADA13, 
                CEA=>CEA, OCEA=>OCEA, CLKA=>CLKA, WEA=>WEA, CSA0=>CSA0, 
                CSA1=>CSA1, CSA2=>CSA2, RSTA=>RSTA, DIB0=>DIB0, DIB1=>DIB1, 
                DIB2=>DIB2, DIB3=>DIB3, DIB4=>DIB4, DIB5=>DIB5, DIB6=>DIB6, 
                DIB7=>DIB7, DIB8=>DIB8, DIB9=>DIB9, DIB10=>DIB10, DIB11=>DIB11, 
                DIB12=>DIB12, DIB13=>DIB13, DIB14=>DIB14, DIB15=>DIB15, 
                DIB16=>DIB16, DIB17=>DIB17, ADB0=>ADB0, ADB1=>ADB1, ADB2=>ADB2, 
                ADB3=>ADB3, ADB4=>ADB4, ADB5=>ADB5, ADB6=>ADB6, ADB7=>ADB7, 
                ADB8=>ADB8, ADB9=>ADB9, ADB10=>ADB10, ADB11=>ADB11, 
                ADB12=>ADB12, ADB13=>ADB13, CEB=>CEB, OCEB=>OCEB, CLKB=>CLKB, 
                WEB=>WEB, CSB0=>CSB0, CSB1=>CSB1, CSB2=>CSB2, RSTB=>RSTB, 
                DOA0=>DOA0, DOA1=>DOA1, DOA2=>DOA2, DOA3=>DOA3, DOA4=>DOA4, 
                DOA5=>DOA5, DOA6=>DOA6, DOA7=>DOA7, DOA8=>DOA8, DOA9=>DOA9, 
                DOA10=>DOA10, DOA11=>DOA11, DOA12=>DOA12, DOA13=>DOA13, 
                DOA14=>DOA14, DOA15=>DOA15, DOA16=>DOA16, DOA17=>DOA17, 
                DOB0=>DOB0, DOB1=>DOB1, DOB2=>DOB2, DOB3=>DOB3, DOB4=>DOB4, 
                DOB5=>DOB5, DOB6=>DOB6, DOB7=>DOB7, DOB8=>DOB8, DOB9=>DOB9, 
                DOB10=>DOB10, DOB11=>DOB11, DOB12=>DOB12, DOB13=>DOB13, 
                DOB14=>DOB14, DOB15=>DOB15, DOB16=>DOB16, DOB17=>DOB17);
  end Structure;

-- entity subg_q_fifo_dc_pdp_ram_0_0_0
  library IEEE, vital2000, ECP5U;
  use IEEE.STD_LOGIC_1164.all;
  use vital2000.vital_timing.all;
  use ECP5U.COMPONENTS.ALL;

  entity subg_q_fifo_dc_pdp_ram_0_0_0 is
    -- miscellaneous vital GENERICs
    GENERIC (
      TimingChecksOn	: boolean := TRUE;
      XOn           	: boolean := FALSE;
      MsgOn         	: boolean := TRUE;
      InstancePath  	: string := "subg_q_fifo_dc_pdp_ram_0_0_0";

      tipd_DIA15  	: VitalDelayType01 := (0 ns, 0 ns);
      tipd_DIA14  	: VitalDelayType01 := (0 ns, 0 ns);
      tipd_DIA13  	: VitalDelayType01 := (0 ns, 0 ns);
      tipd_DIA12  	: VitalDelayType01 := (0 ns, 0 ns);
      tipd_DIA11  	: VitalDelayType01 := (0 ns, 0 ns);
      tipd_DIA10  	: VitalDelayType01 := (0 ns, 0 ns);
      tipd_DIA9  	: VitalDelayType01 := (0 ns, 0 ns);
      tipd_DIA8  	: VitalDelayType01 := (0 ns, 0 ns);
      tipd_DIA7  	: VitalDelayType01 := (0 ns, 0 ns);
      tipd_DIA6  	: VitalDelayType01 := (0 ns, 0 ns);
      tipd_DIA5  	: VitalDelayType01 := (0 ns, 0 ns);
      tipd_DIA4  	: VitalDelayType01 := (0 ns, 0 ns);
      tipd_DIA3  	: VitalDelayType01 := (0 ns, 0 ns);
      tipd_DIA2  	: VitalDelayType01 := (0 ns, 0 ns);
      tipd_DIA1  	: VitalDelayType01 := (0 ns, 0 ns);
      tipd_DIA0  	: VitalDelayType01 := (0 ns, 0 ns);
      tipd_ADA5  	: VitalDelayType01 := (0 ns, 0 ns);
      tipd_ADA4  	: VitalDelayType01 := (0 ns, 0 ns);
      tipd_CEA  	: VitalDelayType01 := (0 ns, 0 ns);
      tipd_OCEA  	: VitalDelayType01 := (0 ns, 0 ns);
      tipd_RSTA  	: VitalDelayType01 := (0 ns, 0 ns);
      tipd_CLKA  	: VitalDelayType01 := (0 ns, 0 ns);
      tipd_CLKB  	: VitalDelayType01 := (0 ns, 0 ns);
      tipd_RSTB  	: VitalDelayType01 := (0 ns, 0 ns);
      tipd_OCEB  	: VitalDelayType01 := (0 ns, 0 ns);
      tipd_CEB  	: VitalDelayType01 := (0 ns, 0 ns);
      tipd_ADB4  	: VitalDelayType01 := (0 ns, 0 ns);
      tipd_ADB5  	: VitalDelayType01 := (0 ns, 0 ns);
      tpd_CLKB_DOB0	 : VitalDelayType01 := (0 ns, 0 ns);
      tpd_CLKB_DOB1	 : VitalDelayType01 := (0 ns, 0 ns);
      tpd_CLKB_DOB2	 : VitalDelayType01 := (0 ns, 0 ns);
      tpd_CLKB_DOB3	 : VitalDelayType01 := (0 ns, 0 ns);
      tpd_CLKB_DOB4	 : VitalDelayType01 := (0 ns, 0 ns);
      tpd_CLKB_DOB5	 : VitalDelayType01 := (0 ns, 0 ns);
      tpd_CLKB_DOB6	 : VitalDelayType01 := (0 ns, 0 ns);
      tpd_CLKB_DOB7	 : VitalDelayType01 := (0 ns, 0 ns);
      tpd_CLKB_DOB8	 : VitalDelayType01 := (0 ns, 0 ns);
      tpd_CLKB_DOB9	 : VitalDelayType01 := (0 ns, 0 ns);
      tpd_CLKB_DOB10	 : VitalDelayType01 := (0 ns, 0 ns);
      tpd_CLKB_DOB11	 : VitalDelayType01 := (0 ns, 0 ns);
      tpd_CLKB_DOB12	 : VitalDelayType01 := (0 ns, 0 ns);
      tpd_CLKB_DOB13	 : VitalDelayType01 := (0 ns, 0 ns);
      tpd_CLKB_DOB14	 : VitalDelayType01 := (0 ns, 0 ns);
      tpd_CLKB_DOB15	 : VitalDelayType01 := (0 ns, 0 ns);
      tpd_RSTB_DOB0	 : VitalDelayType01 := (0 ns, 0 ns);
      tpd_RSTB_DOB1	 : VitalDelayType01 := (0 ns, 0 ns);
      tpd_RSTB_DOB2	 : VitalDelayType01 := (0 ns, 0 ns);
      tpd_RSTB_DOB3	 : VitalDelayType01 := (0 ns, 0 ns);
      tpd_RSTB_DOB4	 : VitalDelayType01 := (0 ns, 0 ns);
      tpd_RSTB_DOB5	 : VitalDelayType01 := (0 ns, 0 ns);
      tpd_RSTB_DOB6	 : VitalDelayType01 := (0 ns, 0 ns);
      tpd_RSTB_DOB7	 : VitalDelayType01 := (0 ns, 0 ns);
      tpd_RSTB_DOB8	 : VitalDelayType01 := (0 ns, 0 ns);
      tpd_RSTB_DOB9	 : VitalDelayType01 := (0 ns, 0 ns);
      tpd_RSTB_DOB10	 : VitalDelayType01 := (0 ns, 0 ns);
      tpd_RSTB_DOB11	 : VitalDelayType01 := (0 ns, 0 ns);
      tpd_RSTB_DOB12	 : VitalDelayType01 := (0 ns, 0 ns);
      tpd_RSTB_DOB13	 : VitalDelayType01 := (0 ns, 0 ns);
      tpd_RSTB_DOB14	 : VitalDelayType01 := (0 ns, 0 ns);
      tpd_RSTB_DOB15	 : VitalDelayType01 := (0 ns, 0 ns);
      ticd_CLKA	: VitalDelayType := 0 ns;
      tisd_DIA15_CLKA	: VitalDelayType := 0 ns;
      tsetup_DIA15_CLKA_noedge_posedge	: VitalDelayType := 0 ns;
      thold_DIA15_CLKA_noedge_posedge	: VitalDelayType := 0 ns;
      tisd_DIA14_CLKA	: VitalDelayType := 0 ns;
      tsetup_DIA14_CLKA_noedge_posedge	: VitalDelayType := 0 ns;
      thold_DIA14_CLKA_noedge_posedge	: VitalDelayType := 0 ns;
      tisd_DIA13_CLKA	: VitalDelayType := 0 ns;
      tsetup_DIA13_CLKA_noedge_posedge	: VitalDelayType := 0 ns;
      thold_DIA13_CLKA_noedge_posedge	: VitalDelayType := 0 ns;
      tisd_DIA12_CLKA	: VitalDelayType := 0 ns;
      tsetup_DIA12_CLKA_noedge_posedge	: VitalDelayType := 0 ns;
      thold_DIA12_CLKA_noedge_posedge	: VitalDelayType := 0 ns;
      tisd_DIA11_CLKA	: VitalDelayType := 0 ns;
      tsetup_DIA11_CLKA_noedge_posedge	: VitalDelayType := 0 ns;
      thold_DIA11_CLKA_noedge_posedge	: VitalDelayType := 0 ns;
      tisd_DIA10_CLKA	: VitalDelayType := 0 ns;
      tsetup_DIA10_CLKA_noedge_posedge	: VitalDelayType := 0 ns;
      thold_DIA10_CLKA_noedge_posedge	: VitalDelayType := 0 ns;
      tisd_DIA9_CLKA	: VitalDelayType := 0 ns;
      tsetup_DIA9_CLKA_noedge_posedge	: VitalDelayType := 0 ns;
      thold_DIA9_CLKA_noedge_posedge	: VitalDelayType := 0 ns;
      tisd_DIA8_CLKA	: VitalDelayType := 0 ns;
      tsetup_DIA8_CLKA_noedge_posedge	: VitalDelayType := 0 ns;
      thold_DIA8_CLKA_noedge_posedge	: VitalDelayType := 0 ns;
      tisd_DIA7_CLKA	: VitalDelayType := 0 ns;
      tsetup_DIA7_CLKA_noedge_posedge	: VitalDelayType := 0 ns;
      thold_DIA7_CLKA_noedge_posedge	: VitalDelayType := 0 ns;
      tisd_DIA6_CLKA	: VitalDelayType := 0 ns;
      tsetup_DIA6_CLKA_noedge_posedge	: VitalDelayType := 0 ns;
      thold_DIA6_CLKA_noedge_posedge	: VitalDelayType := 0 ns;
      tisd_DIA5_CLKA	: VitalDelayType := 0 ns;
      tsetup_DIA5_CLKA_noedge_posedge	: VitalDelayType := 0 ns;
      thold_DIA5_CLKA_noedge_posedge	: VitalDelayType := 0 ns;
      tisd_DIA4_CLKA	: VitalDelayType := 0 ns;
      tsetup_DIA4_CLKA_noedge_posedge	: VitalDelayType := 0 ns;
      thold_DIA4_CLKA_noedge_posedge	: VitalDelayType := 0 ns;
      tisd_DIA3_CLKA	: VitalDelayType := 0 ns;
      tsetup_DIA3_CLKA_noedge_posedge	: VitalDelayType := 0 ns;
      thold_DIA3_CLKA_noedge_posedge	: VitalDelayType := 0 ns;
      tisd_DIA2_CLKA	: VitalDelayType := 0 ns;
      tsetup_DIA2_CLKA_noedge_posedge	: VitalDelayType := 0 ns;
      thold_DIA2_CLKA_noedge_posedge	: VitalDelayType := 0 ns;
      tisd_DIA1_CLKA	: VitalDelayType := 0 ns;
      tsetup_DIA1_CLKA_noedge_posedge	: VitalDelayType := 0 ns;
      thold_DIA1_CLKA_noedge_posedge	: VitalDelayType := 0 ns;
      tisd_DIA0_CLKA	: VitalDelayType := 0 ns;
      tsetup_DIA0_CLKA_noedge_posedge	: VitalDelayType := 0 ns;
      thold_DIA0_CLKA_noedge_posedge	: VitalDelayType := 0 ns;
      tisd_ADA5_CLKA	: VitalDelayType := 0 ns;
      tsetup_ADA5_CLKA_noedge_posedge	: VitalDelayType := 0 ns;
      thold_ADA5_CLKA_noedge_posedge	: VitalDelayType := 0 ns;
      tisd_ADA4_CLKA	: VitalDelayType := 0 ns;
      tsetup_ADA4_CLKA_noedge_posedge	: VitalDelayType := 0 ns;
      thold_ADA4_CLKA_noedge_posedge	: VitalDelayType := 0 ns;
      tisd_CEA_CLKA	: VitalDelayType := 0 ns;
      tsetup_CEA_CLKA_noedge_posedge	: VitalDelayType := 0 ns;
      thold_CEA_CLKA_noedge_posedge	: VitalDelayType := 0 ns;
      tisd_OCEA_CLKA	: VitalDelayType := 0 ns;
      tsetup_OCEA_CLKA_noedge_posedge	: VitalDelayType := 0 ns;
      thold_OCEA_CLKA_noedge_posedge	: VitalDelayType := 0 ns;
      tisd_RSTA_CLKA	: VitalDelayType := 0 ns;
      tsetup_RSTA_CLKA_noedge_posedge	: VitalDelayType := 0 ns;
      thold_RSTA_CLKA_noedge_posedge	: VitalDelayType := 0 ns;
      ticd_CLKB	: VitalDelayType := 0 ns;
      tisd_RSTB_CLKB	: VitalDelayType := 0 ns;
      tsetup_RSTB_CLKB_noedge_posedge	: VitalDelayType := 0 ns;
      thold_RSTB_CLKB_noedge_posedge	: VitalDelayType := 0 ns;
      tisd_OCEB_CLKB	: VitalDelayType := 0 ns;
      tsetup_OCEB_CLKB_noedge_posedge	: VitalDelayType := 0 ns;
      thold_OCEB_CLKB_noedge_posedge	: VitalDelayType := 0 ns;
      tisd_CEB_CLKB	: VitalDelayType := 0 ns;
      tsetup_CEB_CLKB_noedge_posedge	: VitalDelayType := 0 ns;
      thold_CEB_CLKB_noedge_posedge	: VitalDelayType := 0 ns;
      tisd_ADB4_CLKB	: VitalDelayType := 0 ns;
      tsetup_ADB4_CLKB_noedge_posedge	: VitalDelayType := 0 ns;
      thold_ADB4_CLKB_noedge_posedge	: VitalDelayType := 0 ns;
      tisd_ADB5_CLKB	: VitalDelayType := 0 ns;
      tsetup_ADB5_CLKB_noedge_posedge	: VitalDelayType := 0 ns;
      thold_ADB5_CLKB_noedge_posedge	: VitalDelayType := 0 ns;
      tperiod_CLKA 	: VitalDelayType := 0 ns;
      tpw_CLKA_posedge	: VitalDelayType := 0 ns;
      tpw_CLKA_negedge	: VitalDelayType := 0 ns;
      tperiod_CLKB 	: VitalDelayType := 0 ns;
      tpw_CLKB_posedge	: VitalDelayType := 0 ns;
      tpw_CLKB_negedge	: VitalDelayType := 0 ns);

    port (DIA15: in Std_logic; DIA14: in Std_logic; DIA13: in Std_logic; 
          DIA12: in Std_logic; DIA11: in Std_logic; DIA10: in Std_logic; 
          DIA9: in Std_logic; DIA8: in Std_logic; DIA7: in Std_logic; 
          DIA6: in Std_logic; DIA5: in Std_logic; DIA4: in Std_logic; 
          DIA3: in Std_logic; DIA2: in Std_logic; DIA1: in Std_logic; 
          DIA0: in Std_logic; ADA5: in Std_logic; ADA4: in Std_logic; 
          CEA: in Std_logic; OCEA: in Std_logic; RSTA: in Std_logic; 
          CLKA: in Std_logic; CLKB: in Std_logic; RSTB: in Std_logic; 
          OCEB: in Std_logic; CEB: in Std_logic; DOB0: out Std_logic; 
          DOB1: out Std_logic; DOB2: out Std_logic; DOB3: out Std_logic; 
          DOB4: out Std_logic; DOB5: out Std_logic; DOB6: out Std_logic; 
          DOB7: out Std_logic; DOB8: out Std_logic; DOB9: out Std_logic; 
          DOB10: out Std_logic; DOB11: out Std_logic; DOB12: out Std_logic; 
          DOB13: out Std_logic; DOB14: out Std_logic; DOB15: out Std_logic; 
          ADB4: in Std_logic; ADB5: in Std_logic);

    ATTRIBUTE Vital_Level0 OF subg_q_fifo_dc_pdp_ram_0_0_0 : ENTITY IS TRUE;

  end subg_q_fifo_dc_pdp_ram_0_0_0;

  architecture Structure of subg_q_fifo_dc_pdp_ram_0_0_0 is
    ATTRIBUTE Vital_Level0 OF Structure : ARCHITECTURE IS TRUE;

    signal DIA15_ipd 	: std_logic := 'X';
    signal DIA15_dly 	: std_logic := 'X';
    signal DIA14_ipd 	: std_logic := 'X';
    signal DIA14_dly 	: std_logic := 'X';
    signal DIA13_ipd 	: std_logic := 'X';
    signal DIA13_dly 	: std_logic := 'X';
    signal DIA12_ipd 	: std_logic := 'X';
    signal DIA12_dly 	: std_logic := 'X';
    signal DIA11_ipd 	: std_logic := 'X';
    signal DIA11_dly 	: std_logic := 'X';
    signal DIA10_ipd 	: std_logic := 'X';
    signal DIA10_dly 	: std_logic := 'X';
    signal DIA9_ipd 	: std_logic := 'X';
    signal DIA9_dly 	: std_logic := 'X';
    signal DIA8_ipd 	: std_logic := 'X';
    signal DIA8_dly 	: std_logic := 'X';
    signal DIA7_ipd 	: std_logic := 'X';
    signal DIA7_dly 	: std_logic := 'X';
    signal DIA6_ipd 	: std_logic := 'X';
    signal DIA6_dly 	: std_logic := 'X';
    signal DIA5_ipd 	: std_logic := 'X';
    signal DIA5_dly 	: std_logic := 'X';
    signal DIA4_ipd 	: std_logic := 'X';
    signal DIA4_dly 	: std_logic := 'X';
    signal DIA3_ipd 	: std_logic := 'X';
    signal DIA3_dly 	: std_logic := 'X';
    signal DIA2_ipd 	: std_logic := 'X';
    signal DIA2_dly 	: std_logic := 'X';
    signal DIA1_ipd 	: std_logic := 'X';
    signal DIA1_dly 	: std_logic := 'X';
    signal DIA0_ipd 	: std_logic := 'X';
    signal DIA0_dly 	: std_logic := 'X';
    signal ADA5_ipd 	: std_logic := 'X';
    signal ADA5_dly 	: std_logic := 'X';
    signal ADA4_ipd 	: std_logic := 'X';
    signal ADA4_dly 	: std_logic := 'X';
    signal CEA_ipd 	: std_logic := 'X';
    signal CEA_dly 	: std_logic := 'X';
    signal OCEA_ipd 	: std_logic := 'X';
    signal OCEA_dly 	: std_logic := 'X';
    signal RSTA_ipd 	: std_logic := 'X';
    signal RSTA_dly 	: std_logic := 'X';
    signal CLKA_ipd 	: std_logic := 'X';
    signal CLKA_dly 	: std_logic := 'X';
    signal CLKB_ipd 	: std_logic := 'X';
    signal CLKB_dly 	: std_logic := 'X';
    signal RSTB_ipd 	: std_logic := 'X';
    signal RSTB_dly 	: std_logic := 'X';
    signal OCEB_ipd 	: std_logic := 'X';
    signal OCEB_dly 	: std_logic := 'X';
    signal CEB_ipd 	: std_logic := 'X';
    signal CEB_dly 	: std_logic := 'X';
    signal DOB0_out 	: std_logic := 'X';
    signal DOB1_out 	: std_logic := 'X';
    signal DOB2_out 	: std_logic := 'X';
    signal DOB3_out 	: std_logic := 'X';
    signal DOB4_out 	: std_logic := 'X';
    signal DOB5_out 	: std_logic := 'X';
    signal DOB6_out 	: std_logic := 'X';
    signal DOB7_out 	: std_logic := 'X';
    signal DOB8_out 	: std_logic := 'X';
    signal DOB9_out 	: std_logic := 'X';
    signal DOB10_out 	: std_logic := 'X';
    signal DOB11_out 	: std_logic := 'X';
    signal DOB12_out 	: std_logic := 'X';
    signal DOB13_out 	: std_logic := 'X';
    signal DOB14_out 	: std_logic := 'X';
    signal DOB15_out 	: std_logic := 'X';
    signal ADB4_ipd 	: std_logic := 'X';
    signal ADB4_dly 	: std_logic := 'X';
    signal ADB5_ipd 	: std_logic := 'X';
    signal ADB5_dly 	: std_logic := 'X';

    signal VCCI: Std_logic;
    signal GNDI: Std_logic;
    signal CEB_NOTIN: Std_logic;
    signal OCEB_NOTIN: Std_logic;
    component gnd
      port (PWR0: out Std_logic);
    end component;
    component vcc
      port (PWR1: out Std_logic);
    end component;
    component inverter
      port (I: in Std_logic; Z: out Std_logic);
    end component;
    component DP16KD0007
      port (CEA: in Std_logic; OCEA: in Std_logic; CLKA: in Std_logic; 
            WEA: in Std_logic; CSA0: in Std_logic; CSA1: in Std_logic; 
            CSA2: in Std_logic; RSTA: in Std_logic; CEB: in Std_logic; 
            OCEB: in Std_logic; CLKB: in Std_logic; WEB: in Std_logic; 
            CSB0: in Std_logic; CSB1: in Std_logic; CSB2: in Std_logic; 
            RSTB: in Std_logic; DIA0: in Std_logic; DIA1: in Std_logic; 
            DIA2: in Std_logic; DIA3: in Std_logic; DIA4: in Std_logic; 
            DIA5: in Std_logic; DIA6: in Std_logic; DIA7: in Std_logic; 
            DIA8: in Std_logic; DIA9: in Std_logic; DIA10: in Std_logic; 
            DIA11: in Std_logic; DIA12: in Std_logic; DIA13: in Std_logic; 
            DIA14: in Std_logic; DIA15: in Std_logic; DIA16: in Std_logic; 
            DIA17: in Std_logic; ADA0: in Std_logic; ADA1: in Std_logic; 
            ADA2: in Std_logic; ADA3: in Std_logic; ADA4: in Std_logic; 
            ADA5: in Std_logic; ADA6: in Std_logic; ADA7: in Std_logic; 
            ADA8: in Std_logic; ADA9: in Std_logic; ADA10: in Std_logic; 
            ADA11: in Std_logic; ADA12: in Std_logic; ADA13: in Std_logic; 
            DIB0: in Std_logic; DIB1: in Std_logic; DIB2: in Std_logic; 
            DIB3: in Std_logic; DIB4: in Std_logic; DIB5: in Std_logic; 
            DIB6: in Std_logic; DIB7: in Std_logic; DIB8: in Std_logic; 
            DIB9: in Std_logic; DIB10: in Std_logic; DIB11: in Std_logic; 
            DIB12: in Std_logic; DIB13: in Std_logic; DIB14: in Std_logic; 
            DIB15: in Std_logic; DIB16: in Std_logic; DIB17: in Std_logic; 
            ADB0: in Std_logic; ADB1: in Std_logic; ADB2: in Std_logic; 
            ADB3: in Std_logic; ADB4: in Std_logic; ADB5: in Std_logic; 
            ADB6: in Std_logic; ADB7: in Std_logic; ADB8: in Std_logic; 
            ADB9: in Std_logic; ADB10: in Std_logic; ADB11: in Std_logic; 
            ADB12: in Std_logic; ADB13: in Std_logic; DOA0: out Std_logic; 
            DOA1: out Std_logic; DOA2: out Std_logic; DOA3: out Std_logic; 
            DOA4: out Std_logic; DOA5: out Std_logic; DOA6: out Std_logic; 
            DOA7: out Std_logic; DOA8: out Std_logic; DOA9: out Std_logic; 
            DOA10: out Std_logic; DOA11: out Std_logic; DOA12: out Std_logic; 
            DOA13: out Std_logic; DOA14: out Std_logic; DOA15: out Std_logic; 
            DOA16: out Std_logic; DOA17: out Std_logic; DOB0: out Std_logic; 
            DOB1: out Std_logic; DOB2: out Std_logic; DOB3: out Std_logic; 
            DOB4: out Std_logic; DOB5: out Std_logic; DOB6: out Std_logic; 
            DOB7: out Std_logic; DOB8: out Std_logic; DOB9: out Std_logic; 
            DOB10: out Std_logic; DOB11: out Std_logic; DOB12: out Std_logic; 
            DOB13: out Std_logic; DOB14: out Std_logic; DOB15: out Std_logic; 
            DOB16: out Std_logic; DOB17: out Std_logic);
    end component;
  begin
    subg_q_fifo_dc_pdp_ram_0_0_0_DP16KD: DP16KD0007
      port map (CEA=>CEA_dly, OCEA=>OCEA_dly, CLKA=>CLKA_dly, WEA=>VCCI, 
                CSA0=>GNDI, CSA1=>GNDI, CSA2=>GNDI, RSTA=>RSTA_dly, 
                CEB=>CEB_NOTIN, OCEB=>OCEB_NOTIN, CLKB=>CLKB_dly, WEB=>GNDI, 
                CSB0=>GNDI, CSB1=>GNDI, CSB2=>GNDI, RSTB=>RSTB_dly, 
                DIA0=>DIA0_dly, DIA1=>DIA1_dly, DIA2=>DIA2_dly, DIA3=>DIA3_dly, 
                DIA4=>DIA4_dly, DIA5=>DIA5_dly, DIA6=>DIA6_dly, DIA7=>DIA7_dly, 
                DIA8=>DIA8_dly, DIA9=>DIA9_dly, DIA10=>DIA10_dly, 
                DIA11=>DIA11_dly, DIA12=>DIA12_dly, DIA13=>DIA13_dly, 
                DIA14=>DIA14_dly, DIA15=>DIA15_dly, DIA16=>GNDI, DIA17=>GNDI, 
                ADA0=>VCCI, ADA1=>VCCI, ADA2=>GNDI, ADA3=>GNDI, ADA4=>ADA4_dly, 
                ADA5=>ADA5_dly, ADA6=>GNDI, ADA7=>GNDI, ADA8=>GNDI, ADA9=>GNDI, 
                ADA10=>GNDI, ADA11=>GNDI, ADA12=>GNDI, ADA13=>GNDI, DIB0=>GNDI, 
                DIB1=>GNDI, DIB2=>GNDI, DIB3=>GNDI, DIB4=>GNDI, DIB5=>GNDI, 
                DIB6=>GNDI, DIB7=>GNDI, DIB8=>GNDI, DIB9=>GNDI, DIB10=>GNDI, 
                DIB11=>GNDI, DIB12=>GNDI, DIB13=>GNDI, DIB14=>GNDI, 
                DIB15=>GNDI, DIB16=>GNDI, DIB17=>GNDI, ADB0=>GNDI, ADB1=>GNDI, 
                ADB2=>GNDI, ADB3=>GNDI, ADB4=>ADB4_dly, ADB5=>ADB5_dly, 
                ADB6=>GNDI, ADB7=>GNDI, ADB8=>GNDI, ADB9=>GNDI, ADB10=>GNDI, 
                ADB11=>GNDI, ADB12=>GNDI, ADB13=>GNDI, DOA0=>open, DOA1=>open, 
                DOA2=>open, DOA3=>open, DOA4=>open, DOA5=>open, DOA6=>open, 
                DOA7=>open, DOA8=>open, DOA9=>open, DOA10=>open, DOA11=>open, 
                DOA12=>open, DOA13=>open, DOA14=>open, DOA15=>open, 
                DOA16=>open, DOA17=>open, DOB0=>DOB0_out, DOB1=>DOB1_out, 
                DOB2=>DOB2_out, DOB3=>DOB3_out, DOB4=>DOB4_out, DOB5=>DOB5_out, 
                DOB6=>DOB6_out, DOB7=>DOB7_out, DOB8=>DOB8_out, DOB9=>DOB9_out, 
                DOB10=>DOB10_out, DOB11=>DOB11_out, DOB12=>DOB12_out, 
                DOB13=>DOB13_out, DOB14=>DOB14_out, DOB15=>DOB15_out, 
                DOB16=>open, DOB17=>open);
    DRIVEVCC: vcc
      port map (PWR1=>VCCI);
    DRIVEGND: gnd
      port map (PWR0=>GNDI);
    CEB_INVERTERIN: inverter
      port map (I=>CEB_dly, Z=>CEB_NOTIN);
    OCEB_INVERTERIN: inverter
      port map (I=>OCEB_dly, Z=>OCEB_NOTIN);

    --  INPUT PATH DELAYs
    WireDelay : BLOCK
    BEGIN
      VitalWireDelay(DIA15_ipd, DIA15, tipd_DIA15);
      VitalWireDelay(DIA14_ipd, DIA14, tipd_DIA14);
      VitalWireDelay(DIA13_ipd, DIA13, tipd_DIA13);
      VitalWireDelay(DIA12_ipd, DIA12, tipd_DIA12);
      VitalWireDelay(DIA11_ipd, DIA11, tipd_DIA11);
      VitalWireDelay(DIA10_ipd, DIA10, tipd_DIA10);
      VitalWireDelay(DIA9_ipd, DIA9, tipd_DIA9);
      VitalWireDelay(DIA8_ipd, DIA8, tipd_DIA8);
      VitalWireDelay(DIA7_ipd, DIA7, tipd_DIA7);
      VitalWireDelay(DIA6_ipd, DIA6, tipd_DIA6);
      VitalWireDelay(DIA5_ipd, DIA5, tipd_DIA5);
      VitalWireDelay(DIA4_ipd, DIA4, tipd_DIA4);
      VitalWireDelay(DIA3_ipd, DIA3, tipd_DIA3);
      VitalWireDelay(DIA2_ipd, DIA2, tipd_DIA2);
      VitalWireDelay(DIA1_ipd, DIA1, tipd_DIA1);
      VitalWireDelay(DIA0_ipd, DIA0, tipd_DIA0);
      VitalWireDelay(ADA5_ipd, ADA5, tipd_ADA5);
      VitalWireDelay(ADA4_ipd, ADA4, tipd_ADA4);
      VitalWireDelay(CEA_ipd, CEA, tipd_CEA);
      VitalWireDelay(OCEA_ipd, OCEA, tipd_OCEA);
      VitalWireDelay(RSTA_ipd, RSTA, tipd_RSTA);
      VitalWireDelay(CLKA_ipd, CLKA, tipd_CLKA);
      VitalWireDelay(CLKB_ipd, CLKB, tipd_CLKB);
      VitalWireDelay(RSTB_ipd, RSTB, tipd_RSTB);
      VitalWireDelay(OCEB_ipd, OCEB, tipd_OCEB);
      VitalWireDelay(CEB_ipd, CEB, tipd_CEB);
      VitalWireDelay(ADB4_ipd, ADB4, tipd_ADB4);
      VitalWireDelay(ADB5_ipd, ADB5, tipd_ADB5);
    END BLOCK;

    --  Setup and Hold DELAYs
    SignalDelay : BLOCK
    BEGIN
      VitalSignalDelay(DIA15_dly, DIA15_ipd, tisd_DIA15_CLKA);
      VitalSignalDelay(DIA14_dly, DIA14_ipd, tisd_DIA14_CLKA);
      VitalSignalDelay(DIA13_dly, DIA13_ipd, tisd_DIA13_CLKA);
      VitalSignalDelay(DIA12_dly, DIA12_ipd, tisd_DIA12_CLKA);
      VitalSignalDelay(DIA11_dly, DIA11_ipd, tisd_DIA11_CLKA);
      VitalSignalDelay(DIA10_dly, DIA10_ipd, tisd_DIA10_CLKA);
      VitalSignalDelay(DIA9_dly, DIA9_ipd, tisd_DIA9_CLKA);
      VitalSignalDelay(DIA8_dly, DIA8_ipd, tisd_DIA8_CLKA);
      VitalSignalDelay(DIA7_dly, DIA7_ipd, tisd_DIA7_CLKA);
      VitalSignalDelay(DIA6_dly, DIA6_ipd, tisd_DIA6_CLKA);
      VitalSignalDelay(DIA5_dly, DIA5_ipd, tisd_DIA5_CLKA);
      VitalSignalDelay(DIA4_dly, DIA4_ipd, tisd_DIA4_CLKA);
      VitalSignalDelay(DIA3_dly, DIA3_ipd, tisd_DIA3_CLKA);
      VitalSignalDelay(DIA2_dly, DIA2_ipd, tisd_DIA2_CLKA);
      VitalSignalDelay(DIA1_dly, DIA1_ipd, tisd_DIA1_CLKA);
      VitalSignalDelay(DIA0_dly, DIA0_ipd, tisd_DIA0_CLKA);
      VitalSignalDelay(ADA5_dly, ADA5_ipd, tisd_ADA5_CLKA);
      VitalSignalDelay(ADA4_dly, ADA4_ipd, tisd_ADA4_CLKA);
      VitalSignalDelay(CEA_dly, CEA_ipd, tisd_CEA_CLKA);
      VitalSignalDelay(OCEA_dly, OCEA_ipd, tisd_OCEA_CLKA);
      VitalSignalDelay(RSTA_dly, RSTA_ipd, tisd_RSTA_CLKA);
      VitalSignalDelay(CLKA_dly, CLKA_ipd, ticd_CLKA);
      VitalSignalDelay(CLKB_dly, CLKB_ipd, ticd_CLKB);
      VitalSignalDelay(RSTB_dly, RSTB_ipd, tisd_RSTB_CLKB);
      VitalSignalDelay(OCEB_dly, OCEB_ipd, tisd_OCEB_CLKB);
      VitalSignalDelay(CEB_dly, CEB_ipd, tisd_CEB_CLKB);
      VitalSignalDelay(ADB4_dly, ADB4_ipd, tisd_ADB4_CLKB);
      VitalSignalDelay(ADB5_dly, ADB5_ipd, tisd_ADB5_CLKB);
    END BLOCK;

    VitalBehavior : PROCESS (DIA15_dly, DIA14_dly, DIA13_dly, DIA12_dly, 
      DIA11_dly, DIA10_dly, DIA9_dly, DIA8_dly, DIA7_dly, DIA6_dly, DIA5_dly, 
      DIA4_dly, DIA3_dly, DIA2_dly, DIA1_dly, DIA0_dly, ADA5_dly, ADA4_dly, 
      CEA_dly, OCEA_dly, RSTA_dly, CLKA_dly, CLKB_dly, RSTB_dly, OCEB_dly, 
      CEB_dly, DOB0_out, DOB1_out, DOB2_out, DOB3_out, DOB4_out, DOB5_out, 
      DOB6_out, DOB7_out, DOB8_out, DOB9_out, DOB10_out, DOB11_out, DOB12_out, 
      DOB13_out, DOB14_out, DOB15_out, ADB4_dly, ADB5_dly)
    VARIABLE DOB0_zd         	: std_logic := 'X';
    VARIABLE DOB0_GlitchData 	: VitalGlitchDataType;
    VARIABLE DOB1_zd         	: std_logic := 'X';
    VARIABLE DOB1_GlitchData 	: VitalGlitchDataType;
    VARIABLE DOB2_zd         	: std_logic := 'X';
    VARIABLE DOB2_GlitchData 	: VitalGlitchDataType;
    VARIABLE DOB3_zd         	: std_logic := 'X';
    VARIABLE DOB3_GlitchData 	: VitalGlitchDataType;
    VARIABLE DOB4_zd         	: std_logic := 'X';
    VARIABLE DOB4_GlitchData 	: VitalGlitchDataType;
    VARIABLE DOB5_zd         	: std_logic := 'X';
    VARIABLE DOB5_GlitchData 	: VitalGlitchDataType;
    VARIABLE DOB6_zd         	: std_logic := 'X';
    VARIABLE DOB6_GlitchData 	: VitalGlitchDataType;
    VARIABLE DOB7_zd         	: std_logic := 'X';
    VARIABLE DOB7_GlitchData 	: VitalGlitchDataType;
    VARIABLE DOB8_zd         	: std_logic := 'X';
    VARIABLE DOB8_GlitchData 	: VitalGlitchDataType;
    VARIABLE DOB9_zd         	: std_logic := 'X';
    VARIABLE DOB9_GlitchData 	: VitalGlitchDataType;
    VARIABLE DOB10_zd         	: std_logic := 'X';
    VARIABLE DOB10_GlitchData 	: VitalGlitchDataType;
    VARIABLE DOB11_zd         	: std_logic := 'X';
    VARIABLE DOB11_GlitchData 	: VitalGlitchDataType;
    VARIABLE DOB12_zd         	: std_logic := 'X';
    VARIABLE DOB12_GlitchData 	: VitalGlitchDataType;
    VARIABLE DOB13_zd         	: std_logic := 'X';
    VARIABLE DOB13_GlitchData 	: VitalGlitchDataType;
    VARIABLE DOB14_zd         	: std_logic := 'X';
    VARIABLE DOB14_GlitchData 	: VitalGlitchDataType;
    VARIABLE DOB15_zd         	: std_logic := 'X';
    VARIABLE DOB15_GlitchData 	: VitalGlitchDataType;

    VARIABLE tviol_DIA15_CLKA       	: x01 := '0';
    VARIABLE DIA15_CLKA_TimingDatash	: VitalTimingDataType;
    VARIABLE tviol_DIA14_CLKA       	: x01 := '0';
    VARIABLE DIA14_CLKA_TimingDatash	: VitalTimingDataType;
    VARIABLE tviol_DIA13_CLKA       	: x01 := '0';
    VARIABLE DIA13_CLKA_TimingDatash	: VitalTimingDataType;
    VARIABLE tviol_DIA12_CLKA       	: x01 := '0';
    VARIABLE DIA12_CLKA_TimingDatash	: VitalTimingDataType;
    VARIABLE tviol_DIA11_CLKA       	: x01 := '0';
    VARIABLE DIA11_CLKA_TimingDatash	: VitalTimingDataType;
    VARIABLE tviol_DIA10_CLKA       	: x01 := '0';
    VARIABLE DIA10_CLKA_TimingDatash	: VitalTimingDataType;
    VARIABLE tviol_DIA9_CLKA       	: x01 := '0';
    VARIABLE DIA9_CLKA_TimingDatash	: VitalTimingDataType;
    VARIABLE tviol_DIA8_CLKA       	: x01 := '0';
    VARIABLE DIA8_CLKA_TimingDatash	: VitalTimingDataType;
    VARIABLE tviol_DIA7_CLKA       	: x01 := '0';
    VARIABLE DIA7_CLKA_TimingDatash	: VitalTimingDataType;
    VARIABLE tviol_DIA6_CLKA       	: x01 := '0';
    VARIABLE DIA6_CLKA_TimingDatash	: VitalTimingDataType;
    VARIABLE tviol_DIA5_CLKA       	: x01 := '0';
    VARIABLE DIA5_CLKA_TimingDatash	: VitalTimingDataType;
    VARIABLE tviol_DIA4_CLKA       	: x01 := '0';
    VARIABLE DIA4_CLKA_TimingDatash	: VitalTimingDataType;
    VARIABLE tviol_DIA3_CLKA       	: x01 := '0';
    VARIABLE DIA3_CLKA_TimingDatash	: VitalTimingDataType;
    VARIABLE tviol_DIA2_CLKA       	: x01 := '0';
    VARIABLE DIA2_CLKA_TimingDatash	: VitalTimingDataType;
    VARIABLE tviol_DIA1_CLKA       	: x01 := '0';
    VARIABLE DIA1_CLKA_TimingDatash	: VitalTimingDataType;
    VARIABLE tviol_DIA0_CLKA       	: x01 := '0';
    VARIABLE DIA0_CLKA_TimingDatash	: VitalTimingDataType;
    VARIABLE tviol_ADA5_CLKA       	: x01 := '0';
    VARIABLE ADA5_CLKA_TimingDatash	: VitalTimingDataType;
    VARIABLE tviol_ADA4_CLKA       	: x01 := '0';
    VARIABLE ADA4_CLKA_TimingDatash	: VitalTimingDataType;
    VARIABLE tviol_CEA_CLKA       	: x01 := '0';
    VARIABLE CEA_CLKA_TimingDatash	: VitalTimingDataType;
    VARIABLE tviol_OCEA_CLKA       	: x01 := '0';
    VARIABLE OCEA_CLKA_TimingDatash	: VitalTimingDataType;
    VARIABLE tviol_RSTA_CLKA       	: x01 := '0';
    VARIABLE RSTA_CLKA_TimingDatash	: VitalTimingDataType;
    VARIABLE tviol_RSTB_CLKB       	: x01 := '0';
    VARIABLE RSTB_CLKB_TimingDatash	: VitalTimingDataType;
    VARIABLE tviol_OCEB_CLKB       	: x01 := '0';
    VARIABLE OCEB_CLKB_TimingDatash	: VitalTimingDataType;
    VARIABLE tviol_CEB_CLKB       	: x01 := '0';
    VARIABLE CEB_CLKB_TimingDatash	: VitalTimingDataType;
    VARIABLE tviol_ADB4_CLKB       	: x01 := '0';
    VARIABLE ADB4_CLKB_TimingDatash	: VitalTimingDataType;
    VARIABLE tviol_ADB5_CLKB       	: x01 := '0';
    VARIABLE ADB5_CLKB_TimingDatash	: VitalTimingDataType;
    VARIABLE tviol_CLKA_CLKA          	: x01 := '0';
    VARIABLE periodcheckinfo_CLKA	: VitalPeriodDataType;
    VARIABLE tviol_CLKB_CLKB          	: x01 := '0';
    VARIABLE periodcheckinfo_CLKB	: VitalPeriodDataType;

    BEGIN

    IF (TimingChecksOn) THEN
      VitalSetupHoldCheck (
        TestSignal => DIA15_dly,
        TestSignalName => "DIA15",
        TestDelay => tisd_DIA15_CLKA,
        RefSignal => CLKA_dly,
        RefSignalName => "CLKA",
        RefDelay => ticd_CLKA,
        SetupHigh => tsetup_DIA15_CLKA_noedge_posedge,
        SetupLow => tsetup_DIA15_CLKA_noedge_posedge,
        HoldHigh => thold_DIA15_CLKA_noedge_posedge,
        HoldLow => thold_DIA15_CLKA_noedge_posedge,
        CheckEnabled => TRUE,
        RefTransition => '/',
        MsgOn => MsgOn, XOn => XOn,
        HeaderMsg => InstancePath,
        TimingData => DIA15_CLKA_TimingDatash,
        Violation => tviol_DIA15_CLKA,
        MsgSeverity => warning);
      VitalSetupHoldCheck (
        TestSignal => DIA14_dly,
        TestSignalName => "DIA14",
        TestDelay => tisd_DIA14_CLKA,
        RefSignal => CLKA_dly,
        RefSignalName => "CLKA",
        RefDelay => ticd_CLKA,
        SetupHigh => tsetup_DIA14_CLKA_noedge_posedge,
        SetupLow => tsetup_DIA14_CLKA_noedge_posedge,
        HoldHigh => thold_DIA14_CLKA_noedge_posedge,
        HoldLow => thold_DIA14_CLKA_noedge_posedge,
        CheckEnabled => TRUE,
        RefTransition => '/',
        MsgOn => MsgOn, XOn => XOn,
        HeaderMsg => InstancePath,
        TimingData => DIA14_CLKA_TimingDatash,
        Violation => tviol_DIA14_CLKA,
        MsgSeverity => warning);
      VitalSetupHoldCheck (
        TestSignal => DIA13_dly,
        TestSignalName => "DIA13",
        TestDelay => tisd_DIA13_CLKA,
        RefSignal => CLKA_dly,
        RefSignalName => "CLKA",
        RefDelay => ticd_CLKA,
        SetupHigh => tsetup_DIA13_CLKA_noedge_posedge,
        SetupLow => tsetup_DIA13_CLKA_noedge_posedge,
        HoldHigh => thold_DIA13_CLKA_noedge_posedge,
        HoldLow => thold_DIA13_CLKA_noedge_posedge,
        CheckEnabled => TRUE,
        RefTransition => '/',
        MsgOn => MsgOn, XOn => XOn,
        HeaderMsg => InstancePath,
        TimingData => DIA13_CLKA_TimingDatash,
        Violation => tviol_DIA13_CLKA,
        MsgSeverity => warning);
      VitalSetupHoldCheck (
        TestSignal => DIA12_dly,
        TestSignalName => "DIA12",
        TestDelay => tisd_DIA12_CLKA,
        RefSignal => CLKA_dly,
        RefSignalName => "CLKA",
        RefDelay => ticd_CLKA,
        SetupHigh => tsetup_DIA12_CLKA_noedge_posedge,
        SetupLow => tsetup_DIA12_CLKA_noedge_posedge,
        HoldHigh => thold_DIA12_CLKA_noedge_posedge,
        HoldLow => thold_DIA12_CLKA_noedge_posedge,
        CheckEnabled => TRUE,
        RefTransition => '/',
        MsgOn => MsgOn, XOn => XOn,
        HeaderMsg => InstancePath,
        TimingData => DIA12_CLKA_TimingDatash,
        Violation => tviol_DIA12_CLKA,
        MsgSeverity => warning);
      VitalSetupHoldCheck (
        TestSignal => DIA11_dly,
        TestSignalName => "DIA11",
        TestDelay => tisd_DIA11_CLKA,
        RefSignal => CLKA_dly,
        RefSignalName => "CLKA",
        RefDelay => ticd_CLKA,
        SetupHigh => tsetup_DIA11_CLKA_noedge_posedge,
        SetupLow => tsetup_DIA11_CLKA_noedge_posedge,
        HoldHigh => thold_DIA11_CLKA_noedge_posedge,
        HoldLow => thold_DIA11_CLKA_noedge_posedge,
        CheckEnabled => TRUE,
        RefTransition => '/',
        MsgOn => MsgOn, XOn => XOn,
        HeaderMsg => InstancePath,
        TimingData => DIA11_CLKA_TimingDatash,
        Violation => tviol_DIA11_CLKA,
        MsgSeverity => warning);
      VitalSetupHoldCheck (
        TestSignal => DIA10_dly,
        TestSignalName => "DIA10",
        TestDelay => tisd_DIA10_CLKA,
        RefSignal => CLKA_dly,
        RefSignalName => "CLKA",
        RefDelay => ticd_CLKA,
        SetupHigh => tsetup_DIA10_CLKA_noedge_posedge,
        SetupLow => tsetup_DIA10_CLKA_noedge_posedge,
        HoldHigh => thold_DIA10_CLKA_noedge_posedge,
        HoldLow => thold_DIA10_CLKA_noedge_posedge,
        CheckEnabled => TRUE,
        RefTransition => '/',
        MsgOn => MsgOn, XOn => XOn,
        HeaderMsg => InstancePath,
        TimingData => DIA10_CLKA_TimingDatash,
        Violation => tviol_DIA10_CLKA,
        MsgSeverity => warning);
      VitalSetupHoldCheck (
        TestSignal => DIA9_dly,
        TestSignalName => "DIA9",
        TestDelay => tisd_DIA9_CLKA,
        RefSignal => CLKA_dly,
        RefSignalName => "CLKA",
        RefDelay => ticd_CLKA,
        SetupHigh => tsetup_DIA9_CLKA_noedge_posedge,
        SetupLow => tsetup_DIA9_CLKA_noedge_posedge,
        HoldHigh => thold_DIA9_CLKA_noedge_posedge,
        HoldLow => thold_DIA9_CLKA_noedge_posedge,
        CheckEnabled => TRUE,
        RefTransition => '/',
        MsgOn => MsgOn, XOn => XOn,
        HeaderMsg => InstancePath,
        TimingData => DIA9_CLKA_TimingDatash,
        Violation => tviol_DIA9_CLKA,
        MsgSeverity => warning);
      VitalSetupHoldCheck (
        TestSignal => DIA8_dly,
        TestSignalName => "DIA8",
        TestDelay => tisd_DIA8_CLKA,
        RefSignal => CLKA_dly,
        RefSignalName => "CLKA",
        RefDelay => ticd_CLKA,
        SetupHigh => tsetup_DIA8_CLKA_noedge_posedge,
        SetupLow => tsetup_DIA8_CLKA_noedge_posedge,
        HoldHigh => thold_DIA8_CLKA_noedge_posedge,
        HoldLow => thold_DIA8_CLKA_noedge_posedge,
        CheckEnabled => TRUE,
        RefTransition => '/',
        MsgOn => MsgOn, XOn => XOn,
        HeaderMsg => InstancePath,
        TimingData => DIA8_CLKA_TimingDatash,
        Violation => tviol_DIA8_CLKA,
        MsgSeverity => warning);
      VitalSetupHoldCheck (
        TestSignal => DIA7_dly,
        TestSignalName => "DIA7",
        TestDelay => tisd_DIA7_CLKA,
        RefSignal => CLKA_dly,
        RefSignalName => "CLKA",
        RefDelay => ticd_CLKA,
        SetupHigh => tsetup_DIA7_CLKA_noedge_posedge,
        SetupLow => tsetup_DIA7_CLKA_noedge_posedge,
        HoldHigh => thold_DIA7_CLKA_noedge_posedge,
        HoldLow => thold_DIA7_CLKA_noedge_posedge,
        CheckEnabled => TRUE,
        RefTransition => '/',
        MsgOn => MsgOn, XOn => XOn,
        HeaderMsg => InstancePath,
        TimingData => DIA7_CLKA_TimingDatash,
        Violation => tviol_DIA7_CLKA,
        MsgSeverity => warning);
      VitalSetupHoldCheck (
        TestSignal => DIA6_dly,
        TestSignalName => "DIA6",
        TestDelay => tisd_DIA6_CLKA,
        RefSignal => CLKA_dly,
        RefSignalName => "CLKA",
        RefDelay => ticd_CLKA,
        SetupHigh => tsetup_DIA6_CLKA_noedge_posedge,
        SetupLow => tsetup_DIA6_CLKA_noedge_posedge,
        HoldHigh => thold_DIA6_CLKA_noedge_posedge,
        HoldLow => thold_DIA6_CLKA_noedge_posedge,
        CheckEnabled => TRUE,
        RefTransition => '/',
        MsgOn => MsgOn, XOn => XOn,
        HeaderMsg => InstancePath,
        TimingData => DIA6_CLKA_TimingDatash,
        Violation => tviol_DIA6_CLKA,
        MsgSeverity => warning);
      VitalSetupHoldCheck (
        TestSignal => DIA5_dly,
        TestSignalName => "DIA5",
        TestDelay => tisd_DIA5_CLKA,
        RefSignal => CLKA_dly,
        RefSignalName => "CLKA",
        RefDelay => ticd_CLKA,
        SetupHigh => tsetup_DIA5_CLKA_noedge_posedge,
        SetupLow => tsetup_DIA5_CLKA_noedge_posedge,
        HoldHigh => thold_DIA5_CLKA_noedge_posedge,
        HoldLow => thold_DIA5_CLKA_noedge_posedge,
        CheckEnabled => TRUE,
        RefTransition => '/',
        MsgOn => MsgOn, XOn => XOn,
        HeaderMsg => InstancePath,
        TimingData => DIA5_CLKA_TimingDatash,
        Violation => tviol_DIA5_CLKA,
        MsgSeverity => warning);
      VitalSetupHoldCheck (
        TestSignal => DIA4_dly,
        TestSignalName => "DIA4",
        TestDelay => tisd_DIA4_CLKA,
        RefSignal => CLKA_dly,
        RefSignalName => "CLKA",
        RefDelay => ticd_CLKA,
        SetupHigh => tsetup_DIA4_CLKA_noedge_posedge,
        SetupLow => tsetup_DIA4_CLKA_noedge_posedge,
        HoldHigh => thold_DIA4_CLKA_noedge_posedge,
        HoldLow => thold_DIA4_CLKA_noedge_posedge,
        CheckEnabled => TRUE,
        RefTransition => '/',
        MsgOn => MsgOn, XOn => XOn,
        HeaderMsg => InstancePath,
        TimingData => DIA4_CLKA_TimingDatash,
        Violation => tviol_DIA4_CLKA,
        MsgSeverity => warning);
      VitalSetupHoldCheck (
        TestSignal => DIA3_dly,
        TestSignalName => "DIA3",
        TestDelay => tisd_DIA3_CLKA,
        RefSignal => CLKA_dly,
        RefSignalName => "CLKA",
        RefDelay => ticd_CLKA,
        SetupHigh => tsetup_DIA3_CLKA_noedge_posedge,
        SetupLow => tsetup_DIA3_CLKA_noedge_posedge,
        HoldHigh => thold_DIA3_CLKA_noedge_posedge,
        HoldLow => thold_DIA3_CLKA_noedge_posedge,
        CheckEnabled => TRUE,
        RefTransition => '/',
        MsgOn => MsgOn, XOn => XOn,
        HeaderMsg => InstancePath,
        TimingData => DIA3_CLKA_TimingDatash,
        Violation => tviol_DIA3_CLKA,
        MsgSeverity => warning);
      VitalSetupHoldCheck (
        TestSignal => DIA2_dly,
        TestSignalName => "DIA2",
        TestDelay => tisd_DIA2_CLKA,
        RefSignal => CLKA_dly,
        RefSignalName => "CLKA",
        RefDelay => ticd_CLKA,
        SetupHigh => tsetup_DIA2_CLKA_noedge_posedge,
        SetupLow => tsetup_DIA2_CLKA_noedge_posedge,
        HoldHigh => thold_DIA2_CLKA_noedge_posedge,
        HoldLow => thold_DIA2_CLKA_noedge_posedge,
        CheckEnabled => TRUE,
        RefTransition => '/',
        MsgOn => MsgOn, XOn => XOn,
        HeaderMsg => InstancePath,
        TimingData => DIA2_CLKA_TimingDatash,
        Violation => tviol_DIA2_CLKA,
        MsgSeverity => warning);
      VitalSetupHoldCheck (
        TestSignal => DIA1_dly,
        TestSignalName => "DIA1",
        TestDelay => tisd_DIA1_CLKA,
        RefSignal => CLKA_dly,
        RefSignalName => "CLKA",
        RefDelay => ticd_CLKA,
        SetupHigh => tsetup_DIA1_CLKA_noedge_posedge,
        SetupLow => tsetup_DIA1_CLKA_noedge_posedge,
        HoldHigh => thold_DIA1_CLKA_noedge_posedge,
        HoldLow => thold_DIA1_CLKA_noedge_posedge,
        CheckEnabled => TRUE,
        RefTransition => '/',
        MsgOn => MsgOn, XOn => XOn,
        HeaderMsg => InstancePath,
        TimingData => DIA1_CLKA_TimingDatash,
        Violation => tviol_DIA1_CLKA,
        MsgSeverity => warning);
      VitalSetupHoldCheck (
        TestSignal => DIA0_dly,
        TestSignalName => "DIA0",
        TestDelay => tisd_DIA0_CLKA,
        RefSignal => CLKA_dly,
        RefSignalName => "CLKA",
        RefDelay => ticd_CLKA,
        SetupHigh => tsetup_DIA0_CLKA_noedge_posedge,
        SetupLow => tsetup_DIA0_CLKA_noedge_posedge,
        HoldHigh => thold_DIA0_CLKA_noedge_posedge,
        HoldLow => thold_DIA0_CLKA_noedge_posedge,
        CheckEnabled => TRUE,
        RefTransition => '/',
        MsgOn => MsgOn, XOn => XOn,
        HeaderMsg => InstancePath,
        TimingData => DIA0_CLKA_TimingDatash,
        Violation => tviol_DIA0_CLKA,
        MsgSeverity => warning);
      VitalSetupHoldCheck (
        TestSignal => ADA5_dly,
        TestSignalName => "ADA5",
        TestDelay => tisd_ADA5_CLKA,
        RefSignal => CLKA_dly,
        RefSignalName => "CLKA",
        RefDelay => ticd_CLKA,
        SetupHigh => tsetup_ADA5_CLKA_noedge_posedge,
        SetupLow => tsetup_ADA5_CLKA_noedge_posedge,
        HoldHigh => thold_ADA5_CLKA_noedge_posedge,
        HoldLow => thold_ADA5_CLKA_noedge_posedge,
        CheckEnabled => TRUE,
        RefTransition => '/',
        MsgOn => MsgOn, XOn => XOn,
        HeaderMsg => InstancePath,
        TimingData => ADA5_CLKA_TimingDatash,
        Violation => tviol_ADA5_CLKA,
        MsgSeverity => warning);
      VitalSetupHoldCheck (
        TestSignal => ADA4_dly,
        TestSignalName => "ADA4",
        TestDelay => tisd_ADA4_CLKA,
        RefSignal => CLKA_dly,
        RefSignalName => "CLKA",
        RefDelay => ticd_CLKA,
        SetupHigh => tsetup_ADA4_CLKA_noedge_posedge,
        SetupLow => tsetup_ADA4_CLKA_noedge_posedge,
        HoldHigh => thold_ADA4_CLKA_noedge_posedge,
        HoldLow => thold_ADA4_CLKA_noedge_posedge,
        CheckEnabled => TRUE,
        RefTransition => '/',
        MsgOn => MsgOn, XOn => XOn,
        HeaderMsg => InstancePath,
        TimingData => ADA4_CLKA_TimingDatash,
        Violation => tviol_ADA4_CLKA,
        MsgSeverity => warning);
      VitalSetupHoldCheck (
        TestSignal => CEA_dly,
        TestSignalName => "CEA",
        TestDelay => tisd_CEA_CLKA,
        RefSignal => CLKA_dly,
        RefSignalName => "CLKA",
        RefDelay => ticd_CLKA,
        SetupHigh => tsetup_CEA_CLKA_noedge_posedge,
        SetupLow => tsetup_CEA_CLKA_noedge_posedge,
        HoldHigh => thold_CEA_CLKA_noedge_posedge,
        HoldLow => thold_CEA_CLKA_noedge_posedge,
        CheckEnabled => TRUE,
        RefTransition => '/',
        MsgOn => MsgOn, XOn => XOn,
        HeaderMsg => InstancePath,
        TimingData => CEA_CLKA_TimingDatash,
        Violation => tviol_CEA_CLKA,
        MsgSeverity => warning);
      VitalSetupHoldCheck (
        TestSignal => OCEA_dly,
        TestSignalName => "OCEA",
        TestDelay => tisd_OCEA_CLKA,
        RefSignal => CLKA_dly,
        RefSignalName => "CLKA",
        RefDelay => ticd_CLKA,
        SetupHigh => tsetup_OCEA_CLKA_noedge_posedge,
        SetupLow => tsetup_OCEA_CLKA_noedge_posedge,
        HoldHigh => thold_OCEA_CLKA_noedge_posedge,
        HoldLow => thold_OCEA_CLKA_noedge_posedge,
        CheckEnabled => TRUE,
        RefTransition => '/',
        MsgOn => MsgOn, XOn => XOn,
        HeaderMsg => InstancePath,
        TimingData => OCEA_CLKA_TimingDatash,
        Violation => tviol_OCEA_CLKA,
        MsgSeverity => warning);
      VitalSetupHoldCheck (
        TestSignal => RSTA_dly,
        TestSignalName => "RSTA",
        TestDelay => tisd_RSTA_CLKA,
        RefSignal => CLKA_dly,
        RefSignalName => "CLKA",
        RefDelay => ticd_CLKA,
        SetupHigh => tsetup_RSTA_CLKA_noedge_posedge,
        SetupLow => tsetup_RSTA_CLKA_noedge_posedge,
        HoldHigh => thold_RSTA_CLKA_noedge_posedge,
        HoldLow => thold_RSTA_CLKA_noedge_posedge,
        CheckEnabled => TRUE,
        RefTransition => '/',
        MsgOn => MsgOn, XOn => XOn,
        HeaderMsg => InstancePath,
        TimingData => RSTA_CLKA_TimingDatash,
        Violation => tviol_RSTA_CLKA,
        MsgSeverity => warning);
      VitalSetupHoldCheck (
        TestSignal => RSTB_dly,
        TestSignalName => "RSTB",
        TestDelay => tisd_RSTB_CLKB,
        RefSignal => CLKB_dly,
        RefSignalName => "CLKB",
        RefDelay => ticd_CLKB,
        SetupHigh => tsetup_RSTB_CLKB_noedge_posedge,
        SetupLow => tsetup_RSTB_CLKB_noedge_posedge,
        HoldHigh => thold_RSTB_CLKB_noedge_posedge,
        HoldLow => thold_RSTB_CLKB_noedge_posedge,
        CheckEnabled => TRUE,
        RefTransition => '/',
        MsgOn => MsgOn, XOn => XOn,
        HeaderMsg => InstancePath,
        TimingData => RSTB_CLKB_TimingDatash,
        Violation => tviol_RSTB_CLKB,
        MsgSeverity => warning);
      VitalSetupHoldCheck (
        TestSignal => OCEB_dly,
        TestSignalName => "OCEB",
        TestDelay => tisd_OCEB_CLKB,
        RefSignal => CLKB_dly,
        RefSignalName => "CLKB",
        RefDelay => ticd_CLKB,
        SetupHigh => tsetup_OCEB_CLKB_noedge_posedge,
        SetupLow => tsetup_OCEB_CLKB_noedge_posedge,
        HoldHigh => thold_OCEB_CLKB_noedge_posedge,
        HoldLow => thold_OCEB_CLKB_noedge_posedge,
        CheckEnabled => TRUE,
        RefTransition => '/',
        MsgOn => MsgOn, XOn => XOn,
        HeaderMsg => InstancePath,
        TimingData => OCEB_CLKB_TimingDatash,
        Violation => tviol_OCEB_CLKB,
        MsgSeverity => warning);
      VitalSetupHoldCheck (
        TestSignal => CEB_dly,
        TestSignalName => "CEB",
        TestDelay => tisd_CEB_CLKB,
        RefSignal => CLKB_dly,
        RefSignalName => "CLKB",
        RefDelay => ticd_CLKB,
        SetupHigh => tsetup_CEB_CLKB_noedge_posedge,
        SetupLow => tsetup_CEB_CLKB_noedge_posedge,
        HoldHigh => thold_CEB_CLKB_noedge_posedge,
        HoldLow => thold_CEB_CLKB_noedge_posedge,
        CheckEnabled => TRUE,
        RefTransition => '/',
        MsgOn => MsgOn, XOn => XOn,
        HeaderMsg => InstancePath,
        TimingData => CEB_CLKB_TimingDatash,
        Violation => tviol_CEB_CLKB,
        MsgSeverity => warning);
      VitalSetupHoldCheck (
        TestSignal => ADB4_dly,
        TestSignalName => "ADB4",
        TestDelay => tisd_ADB4_CLKB,
        RefSignal => CLKB_dly,
        RefSignalName => "CLKB",
        RefDelay => ticd_CLKB,
        SetupHigh => tsetup_ADB4_CLKB_noedge_posedge,
        SetupLow => tsetup_ADB4_CLKB_noedge_posedge,
        HoldHigh => thold_ADB4_CLKB_noedge_posedge,
        HoldLow => thold_ADB4_CLKB_noedge_posedge,
        CheckEnabled => TRUE,
        RefTransition => '/',
        MsgOn => MsgOn, XOn => XOn,
        HeaderMsg => InstancePath,
        TimingData => ADB4_CLKB_TimingDatash,
        Violation => tviol_ADB4_CLKB,
        MsgSeverity => warning);
      VitalSetupHoldCheck (
        TestSignal => ADB5_dly,
        TestSignalName => "ADB5",
        TestDelay => tisd_ADB5_CLKB,
        RefSignal => CLKB_dly,
        RefSignalName => "CLKB",
        RefDelay => ticd_CLKB,
        SetupHigh => tsetup_ADB5_CLKB_noedge_posedge,
        SetupLow => tsetup_ADB5_CLKB_noedge_posedge,
        HoldHigh => thold_ADB5_CLKB_noedge_posedge,
        HoldLow => thold_ADB5_CLKB_noedge_posedge,
        CheckEnabled => TRUE,
        RefTransition => '/',
        MsgOn => MsgOn, XOn => XOn,
        HeaderMsg => InstancePath,
        TimingData => ADB5_CLKB_TimingDatash,
        Violation => tviol_ADB5_CLKB,
        MsgSeverity => warning);
      VitalPeriodPulseCheck (
        TestSignal => CLKA_ipd,
        TestSignalName => "CLKA",
        Period => tperiod_CLKA,
        PulseWidthHigh => tpw_CLKA_posedge,
        PulseWidthLow => tpw_CLKA_negedge,
        PeriodData => periodcheckinfo_CLKA,
        Violation => tviol_CLKA_CLKA,
        MsgOn => MsgOn, XOn => XOn,
        HeaderMsg => InstancePath,
        CheckEnabled => TRUE,
        MsgSeverity => warning);
      VitalPeriodPulseCheck (
        TestSignal => CLKB_ipd,
        TestSignalName => "CLKB",
        Period => tperiod_CLKB,
        PulseWidthHigh => tpw_CLKB_posedge,
        PulseWidthLow => tpw_CLKB_negedge,
        PeriodData => periodcheckinfo_CLKB,
        Violation => tviol_CLKB_CLKB,
        MsgOn => MsgOn, XOn => XOn,
        HeaderMsg => InstancePath,
        CheckEnabled => TRUE,
        MsgSeverity => warning);

    END IF;

    DOB0_zd 	:= DOB0_out;
    DOB1_zd 	:= DOB1_out;
    DOB2_zd 	:= DOB2_out;
    DOB3_zd 	:= DOB3_out;
    DOB4_zd 	:= DOB4_out;
    DOB5_zd 	:= DOB5_out;
    DOB6_zd 	:= DOB6_out;
    DOB7_zd 	:= DOB7_out;
    DOB8_zd 	:= DOB8_out;
    DOB9_zd 	:= DOB9_out;
    DOB10_zd 	:= DOB10_out;
    DOB11_zd 	:= DOB11_out;
    DOB12_zd 	:= DOB12_out;
    DOB13_zd 	:= DOB13_out;
    DOB14_zd 	:= DOB14_out;
    DOB15_zd 	:= DOB15_out;

    VitalPathDelay01 (
      OutSignal => DOB0, OutSignalName => "DOB0", OutTemp => DOB0_zd,
      Paths      => (0 => (InputChangeTime => CLKB_dly'last_event,
                           PathDelay => tpd_CLKB_DOB0,
                           PathCondition => TRUE),
                     1 => (InputChangeTime => RSTB_dly'last_event,
                           PathDelay => tpd_RSTB_DOB0,
                           PathCondition => TRUE)),
      GlitchData => DOB0_GlitchData,
      Mode       => ondetect, XOn => XOn, MsgOn => MsgOn);
    VitalPathDelay01 (
      OutSignal => DOB1, OutSignalName => "DOB1", OutTemp => DOB1_zd,
      Paths      => (0 => (InputChangeTime => CLKB_dly'last_event,
                           PathDelay => tpd_CLKB_DOB1,
                           PathCondition => TRUE),
                     1 => (InputChangeTime => RSTB_dly'last_event,
                           PathDelay => tpd_RSTB_DOB1,
                           PathCondition => TRUE)),
      GlitchData => DOB1_GlitchData,
      Mode       => ondetect, XOn => XOn, MsgOn => MsgOn);
    VitalPathDelay01 (
      OutSignal => DOB2, OutSignalName => "DOB2", OutTemp => DOB2_zd,
      Paths      => (0 => (InputChangeTime => CLKB_dly'last_event,
                           PathDelay => tpd_CLKB_DOB2,
                           PathCondition => TRUE),
                     1 => (InputChangeTime => RSTB_dly'last_event,
                           PathDelay => tpd_RSTB_DOB2,
                           PathCondition => TRUE)),
      GlitchData => DOB2_GlitchData,
      Mode       => ondetect, XOn => XOn, MsgOn => MsgOn);
    VitalPathDelay01 (
      OutSignal => DOB3, OutSignalName => "DOB3", OutTemp => DOB3_zd,
      Paths      => (0 => (InputChangeTime => CLKB_dly'last_event,
                           PathDelay => tpd_CLKB_DOB3,
                           PathCondition => TRUE),
                     1 => (InputChangeTime => RSTB_dly'last_event,
                           PathDelay => tpd_RSTB_DOB3,
                           PathCondition => TRUE)),
      GlitchData => DOB3_GlitchData,
      Mode       => ondetect, XOn => XOn, MsgOn => MsgOn);
    VitalPathDelay01 (
      OutSignal => DOB4, OutSignalName => "DOB4", OutTemp => DOB4_zd,
      Paths      => (0 => (InputChangeTime => CLKB_dly'last_event,
                           PathDelay => tpd_CLKB_DOB4,
                           PathCondition => TRUE),
                     1 => (InputChangeTime => RSTB_dly'last_event,
                           PathDelay => tpd_RSTB_DOB4,
                           PathCondition => TRUE)),
      GlitchData => DOB4_GlitchData,
      Mode       => ondetect, XOn => XOn, MsgOn => MsgOn);
    VitalPathDelay01 (
      OutSignal => DOB5, OutSignalName => "DOB5", OutTemp => DOB5_zd,
      Paths      => (0 => (InputChangeTime => CLKB_dly'last_event,
                           PathDelay => tpd_CLKB_DOB5,
                           PathCondition => TRUE),
                     1 => (InputChangeTime => RSTB_dly'last_event,
                           PathDelay => tpd_RSTB_DOB5,
                           PathCondition => TRUE)),
      GlitchData => DOB5_GlitchData,
      Mode       => ondetect, XOn => XOn, MsgOn => MsgOn);
    VitalPathDelay01 (
      OutSignal => DOB6, OutSignalName => "DOB6", OutTemp => DOB6_zd,
      Paths      => (0 => (InputChangeTime => CLKB_dly'last_event,
                           PathDelay => tpd_CLKB_DOB6,
                           PathCondition => TRUE),
                     1 => (InputChangeTime => RSTB_dly'last_event,
                           PathDelay => tpd_RSTB_DOB6,
                           PathCondition => TRUE)),
      GlitchData => DOB6_GlitchData,
      Mode       => ondetect, XOn => XOn, MsgOn => MsgOn);
    VitalPathDelay01 (
      OutSignal => DOB7, OutSignalName => "DOB7", OutTemp => DOB7_zd,
      Paths      => (0 => (InputChangeTime => CLKB_dly'last_event,
                           PathDelay => tpd_CLKB_DOB7,
                           PathCondition => TRUE),
                     1 => (InputChangeTime => RSTB_dly'last_event,
                           PathDelay => tpd_RSTB_DOB7,
                           PathCondition => TRUE)),
      GlitchData => DOB7_GlitchData,
      Mode       => ondetect, XOn => XOn, MsgOn => MsgOn);
    VitalPathDelay01 (
      OutSignal => DOB8, OutSignalName => "DOB8", OutTemp => DOB8_zd,
      Paths      => (0 => (InputChangeTime => CLKB_dly'last_event,
                           PathDelay => tpd_CLKB_DOB8,
                           PathCondition => TRUE),
                     1 => (InputChangeTime => RSTB_dly'last_event,
                           PathDelay => tpd_RSTB_DOB8,
                           PathCondition => TRUE)),
      GlitchData => DOB8_GlitchData,
      Mode       => ondetect, XOn => XOn, MsgOn => MsgOn);
    VitalPathDelay01 (
      OutSignal => DOB9, OutSignalName => "DOB9", OutTemp => DOB9_zd,
      Paths      => (0 => (InputChangeTime => CLKB_dly'last_event,
                           PathDelay => tpd_CLKB_DOB9,
                           PathCondition => TRUE),
                     1 => (InputChangeTime => RSTB_dly'last_event,
                           PathDelay => tpd_RSTB_DOB9,
                           PathCondition => TRUE)),
      GlitchData => DOB9_GlitchData,
      Mode       => ondetect, XOn => XOn, MsgOn => MsgOn);
    VitalPathDelay01 (
      OutSignal => DOB10, OutSignalName => "DOB10", OutTemp => DOB10_zd,
      Paths      => (0 => (InputChangeTime => CLKB_dly'last_event,
                           PathDelay => tpd_CLKB_DOB10,
                           PathCondition => TRUE),
                     1 => (InputChangeTime => RSTB_dly'last_event,
                           PathDelay => tpd_RSTB_DOB10,
                           PathCondition => TRUE)),
      GlitchData => DOB10_GlitchData,
      Mode       => ondetect, XOn => XOn, MsgOn => MsgOn);
    VitalPathDelay01 (
      OutSignal => DOB11, OutSignalName => "DOB11", OutTemp => DOB11_zd,
      Paths      => (0 => (InputChangeTime => CLKB_dly'last_event,
                           PathDelay => tpd_CLKB_DOB11,
                           PathCondition => TRUE),
                     1 => (InputChangeTime => RSTB_dly'last_event,
                           PathDelay => tpd_RSTB_DOB11,
                           PathCondition => TRUE)),
      GlitchData => DOB11_GlitchData,
      Mode       => ondetect, XOn => XOn, MsgOn => MsgOn);
    VitalPathDelay01 (
      OutSignal => DOB12, OutSignalName => "DOB12", OutTemp => DOB12_zd,
      Paths      => (0 => (InputChangeTime => CLKB_dly'last_event,
                           PathDelay => tpd_CLKB_DOB12,
                           PathCondition => TRUE),
                     1 => (InputChangeTime => RSTB_dly'last_event,
                           PathDelay => tpd_RSTB_DOB12,
                           PathCondition => TRUE)),
      GlitchData => DOB12_GlitchData,
      Mode       => ondetect, XOn => XOn, MsgOn => MsgOn);
    VitalPathDelay01 (
      OutSignal => DOB13, OutSignalName => "DOB13", OutTemp => DOB13_zd,
      Paths      => (0 => (InputChangeTime => CLKB_dly'last_event,
                           PathDelay => tpd_CLKB_DOB13,
                           PathCondition => TRUE),
                     1 => (InputChangeTime => RSTB_dly'last_event,
                           PathDelay => tpd_RSTB_DOB13,
                           PathCondition => TRUE)),
      GlitchData => DOB13_GlitchData,
      Mode       => ondetect, XOn => XOn, MsgOn => MsgOn);
    VitalPathDelay01 (
      OutSignal => DOB14, OutSignalName => "DOB14", OutTemp => DOB14_zd,
      Paths      => (0 => (InputChangeTime => CLKB_dly'last_event,
                           PathDelay => tpd_CLKB_DOB14,
                           PathCondition => TRUE),
                     1 => (InputChangeTime => RSTB_dly'last_event,
                           PathDelay => tpd_RSTB_DOB14,
                           PathCondition => TRUE)),
      GlitchData => DOB14_GlitchData,
      Mode       => ondetect, XOn => XOn, MsgOn => MsgOn);
    VitalPathDelay01 (
      OutSignal => DOB15, OutSignalName => "DOB15", OutTemp => DOB15_zd,
      Paths      => (0 => (InputChangeTime => CLKB_dly'last_event,
                           PathDelay => tpd_CLKB_DOB15,
                           PathCondition => TRUE),
                     1 => (InputChangeTime => RSTB_dly'last_event,
                           PathDelay => tpd_RSTB_DOB15,
                           PathCondition => TRUE)),
      GlitchData => DOB15_GlitchData,
      Mode       => ondetect, XOn => XOn, MsgOn => MsgOn);

    END PROCESS;

  end Structure;

-- entity EHXPLLL0008
  library IEEE, vital2000, ECP5U;
  use IEEE.STD_LOGIC_1164.all;
  use vital2000.vital_timing.all;
  use ECP5U.COMPONENTS.ALL;

  entity EHXPLLL0008 is
    port (CLKI: in Std_logic; CLKFB: in Std_logic; PHASESEL1: in Std_logic; 
          PHASESEL0: in Std_logic; PHASEDIR: in Std_logic; 
          PHASESTEP: in Std_logic; PHASELOADREG: in Std_logic; 
          STDBY: in Std_logic; PLLWAKESYNC: in Std_logic; RST: in Std_logic; 
          ENCLKOP: in Std_logic; ENCLKOS: in Std_logic; ENCLKOS2: in Std_logic; 
          ENCLKOS3: in Std_logic; CLKOP: out Std_logic; CLKOS: out Std_logic; 
          CLKOS2: out Std_logic; CLKOS3: out Std_logic; LOCK: out Std_logic; 
          INTLOCK: out Std_logic; REFCLK: out Std_logic; 
          CLKINTFB: out Std_logic);



  end EHXPLLL0008;

  architecture Structure of EHXPLLL0008 is
  begin
    INST10: EHXPLLL
      generic map (CLKFB_DIV => 20, CLKI_DIV => 1, CLKOP_CPHASE => 2, 
                   CLKOP_DIV => 3, CLKOP_ENABLE => "ENABLED", 
                   CLKOP_FPHASE => 0, CLKOP_TRIM_DELAY => 0, 
                   CLKOP_TRIM_POL => "FALLING", CLKOS2_CPHASE => 0, 
                   CLKOS2_DIV => 1, CLKOS2_ENABLE => "DISABLED", 
                   CLKOS2_FPHASE => 0, CLKOS3_CPHASE => 0, CLKOS3_DIV => 1, 
                   CLKOS3_ENABLE => "DISABLED", CLKOS3_FPHASE => 0, 
                   CLKOS_CPHASE => 0, CLKOS_DIV => 1, 
                   CLKOS_ENABLE => "DISABLED", CLKOS_FPHASE => 0, 
                   CLKOS_TRIM_DELAY => 0, CLKOS_TRIM_POL => "FALLING", 
                   DPHASE_SOURCE => "DISABLED", FEEDBK_PATH => "CLKOP", 
                   INTFB_WAKE => "DISABLED", INT_LOCK_STICKY => "ENABLED", 
                   OUTDIVIDER_MUXA => "DIVA", OUTDIVIDER_MUXB => "DIVB", 
                   OUTDIVIDER_MUXC => "DIVC", OUTDIVIDER_MUXD => "DIVD", 
                   PLLRST_ENA => "ENABLED", PLL_LOCK_DELAY => 200, 
                   PLL_LOCK_MODE => 0, REFIN_RESET => "DISABLED", 
                   STDBY_ENABLE => "DISABLED", SYNC_ENABLE => "DISABLED")
      port map (CLKI=>CLKI, CLKFB=>CLKFB, PHASESEL1=>PHASESEL1, 
                PHASESEL0=>PHASESEL0, PHASEDIR=>PHASEDIR, PHASESTEP=>PHASESTEP, 
                PHASELOADREG=>PHASELOADREG, STDBY=>STDBY, 
                PLLWAKESYNC=>PLLWAKESYNC, RST=>RST, ENCLKOP=>ENCLKOP, 
                ENCLKOS=>ENCLKOS, ENCLKOS2=>ENCLKOS2, ENCLKOS3=>ENCLKOS3, 
                CLKOP=>CLKOP, CLKOS=>CLKOS, CLKOS2=>CLKOS2, CLKOS3=>CLKOS3, 
                LOCK=>LOCK, INTLOCK=>INTLOCK, REFCLK=>REFCLK, 
                CLKINTFB=>CLKINTFB);
  end Structure;

-- entity second_pll_PLLInst_0
  library IEEE, vital2000, ECP5U;
  use IEEE.STD_LOGIC_1164.all;
  use vital2000.vital_timing.all;
  use ECP5U.COMPONENTS.ALL;

  entity second_pll_PLLInst_0 is
    -- miscellaneous vital GENERICs
    GENERIC (
      TimingChecksOn	: boolean := TRUE;
      XOn           	: boolean := FALSE;
      MsgOn         	: boolean := TRUE;
      InstancePath  	: string := "second_pll_PLLInst_0";

      tipd_CLKI  	: VitalDelayType01 := (0 ns, 0 ns);
      tipd_CLKFB  	: VitalDelayType01 := (0 ns, 0 ns);
      tipd_STDBY  	: VitalDelayType01 := (0 ns, 0 ns);
      tipd_RST  	: VitalDelayType01 := (0 ns, 0 ns);
      tpd_CLKI_CLKOP	 : VitalDelayType01 := (0 ns, 0 ns);
      tpd_CLKFB_CLKOP	 : VitalDelayType01 := (0 ns, 0 ns));

    port (CLKI: in Std_logic; CLKFB: in Std_logic; STDBY: in Std_logic; 
          RST: in Std_logic; LOCK: out Std_logic; CLKOP: out Std_logic);



  end second_pll_PLLInst_0;

  architecture Structure of second_pll_PLLInst_0 is
    signal CLKI_ipd 	: std_logic := 'X';
    signal CLKFB_ipd 	: std_logic := 'X';
    signal STDBY_ipd 	: std_logic := 'X';
    signal RST_ipd 	: std_logic := 'X';
    signal LOCK_out 	: std_logic := 'X';
    signal CLKOP_out 	: std_logic := 'X';

    signal GNDI: Std_logic;
    component gnd
      port (PWR0: out Std_logic);
    end component;
    component EHXPLLL0008
      port (CLKI: in Std_logic; CLKFB: in Std_logic; PHASESEL1: in Std_logic; 
            PHASESEL0: in Std_logic; PHASEDIR: in Std_logic; 
            PHASESTEP: in Std_logic; PHASELOADREG: in Std_logic; 
            STDBY: in Std_logic; PLLWAKESYNC: in Std_logic; RST: in Std_logic; 
            ENCLKOP: in Std_logic; ENCLKOS: in Std_logic; 
            ENCLKOS2: in Std_logic; ENCLKOS3: in Std_logic; 
            CLKOP: out Std_logic; CLKOS: out Std_logic; CLKOS2: out Std_logic; 
            CLKOS3: out Std_logic; LOCK: out Std_logic; INTLOCK: out Std_logic; 
            REFCLK: out Std_logic; CLKINTFB: out Std_logic);
    end component;
  begin
    second_pll_PLLInst_0_EHXPLLL: EHXPLLL0008
      port map (CLKI=>CLKI_ipd, CLKFB=>CLKFB_ipd, PHASESEL1=>GNDI, 
                PHASESEL0=>GNDI, PHASEDIR=>GNDI, PHASESTEP=>GNDI, 
                PHASELOADREG=>GNDI, STDBY=>STDBY_ipd, PLLWAKESYNC=>GNDI, 
                RST=>RST_ipd, ENCLKOP=>GNDI, ENCLKOS=>GNDI, ENCLKOS2=>GNDI, 
                ENCLKOS3=>GNDI, CLKOP=>CLKOP_out, CLKOS=>open, CLKOS2=>open, 
                CLKOS3=>open, LOCK=>LOCK_out, INTLOCK=>open, REFCLK=>open, 
                CLKINTFB=>open);
    DRIVEGND: gnd
      port map (PWR0=>GNDI);

    --  INPUT PATH DELAYs
    WireDelay : BLOCK
    BEGIN
      VitalWireDelay(CLKI_ipd, CLKI, tipd_CLKI);
      VitalWireDelay(CLKFB_ipd, CLKFB, tipd_CLKFB);
      VitalWireDelay(STDBY_ipd, STDBY, tipd_STDBY);
      VitalWireDelay(RST_ipd, RST, tipd_RST);
    END BLOCK;

    VitalBehavior : PROCESS (CLKI_ipd, CLKFB_ipd, STDBY_ipd, RST_ipd, LOCK_out, 
      CLKOP_out)
    VARIABLE CLKOP_zd         	: std_logic := 'X';
    VARIABLE CLKOP_GlitchData 	: VitalGlitchDataType;


    BEGIN

    IF (TimingChecksOn) THEN

    END IF;

    LOCK 	<= LOCK_out;
    CLKOP_zd 	:= CLKOP_out;

    VitalPathDelay01 (
      OutSignal => CLKOP, OutSignalName => "CLKOP", OutTemp => CLKOP_zd,
      Paths      => (0 => (InputChangeTime => CLKI_ipd'last_event,
                           PathDelay => tpd_CLKI_CLKOP,
                           PathCondition => TRUE),
                     1 => (InputChangeTime => CLKFB_ipd'last_event,
                           PathDelay => tpd_CLKFB_CLKOP,
                           PathCondition => TRUE)),
      GlitchData => CLKOP_GlitchData,
      Mode       => ondetect, XOn => XOn, MsgOn => MsgOn);

    END PROCESS;

  end Structure;

-- entity GSR5MODE
  library IEEE, vital2000, ECP5U;
  use IEEE.STD_LOGIC_1164.all;
  use vital2000.vital_timing.all;
  use ECP5U.COMPONENTS.ALL;

  entity GSR5MODE is
    port (GSRP: in Std_logic);

    ATTRIBUTE Vital_Level0 OF GSR5MODE : ENTITY IS TRUE;

  end GSR5MODE;

  architecture Structure of GSR5MODE is
    signal GSRMODE: Std_logic;
  begin
    INST10: BUFBA
      port map (A=>GSRP, Z=>GSRMODE);
    INST20: GSR
      port map (GSR=>GSRMODE);
  end Structure;

-- entity GSR_INSTB
  library IEEE, vital2000, ECP5U;
  use IEEE.STD_LOGIC_1164.all;
  use vital2000.vital_timing.all;
  use ECP5U.COMPONENTS.ALL;

  entity GSR_INSTB is
    -- miscellaneous vital GENERICs
    GENERIC (
      TimingChecksOn	: boolean := TRUE;
      XOn           	: boolean := FALSE;
      MsgOn         	: boolean := TRUE;
      InstancePath  	: string := "GSR_INSTB";

      tipd_GSRNET  	: VitalDelayType01 := (0 ns, 0 ns));

    port (GSRNET: in Std_logic);

    ATTRIBUTE Vital_Level0 OF GSR_INSTB : ENTITY IS TRUE;

  end GSR_INSTB;

  architecture Structure of GSR_INSTB is
    ATTRIBUTE Vital_Level0 OF Structure : ARCHITECTURE IS TRUE;

    signal GSRNET_ipd 	: std_logic := 'X';

    component GSR5MODE
      port (GSRP: in Std_logic);
    end component;
  begin
    GSR_INST_GSRMODE: GSR5MODE
      port map (GSRP=>GSRNET_ipd);

    --  INPUT PATH DELAYs
    WireDelay : BLOCK
    BEGIN
      VitalWireDelay(GSRNET_ipd, GSRNET, tipd_GSRNET);
    END BLOCK;

    VitalBehavior : PROCESS (GSRNET_ipd)


    BEGIN

    IF (TimingChecksOn) THEN

    END IF;



    END PROCESS;

  end Structure;

-- entity DP16KD0009
  library IEEE, vital2000, ECP5U;
  use IEEE.STD_LOGIC_1164.all;
  use vital2000.vital_timing.all;
  use ECP5U.COMPONENTS.ALL;

  entity DP16KD0009 is
    port (CEA: in Std_logic; OCEA: in Std_logic; CLKA: in Std_logic; 
          WEA: in Std_logic; CSA0: in Std_logic; CSA1: in Std_logic; 
          CSA2: in Std_logic; RSTA: in Std_logic; CEB: in Std_logic; 
          OCEB: in Std_logic; CLKB: in Std_logic; WEB: in Std_logic; 
          CSB0: in Std_logic; CSB1: in Std_logic; CSB2: in Std_logic; 
          RSTB: in Std_logic; DIA0: in Std_logic; DIA1: in Std_logic; 
          DIA2: in Std_logic; DIA3: in Std_logic; DIA4: in Std_logic; 
          DIA5: in Std_logic; DIA6: in Std_logic; DIA7: in Std_logic; 
          DIA8: in Std_logic; DIA9: in Std_logic; DIA10: in Std_logic; 
          DIA11: in Std_logic; DIA12: in Std_logic; DIA13: in Std_logic; 
          DIA14: in Std_logic; DIA15: in Std_logic; DIA16: in Std_logic; 
          DIA17: in Std_logic; ADA0: in Std_logic; ADA1: in Std_logic; 
          ADA2: in Std_logic; ADA3: in Std_logic; ADA4: in Std_logic; 
          ADA5: in Std_logic; ADA6: in Std_logic; ADA7: in Std_logic; 
          ADA8: in Std_logic; ADA9: in Std_logic; ADA10: in Std_logic; 
          ADA11: in Std_logic; ADA12: in Std_logic; ADA13: in Std_logic; 
          DIB0: in Std_logic; DIB1: in Std_logic; DIB2: in Std_logic; 
          DIB3: in Std_logic; DIB4: in Std_logic; DIB5: in Std_logic; 
          DIB6: in Std_logic; DIB7: in Std_logic; DIB8: in Std_logic; 
          DIB9: in Std_logic; DIB10: in Std_logic; DIB11: in Std_logic; 
          DIB12: in Std_logic; DIB13: in Std_logic; DIB14: in Std_logic; 
          DIB15: in Std_logic; DIB16: in Std_logic; DIB17: in Std_logic; 
          ADB0: in Std_logic; ADB1: in Std_logic; ADB2: in Std_logic; 
          ADB3: in Std_logic; ADB4: in Std_logic; ADB5: in Std_logic; 
          ADB6: in Std_logic; ADB7: in Std_logic; ADB8: in Std_logic; 
          ADB9: in Std_logic; ADB10: in Std_logic; ADB11: in Std_logic; 
          ADB12: in Std_logic; ADB13: in Std_logic; DOA0: out Std_logic; 
          DOA1: out Std_logic; DOA2: out Std_logic; DOA3: out Std_logic; 
          DOA4: out Std_logic; DOA5: out Std_logic; DOA6: out Std_logic; 
          DOA7: out Std_logic; DOA8: out Std_logic; DOA9: out Std_logic; 
          DOA10: out Std_logic; DOA11: out Std_logic; DOA12: out Std_logic; 
          DOA13: out Std_logic; DOA14: out Std_logic; DOA15: out Std_logic; 
          DOA16: out Std_logic; DOA17: out Std_logic; DOB0: out Std_logic; 
          DOB1: out Std_logic; DOB2: out Std_logic; DOB3: out Std_logic; 
          DOB4: out Std_logic; DOB5: out Std_logic; DOB6: out Std_logic; 
          DOB7: out Std_logic; DOB8: out Std_logic; DOB9: out Std_logic; 
          DOB10: out Std_logic; DOB11: out Std_logic; DOB12: out Std_logic; 
          DOB13: out Std_logic; DOB14: out Std_logic; DOB15: out Std_logic; 
          DOB16: out Std_logic; DOB17: out Std_logic);

    ATTRIBUTE Vital_Level0 OF DP16KD0009 : ENTITY IS TRUE;

  end DP16KD0009;

  architecture Structure of DP16KD0009 is
  begin
    INST10: DP16KD
      generic map (ASYNC_RESET_RELEASE => "SYNC", CSDECODE_A => "0b000", 
                   CSDECODE_B => "0b000", DATA_WIDTH_A => 18, 
                   DATA_WIDTH_B => 18, GSR => "ENABLED", 
                   INITVAL_00 => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_01 => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_02 => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_03 => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_04 => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_05 => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_06 => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_07 => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_08 => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_09 => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_0A => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_0B => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_0C => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_0D => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_0E => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_0F => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_10 => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_11 => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_12 => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_13 => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_14 => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_15 => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_16 => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_17 => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_18 => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_19 => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_1A => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_1B => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_1C => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_1D => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_1E => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_1F => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_20 => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_21 => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_22 => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_23 => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_24 => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_25 => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_26 => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_27 => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_28 => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_29 => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_2A => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_2B => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_2C => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_2D => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_2E => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_2F => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_30 => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_31 => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_32 => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_33 => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_34 => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_35 => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_36 => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_37 => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_38 => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_39 => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_3A => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_3B => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_3C => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_3D => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_3E => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , 
                   INITVAL_3F => "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000"
                   , INIT_DATA => "STATIC", REGMODE_A => "NOREG", 
                   REGMODE_B => "NOREG", RESETMODE => "ASYNC", 
                   WRITEMODE_A => "NORMAL", WRITEMODE_B => "NORMAL")
      port map (DIA0=>DIA0, DIA1=>DIA1, DIA2=>DIA2, DIA3=>DIA3, DIA4=>DIA4, 
                DIA5=>DIA5, DIA6=>DIA6, DIA7=>DIA7, DIA8=>DIA8, DIA9=>DIA9, 
                DIA10=>DIA10, DIA11=>DIA11, DIA12=>DIA12, DIA13=>DIA13, 
                DIA14=>DIA14, DIA15=>DIA15, DIA16=>DIA16, DIA17=>DIA17, 
                ADA0=>ADA0, ADA1=>ADA1, ADA2=>ADA2, ADA3=>ADA3, ADA4=>ADA4, 
                ADA5=>ADA5, ADA6=>ADA6, ADA7=>ADA7, ADA8=>ADA8, ADA9=>ADA9, 
                ADA10=>ADA10, ADA11=>ADA11, ADA12=>ADA12, ADA13=>ADA13, 
                CEA=>CEA, OCEA=>OCEA, CLKA=>CLKA, WEA=>WEA, CSA0=>CSA0, 
                CSA1=>CSA1, CSA2=>CSA2, RSTA=>RSTA, DIB0=>DIB0, DIB1=>DIB1, 
                DIB2=>DIB2, DIB3=>DIB3, DIB4=>DIB4, DIB5=>DIB5, DIB6=>DIB6, 
                DIB7=>DIB7, DIB8=>DIB8, DIB9=>DIB9, DIB10=>DIB10, DIB11=>DIB11, 
                DIB12=>DIB12, DIB13=>DIB13, DIB14=>DIB14, DIB15=>DIB15, 
                DIB16=>DIB16, DIB17=>DIB17, ADB0=>ADB0, ADB1=>ADB1, ADB2=>ADB2, 
                ADB3=>ADB3, ADB4=>ADB4, ADB5=>ADB5, ADB6=>ADB6, ADB7=>ADB7, 
                ADB8=>ADB8, ADB9=>ADB9, ADB10=>ADB10, ADB11=>ADB11, 
                ADB12=>ADB12, ADB13=>ADB13, CEB=>CEB, OCEB=>OCEB, CLKB=>CLKB, 
                WEB=>WEB, CSB0=>CSB0, CSB1=>CSB1, CSB2=>CSB2, RSTB=>RSTB, 
                DOA0=>DOA0, DOA1=>DOA1, DOA2=>DOA2, DOA3=>DOA3, DOA4=>DOA4, 
                DOA5=>DOA5, DOA6=>DOA6, DOA7=>DOA7, DOA8=>DOA8, DOA9=>DOA9, 
                DOA10=>DOA10, DOA11=>DOA11, DOA12=>DOA12, DOA13=>DOA13, 
                DOA14=>DOA14, DOA15=>DOA15, DOA16=>DOA16, DOA17=>DOA17, 
                DOB0=>DOB0, DOB1=>DOB1, DOB2=>DOB2, DOB3=>DOB3, DOB4=>DOB4, 
                DOB5=>DOB5, DOB6=>DOB6, DOB7=>DOB7, DOB8=>DOB8, DOB9=>DOB9, 
                DOB10=>DOB10, DOB11=>DOB11, DOB12=>DOB12, DOB13=>DOB13, 
                DOB14=>DOB14, DOB15=>DOB15, DOB16=>DOB16, DOB17=>DOB17);
  end Structure;

-- entity wifi_q_fifo_dc_pdp_ram_0_0_0
  library IEEE, vital2000, ECP5U;
  use IEEE.STD_LOGIC_1164.all;
  use vital2000.vital_timing.all;
  use ECP5U.COMPONENTS.ALL;

  entity wifi_q_fifo_dc_pdp_ram_0_0_0 is
    -- miscellaneous vital GENERICs
    GENERIC (
      TimingChecksOn	: boolean := TRUE;
      XOn           	: boolean := FALSE;
      MsgOn         	: boolean := TRUE;
      InstancePath  	: string := "wifi_q_fifo_dc_pdp_ram_0_0_0";

      tipd_DIA15  	: VitalDelayType01 := (0 ns, 0 ns);
      tipd_DIA14  	: VitalDelayType01 := (0 ns, 0 ns);
      tipd_DIA13  	: VitalDelayType01 := (0 ns, 0 ns);
      tipd_DIA12  	: VitalDelayType01 := (0 ns, 0 ns);
      tipd_DIA11  	: VitalDelayType01 := (0 ns, 0 ns);
      tipd_DIA10  	: VitalDelayType01 := (0 ns, 0 ns);
      tipd_DIA9  	: VitalDelayType01 := (0 ns, 0 ns);
      tipd_DIA8  	: VitalDelayType01 := (0 ns, 0 ns);
      tipd_DIA7  	: VitalDelayType01 := (0 ns, 0 ns);
      tipd_DIA6  	: VitalDelayType01 := (0 ns, 0 ns);
      tipd_DIA5  	: VitalDelayType01 := (0 ns, 0 ns);
      tipd_DIA4  	: VitalDelayType01 := (0 ns, 0 ns);
      tipd_DIA3  	: VitalDelayType01 := (0 ns, 0 ns);
      tipd_DIA2  	: VitalDelayType01 := (0 ns, 0 ns);
      tipd_DIA1  	: VitalDelayType01 := (0 ns, 0 ns);
      tipd_DIA0  	: VitalDelayType01 := (0 ns, 0 ns);
      tipd_ADA5  	: VitalDelayType01 := (0 ns, 0 ns);
      tipd_ADA4  	: VitalDelayType01 := (0 ns, 0 ns);
      tipd_CEA  	: VitalDelayType01 := (0 ns, 0 ns);
      tipd_OCEA  	: VitalDelayType01 := (0 ns, 0 ns);
      tipd_RSTA  	: VitalDelayType01 := (0 ns, 0 ns);
      tipd_CLKA  	: VitalDelayType01 := (0 ns, 0 ns);
      tipd_CLKB  	: VitalDelayType01 := (0 ns, 0 ns);
      tipd_RSTB  	: VitalDelayType01 := (0 ns, 0 ns);
      tipd_OCEB  	: VitalDelayType01 := (0 ns, 0 ns);
      tipd_CEB  	: VitalDelayType01 := (0 ns, 0 ns);
      tipd_ADB4  	: VitalDelayType01 := (0 ns, 0 ns);
      tipd_ADB5  	: VitalDelayType01 := (0 ns, 0 ns);
      tpd_CLKB_DOB0	 : VitalDelayType01 := (0 ns, 0 ns);
      tpd_CLKB_DOB1	 : VitalDelayType01 := (0 ns, 0 ns);
      tpd_CLKB_DOB2	 : VitalDelayType01 := (0 ns, 0 ns);
      tpd_CLKB_DOB3	 : VitalDelayType01 := (0 ns, 0 ns);
      tpd_CLKB_DOB4	 : VitalDelayType01 := (0 ns, 0 ns);
      tpd_CLKB_DOB5	 : VitalDelayType01 := (0 ns, 0 ns);
      tpd_CLKB_DOB6	 : VitalDelayType01 := (0 ns, 0 ns);
      tpd_CLKB_DOB7	 : VitalDelayType01 := (0 ns, 0 ns);
      tpd_CLKB_DOB8	 : VitalDelayType01 := (0 ns, 0 ns);
      tpd_CLKB_DOB9	 : VitalDelayType01 := (0 ns, 0 ns);
      tpd_CLKB_DOB10	 : VitalDelayType01 := (0 ns, 0 ns);
      tpd_CLKB_DOB11	 : VitalDelayType01 := (0 ns, 0 ns);
      tpd_CLKB_DOB12	 : VitalDelayType01 := (0 ns, 0 ns);
      tpd_CLKB_DOB13	 : VitalDelayType01 := (0 ns, 0 ns);
      tpd_CLKB_DOB14	 : VitalDelayType01 := (0 ns, 0 ns);
      tpd_CLKB_DOB15	 : VitalDelayType01 := (0 ns, 0 ns);
      tpd_RSTB_DOB0	 : VitalDelayType01 := (0 ns, 0 ns);
      tpd_RSTB_DOB1	 : VitalDelayType01 := (0 ns, 0 ns);
      tpd_RSTB_DOB2	 : VitalDelayType01 := (0 ns, 0 ns);
      tpd_RSTB_DOB3	 : VitalDelayType01 := (0 ns, 0 ns);
      tpd_RSTB_DOB4	 : VitalDelayType01 := (0 ns, 0 ns);
      tpd_RSTB_DOB5	 : VitalDelayType01 := (0 ns, 0 ns);
      tpd_RSTB_DOB6	 : VitalDelayType01 := (0 ns, 0 ns);
      tpd_RSTB_DOB7	 : VitalDelayType01 := (0 ns, 0 ns);
      tpd_RSTB_DOB8	 : VitalDelayType01 := (0 ns, 0 ns);
      tpd_RSTB_DOB9	 : VitalDelayType01 := (0 ns, 0 ns);
      tpd_RSTB_DOB10	 : VitalDelayType01 := (0 ns, 0 ns);
      tpd_RSTB_DOB11	 : VitalDelayType01 := (0 ns, 0 ns);
      tpd_RSTB_DOB12	 : VitalDelayType01 := (0 ns, 0 ns);
      tpd_RSTB_DOB13	 : VitalDelayType01 := (0 ns, 0 ns);
      tpd_RSTB_DOB14	 : VitalDelayType01 := (0 ns, 0 ns);
      tpd_RSTB_DOB15	 : VitalDelayType01 := (0 ns, 0 ns);
      ticd_CLKA	: VitalDelayType := 0 ns;
      tisd_DIA15_CLKA	: VitalDelayType := 0 ns;
      tsetup_DIA15_CLKA_noedge_posedge	: VitalDelayType := 0 ns;
      thold_DIA15_CLKA_noedge_posedge	: VitalDelayType := 0 ns;
      tisd_DIA14_CLKA	: VitalDelayType := 0 ns;
      tsetup_DIA14_CLKA_noedge_posedge	: VitalDelayType := 0 ns;
      thold_DIA14_CLKA_noedge_posedge	: VitalDelayType := 0 ns;
      tisd_DIA13_CLKA	: VitalDelayType := 0 ns;
      tsetup_DIA13_CLKA_noedge_posedge	: VitalDelayType := 0 ns;
      thold_DIA13_CLKA_noedge_posedge	: VitalDelayType := 0 ns;
      tisd_DIA12_CLKA	: VitalDelayType := 0 ns;
      tsetup_DIA12_CLKA_noedge_posedge	: VitalDelayType := 0 ns;
      thold_DIA12_CLKA_noedge_posedge	: VitalDelayType := 0 ns;
      tisd_DIA11_CLKA	: VitalDelayType := 0 ns;
      tsetup_DIA11_CLKA_noedge_posedge	: VitalDelayType := 0 ns;
      thold_DIA11_CLKA_noedge_posedge	: VitalDelayType := 0 ns;
      tisd_DIA10_CLKA	: VitalDelayType := 0 ns;
      tsetup_DIA10_CLKA_noedge_posedge	: VitalDelayType := 0 ns;
      thold_DIA10_CLKA_noedge_posedge	: VitalDelayType := 0 ns;
      tisd_DIA9_CLKA	: VitalDelayType := 0 ns;
      tsetup_DIA9_CLKA_noedge_posedge	: VitalDelayType := 0 ns;
      thold_DIA9_CLKA_noedge_posedge	: VitalDelayType := 0 ns;
      tisd_DIA8_CLKA	: VitalDelayType := 0 ns;
      tsetup_DIA8_CLKA_noedge_posedge	: VitalDelayType := 0 ns;
      thold_DIA8_CLKA_noedge_posedge	: VitalDelayType := 0 ns;
      tisd_DIA7_CLKA	: VitalDelayType := 0 ns;
      tsetup_DIA7_CLKA_noedge_posedge	: VitalDelayType := 0 ns;
      thold_DIA7_CLKA_noedge_posedge	: VitalDelayType := 0 ns;
      tisd_DIA6_CLKA	: VitalDelayType := 0 ns;
      tsetup_DIA6_CLKA_noedge_posedge	: VitalDelayType := 0 ns;
      thold_DIA6_CLKA_noedge_posedge	: VitalDelayType := 0 ns;
      tisd_DIA5_CLKA	: VitalDelayType := 0 ns;
      tsetup_DIA5_CLKA_noedge_posedge	: VitalDelayType := 0 ns;
      thold_DIA5_CLKA_noedge_posedge	: VitalDelayType := 0 ns;
      tisd_DIA4_CLKA	: VitalDelayType := 0 ns;
      tsetup_DIA4_CLKA_noedge_posedge	: VitalDelayType := 0 ns;
      thold_DIA4_CLKA_noedge_posedge	: VitalDelayType := 0 ns;
      tisd_DIA3_CLKA	: VitalDelayType := 0 ns;
      tsetup_DIA3_CLKA_noedge_posedge	: VitalDelayType := 0 ns;
      thold_DIA3_CLKA_noedge_posedge	: VitalDelayType := 0 ns;
      tisd_DIA2_CLKA	: VitalDelayType := 0 ns;
      tsetup_DIA2_CLKA_noedge_posedge	: VitalDelayType := 0 ns;
      thold_DIA2_CLKA_noedge_posedge	: VitalDelayType := 0 ns;
      tisd_DIA1_CLKA	: VitalDelayType := 0 ns;
      tsetup_DIA1_CLKA_noedge_posedge	: VitalDelayType := 0 ns;
      thold_DIA1_CLKA_noedge_posedge	: VitalDelayType := 0 ns;
      tisd_DIA0_CLKA	: VitalDelayType := 0 ns;
      tsetup_DIA0_CLKA_noedge_posedge	: VitalDelayType := 0 ns;
      thold_DIA0_CLKA_noedge_posedge	: VitalDelayType := 0 ns;
      tisd_ADA5_CLKA	: VitalDelayType := 0 ns;
      tsetup_ADA5_CLKA_noedge_posedge	: VitalDelayType := 0 ns;
      thold_ADA5_CLKA_noedge_posedge	: VitalDelayType := 0 ns;
      tisd_ADA4_CLKA	: VitalDelayType := 0 ns;
      tsetup_ADA4_CLKA_noedge_posedge	: VitalDelayType := 0 ns;
      thold_ADA4_CLKA_noedge_posedge	: VitalDelayType := 0 ns;
      tisd_CEA_CLKA	: VitalDelayType := 0 ns;
      tsetup_CEA_CLKA_noedge_posedge	: VitalDelayType := 0 ns;
      thold_CEA_CLKA_noedge_posedge	: VitalDelayType := 0 ns;
      tisd_OCEA_CLKA	: VitalDelayType := 0 ns;
      tsetup_OCEA_CLKA_noedge_posedge	: VitalDelayType := 0 ns;
      thold_OCEA_CLKA_noedge_posedge	: VitalDelayType := 0 ns;
      tisd_RSTA_CLKA	: VitalDelayType := 0 ns;
      tsetup_RSTA_CLKA_noedge_posedge	: VitalDelayType := 0 ns;
      thold_RSTA_CLKA_noedge_posedge	: VitalDelayType := 0 ns;
      ticd_CLKB	: VitalDelayType := 0 ns;
      tisd_RSTB_CLKB	: VitalDelayType := 0 ns;
      tsetup_RSTB_CLKB_noedge_posedge	: VitalDelayType := 0 ns;
      thold_RSTB_CLKB_noedge_posedge	: VitalDelayType := 0 ns;
      tisd_OCEB_CLKB	: VitalDelayType := 0 ns;
      tsetup_OCEB_CLKB_noedge_posedge	: VitalDelayType := 0 ns;
      thold_OCEB_CLKB_noedge_posedge	: VitalDelayType := 0 ns;
      tisd_CEB_CLKB	: VitalDelayType := 0 ns;
      tsetup_CEB_CLKB_noedge_posedge	: VitalDelayType := 0 ns;
      thold_CEB_CLKB_noedge_posedge	: VitalDelayType := 0 ns;
      tisd_ADB4_CLKB	: VitalDelayType := 0 ns;
      tsetup_ADB4_CLKB_noedge_posedge	: VitalDelayType := 0 ns;
      thold_ADB4_CLKB_noedge_posedge	: VitalDelayType := 0 ns;
      tisd_ADB5_CLKB	: VitalDelayType := 0 ns;
      tsetup_ADB5_CLKB_noedge_posedge	: VitalDelayType := 0 ns;
      thold_ADB5_CLKB_noedge_posedge	: VitalDelayType := 0 ns;
      tperiod_CLKA 	: VitalDelayType := 0 ns;
      tpw_CLKA_posedge	: VitalDelayType := 0 ns;
      tpw_CLKA_negedge	: VitalDelayType := 0 ns;
      tperiod_CLKB 	: VitalDelayType := 0 ns;
      tpw_CLKB_posedge	: VitalDelayType := 0 ns;
      tpw_CLKB_negedge	: VitalDelayType := 0 ns);

    port (DIA15: in Std_logic; DIA14: in Std_logic; DIA13: in Std_logic; 
          DIA12: in Std_logic; DIA11: in Std_logic; DIA10: in Std_logic; 
          DIA9: in Std_logic; DIA8: in Std_logic; DIA7: in Std_logic; 
          DIA6: in Std_logic; DIA5: in Std_logic; DIA4: in Std_logic; 
          DIA3: in Std_logic; DIA2: in Std_logic; DIA1: in Std_logic; 
          DIA0: in Std_logic; ADA5: in Std_logic; ADA4: in Std_logic; 
          CEA: in Std_logic; OCEA: in Std_logic; RSTA: in Std_logic; 
          CLKA: in Std_logic; CLKB: in Std_logic; RSTB: in Std_logic; 
          OCEB: in Std_logic; CEB: in Std_logic; DOB0: out Std_logic; 
          DOB1: out Std_logic; DOB2: out Std_logic; DOB3: out Std_logic; 
          DOB4: out Std_logic; DOB5: out Std_logic; DOB6: out Std_logic; 
          DOB7: out Std_logic; DOB8: out Std_logic; DOB9: out Std_logic; 
          DOB10: out Std_logic; DOB11: out Std_logic; DOB12: out Std_logic; 
          DOB13: out Std_logic; DOB14: out Std_logic; DOB15: out Std_logic; 
          ADB4: in Std_logic; ADB5: in Std_logic);

    ATTRIBUTE Vital_Level0 OF wifi_q_fifo_dc_pdp_ram_0_0_0 : ENTITY IS TRUE;

  end wifi_q_fifo_dc_pdp_ram_0_0_0;

  architecture Structure of wifi_q_fifo_dc_pdp_ram_0_0_0 is
    ATTRIBUTE Vital_Level0 OF Structure : ARCHITECTURE IS TRUE;

    signal DIA15_ipd 	: std_logic := 'X';
    signal DIA15_dly 	: std_logic := 'X';
    signal DIA14_ipd 	: std_logic := 'X';
    signal DIA14_dly 	: std_logic := 'X';
    signal DIA13_ipd 	: std_logic := 'X';
    signal DIA13_dly 	: std_logic := 'X';
    signal DIA12_ipd 	: std_logic := 'X';
    signal DIA12_dly 	: std_logic := 'X';
    signal DIA11_ipd 	: std_logic := 'X';
    signal DIA11_dly 	: std_logic := 'X';
    signal DIA10_ipd 	: std_logic := 'X';
    signal DIA10_dly 	: std_logic := 'X';
    signal DIA9_ipd 	: std_logic := 'X';
    signal DIA9_dly 	: std_logic := 'X';
    signal DIA8_ipd 	: std_logic := 'X';
    signal DIA8_dly 	: std_logic := 'X';
    signal DIA7_ipd 	: std_logic := 'X';
    signal DIA7_dly 	: std_logic := 'X';
    signal DIA6_ipd 	: std_logic := 'X';
    signal DIA6_dly 	: std_logic := 'X';
    signal DIA5_ipd 	: std_logic := 'X';
    signal DIA5_dly 	: std_logic := 'X';
    signal DIA4_ipd 	: std_logic := 'X';
    signal DIA4_dly 	: std_logic := 'X';
    signal DIA3_ipd 	: std_logic := 'X';
    signal DIA3_dly 	: std_logic := 'X';
    signal DIA2_ipd 	: std_logic := 'X';
    signal DIA2_dly 	: std_logic := 'X';
    signal DIA1_ipd 	: std_logic := 'X';
    signal DIA1_dly 	: std_logic := 'X';
    signal DIA0_ipd 	: std_logic := 'X';
    signal DIA0_dly 	: std_logic := 'X';
    signal ADA5_ipd 	: std_logic := 'X';
    signal ADA5_dly 	: std_logic := 'X';
    signal ADA4_ipd 	: std_logic := 'X';
    signal ADA4_dly 	: std_logic := 'X';
    signal CEA_ipd 	: std_logic := 'X';
    signal CEA_dly 	: std_logic := 'X';
    signal OCEA_ipd 	: std_logic := 'X';
    signal OCEA_dly 	: std_logic := 'X';
    signal RSTA_ipd 	: std_logic := 'X';
    signal RSTA_dly 	: std_logic := 'X';
    signal CLKA_ipd 	: std_logic := 'X';
    signal CLKA_dly 	: std_logic := 'X';
    signal CLKB_ipd 	: std_logic := 'X';
    signal CLKB_dly 	: std_logic := 'X';
    signal RSTB_ipd 	: std_logic := 'X';
    signal RSTB_dly 	: std_logic := 'X';
    signal OCEB_ipd 	: std_logic := 'X';
    signal OCEB_dly 	: std_logic := 'X';
    signal CEB_ipd 	: std_logic := 'X';
    signal CEB_dly 	: std_logic := 'X';
    signal DOB0_out 	: std_logic := 'X';
    signal DOB1_out 	: std_logic := 'X';
    signal DOB2_out 	: std_logic := 'X';
    signal DOB3_out 	: std_logic := 'X';
    signal DOB4_out 	: std_logic := 'X';
    signal DOB5_out 	: std_logic := 'X';
    signal DOB6_out 	: std_logic := 'X';
    signal DOB7_out 	: std_logic := 'X';
    signal DOB8_out 	: std_logic := 'X';
    signal DOB9_out 	: std_logic := 'X';
    signal DOB10_out 	: std_logic := 'X';
    signal DOB11_out 	: std_logic := 'X';
    signal DOB12_out 	: std_logic := 'X';
    signal DOB13_out 	: std_logic := 'X';
    signal DOB14_out 	: std_logic := 'X';
    signal DOB15_out 	: std_logic := 'X';
    signal ADB4_ipd 	: std_logic := 'X';
    signal ADB4_dly 	: std_logic := 'X';
    signal ADB5_ipd 	: std_logic := 'X';
    signal ADB5_dly 	: std_logic := 'X';

    signal VCCI: Std_logic;
    signal GNDI: Std_logic;
    signal CEB_NOTIN: Std_logic;
    signal OCEB_NOTIN: Std_logic;
    component gnd
      port (PWR0: out Std_logic);
    end component;
    component vcc
      port (PWR1: out Std_logic);
    end component;
    component inverter
      port (I: in Std_logic; Z: out Std_logic);
    end component;
    component DP16KD0009
      port (CEA: in Std_logic; OCEA: in Std_logic; CLKA: in Std_logic; 
            WEA: in Std_logic; CSA0: in Std_logic; CSA1: in Std_logic; 
            CSA2: in Std_logic; RSTA: in Std_logic; CEB: in Std_logic; 
            OCEB: in Std_logic; CLKB: in Std_logic; WEB: in Std_logic; 
            CSB0: in Std_logic; CSB1: in Std_logic; CSB2: in Std_logic; 
            RSTB: in Std_logic; DIA0: in Std_logic; DIA1: in Std_logic; 
            DIA2: in Std_logic; DIA3: in Std_logic; DIA4: in Std_logic; 
            DIA5: in Std_logic; DIA6: in Std_logic; DIA7: in Std_logic; 
            DIA8: in Std_logic; DIA9: in Std_logic; DIA10: in Std_logic; 
            DIA11: in Std_logic; DIA12: in Std_logic; DIA13: in Std_logic; 
            DIA14: in Std_logic; DIA15: in Std_logic; DIA16: in Std_logic; 
            DIA17: in Std_logic; ADA0: in Std_logic; ADA1: in Std_logic; 
            ADA2: in Std_logic; ADA3: in Std_logic; ADA4: in Std_logic; 
            ADA5: in Std_logic; ADA6: in Std_logic; ADA7: in Std_logic; 
            ADA8: in Std_logic; ADA9: in Std_logic; ADA10: in Std_logic; 
            ADA11: in Std_logic; ADA12: in Std_logic; ADA13: in Std_logic; 
            DIB0: in Std_logic; DIB1: in Std_logic; DIB2: in Std_logic; 
            DIB3: in Std_logic; DIB4: in Std_logic; DIB5: in Std_logic; 
            DIB6: in Std_logic; DIB7: in Std_logic; DIB8: in Std_logic; 
            DIB9: in Std_logic; DIB10: in Std_logic; DIB11: in Std_logic; 
            DIB12: in Std_logic; DIB13: in Std_logic; DIB14: in Std_logic; 
            DIB15: in Std_logic; DIB16: in Std_logic; DIB17: in Std_logic; 
            ADB0: in Std_logic; ADB1: in Std_logic; ADB2: in Std_logic; 
            ADB3: in Std_logic; ADB4: in Std_logic; ADB5: in Std_logic; 
            ADB6: in Std_logic; ADB7: in Std_logic; ADB8: in Std_logic; 
            ADB9: in Std_logic; ADB10: in Std_logic; ADB11: in Std_logic; 
            ADB12: in Std_logic; ADB13: in Std_logic; DOA0: out Std_logic; 
            DOA1: out Std_logic; DOA2: out Std_logic; DOA3: out Std_logic; 
            DOA4: out Std_logic; DOA5: out Std_logic; DOA6: out Std_logic; 
            DOA7: out Std_logic; DOA8: out Std_logic; DOA9: out Std_logic; 
            DOA10: out Std_logic; DOA11: out Std_logic; DOA12: out Std_logic; 
            DOA13: out Std_logic; DOA14: out Std_logic; DOA15: out Std_logic; 
            DOA16: out Std_logic; DOA17: out Std_logic; DOB0: out Std_logic; 
            DOB1: out Std_logic; DOB2: out Std_logic; DOB3: out Std_logic; 
            DOB4: out Std_logic; DOB5: out Std_logic; DOB6: out Std_logic; 
            DOB7: out Std_logic; DOB8: out Std_logic; DOB9: out Std_logic; 
            DOB10: out Std_logic; DOB11: out Std_logic; DOB12: out Std_logic; 
            DOB13: out Std_logic; DOB14: out Std_logic; DOB15: out Std_logic; 
            DOB16: out Std_logic; DOB17: out Std_logic);
    end component;
  begin
    wifi_q_fifo_dc_pdp_ram_0_0_0_DP16KD: DP16KD0009
      port map (CEA=>CEA_dly, OCEA=>OCEA_dly, CLKA=>CLKA_dly, WEA=>VCCI, 
                CSA0=>GNDI, CSA1=>GNDI, CSA2=>GNDI, RSTA=>RSTA_dly, 
                CEB=>CEB_NOTIN, OCEB=>OCEB_NOTIN, CLKB=>CLKB_dly, WEB=>GNDI, 
                CSB0=>GNDI, CSB1=>GNDI, CSB2=>GNDI, RSTB=>RSTB_dly, 
                DIA0=>DIA0_dly, DIA1=>DIA1_dly, DIA2=>DIA2_dly, DIA3=>DIA3_dly, 
                DIA4=>DIA4_dly, DIA5=>DIA5_dly, DIA6=>DIA6_dly, DIA7=>DIA7_dly, 
                DIA8=>DIA8_dly, DIA9=>DIA9_dly, DIA10=>DIA10_dly, 
                DIA11=>DIA11_dly, DIA12=>DIA12_dly, DIA13=>DIA13_dly, 
                DIA14=>DIA14_dly, DIA15=>DIA15_dly, DIA16=>GNDI, DIA17=>GNDI, 
                ADA0=>VCCI, ADA1=>VCCI, ADA2=>GNDI, ADA3=>GNDI, ADA4=>ADA4_dly, 
                ADA5=>ADA5_dly, ADA6=>GNDI, ADA7=>GNDI, ADA8=>GNDI, ADA9=>GNDI, 
                ADA10=>GNDI, ADA11=>GNDI, ADA12=>GNDI, ADA13=>GNDI, DIB0=>GNDI, 
                DIB1=>GNDI, DIB2=>GNDI, DIB3=>GNDI, DIB4=>GNDI, DIB5=>GNDI, 
                DIB6=>GNDI, DIB7=>GNDI, DIB8=>GNDI, DIB9=>GNDI, DIB10=>GNDI, 
                DIB11=>GNDI, DIB12=>GNDI, DIB13=>GNDI, DIB14=>GNDI, 
                DIB15=>GNDI, DIB16=>GNDI, DIB17=>GNDI, ADB0=>GNDI, ADB1=>GNDI, 
                ADB2=>GNDI, ADB3=>GNDI, ADB4=>ADB4_dly, ADB5=>ADB5_dly, 
                ADB6=>GNDI, ADB7=>GNDI, ADB8=>GNDI, ADB9=>GNDI, ADB10=>GNDI, 
                ADB11=>GNDI, ADB12=>GNDI, ADB13=>GNDI, DOA0=>open, DOA1=>open, 
                DOA2=>open, DOA3=>open, DOA4=>open, DOA5=>open, DOA6=>open, 
                DOA7=>open, DOA8=>open, DOA9=>open, DOA10=>open, DOA11=>open, 
                DOA12=>open, DOA13=>open, DOA14=>open, DOA15=>open, 
                DOA16=>open, DOA17=>open, DOB0=>DOB0_out, DOB1=>DOB1_out, 
                DOB2=>DOB2_out, DOB3=>DOB3_out, DOB4=>DOB4_out, DOB5=>DOB5_out, 
                DOB6=>DOB6_out, DOB7=>DOB7_out, DOB8=>DOB8_out, DOB9=>DOB9_out, 
                DOB10=>DOB10_out, DOB11=>DOB11_out, DOB12=>DOB12_out, 
                DOB13=>DOB13_out, DOB14=>DOB14_out, DOB15=>DOB15_out, 
                DOB16=>open, DOB17=>open);
    DRIVEVCC: vcc
      port map (PWR1=>VCCI);
    DRIVEGND: gnd
      port map (PWR0=>GNDI);
    CEB_INVERTERIN: inverter
      port map (I=>CEB_dly, Z=>CEB_NOTIN);
    OCEB_INVERTERIN: inverter
      port map (I=>OCEB_dly, Z=>OCEB_NOTIN);

    --  INPUT PATH DELAYs
    WireDelay : BLOCK
    BEGIN
      VitalWireDelay(DIA15_ipd, DIA15, tipd_DIA15);
      VitalWireDelay(DIA14_ipd, DIA14, tipd_DIA14);
      VitalWireDelay(DIA13_ipd, DIA13, tipd_DIA13);
      VitalWireDelay(DIA12_ipd, DIA12, tipd_DIA12);
      VitalWireDelay(DIA11_ipd, DIA11, tipd_DIA11);
      VitalWireDelay(DIA10_ipd, DIA10, tipd_DIA10);
      VitalWireDelay(DIA9_ipd, DIA9, tipd_DIA9);
      VitalWireDelay(DIA8_ipd, DIA8, tipd_DIA8);
      VitalWireDelay(DIA7_ipd, DIA7, tipd_DIA7);
      VitalWireDelay(DIA6_ipd, DIA6, tipd_DIA6);
      VitalWireDelay(DIA5_ipd, DIA5, tipd_DIA5);
      VitalWireDelay(DIA4_ipd, DIA4, tipd_DIA4);
      VitalWireDelay(DIA3_ipd, DIA3, tipd_DIA3);
      VitalWireDelay(DIA2_ipd, DIA2, tipd_DIA2);
      VitalWireDelay(DIA1_ipd, DIA1, tipd_DIA1);
      VitalWireDelay(DIA0_ipd, DIA0, tipd_DIA0);
      VitalWireDelay(ADA5_ipd, ADA5, tipd_ADA5);
      VitalWireDelay(ADA4_ipd, ADA4, tipd_ADA4);
      VitalWireDelay(CEA_ipd, CEA, tipd_CEA);
      VitalWireDelay(OCEA_ipd, OCEA, tipd_OCEA);
      VitalWireDelay(RSTA_ipd, RSTA, tipd_RSTA);
      VitalWireDelay(CLKA_ipd, CLKA, tipd_CLKA);
      VitalWireDelay(CLKB_ipd, CLKB, tipd_CLKB);
      VitalWireDelay(RSTB_ipd, RSTB, tipd_RSTB);
      VitalWireDelay(OCEB_ipd, OCEB, tipd_OCEB);
      VitalWireDelay(CEB_ipd, CEB, tipd_CEB);
      VitalWireDelay(ADB4_ipd, ADB4, tipd_ADB4);
      VitalWireDelay(ADB5_ipd, ADB5, tipd_ADB5);
    END BLOCK;

    --  Setup and Hold DELAYs
    SignalDelay : BLOCK
    BEGIN
      VitalSignalDelay(DIA15_dly, DIA15_ipd, tisd_DIA15_CLKA);
      VitalSignalDelay(DIA14_dly, DIA14_ipd, tisd_DIA14_CLKA);
      VitalSignalDelay(DIA13_dly, DIA13_ipd, tisd_DIA13_CLKA);
      VitalSignalDelay(DIA12_dly, DIA12_ipd, tisd_DIA12_CLKA);
      VitalSignalDelay(DIA11_dly, DIA11_ipd, tisd_DIA11_CLKA);
      VitalSignalDelay(DIA10_dly, DIA10_ipd, tisd_DIA10_CLKA);
      VitalSignalDelay(DIA9_dly, DIA9_ipd, tisd_DIA9_CLKA);
      VitalSignalDelay(DIA8_dly, DIA8_ipd, tisd_DIA8_CLKA);
      VitalSignalDelay(DIA7_dly, DIA7_ipd, tisd_DIA7_CLKA);
      VitalSignalDelay(DIA6_dly, DIA6_ipd, tisd_DIA6_CLKA);
      VitalSignalDelay(DIA5_dly, DIA5_ipd, tisd_DIA5_CLKA);
      VitalSignalDelay(DIA4_dly, DIA4_ipd, tisd_DIA4_CLKA);
      VitalSignalDelay(DIA3_dly, DIA3_ipd, tisd_DIA3_CLKA);
      VitalSignalDelay(DIA2_dly, DIA2_ipd, tisd_DIA2_CLKA);
      VitalSignalDelay(DIA1_dly, DIA1_ipd, tisd_DIA1_CLKA);
      VitalSignalDelay(DIA0_dly, DIA0_ipd, tisd_DIA0_CLKA);
      VitalSignalDelay(ADA5_dly, ADA5_ipd, tisd_ADA5_CLKA);
      VitalSignalDelay(ADA4_dly, ADA4_ipd, tisd_ADA4_CLKA);
      VitalSignalDelay(CEA_dly, CEA_ipd, tisd_CEA_CLKA);
      VitalSignalDelay(OCEA_dly, OCEA_ipd, tisd_OCEA_CLKA);
      VitalSignalDelay(RSTA_dly, RSTA_ipd, tisd_RSTA_CLKA);
      VitalSignalDelay(CLKA_dly, CLKA_ipd, ticd_CLKA);
      VitalSignalDelay(CLKB_dly, CLKB_ipd, ticd_CLKB);
      VitalSignalDelay(RSTB_dly, RSTB_ipd, tisd_RSTB_CLKB);
      VitalSignalDelay(OCEB_dly, OCEB_ipd, tisd_OCEB_CLKB);
      VitalSignalDelay(CEB_dly, CEB_ipd, tisd_CEB_CLKB);
      VitalSignalDelay(ADB4_dly, ADB4_ipd, tisd_ADB4_CLKB);
      VitalSignalDelay(ADB5_dly, ADB5_ipd, tisd_ADB5_CLKB);
    END BLOCK;

    VitalBehavior : PROCESS (DIA15_dly, DIA14_dly, DIA13_dly, DIA12_dly, 
      DIA11_dly, DIA10_dly, DIA9_dly, DIA8_dly, DIA7_dly, DIA6_dly, DIA5_dly, 
      DIA4_dly, DIA3_dly, DIA2_dly, DIA1_dly, DIA0_dly, ADA5_dly, ADA4_dly, 
      CEA_dly, OCEA_dly, RSTA_dly, CLKA_dly, CLKB_dly, RSTB_dly, OCEB_dly, 
      CEB_dly, DOB0_out, DOB1_out, DOB2_out, DOB3_out, DOB4_out, DOB5_out, 
      DOB6_out, DOB7_out, DOB8_out, DOB9_out, DOB10_out, DOB11_out, DOB12_out, 
      DOB13_out, DOB14_out, DOB15_out, ADB4_dly, ADB5_dly)
    VARIABLE DOB0_zd         	: std_logic := 'X';
    VARIABLE DOB0_GlitchData 	: VitalGlitchDataType;
    VARIABLE DOB1_zd         	: std_logic := 'X';
    VARIABLE DOB1_GlitchData 	: VitalGlitchDataType;
    VARIABLE DOB2_zd         	: std_logic := 'X';
    VARIABLE DOB2_GlitchData 	: VitalGlitchDataType;
    VARIABLE DOB3_zd         	: std_logic := 'X';
    VARIABLE DOB3_GlitchData 	: VitalGlitchDataType;
    VARIABLE DOB4_zd         	: std_logic := 'X';
    VARIABLE DOB4_GlitchData 	: VitalGlitchDataType;
    VARIABLE DOB5_zd         	: std_logic := 'X';
    VARIABLE DOB5_GlitchData 	: VitalGlitchDataType;
    VARIABLE DOB6_zd         	: std_logic := 'X';
    VARIABLE DOB6_GlitchData 	: VitalGlitchDataType;
    VARIABLE DOB7_zd         	: std_logic := 'X';
    VARIABLE DOB7_GlitchData 	: VitalGlitchDataType;
    VARIABLE DOB8_zd         	: std_logic := 'X';
    VARIABLE DOB8_GlitchData 	: VitalGlitchDataType;
    VARIABLE DOB9_zd         	: std_logic := 'X';
    VARIABLE DOB9_GlitchData 	: VitalGlitchDataType;
    VARIABLE DOB10_zd         	: std_logic := 'X';
    VARIABLE DOB10_GlitchData 	: VitalGlitchDataType;
    VARIABLE DOB11_zd         	: std_logic := 'X';
    VARIABLE DOB11_GlitchData 	: VitalGlitchDataType;
    VARIABLE DOB12_zd         	: std_logic := 'X';
    VARIABLE DOB12_GlitchData 	: VitalGlitchDataType;
    VARIABLE DOB13_zd         	: std_logic := 'X';
    VARIABLE DOB13_GlitchData 	: VitalGlitchDataType;
    VARIABLE DOB14_zd         	: std_logic := 'X';
    VARIABLE DOB14_GlitchData 	: VitalGlitchDataType;
    VARIABLE DOB15_zd         	: std_logic := 'X';
    VARIABLE DOB15_GlitchData 	: VitalGlitchDataType;

    VARIABLE tviol_DIA15_CLKA       	: x01 := '0';
    VARIABLE DIA15_CLKA_TimingDatash	: VitalTimingDataType;
    VARIABLE tviol_DIA14_CLKA       	: x01 := '0';
    VARIABLE DIA14_CLKA_TimingDatash	: VitalTimingDataType;
    VARIABLE tviol_DIA13_CLKA       	: x01 := '0';
    VARIABLE DIA13_CLKA_TimingDatash	: VitalTimingDataType;
    VARIABLE tviol_DIA12_CLKA       	: x01 := '0';
    VARIABLE DIA12_CLKA_TimingDatash	: VitalTimingDataType;
    VARIABLE tviol_DIA11_CLKA       	: x01 := '0';
    VARIABLE DIA11_CLKA_TimingDatash	: VitalTimingDataType;
    VARIABLE tviol_DIA10_CLKA       	: x01 := '0';
    VARIABLE DIA10_CLKA_TimingDatash	: VitalTimingDataType;
    VARIABLE tviol_DIA9_CLKA       	: x01 := '0';
    VARIABLE DIA9_CLKA_TimingDatash	: VitalTimingDataType;
    VARIABLE tviol_DIA8_CLKA       	: x01 := '0';
    VARIABLE DIA8_CLKA_TimingDatash	: VitalTimingDataType;
    VARIABLE tviol_DIA7_CLKA       	: x01 := '0';
    VARIABLE DIA7_CLKA_TimingDatash	: VitalTimingDataType;
    VARIABLE tviol_DIA6_CLKA       	: x01 := '0';
    VARIABLE DIA6_CLKA_TimingDatash	: VitalTimingDataType;
    VARIABLE tviol_DIA5_CLKA       	: x01 := '0';
    VARIABLE DIA5_CLKA_TimingDatash	: VitalTimingDataType;
    VARIABLE tviol_DIA4_CLKA       	: x01 := '0';
    VARIABLE DIA4_CLKA_TimingDatash	: VitalTimingDataType;
    VARIABLE tviol_DIA3_CLKA       	: x01 := '0';
    VARIABLE DIA3_CLKA_TimingDatash	: VitalTimingDataType;
    VARIABLE tviol_DIA2_CLKA       	: x01 := '0';
    VARIABLE DIA2_CLKA_TimingDatash	: VitalTimingDataType;
    VARIABLE tviol_DIA1_CLKA       	: x01 := '0';
    VARIABLE DIA1_CLKA_TimingDatash	: VitalTimingDataType;
    VARIABLE tviol_DIA0_CLKA       	: x01 := '0';
    VARIABLE DIA0_CLKA_TimingDatash	: VitalTimingDataType;
    VARIABLE tviol_ADA5_CLKA       	: x01 := '0';
    VARIABLE ADA5_CLKA_TimingDatash	: VitalTimingDataType;
    VARIABLE tviol_ADA4_CLKA       	: x01 := '0';
    VARIABLE ADA4_CLKA_TimingDatash	: VitalTimingDataType;
    VARIABLE tviol_CEA_CLKA       	: x01 := '0';
    VARIABLE CEA_CLKA_TimingDatash	: VitalTimingDataType;
    VARIABLE tviol_OCEA_CLKA       	: x01 := '0';
    VARIABLE OCEA_CLKA_TimingDatash	: VitalTimingDataType;
    VARIABLE tviol_RSTA_CLKA       	: x01 := '0';
    VARIABLE RSTA_CLKA_TimingDatash	: VitalTimingDataType;
    VARIABLE tviol_RSTB_CLKB       	: x01 := '0';
    VARIABLE RSTB_CLKB_TimingDatash	: VitalTimingDataType;
    VARIABLE tviol_OCEB_CLKB       	: x01 := '0';
    VARIABLE OCEB_CLKB_TimingDatash	: VitalTimingDataType;
    VARIABLE tviol_CEB_CLKB       	: x01 := '0';
    VARIABLE CEB_CLKB_TimingDatash	: VitalTimingDataType;
    VARIABLE tviol_ADB4_CLKB       	: x01 := '0';
    VARIABLE ADB4_CLKB_TimingDatash	: VitalTimingDataType;
    VARIABLE tviol_ADB5_CLKB       	: x01 := '0';
    VARIABLE ADB5_CLKB_TimingDatash	: VitalTimingDataType;
    VARIABLE tviol_CLKA_CLKA          	: x01 := '0';
    VARIABLE periodcheckinfo_CLKA	: VitalPeriodDataType;
    VARIABLE tviol_CLKB_CLKB          	: x01 := '0';
    VARIABLE periodcheckinfo_CLKB	: VitalPeriodDataType;

    BEGIN

    IF (TimingChecksOn) THEN
      VitalSetupHoldCheck (
        TestSignal => DIA15_dly,
        TestSignalName => "DIA15",
        TestDelay => tisd_DIA15_CLKA,
        RefSignal => CLKA_dly,
        RefSignalName => "CLKA",
        RefDelay => ticd_CLKA,
        SetupHigh => tsetup_DIA15_CLKA_noedge_posedge,
        SetupLow => tsetup_DIA15_CLKA_noedge_posedge,
        HoldHigh => thold_DIA15_CLKA_noedge_posedge,
        HoldLow => thold_DIA15_CLKA_noedge_posedge,
        CheckEnabled => TRUE,
        RefTransition => '/',
        MsgOn => MsgOn, XOn => XOn,
        HeaderMsg => InstancePath,
        TimingData => DIA15_CLKA_TimingDatash,
        Violation => tviol_DIA15_CLKA,
        MsgSeverity => warning);
      VitalSetupHoldCheck (
        TestSignal => DIA14_dly,
        TestSignalName => "DIA14",
        TestDelay => tisd_DIA14_CLKA,
        RefSignal => CLKA_dly,
        RefSignalName => "CLKA",
        RefDelay => ticd_CLKA,
        SetupHigh => tsetup_DIA14_CLKA_noedge_posedge,
        SetupLow => tsetup_DIA14_CLKA_noedge_posedge,
        HoldHigh => thold_DIA14_CLKA_noedge_posedge,
        HoldLow => thold_DIA14_CLKA_noedge_posedge,
        CheckEnabled => TRUE,
        RefTransition => '/',
        MsgOn => MsgOn, XOn => XOn,
        HeaderMsg => InstancePath,
        TimingData => DIA14_CLKA_TimingDatash,
        Violation => tviol_DIA14_CLKA,
        MsgSeverity => warning);
      VitalSetupHoldCheck (
        TestSignal => DIA13_dly,
        TestSignalName => "DIA13",
        TestDelay => tisd_DIA13_CLKA,
        RefSignal => CLKA_dly,
        RefSignalName => "CLKA",
        RefDelay => ticd_CLKA,
        SetupHigh => tsetup_DIA13_CLKA_noedge_posedge,
        SetupLow => tsetup_DIA13_CLKA_noedge_posedge,
        HoldHigh => thold_DIA13_CLKA_noedge_posedge,
        HoldLow => thold_DIA13_CLKA_noedge_posedge,
        CheckEnabled => TRUE,
        RefTransition => '/',
        MsgOn => MsgOn, XOn => XOn,
        HeaderMsg => InstancePath,
        TimingData => DIA13_CLKA_TimingDatash,
        Violation => tviol_DIA13_CLKA,
        MsgSeverity => warning);
      VitalSetupHoldCheck (
        TestSignal => DIA12_dly,
        TestSignalName => "DIA12",
        TestDelay => tisd_DIA12_CLKA,
        RefSignal => CLKA_dly,
        RefSignalName => "CLKA",
        RefDelay => ticd_CLKA,
        SetupHigh => tsetup_DIA12_CLKA_noedge_posedge,
        SetupLow => tsetup_DIA12_CLKA_noedge_posedge,
        HoldHigh => thold_DIA12_CLKA_noedge_posedge,
        HoldLow => thold_DIA12_CLKA_noedge_posedge,
        CheckEnabled => TRUE,
        RefTransition => '/',
        MsgOn => MsgOn, XOn => XOn,
        HeaderMsg => InstancePath,
        TimingData => DIA12_CLKA_TimingDatash,
        Violation => tviol_DIA12_CLKA,
        MsgSeverity => warning);
      VitalSetupHoldCheck (
        TestSignal => DIA11_dly,
        TestSignalName => "DIA11",
        TestDelay => tisd_DIA11_CLKA,
        RefSignal => CLKA_dly,
        RefSignalName => "CLKA",
        RefDelay => ticd_CLKA,
        SetupHigh => tsetup_DIA11_CLKA_noedge_posedge,
        SetupLow => tsetup_DIA11_CLKA_noedge_posedge,
        HoldHigh => thold_DIA11_CLKA_noedge_posedge,
        HoldLow => thold_DIA11_CLKA_noedge_posedge,
        CheckEnabled => TRUE,
        RefTransition => '/',
        MsgOn => MsgOn, XOn => XOn,
        HeaderMsg => InstancePath,
        TimingData => DIA11_CLKA_TimingDatash,
        Violation => tviol_DIA11_CLKA,
        MsgSeverity => warning);
      VitalSetupHoldCheck (
        TestSignal => DIA10_dly,
        TestSignalName => "DIA10",
        TestDelay => tisd_DIA10_CLKA,
        RefSignal => CLKA_dly,
        RefSignalName => "CLKA",
        RefDelay => ticd_CLKA,
        SetupHigh => tsetup_DIA10_CLKA_noedge_posedge,
        SetupLow => tsetup_DIA10_CLKA_noedge_posedge,
        HoldHigh => thold_DIA10_CLKA_noedge_posedge,
        HoldLow => thold_DIA10_CLKA_noedge_posedge,
        CheckEnabled => TRUE,
        RefTransition => '/',
        MsgOn => MsgOn, XOn => XOn,
        HeaderMsg => InstancePath,
        TimingData => DIA10_CLKA_TimingDatash,
        Violation => tviol_DIA10_CLKA,
        MsgSeverity => warning);
      VitalSetupHoldCheck (
        TestSignal => DIA9_dly,
        TestSignalName => "DIA9",
        TestDelay => tisd_DIA9_CLKA,
        RefSignal => CLKA_dly,
        RefSignalName => "CLKA",
        RefDelay => ticd_CLKA,
        SetupHigh => tsetup_DIA9_CLKA_noedge_posedge,
        SetupLow => tsetup_DIA9_CLKA_noedge_posedge,
        HoldHigh => thold_DIA9_CLKA_noedge_posedge,
        HoldLow => thold_DIA9_CLKA_noedge_posedge,
        CheckEnabled => TRUE,
        RefTransition => '/',
        MsgOn => MsgOn, XOn => XOn,
        HeaderMsg => InstancePath,
        TimingData => DIA9_CLKA_TimingDatash,
        Violation => tviol_DIA9_CLKA,
        MsgSeverity => warning);
      VitalSetupHoldCheck (
        TestSignal => DIA8_dly,
        TestSignalName => "DIA8",
        TestDelay => tisd_DIA8_CLKA,
        RefSignal => CLKA_dly,
        RefSignalName => "CLKA",
        RefDelay => ticd_CLKA,
        SetupHigh => tsetup_DIA8_CLKA_noedge_posedge,
        SetupLow => tsetup_DIA8_CLKA_noedge_posedge,
        HoldHigh => thold_DIA8_CLKA_noedge_posedge,
        HoldLow => thold_DIA8_CLKA_noedge_posedge,
        CheckEnabled => TRUE,
        RefTransition => '/',
        MsgOn => MsgOn, XOn => XOn,
        HeaderMsg => InstancePath,
        TimingData => DIA8_CLKA_TimingDatash,
        Violation => tviol_DIA8_CLKA,
        MsgSeverity => warning);
      VitalSetupHoldCheck (
        TestSignal => DIA7_dly,
        TestSignalName => "DIA7",
        TestDelay => tisd_DIA7_CLKA,
        RefSignal => CLKA_dly,
        RefSignalName => "CLKA",
        RefDelay => ticd_CLKA,
        SetupHigh => tsetup_DIA7_CLKA_noedge_posedge,
        SetupLow => tsetup_DIA7_CLKA_noedge_posedge,
        HoldHigh => thold_DIA7_CLKA_noedge_posedge,
        HoldLow => thold_DIA7_CLKA_noedge_posedge,
        CheckEnabled => TRUE,
        RefTransition => '/',
        MsgOn => MsgOn, XOn => XOn,
        HeaderMsg => InstancePath,
        TimingData => DIA7_CLKA_TimingDatash,
        Violation => tviol_DIA7_CLKA,
        MsgSeverity => warning);
      VitalSetupHoldCheck (
        TestSignal => DIA6_dly,
        TestSignalName => "DIA6",
        TestDelay => tisd_DIA6_CLKA,
        RefSignal => CLKA_dly,
        RefSignalName => "CLKA",
        RefDelay => ticd_CLKA,
        SetupHigh => tsetup_DIA6_CLKA_noedge_posedge,
        SetupLow => tsetup_DIA6_CLKA_noedge_posedge,
        HoldHigh => thold_DIA6_CLKA_noedge_posedge,
        HoldLow => thold_DIA6_CLKA_noedge_posedge,
        CheckEnabled => TRUE,
        RefTransition => '/',
        MsgOn => MsgOn, XOn => XOn,
        HeaderMsg => InstancePath,
        TimingData => DIA6_CLKA_TimingDatash,
        Violation => tviol_DIA6_CLKA,
        MsgSeverity => warning);
      VitalSetupHoldCheck (
        TestSignal => DIA5_dly,
        TestSignalName => "DIA5",
        TestDelay => tisd_DIA5_CLKA,
        RefSignal => CLKA_dly,
        RefSignalName => "CLKA",
        RefDelay => ticd_CLKA,
        SetupHigh => tsetup_DIA5_CLKA_noedge_posedge,
        SetupLow => tsetup_DIA5_CLKA_noedge_posedge,
        HoldHigh => thold_DIA5_CLKA_noedge_posedge,
        HoldLow => thold_DIA5_CLKA_noedge_posedge,
        CheckEnabled => TRUE,
        RefTransition => '/',
        MsgOn => MsgOn, XOn => XOn,
        HeaderMsg => InstancePath,
        TimingData => DIA5_CLKA_TimingDatash,
        Violation => tviol_DIA5_CLKA,
        MsgSeverity => warning);
      VitalSetupHoldCheck (
        TestSignal => DIA4_dly,
        TestSignalName => "DIA4",
        TestDelay => tisd_DIA4_CLKA,
        RefSignal => CLKA_dly,
        RefSignalName => "CLKA",
        RefDelay => ticd_CLKA,
        SetupHigh => tsetup_DIA4_CLKA_noedge_posedge,
        SetupLow => tsetup_DIA4_CLKA_noedge_posedge,
        HoldHigh => thold_DIA4_CLKA_noedge_posedge,
        HoldLow => thold_DIA4_CLKA_noedge_posedge,
        CheckEnabled => TRUE,
        RefTransition => '/',
        MsgOn => MsgOn, XOn => XOn,
        HeaderMsg => InstancePath,
        TimingData => DIA4_CLKA_TimingDatash,
        Violation => tviol_DIA4_CLKA,
        MsgSeverity => warning);
      VitalSetupHoldCheck (
        TestSignal => DIA3_dly,
        TestSignalName => "DIA3",
        TestDelay => tisd_DIA3_CLKA,
        RefSignal => CLKA_dly,
        RefSignalName => "CLKA",
        RefDelay => ticd_CLKA,
        SetupHigh => tsetup_DIA3_CLKA_noedge_posedge,
        SetupLow => tsetup_DIA3_CLKA_noedge_posedge,
        HoldHigh => thold_DIA3_CLKA_noedge_posedge,
        HoldLow => thold_DIA3_CLKA_noedge_posedge,
        CheckEnabled => TRUE,
        RefTransition => '/',
        MsgOn => MsgOn, XOn => XOn,
        HeaderMsg => InstancePath,
        TimingData => DIA3_CLKA_TimingDatash,
        Violation => tviol_DIA3_CLKA,
        MsgSeverity => warning);
      VitalSetupHoldCheck (
        TestSignal => DIA2_dly,
        TestSignalName => "DIA2",
        TestDelay => tisd_DIA2_CLKA,
        RefSignal => CLKA_dly,
        RefSignalName => "CLKA",
        RefDelay => ticd_CLKA,
        SetupHigh => tsetup_DIA2_CLKA_noedge_posedge,
        SetupLow => tsetup_DIA2_CLKA_noedge_posedge,
        HoldHigh => thold_DIA2_CLKA_noedge_posedge,
        HoldLow => thold_DIA2_CLKA_noedge_posedge,
        CheckEnabled => TRUE,
        RefTransition => '/',
        MsgOn => MsgOn, XOn => XOn,
        HeaderMsg => InstancePath,
        TimingData => DIA2_CLKA_TimingDatash,
        Violation => tviol_DIA2_CLKA,
        MsgSeverity => warning);
      VitalSetupHoldCheck (
        TestSignal => DIA1_dly,
        TestSignalName => "DIA1",
        TestDelay => tisd_DIA1_CLKA,
        RefSignal => CLKA_dly,
        RefSignalName => "CLKA",
        RefDelay => ticd_CLKA,
        SetupHigh => tsetup_DIA1_CLKA_noedge_posedge,
        SetupLow => tsetup_DIA1_CLKA_noedge_posedge,
        HoldHigh => thold_DIA1_CLKA_noedge_posedge,
        HoldLow => thold_DIA1_CLKA_noedge_posedge,
        CheckEnabled => TRUE,
        RefTransition => '/',
        MsgOn => MsgOn, XOn => XOn,
        HeaderMsg => InstancePath,
        TimingData => DIA1_CLKA_TimingDatash,
        Violation => tviol_DIA1_CLKA,
        MsgSeverity => warning);
      VitalSetupHoldCheck (
        TestSignal => DIA0_dly,
        TestSignalName => "DIA0",
        TestDelay => tisd_DIA0_CLKA,
        RefSignal => CLKA_dly,
        RefSignalName => "CLKA",
        RefDelay => ticd_CLKA,
        SetupHigh => tsetup_DIA0_CLKA_noedge_posedge,
        SetupLow => tsetup_DIA0_CLKA_noedge_posedge,
        HoldHigh => thold_DIA0_CLKA_noedge_posedge,
        HoldLow => thold_DIA0_CLKA_noedge_posedge,
        CheckEnabled => TRUE,
        RefTransition => '/',
        MsgOn => MsgOn, XOn => XOn,
        HeaderMsg => InstancePath,
        TimingData => DIA0_CLKA_TimingDatash,
        Violation => tviol_DIA0_CLKA,
        MsgSeverity => warning);
      VitalSetupHoldCheck (
        TestSignal => ADA5_dly,
        TestSignalName => "ADA5",
        TestDelay => tisd_ADA5_CLKA,
        RefSignal => CLKA_dly,
        RefSignalName => "CLKA",
        RefDelay => ticd_CLKA,
        SetupHigh => tsetup_ADA5_CLKA_noedge_posedge,
        SetupLow => tsetup_ADA5_CLKA_noedge_posedge,
        HoldHigh => thold_ADA5_CLKA_noedge_posedge,
        HoldLow => thold_ADA5_CLKA_noedge_posedge,
        CheckEnabled => TRUE,
        RefTransition => '/',
        MsgOn => MsgOn, XOn => XOn,
        HeaderMsg => InstancePath,
        TimingData => ADA5_CLKA_TimingDatash,
        Violation => tviol_ADA5_CLKA,
        MsgSeverity => warning);
      VitalSetupHoldCheck (
        TestSignal => ADA4_dly,
        TestSignalName => "ADA4",
        TestDelay => tisd_ADA4_CLKA,
        RefSignal => CLKA_dly,
        RefSignalName => "CLKA",
        RefDelay => ticd_CLKA,
        SetupHigh => tsetup_ADA4_CLKA_noedge_posedge,
        SetupLow => tsetup_ADA4_CLKA_noedge_posedge,
        HoldHigh => thold_ADA4_CLKA_noedge_posedge,
        HoldLow => thold_ADA4_CLKA_noedge_posedge,
        CheckEnabled => TRUE,
        RefTransition => '/',
        MsgOn => MsgOn, XOn => XOn,
        HeaderMsg => InstancePath,
        TimingData => ADA4_CLKA_TimingDatash,
        Violation => tviol_ADA4_CLKA,
        MsgSeverity => warning);
      VitalSetupHoldCheck (
        TestSignal => CEA_dly,
        TestSignalName => "CEA",
        TestDelay => tisd_CEA_CLKA,
        RefSignal => CLKA_dly,
        RefSignalName => "CLKA",
        RefDelay => ticd_CLKA,
        SetupHigh => tsetup_CEA_CLKA_noedge_posedge,
        SetupLow => tsetup_CEA_CLKA_noedge_posedge,
        HoldHigh => thold_CEA_CLKA_noedge_posedge,
        HoldLow => thold_CEA_CLKA_noedge_posedge,
        CheckEnabled => TRUE,
        RefTransition => '/',
        MsgOn => MsgOn, XOn => XOn,
        HeaderMsg => InstancePath,
        TimingData => CEA_CLKA_TimingDatash,
        Violation => tviol_CEA_CLKA,
        MsgSeverity => warning);
      VitalSetupHoldCheck (
        TestSignal => OCEA_dly,
        TestSignalName => "OCEA",
        TestDelay => tisd_OCEA_CLKA,
        RefSignal => CLKA_dly,
        RefSignalName => "CLKA",
        RefDelay => ticd_CLKA,
        SetupHigh => tsetup_OCEA_CLKA_noedge_posedge,
        SetupLow => tsetup_OCEA_CLKA_noedge_posedge,
        HoldHigh => thold_OCEA_CLKA_noedge_posedge,
        HoldLow => thold_OCEA_CLKA_noedge_posedge,
        CheckEnabled => TRUE,
        RefTransition => '/',
        MsgOn => MsgOn, XOn => XOn,
        HeaderMsg => InstancePath,
        TimingData => OCEA_CLKA_TimingDatash,
        Violation => tviol_OCEA_CLKA,
        MsgSeverity => warning);
      VitalSetupHoldCheck (
        TestSignal => RSTA_dly,
        TestSignalName => "RSTA",
        TestDelay => tisd_RSTA_CLKA,
        RefSignal => CLKA_dly,
        RefSignalName => "CLKA",
        RefDelay => ticd_CLKA,
        SetupHigh => tsetup_RSTA_CLKA_noedge_posedge,
        SetupLow => tsetup_RSTA_CLKA_noedge_posedge,
        HoldHigh => thold_RSTA_CLKA_noedge_posedge,
        HoldLow => thold_RSTA_CLKA_noedge_posedge,
        CheckEnabled => TRUE,
        RefTransition => '/',
        MsgOn => MsgOn, XOn => XOn,
        HeaderMsg => InstancePath,
        TimingData => RSTA_CLKA_TimingDatash,
        Violation => tviol_RSTA_CLKA,
        MsgSeverity => warning);
      VitalSetupHoldCheck (
        TestSignal => RSTB_dly,
        TestSignalName => "RSTB",
        TestDelay => tisd_RSTB_CLKB,
        RefSignal => CLKB_dly,
        RefSignalName => "CLKB",
        RefDelay => ticd_CLKB,
        SetupHigh => tsetup_RSTB_CLKB_noedge_posedge,
        SetupLow => tsetup_RSTB_CLKB_noedge_posedge,
        HoldHigh => thold_RSTB_CLKB_noedge_posedge,
        HoldLow => thold_RSTB_CLKB_noedge_posedge,
        CheckEnabled => TRUE,
        RefTransition => '/',
        MsgOn => MsgOn, XOn => XOn,
        HeaderMsg => InstancePath,
        TimingData => RSTB_CLKB_TimingDatash,
        Violation => tviol_RSTB_CLKB,
        MsgSeverity => warning);
      VitalSetupHoldCheck (
        TestSignal => OCEB_dly,
        TestSignalName => "OCEB",
        TestDelay => tisd_OCEB_CLKB,
        RefSignal => CLKB_dly,
        RefSignalName => "CLKB",
        RefDelay => ticd_CLKB,
        SetupHigh => tsetup_OCEB_CLKB_noedge_posedge,
        SetupLow => tsetup_OCEB_CLKB_noedge_posedge,
        HoldHigh => thold_OCEB_CLKB_noedge_posedge,
        HoldLow => thold_OCEB_CLKB_noedge_posedge,
        CheckEnabled => TRUE,
        RefTransition => '/',
        MsgOn => MsgOn, XOn => XOn,
        HeaderMsg => InstancePath,
        TimingData => OCEB_CLKB_TimingDatash,
        Violation => tviol_OCEB_CLKB,
        MsgSeverity => warning);
      VitalSetupHoldCheck (
        TestSignal => CEB_dly,
        TestSignalName => "CEB",
        TestDelay => tisd_CEB_CLKB,
        RefSignal => CLKB_dly,
        RefSignalName => "CLKB",
        RefDelay => ticd_CLKB,
        SetupHigh => tsetup_CEB_CLKB_noedge_posedge,
        SetupLow => tsetup_CEB_CLKB_noedge_posedge,
        HoldHigh => thold_CEB_CLKB_noedge_posedge,
        HoldLow => thold_CEB_CLKB_noedge_posedge,
        CheckEnabled => TRUE,
        RefTransition => '/',
        MsgOn => MsgOn, XOn => XOn,
        HeaderMsg => InstancePath,
        TimingData => CEB_CLKB_TimingDatash,
        Violation => tviol_CEB_CLKB,
        MsgSeverity => warning);
      VitalSetupHoldCheck (
        TestSignal => ADB4_dly,
        TestSignalName => "ADB4",
        TestDelay => tisd_ADB4_CLKB,
        RefSignal => CLKB_dly,
        RefSignalName => "CLKB",
        RefDelay => ticd_CLKB,
        SetupHigh => tsetup_ADB4_CLKB_noedge_posedge,
        SetupLow => tsetup_ADB4_CLKB_noedge_posedge,
        HoldHigh => thold_ADB4_CLKB_noedge_posedge,
        HoldLow => thold_ADB4_CLKB_noedge_posedge,
        CheckEnabled => TRUE,
        RefTransition => '/',
        MsgOn => MsgOn, XOn => XOn,
        HeaderMsg => InstancePath,
        TimingData => ADB4_CLKB_TimingDatash,
        Violation => tviol_ADB4_CLKB,
        MsgSeverity => warning);
      VitalSetupHoldCheck (
        TestSignal => ADB5_dly,
        TestSignalName => "ADB5",
        TestDelay => tisd_ADB5_CLKB,
        RefSignal => CLKB_dly,
        RefSignalName => "CLKB",
        RefDelay => ticd_CLKB,
        SetupHigh => tsetup_ADB5_CLKB_noedge_posedge,
        SetupLow => tsetup_ADB5_CLKB_noedge_posedge,
        HoldHigh => thold_ADB5_CLKB_noedge_posedge,
        HoldLow => thold_ADB5_CLKB_noedge_posedge,
        CheckEnabled => TRUE,
        RefTransition => '/',
        MsgOn => MsgOn, XOn => XOn,
        HeaderMsg => InstancePath,
        TimingData => ADB5_CLKB_TimingDatash,
        Violation => tviol_ADB5_CLKB,
        MsgSeverity => warning);
      VitalPeriodPulseCheck (
        TestSignal => CLKA_ipd,
        TestSignalName => "CLKA",
        Period => tperiod_CLKA,
        PulseWidthHigh => tpw_CLKA_posedge,
        PulseWidthLow => tpw_CLKA_negedge,
        PeriodData => periodcheckinfo_CLKA,
        Violation => tviol_CLKA_CLKA,
        MsgOn => MsgOn, XOn => XOn,
        HeaderMsg => InstancePath,
        CheckEnabled => TRUE,
        MsgSeverity => warning);
      VitalPeriodPulseCheck (
        TestSignal => CLKB_ipd,
        TestSignalName => "CLKB",
        Period => tperiod_CLKB,
        PulseWidthHigh => tpw_CLKB_posedge,
        PulseWidthLow => tpw_CLKB_negedge,
        PeriodData => periodcheckinfo_CLKB,
        Violation => tviol_CLKB_CLKB,
        MsgOn => MsgOn, XOn => XOn,
        HeaderMsg => InstancePath,
        CheckEnabled => TRUE,
        MsgSeverity => warning);

    END IF;

    DOB0_zd 	:= DOB0_out;
    DOB1_zd 	:= DOB1_out;
    DOB2_zd 	:= DOB2_out;
    DOB3_zd 	:= DOB3_out;
    DOB4_zd 	:= DOB4_out;
    DOB5_zd 	:= DOB5_out;
    DOB6_zd 	:= DOB6_out;
    DOB7_zd 	:= DOB7_out;
    DOB8_zd 	:= DOB8_out;
    DOB9_zd 	:= DOB9_out;
    DOB10_zd 	:= DOB10_out;
    DOB11_zd 	:= DOB11_out;
    DOB12_zd 	:= DOB12_out;
    DOB13_zd 	:= DOB13_out;
    DOB14_zd 	:= DOB14_out;
    DOB15_zd 	:= DOB15_out;

    VitalPathDelay01 (
      OutSignal => DOB0, OutSignalName => "DOB0", OutTemp => DOB0_zd,
      Paths      => (0 => (InputChangeTime => CLKB_dly'last_event,
                           PathDelay => tpd_CLKB_DOB0,
                           PathCondition => TRUE),
                     1 => (InputChangeTime => RSTB_dly'last_event,
                           PathDelay => tpd_RSTB_DOB0,
                           PathCondition => TRUE)),
      GlitchData => DOB0_GlitchData,
      Mode       => ondetect, XOn => XOn, MsgOn => MsgOn);
    VitalPathDelay01 (
      OutSignal => DOB1, OutSignalName => "DOB1", OutTemp => DOB1_zd,
      Paths      => (0 => (InputChangeTime => CLKB_dly'last_event,
                           PathDelay => tpd_CLKB_DOB1,
                           PathCondition => TRUE),
                     1 => (InputChangeTime => RSTB_dly'last_event,
                           PathDelay => tpd_RSTB_DOB1,
                           PathCondition => TRUE)),
      GlitchData => DOB1_GlitchData,
      Mode       => ondetect, XOn => XOn, MsgOn => MsgOn);
    VitalPathDelay01 (
      OutSignal => DOB2, OutSignalName => "DOB2", OutTemp => DOB2_zd,
      Paths      => (0 => (InputChangeTime => CLKB_dly'last_event,
                           PathDelay => tpd_CLKB_DOB2,
                           PathCondition => TRUE),
                     1 => (InputChangeTime => RSTB_dly'last_event,
                           PathDelay => tpd_RSTB_DOB2,
                           PathCondition => TRUE)),
      GlitchData => DOB2_GlitchData,
      Mode       => ondetect, XOn => XOn, MsgOn => MsgOn);
    VitalPathDelay01 (
      OutSignal => DOB3, OutSignalName => "DOB3", OutTemp => DOB3_zd,
      Paths      => (0 => (InputChangeTime => CLKB_dly'last_event,
                           PathDelay => tpd_CLKB_DOB3,
                           PathCondition => TRUE),
                     1 => (InputChangeTime => RSTB_dly'last_event,
                           PathDelay => tpd_RSTB_DOB3,
                           PathCondition => TRUE)),
      GlitchData => DOB3_GlitchData,
      Mode       => ondetect, XOn => XOn, MsgOn => MsgOn);
    VitalPathDelay01 (
      OutSignal => DOB4, OutSignalName => "DOB4", OutTemp => DOB4_zd,
      Paths      => (0 => (InputChangeTime => CLKB_dly'last_event,
                           PathDelay => tpd_CLKB_DOB4,
                           PathCondition => TRUE),
                     1 => (InputChangeTime => RSTB_dly'last_event,
                           PathDelay => tpd_RSTB_DOB4,
                           PathCondition => TRUE)),
      GlitchData => DOB4_GlitchData,
      Mode       => ondetect, XOn => XOn, MsgOn => MsgOn);
    VitalPathDelay01 (
      OutSignal => DOB5, OutSignalName => "DOB5", OutTemp => DOB5_zd,
      Paths      => (0 => (InputChangeTime => CLKB_dly'last_event,
                           PathDelay => tpd_CLKB_DOB5,
                           PathCondition => TRUE),
                     1 => (InputChangeTime => RSTB_dly'last_event,
                           PathDelay => tpd_RSTB_DOB5,
                           PathCondition => TRUE)),
      GlitchData => DOB5_GlitchData,
      Mode       => ondetect, XOn => XOn, MsgOn => MsgOn);
    VitalPathDelay01 (
      OutSignal => DOB6, OutSignalName => "DOB6", OutTemp => DOB6_zd,
      Paths      => (0 => (InputChangeTime => CLKB_dly'last_event,
                           PathDelay => tpd_CLKB_DOB6,
                           PathCondition => TRUE),
                     1 => (InputChangeTime => RSTB_dly'last_event,
                           PathDelay => tpd_RSTB_DOB6,
                           PathCondition => TRUE)),
      GlitchData => DOB6_GlitchData,
      Mode       => ondetect, XOn => XOn, MsgOn => MsgOn);
    VitalPathDelay01 (
      OutSignal => DOB7, OutSignalName => "DOB7", OutTemp => DOB7_zd,
      Paths      => (0 => (InputChangeTime => CLKB_dly'last_event,
                           PathDelay => tpd_CLKB_DOB7,
                           PathCondition => TRUE),
                     1 => (InputChangeTime => RSTB_dly'last_event,
                           PathDelay => tpd_RSTB_DOB7,
                           PathCondition => TRUE)),
      GlitchData => DOB7_GlitchData,
      Mode       => ondetect, XOn => XOn, MsgOn => MsgOn);
    VitalPathDelay01 (
      OutSignal => DOB8, OutSignalName => "DOB8", OutTemp => DOB8_zd,
      Paths      => (0 => (InputChangeTime => CLKB_dly'last_event,
                           PathDelay => tpd_CLKB_DOB8,
                           PathCondition => TRUE),
                     1 => (InputChangeTime => RSTB_dly'last_event,
                           PathDelay => tpd_RSTB_DOB8,
                           PathCondition => TRUE)),
      GlitchData => DOB8_GlitchData,
      Mode       => ondetect, XOn => XOn, MsgOn => MsgOn);
    VitalPathDelay01 (
      OutSignal => DOB9, OutSignalName => "DOB9", OutTemp => DOB9_zd,
      Paths      => (0 => (InputChangeTime => CLKB_dly'last_event,
                           PathDelay => tpd_CLKB_DOB9,
                           PathCondition => TRUE),
                     1 => (InputChangeTime => RSTB_dly'last_event,
                           PathDelay => tpd_RSTB_DOB9,
                           PathCondition => TRUE)),
      GlitchData => DOB9_GlitchData,
      Mode       => ondetect, XOn => XOn, MsgOn => MsgOn);
    VitalPathDelay01 (
      OutSignal => DOB10, OutSignalName => "DOB10", OutTemp => DOB10_zd,
      Paths      => (0 => (InputChangeTime => CLKB_dly'last_event,
                           PathDelay => tpd_CLKB_DOB10,
                           PathCondition => TRUE),
                     1 => (InputChangeTime => RSTB_dly'last_event,
                           PathDelay => tpd_RSTB_DOB10,
                           PathCondition => TRUE)),
      GlitchData => DOB10_GlitchData,
      Mode       => ondetect, XOn => XOn, MsgOn => MsgOn);
    VitalPathDelay01 (
      OutSignal => DOB11, OutSignalName => "DOB11", OutTemp => DOB11_zd,
      Paths      => (0 => (InputChangeTime => CLKB_dly'last_event,
                           PathDelay => tpd_CLKB_DOB11,
                           PathCondition => TRUE),
                     1 => (InputChangeTime => RSTB_dly'last_event,
                           PathDelay => tpd_RSTB_DOB11,
                           PathCondition => TRUE)),
      GlitchData => DOB11_GlitchData,
      Mode       => ondetect, XOn => XOn, MsgOn => MsgOn);
    VitalPathDelay01 (
      OutSignal => DOB12, OutSignalName => "DOB12", OutTemp => DOB12_zd,
      Paths      => (0 => (InputChangeTime => CLKB_dly'last_event,
                           PathDelay => tpd_CLKB_DOB12,
                           PathCondition => TRUE),
                     1 => (InputChangeTime => RSTB_dly'last_event,
                           PathDelay => tpd_RSTB_DOB12,
                           PathCondition => TRUE)),
      GlitchData => DOB12_GlitchData,
      Mode       => ondetect, XOn => XOn, MsgOn => MsgOn);
    VitalPathDelay01 (
      OutSignal => DOB13, OutSignalName => "DOB13", OutTemp => DOB13_zd,
      Paths      => (0 => (InputChangeTime => CLKB_dly'last_event,
                           PathDelay => tpd_CLKB_DOB13,
                           PathCondition => TRUE),
                     1 => (InputChangeTime => RSTB_dly'last_event,
                           PathDelay => tpd_RSTB_DOB13,
                           PathCondition => TRUE)),
      GlitchData => DOB13_GlitchData,
      Mode       => ondetect, XOn => XOn, MsgOn => MsgOn);
    VitalPathDelay01 (
      OutSignal => DOB14, OutSignalName => "DOB14", OutTemp => DOB14_zd,
      Paths      => (0 => (InputChangeTime => CLKB_dly'last_event,
                           PathDelay => tpd_CLKB_DOB14,
                           PathCondition => TRUE),
                     1 => (InputChangeTime => RSTB_dly'last_event,
                           PathDelay => tpd_RSTB_DOB14,
                           PathCondition => TRUE)),
      GlitchData => DOB14_GlitchData,
      Mode       => ondetect, XOn => XOn, MsgOn => MsgOn);
    VitalPathDelay01 (
      OutSignal => DOB15, OutSignalName => "DOB15", OutTemp => DOB15_zd,
      Paths      => (0 => (InputChangeTime => CLKB_dly'last_event,
                           PathDelay => tpd_CLKB_DOB15,
                           PathCondition => TRUE),
                     1 => (InputChangeTime => RSTB_dly'last_event,
                           PathDelay => tpd_RSTB_DOB15,
                           PathCondition => TRUE)),
      GlitchData => DOB15_GlitchData,
      Mode       => ondetect, XOn => XOn, MsgOn => MsgOn);

    END PROCESS;

  end Structure;

-- entity top
  library IEEE, vital2000, ECP5U;
  use IEEE.STD_LOGIC_1164.all;
  use vital2000.vital_timing.all;
  use ECP5U.COMPONENTS.ALL;

  entity top is
    port (fpga_led: out Std_logic; fpga_neopixel: out Std_logic; 
          dpll_clkout2: in Std_logic; dpll_clkout0: in Std_logic; 
          sdr_rx_wifi: in Std_logic; sdr_rx_subg: in Std_logic; 
          sdr_rxclk: in Std_logic; sdr_txclk: out Std_logic; 
          sdr_txdata: out Std_logic; fpga_sda: inout Std_logic; 
          fpga_scl: inout Std_logic; rf_sel_0: out Std_logic; 
          rf_sel_1: out Std_logic; rf_sel_2: out Std_logic; 
          rf_sel_3: out Std_logic; subg_fem_sel0: out Std_logic; 
          subg_fem_sel1: out Std_logic; wifi_fem_sel0: out Std_logic; 
          wifi_fem_sel1: out Std_logic; wifi_fem_csd: out Std_logic; 
          wifi_fem_cps: out Std_logic; wifi_fem_crx: out Std_logic; 
          wifi_fem_ctx: out Std_logic; wifi_fem_chl: out Std_logic; 
          subg_fem_cps: out Std_logic; subg_fem_ctx: out Std_logic; 
          subg_fem_csd: out Std_logic; spi1_sck: out Std_logic; 
          spi1_mosi: out Std_logic; spi2_sck: out Std_logic; 
          spi2_mosi: out Std_logic; stm_fpga_spare1: in Std_logic; 
          spi3_sck: out Std_logic; spi3_mosi: out Std_logic; 
          spi4_sck: out Std_logic; spi4_mosi: out Std_logic; 
          stm_fpga_spare2: in Std_logic; fpga_ufl_p7: out Std_logic; 
          fpga_ufl_p8: out Std_logic; stm_fpga_spare5: in Std_logic);



  end top;

  architecture Structure of top is
    signal my_led_counter_12: Std_logic;
    signal my_led_counter_11: Std_logic;
    signal my_led_n10845: Std_logic;
    signal my_led_n124: Std_logic;
    signal my_led_n123: Std_logic;
    signal my_led_n10846: Std_logic;
    signal my_led_counter_10: Std_logic;
    signal my_led_counter_9: Std_logic;
    signal my_led_n10844: Std_logic;
    signal my_led_n126: Std_logic;
    signal my_led_n125: Std_logic;
    signal my_led_counter_8: Std_logic;
    signal my_led_counter_7: Std_logic;
    signal my_led_n10843: Std_logic;
    signal my_led_n128: Std_logic;
    signal my_led_n127: Std_logic;
    signal my_led_counter_6: Std_logic;
    signal my_led_counter_5: Std_logic;
    signal my_led_n10842: Std_logic;
    signal my_led_n130: Std_logic;
    signal my_led_n129: Std_logic;
    signal my_led_counter_4: Std_logic;
    signal my_led_counter_3: Std_logic;
    signal my_led_n10841: Std_logic;
    signal my_led_n132: Std_logic;
    signal my_led_n131: Std_logic;
    signal my_led_counter_2: Std_logic;
    signal my_led_counter_1: Std_logic;
    signal my_led_n10840: Std_logic;
    signal my_led_n134: Std_logic;
    signal my_led_n133: Std_logic;
    signal my_led_counter_0: Std_logic;
    signal my_led_n135: Std_logic;
    signal my_led_counter_25: Std_logic;
    signal my_led_n10852: Std_logic;
    signal my_led_n110: Std_logic;
    signal my_led_counter_24: Std_logic;
    signal my_led_counter_23: Std_logic;
    signal my_led_n10851: Std_logic;
    signal my_led_n112: Std_logic;
    signal my_led_n111: Std_logic;
    signal my_led_counter_22: Std_logic;
    signal my_led_counter_21: Std_logic;
    signal my_led_n10850: Std_logic;
    signal my_led_n114: Std_logic;
    signal my_led_n113: Std_logic;
    signal my_led_counter_20: Std_logic;
    signal my_led_counter_19: Std_logic;
    signal my_led_n10849: Std_logic;
    signal my_led_n116: Std_logic;
    signal my_led_n115: Std_logic;
    signal my_led_counter_18: Std_logic;
    signal my_led_counter_17: Std_logic;
    signal my_led_n10848: Std_logic;
    signal my_led_n118: Std_logic;
    signal my_led_n117: Std_logic;
    signal my_led_counter_16: Std_logic;
    signal my_led_counter_15: Std_logic;
    signal my_led_n10847: Std_logic;
    signal my_led_n120: Std_logic;
    signal my_led_n119: Std_logic;
    signal my_led_counter_14: Std_logic;
    signal my_led_counter_13: Std_logic;
    signal my_led_n122: Std_logic;
    signal my_led_n121: Std_logic;
    signal tx_counter_7: Std_logic;
    signal n38: Std_logic;
    signal n7334: Std_logic;
    signal internal_64MHz: Std_logic;
    signal n10827: Std_logic;
    signal tx_counter_2: Std_logic;
    signal tx_counter_1: Std_logic;
    signal n43: Std_logic;
    signal n44: Std_logic;
    signal n10824: Std_logic;
    signal n10825: Std_logic;
    signal tx_counter_6: Std_logic;
    signal tx_counter_5: Std_logic;
    signal n39: Std_logic;
    signal n40: Std_logic;
    signal n10826: Std_logic;
    signal tx_counter_0: Std_logic;
    signal n45: Std_logic;
    signal tx_counter_4: Std_logic;
    signal tx_counter_3: Std_logic;
    signal n41: Std_logic;
    signal n42: Std_logic;
    signal subg_i_fifo_dc_w_gctr_ci: Std_logic;
    signal subg_i_fifo_dc_wcount_1: Std_logic;
    signal subg_i_fifo_dc_wcount_0: Std_logic;
    signal subg_i_fifo_dc_iwcount_1: Std_logic;
    signal subg_i_fifo_dc_iwcount_0: Std_logic;
    signal subg_i_fifo_dc_wren_i: Std_logic;
    signal sdr_rxclk_c: Std_logic;
    signal subg_i_fifo_dc_co0: Std_logic;
    signal subg_i_fifo_dc_wcount_2: Std_logic;
    signal subg_i_fifo_dc_iwcount_2: Std_logic;
    signal subg_i_fifo_dc_r_gctr_ci: Std_logic;
    signal subg_i_fifo_dc_rcount_1: Std_logic;
    signal subg_i_fifo_dc_rcount_0: Std_logic;
    signal subg_i_fifo_dc_ircount_1: Std_logic;
    signal subg_i_fifo_dc_ircount_0: Std_logic;
    signal subg_i_empty: Std_logic;
    signal main_reset_n_N_208: Std_logic;
    signal internal_80MHz: Std_logic;
    signal subg_i_fifo_dc_co0_1: Std_logic;
    signal subg_i_fifo_dc_rcount_2: Std_logic;
    signal subg_i_fifo_dc_ircount_2: Std_logic;
    signal subg_i_fifo_dc_rden_i: Std_logic;
    signal subg_i_fifo_dc_cmp_ci: Std_logic;
    signal subg_i_fifo_dc_wcount_r1: Std_logic;
    signal subg_i_fifo_dc_wcount_r0: Std_logic;
    signal subg_i_fifo_dc_co0_2: Std_logic;
    signal subg_i_fifo_dc_empty_cmp_clr: Std_logic;
    signal subg_i_fifo_dc_empty_cmp_set: Std_logic;
    signal subg_i_fifo_dc_empty_d_c: Std_logic;
    signal subg_i_fifo_dc_empty_d: Std_logic;
    signal subg_i_fifo_dc_cmp_ci_1: Std_logic;
    signal subg_i_fifo_dc_rcount_w1: Std_logic;
    signal subg_i_fifo_dc_rcount_w0: Std_logic;
    signal subg_i_fifo_dc_co0_3: Std_logic;
    signal subg_i_fifo_dc_full_cmp_clr: Std_logic;
    signal subg_i_fifo_dc_full_cmp_set: Std_logic;
    signal subg_i_fifo_dc_full_d_c: Std_logic;
    signal subg_i_fifo_dc_full_d: Std_logic;
    signal subg_i_fifo_dc_Full: Std_logic;
    signal wifi_i_fifo_dc_w_gctr_ci: Std_logic;
    signal wifi_i_fifo_dc_wcount_1: Std_logic;
    signal wifi_i_fifo_dc_wcount_0: Std_logic;
    signal wifi_i_fifo_dc_iwcount_1: Std_logic;
    signal wifi_i_fifo_dc_iwcount_0: Std_logic;
    signal wifi_i_fifo_dc_wren_i: Std_logic;
    signal wifi_i_fifo_dc_co0: Std_logic;
    signal wifi_i_fifo_dc_wcount_2: Std_logic;
    signal wifi_i_fifo_dc_iwcount_2: Std_logic;
    signal wifi_i_fifo_dc_r_gctr_ci: Std_logic;
    signal wifi_i_fifo_dc_rcount_1: Std_logic;
    signal wifi_i_fifo_dc_rcount_0: Std_logic;
    signal wifi_i_fifo_dc_ircount_1: Std_logic;
    signal wifi_i_fifo_dc_ircount_0: Std_logic;
    signal wifi_i_empty: Std_logic;
    signal wifi_i_fifo_dc_co0_1: Std_logic;
    signal wifi_i_fifo_dc_rcount_2: Std_logic;
    signal wifi_i_fifo_dc_ircount_2: Std_logic;
    signal n14347: Std_logic;
    signal wifi_i_fifo_dc_cmp_ci: Std_logic;
    signal wifi_i_fifo_dc_wcount_r1: Std_logic;
    signal wifi_i_fifo_dc_wcount_r0: Std_logic;
    signal wifi_i_fifo_dc_co0_2: Std_logic;
    signal wifi_i_fifo_dc_empty_cmp_clr: Std_logic;
    signal wifi_i_fifo_dc_empty_cmp_set: Std_logic;
    signal wifi_i_fifo_dc_empty_d_c: Std_logic;
    signal wifi_i_fifo_dc_empty_d: Std_logic;
    signal wifi_i_fifo_dc_cmp_ci_1: Std_logic;
    signal wifi_i_fifo_dc_rcount_w1: Std_logic;
    signal wifi_i_fifo_dc_rcount_w0: Std_logic;
    signal wifi_i_fifo_dc_co0_3: Std_logic;
    signal wifi_i_fifo_dc_full_cmp_clr: Std_logic;
    signal wifi_i_fifo_dc_full_cmp_set: Std_logic;
    signal wifi_i_fifo_dc_full_d_c: Std_logic;
    signal wifi_i_fifo_dc_full_d: Std_logic;
    signal wifi_i_fifo_dc_Full: Std_logic;
    signal subg_q_fifo_dc_w_gctr_ci: Std_logic;
    signal subg_q_fifo_dc_wcount_1: Std_logic;
    signal subg_q_fifo_dc_wcount_0: Std_logic;
    signal subg_q_fifo_dc_iwcount_1: Std_logic;
    signal subg_q_fifo_dc_iwcount_0: Std_logic;
    signal subg_q_fifo_dc_wren_i: Std_logic;
    signal subg_q_fifo_dc_co0: Std_logic;
    signal subg_q_fifo_dc_wcount_2: Std_logic;
    signal subg_q_fifo_dc_iwcount_2: Std_logic;
    signal subg_q_fifo_dc_r_gctr_ci: Std_logic;
    signal subg_q_fifo_dc_rcount_1: Std_logic;
    signal subg_q_fifo_dc_rcount_0: Std_logic;
    signal subg_q_fifo_dc_ircount_1: Std_logic;
    signal subg_q_fifo_dc_ircount_0: Std_logic;
    signal subg_q_empty: Std_logic;
    signal subg_q_fifo_dc_co0_1: Std_logic;
    signal subg_q_fifo_dc_rcount_2: Std_logic;
    signal subg_q_fifo_dc_ircount_2: Std_logic;
    signal subg_q_fifo_dc_rden_i: Std_logic;
    signal subg_q_fifo_dc_cmp_ci: Std_logic;
    signal subg_q_fifo_dc_wcount_r1: Std_logic;
    signal subg_q_fifo_dc_wcount_r0: Std_logic;
    signal subg_q_fifo_dc_co0_2: Std_logic;
    signal subg_q_fifo_dc_empty_cmp_clr: Std_logic;
    signal subg_q_fifo_dc_empty_cmp_set: Std_logic;
    signal subg_q_fifo_dc_empty_d_c: Std_logic;
    signal subg_q_fifo_dc_empty_d: Std_logic;
    signal subg_q_fifo_dc_cmp_ci_1: Std_logic;
    signal subg_q_fifo_dc_rcount_w1: Std_logic;
    signal subg_q_fifo_dc_rcount_w0: Std_logic;
    signal subg_q_fifo_dc_co0_3: Std_logic;
    signal subg_q_fifo_dc_full_cmp_clr: Std_logic;
    signal subg_q_fifo_dc_full_cmp_set: Std_logic;
    signal subg_q_fifo_dc_full_d_c: Std_logic;
    signal subg_q_fifo_dc_full_d: Std_logic;
    signal subg_q_fifo_dc_Full: Std_logic;
    signal i2c_slave_wb_adr_o_15: Std_logic;
    signal i2c_slave_n1527: Std_logic;
    signal i2c_slave_n1524: Std_logic;
    signal i2c_slave_n10802: Std_logic;
    signal i2c_slave_wb_adr_o_14: Std_logic;
    signal i2c_slave_n10804: Std_logic;
    signal i2c_slave_n70: Std_logic;
    signal i2c_slave_n71: Std_logic;
    signal i2c_slave_int_clk_out_enable_210: Std_logic;
    signal int_clk_out: Std_logic;
    signal i2c_slave_n10838: Std_logic;
    signal i2c_slave_wb_adr_o_13: Std_logic;
    signal i2c_slave_n10790: Std_logic;
    signal i2c_slave_wb_adr_o_12: Std_logic;
    signal i2c_slave_n10792: Std_logic;
    signal i2c_slave_n72: Std_logic;
    signal i2c_slave_n73: Std_logic;
    signal i2c_slave_n10837: Std_logic;
    signal i2c_slave_wb_adr_o_11: Std_logic;
    signal i2c_slave_n10810: Std_logic;
    signal i2c_slave_wb_adr_o_10: Std_logic;
    signal i2c_slave_n10812: Std_logic;
    signal i2c_slave_n74: Std_logic;
    signal i2c_slave_n75: Std_logic;
    signal i2c_slave_n10836: Std_logic;
    signal i2c_slave_wb_adr_o_9: Std_logic;
    signal i2c_slave_n10814: Std_logic;
    signal wb_adr_o_8: Std_logic;
    signal i2c_slave_n10800: Std_logic;
    signal i2c_slave_n76: Std_logic;
    signal i2c_slave_n77: Std_logic;
    signal i2c_slave_n10835: Std_logic;
    signal wb_adr_o_7: Std_logic;
    signal wb_adr_o_6: Std_logic;
    signal i2c_slave_n78: Std_logic;
    signal i2c_slave_n79: Std_logic;
    signal i2c_slave_int_clk_out_enable_202: Std_logic;
    signal i2c_slave_n10834: Std_logic;
    signal wb_adr_o_5: Std_logic;
    signal wb_adr_o_4: Std_logic;
    signal i2c_slave_n80: Std_logic;
    signal i2c_slave_n81: Std_logic;
    signal i2c_slave_n10833: Std_logic;
    signal wb_adr_o_3: Std_logic;
    signal wb_adr_o_2: Std_logic;
    signal i2c_slave_n82: Std_logic;
    signal i2c_slave_n83: Std_logic;
    signal i2c_slave_n10832: Std_logic;
    signal wb_adr_o_1: Std_logic;
    signal wb_ack_i: Std_logic;
    signal i2c_slave_data_out_0: Std_logic;
    signal i2c_slave_n14342: Std_logic;
    signal wb_adr_o_0: Std_logic;
    signal i2c_slave_n84: Std_logic;
    signal i2c_slave_n85: Std_logic;
    signal i2c_slave_n10831: Std_logic;
    signal wifi_q_fifo_dc_w_gctr_ci: Std_logic;
    signal wifi_q_fifo_dc_wcount_1: Std_logic;
    signal wifi_q_fifo_dc_wcount_0: Std_logic;
    signal wifi_q_fifo_dc_iwcount_1: Std_logic;
    signal wifi_q_fifo_dc_iwcount_0: Std_logic;
    signal wifi_q_fifo_dc_wren_i: Std_logic;
    signal wifi_q_fifo_dc_co0: Std_logic;
    signal wifi_q_fifo_dc_wcount_2: Std_logic;
    signal wifi_q_fifo_dc_iwcount_2: Std_logic;
    signal wifi_q_fifo_dc_r_gctr_ci: Std_logic;
    signal wifi_q_fifo_dc_rcount_1: Std_logic;
    signal wifi_q_fifo_dc_rcount_0: Std_logic;
    signal wifi_q_fifo_dc_ircount_1: Std_logic;
    signal wifi_q_fifo_dc_ircount_0: Std_logic;
    signal wifi_q_empty: Std_logic;
    signal wifi_q_fifo_dc_co0_1: Std_logic;
    signal wifi_q_fifo_dc_rcount_2: Std_logic;
    signal wifi_q_fifo_dc_ircount_2: Std_logic;
    signal wifi_q_fifo_dc_rden_i: Std_logic;
    signal wifi_q_fifo_dc_cmp_ci: Std_logic;
    signal wifi_q_fifo_dc_wcount_r1: Std_logic;
    signal wifi_q_fifo_dc_wcount_r0: Std_logic;
    signal wifi_q_fifo_dc_co0_2: Std_logic;
    signal wifi_q_fifo_dc_empty_cmp_clr: Std_logic;
    signal wifi_q_fifo_dc_empty_cmp_set: Std_logic;
    signal wifi_q_fifo_dc_empty_d_c: Std_logic;
    signal wifi_q_fifo_dc_empty_d: Std_logic;
    signal wifi_q_fifo_dc_cmp_ci_1: Std_logic;
    signal wifi_q_fifo_dc_rcount_w1: Std_logic;
    signal wifi_q_fifo_dc_rcount_w0: Std_logic;
    signal wifi_q_fifo_dc_co0_3: Std_logic;
    signal wifi_q_fifo_dc_full_cmp_clr: Std_logic;
    signal wifi_q_fifo_dc_full_cmp_set: Std_logic;
    signal wifi_q_fifo_dc_full_d_c: Std_logic;
    signal wifi_q_fifo_dc_full_d: Std_logic;
    signal wifi_q_fifo_dc_Full: Std_logic;
    signal i2c_slave_i2c_slave_inst_state_reg_2: Std_logic;
    signal stm_fpga_spare5_c: Std_logic;
    signal i2c_slave_i2c_slave_inst_state_reg_1: Std_logic;
    signal n14324: Std_logic;
    signal n13324: Std_logic;
    signal state_reg_0: Std_logic;
    signal bus_addressed: Std_logic;
    signal n13400: Std_logic;
    signal i2c_slave_i2c_slave_inst_int_clk_out_enable_1: Std_logic;
    signal i2c_slave_i2c_slave_inst_n6297: Std_logic;
    signal my_led_n12942: Std_logic;
    signal my_led_n12948: Std_logic;
    signal my_led_n12946: Std_logic;
    signal my_led_n13348: Std_logic;
    signal my_led_n51: Std_logic;
    signal fpga_led_c: Std_logic;
    signal my_led_led_N_536: Std_logic;
    signal fpga_led_N_383: Std_logic;
    signal i2c_slave_i2c_slave_inst_data_valid_reg: Std_logic;
    signal i2c_slave_data_out_ready_reg: Std_logic;
    signal i2c_slave_data_out_valid: Std_logic;
    signal i2c_slave_i2c_slave_inst_scl_o_next_N_961: Std_logic;
    signal i2c_slave_i2c_slave_inst_int_clk_out_enable_34: Std_logic;
    signal fpga_scl_out: Std_logic;
    signal i2c_slave_i2c_slave_inst_data_reg_7: Std_logic;
    signal i2c_slave_i2c_slave_inst_sda_o_next_N_968: Std_logic;
    signal i2c_slave_i2c_slave_inst_int_clk_out_enable_35: Std_logic;
    signal fpga_sda_out: Std_logic;
    signal i2c_slave_i2c_slave_inst_n6_adj_1177: Std_logic;
    signal i2c_slave_data_out_last: Std_logic;
    signal i2c_slave_n14298: Std_logic;
    signal i2c_slave_count_reg_0: Std_logic;
    signal i2c_slave_n1528: Std_logic;
    signal i2c_slave_n1526: Std_logic;
    signal i2c_slave_n14412: Std_logic;
    signal i2c_slave_n1525: Std_logic;
    signal i2c_slave_int_clk_out_enable_157: Std_logic;
    signal i2c_slave_count_reg_1: Std_logic;
    signal i2c_slave_n14276: Std_logic;
    signal i2c_slave_n3934: Std_logic;
    signal i2c_slave_n14277: Std_logic;
    signal i2c_slave_n581: Std_logic;
    signal i2c_slave_n11253: Std_logic;
    signal i2c_slave_count_reg_2: Std_logic;
    signal i2c_slave_n3: Std_logic;
    signal i2c_slave_n3941: Std_logic;
    signal i2c_slave_n14335: Std_logic;
    signal i2c_slave_count_reg_3: Std_logic;
    signal i2c_slave_n14336: Std_logic;
    signal i2c_slave_n3940: Std_logic;
    signal i2c_slave_n14303: Std_logic;
    signal i2c_slave_count_reg_4: Std_logic;
    signal i2c_slave_n14388: Std_logic;
    signal i2c_slave_n11183: Std_logic;
    signal i2c_slave_n14281: Std_logic;
    signal i2c_slave_count_reg_5: Std_logic;
    signal i2c_slave_n14378: Std_logic;
    signal i2c_slave_n13090: Std_logic;
    signal i2c_slave_n3938: Std_logic;
    signal i2c_slave_n14272: Std_logic;
    signal i2c_slave_count_reg_6: Std_logic;
    signal i2c_slave_n13098: Std_logic;
    signal i2c_slave_n3937: Std_logic;
    signal i2c_slave_n14267: Std_logic;
    signal i2c_slave_count_reg_7: Std_logic;
    signal i2c_slave_n13212: Std_logic;
    signal i2c_slave_n13214: Std_logic;
    signal i2c_slave_n11149: Std_logic;
    signal i2c_slave_i2c_slave_inst_scl_i_reg: Std_logic;
    signal mode_read_reg: Std_logic;
    signal i2c_slave_i2c_slave_inst_last_scl_i_reg: Std_logic;
    signal i2c_slave_i2c_slave_inst_n13244: Std_logic;
    signal i2c_slave_i2c_slave_inst_n6: Std_logic;
    signal i2c_slave_i2c_slave_inst_s_axis_data_tready_next_N_934: Std_logic;
    signal i2c_slave_data_in_ready: Std_logic;
    signal i2c_slave_n14340: Std_logic;
    signal i2c_slave_data_in_valid_reg: Std_logic;
    signal i2c_slave_n2323: Std_logic;
    signal wb_dat_o_0: Std_logic;
    signal i2c_slave_data_in_reg_0: Std_logic;
    signal wb_dat_o_1: Std_logic;
    signal i2c_slave_data_in_reg_1: Std_logic;
    signal wb_dat_o_2: Std_logic;
    signal i2c_slave_data_in_reg_2: Std_logic;
    signal wb_dat_o_3: Std_logic;
    signal i2c_slave_data_in_reg_3: Std_logic;
    signal wb_dat_o_4: Std_logic;
    signal i2c_slave_data_in_reg_4: Std_logic;
    signal wb_dat_o_5: Std_logic;
    signal i2c_slave_data_in_reg_5: Std_logic;
    signal wb_dat_o_6: Std_logic;
    signal i2c_slave_data_in_reg_6: Std_logic;
    signal wb_dat_o_7: Std_logic;
    signal i2c_slave_data_in_reg_7: Std_logic;
    signal i2c_slave_n14339: Std_logic;
    signal i2c_slave_n12324: Std_logic;
    signal i2c_slave_i2c_slave_inst_data_reg_1: Std_logic;
    signal i2c_slave_i2c_slave_inst_data_reg_0: Std_logic;
    signal i2c_slave_i2c_slave_inst_int_clk_out_enable_195: Std_logic;
    signal i2c_slave_data_out_1: Std_logic;
    signal i2c_slave_i2c_slave_inst_data_reg_3: Std_logic;
    signal i2c_slave_i2c_slave_inst_data_reg_2: Std_logic;
    signal i2c_slave_data_out_2: Std_logic;
    signal i2c_slave_data_out_3: Std_logic;
    signal i2c_slave_i2c_slave_inst_data_reg_5: Std_logic;
    signal i2c_slave_i2c_slave_inst_data_reg_4: Std_logic;
    signal i2c_slave_data_out_4: Std_logic;
    signal i2c_slave_data_out_5: Std_logic;
    signal i2c_slave_i2c_slave_inst_data_reg_6: Std_logic;
    signal i2c_slave_data_out_6: Std_logic;
    signal i2c_slave_data_out_7: Std_logic;
    signal i2c_slave_i2c_slave_inst_n14372: Std_logic;
    signal i2c_slave_i2c_slave_inst_n14375: Std_logic;
    signal i2c_slave_i2c_slave_inst_n12664: Std_logic;
    signal i2c_slave_i2c_slave_inst_n14367: Std_logic;
    signal i2c_slave_i2c_slave_inst_n7314: Std_logic;
    signal i2c_slave_data_out_ready_next: Std_logic;
    signal i2c_slave_i2c_slave_inst_n6480: Std_logic;
    signal i2c_slave_i2c_slave_inst_data_out_reg_valid_reg: Std_logic;
    signal i2c_slave_i2c_slave_inst_m_axis_data_tvalid_next: Std_logic;
    signal i2c_slave_i2c_slave_inst_n14308: Std_logic;
    signal i2c_slave_i2c_slave_inst_start_bit: Std_logic;
    signal i2c_slave_i2c_slave_inst_n4111: Std_logic;
    signal i2c_slave_i2c_slave_inst_bit_count_reg_1: Std_logic;
    signal i2c_slave_i2c_slave_inst_bit_count_reg_0: Std_logic;
    signal i2c_slave_i2c_slave_inst_n14370: Std_logic;
    signal i2c_slave_i2c_slave_inst_bit_count_next_1: Std_logic;
    signal i2c_slave_i2c_slave_inst_bit_count_next_0: Std_logic;
    signal i2c_slave_i2c_slave_inst_int_clk_out_enable_180: Std_logic;
    signal i2c_slave_i2c_slave_inst_last_sda_i_reg: Std_logic;
    signal sda_i_reg: Std_logic;
    signal i2c_slave_i2c_slave_inst_n4_adj_1178: Std_logic;
    signal i2c_slave_i2c_slave_inst_bit_count_reg_2: Std_logic;
    signal i2c_slave_i2c_slave_inst_bit_count_next_2: Std_logic;
    signal i2c_slave_i2c_slave_inst_bit_count_reg_3: Std_logic;
    signal i2c_slave_i2c_slave_inst_n9276: Std_logic;
    signal i2c_slave_i2c_slave_inst_int_clk_out_enable_181: Std_logic;
    signal i2c_slave_i2c_slave_inst_n12668: Std_logic;
    signal i2c_slave_i2c_slave_inst_n14318: Std_logic;
    signal i2c_slave_i2c_slave_inst_n12272: Std_logic;
    signal i2c_slave_i2c_slave_inst_int_clk_out_enable_25: Std_logic;
    signal i2c_slave_i2c_slave_inst_n3050: Std_logic;
    signal i2c_slave_i2c_slave_inst_n14374: Std_logic;
    signal i2c_slave_i2c_slave_inst_data_next_7_N_843_0: Std_logic;
    signal i2c_slave_i2c_slave_inst_int_clk_out_enable_188: Std_logic;
    signal i2c_slave_i2c_slave_inst_n14368: Std_logic;
    signal i2c_slave_i2c_slave_inst_n14292: Std_logic;
    signal i2c_slave_i2c_slave_inst_data_next_7_N_843_1: Std_logic;
    signal i2c_slave_i2c_slave_inst_n13424: Std_logic;
    signal i2c_slave_i2c_slave_inst_data_next_7_N_843_2: Std_logic;
    signal i2c_slave_i2c_slave_inst_data_next_7_N_843_3: Std_logic;
    signal i2c_slave_i2c_slave_inst_data_next_7_N_843_4: Std_logic;
    signal i2c_slave_i2c_slave_inst_data_next_7_N_843_5: Std_logic;
    signal i2c_slave_i2c_slave_inst_data_next_7_N_843_6: Std_logic;
    signal i2c_slave_i2c_slave_inst_data_next_7_N_843_7: Std_logic;
    signal i2c_slave_i2c_slave_inst_n14369: Std_logic;
    signal i2c_slave_i2c_slave_inst_n12249: Std_logic;
    signal i2c_slave_i2c_slave_inst_int_clk_out_enable_36: Std_logic;
    signal i2c_slave_i2c_slave_inst_scl_i_filter_0: Std_logic;
    signal fpga_scl_in: Std_logic;
    signal i2c_slave_i2c_slave_inst_scl_i_filter_1: Std_logic;
    signal i2c_slave_i2c_slave_inst_scl_i_filter_2: Std_logic;
    signal i2c_slave_i2c_slave_inst_scl_i_filter_3: Std_logic;
    signal i2c_slave_i2c_slave_inst_scl_i_reg_N_956: Std_logic;
    signal i2c_slave_i2c_slave_inst_int_clk_out_enable_21: Std_logic;
    signal i2c_slave_i2c_slave_inst_sda_i_filter_0: Std_logic;
    signal fpga_sda_in: Std_logic;
    signal i2c_slave_i2c_slave_inst_sda_i_filter_1: Std_logic;
    signal i2c_slave_i2c_slave_inst_sda_i_filter_2: Std_logic;
    signal i2c_slave_i2c_slave_inst_sda_i_filter_3: Std_logic;
    signal i2c_slave_i2c_slave_inst_n13386: Std_logic;
    signal i2c_slave_i2c_slave_inst_n14406: Std_logic;
    signal i2c_slave_i2c_slave_inst_n14178: Std_logic;
    signal i2c_slave_i2c_slave_inst_n14373: Std_logic;
    signal i2c_slave_i2c_slave_inst_n11155: Std_logic;
    signal i2c_slave_i2c_slave_inst_n12184: Std_logic;
    signal i2c_slave_i2c_slave_inst_n14322: Std_logic;
    signal i2c_slave_i2c_slave_inst_n14296: Std_logic;
    signal i2c_slave_i2c_slave_inst_n14321: Std_logic;
    signal i2c_slave_i2c_slave_inst_n14320: Std_logic;
    signal i2c_slave_i2c_slave_inst_n14235: Std_logic;
    signal i2c_slave_n13196: Std_logic;
    signal i2c_slave_n11557: Std_logic;
    signal i2c_slave_n5080: Std_logic;
    signal i2c_slave_n14328: Std_logic;
    signal i2c_slave_n14278: Std_logic;
    signal i2c_slave_int_clk_out_enable_12: Std_logic;
    signal i2c_slave_n5052: Std_logic;
    signal i2c_slave_n12054: Std_logic;
    signal i2c_slave_n5053: Std_logic;
    signal i2c_slave_n14344: Std_logic;
    signal i2c_slave_n1554: Std_logic;
    signal i2c_slave_n12856: Std_logic;
    signal i2c_slave_n5085: Std_logic;
    signal i2c_slave_n5083: Std_logic;
    signal i2c_slave_n14371: Std_logic;
    signal i2c_slave_n12071: Std_logic;
    signal i2c_slave_n12648: Std_logic;
    signal i2c_slave_n1529: Std_logic;
    signal i2c_slave_n14275: Std_logic;
    signal i2c_slave_n12291: Std_logic;
    signal i2c_slave_n5087: Std_logic;
    signal n14917: Std_logic;
    signal lvds_rx_09_inst_sdr_rxclk_c_enable_86: Std_logic;
    signal lvds_rx_09_inst_match_count_2: Std_logic;
    signal lvds_rx_09_inst_sample_count_5: Std_logic;
    signal n14294: Std_logic;
    signal lvds_rx_09_inst_n14282: Std_logic;
    signal lvds_rx_09_inst_sample_count_4: Std_logic;
    signal n14304: Std_logic;
    signal sample_count_3: Std_logic;
    signal lvds_rx_09_inst_sample_count_next_5: Std_logic;
    signal lvds_rx_09_inst_sample_count_next_4: Std_logic;
    signal sdr_rxclk_c_enable_88: Std_logic;
    signal w_lvds_rx_09_d0: Std_logic;
    signal w_lvds_rx_09_d1: Std_logic;
    signal lvds_rx_09_inst_sr_0: Std_logic;
    signal lvds_rx_09_inst_sr_1: Std_logic;
    signal lvds_rx_09_inst_sr_2: Std_logic;
    signal lvds_rx_09_inst_sr_3: Std_logic;
    signal lvds_rx_09_inst_sr_4: Std_logic;
    signal lvds_rx_09_inst_sr_5: Std_logic;
    signal lvds_rx_09_inst_sr_6: Std_logic;
    signal lvds_rx_09_inst_sr_7: Std_logic;
    signal lvds_rx_09_inst_sr_8: Std_logic;
    signal lvds_rx_09_inst_sr_9: Std_logic;
    signal lvds_rx_09_inst_sr_10: Std_logic;
    signal lvds_rx_09_inst_sr_11: Std_logic;
    signal lvds_rx_09_inst_sr_12: Std_logic;
    signal lvds_rx_09_inst_sr_13: Std_logic;
    signal lvds_rx_09_inst_sr_14: Std_logic;
    signal lvds_rx_09_inst_sr_15: Std_logic;
    signal sr_16: Std_logic;
    signal lvds_rx_09_inst_sr_17: Std_logic;
    signal lvds_rx_09_inst_sr_18: Std_logic;
    signal lvds_rx_09_inst_sr_19: Std_logic;
    signal lvds_rx_09_inst_sr_20: Std_logic;
    signal lvds_rx_09_inst_sr_21: Std_logic;
    signal lvds_rx_09_inst_sr_22: Std_logic;
    signal lvds_rx_09_inst_sr_23: Std_logic;
    signal lvds_rx_09_inst_sr_24: Std_logic;
    signal lvds_rx_09_inst_sr_25: Std_logic;
    signal lvds_rx_09_inst_sr_26: Std_logic;
    signal lvds_rx_09_inst_sr_27: Std_logic;
    signal lvds_rx_09_inst_sr_28: Std_logic;
    signal lvds_rx_09_inst_sr_29: Std_logic;
    signal lvds_rx_09_inst_sr_30: Std_logic;
    signal lvds_rx_09_inst_sr_31: Std_logic;
    signal lvds_rx_09_inst_sr_32: Std_logic;
    signal lvds_rx_24_inst_sr_16: Std_logic;
    signal lvds_rx_24_inst_n14357: Std_logic;
    signal lvds_rx_24_inst_n11: Std_logic;
    signal lvds_rx_24_inst_n13106: Std_logic;
    signal lvds_rx_24_inst_n13114: Std_logic;
    signal lvds_rx_24_inst_match_count_next_1: Std_logic;
    signal lvds_rx_24_inst_match_count_next_0: Std_logic;
    signal lvds_rx_24_inst_sdr_rxclk_c_enable_82: Std_logic;
    signal lvds_rx_24_inst_match_count_0: Std_logic;
    signal lvds_rx_24_inst_match_count_1: Std_logic;
    signal n14917_000_BUF0: Std_logic;
    signal lvds_rx_24_inst_match_count_2: Std_logic;
    signal lvds_rx_24_inst_sr_32: Std_logic;
    signal lvds_rx_24_inst_sr_1: Std_logic;
    signal lvds_rx_24_inst_sr_17: Std_logic;
    signal lvds_rx_24_inst_sr_31: Std_logic;
    signal lvds_rx_24_inst_n9573: Std_logic;
    signal lvds_rx_24_inst_sr_15: Std_logic;
    signal lvds_rx_24_inst_r_candidate_offset_next_N_1098: Std_logic;
    signal lvds_rx_24_inst_sdr_rxclk_c_enable_5: Std_logic;
    signal lvds_rx_24_inst_r_candidate_offset: Std_logic;
    signal lvds_rx_24_inst_sample_count_5: Std_logic;
    signal n14284: Std_logic;
    signal lvds_rx_24_inst_n14283: Std_logic;
    signal lvds_rx_24_inst_sample_count_4: Std_logic;
    signal n14305: Std_logic;
    signal sample_count_3_adj_1184: Std_logic;
    signal lvds_rx_24_inst_sample_count_next_5: Std_logic;
    signal lvds_rx_24_inst_sample_count_next_4: Std_logic;
    signal lvds_rx_24_inst_sdr_rxclk_c_enable_80: Std_logic;
    signal w_lvds_rx_24_d0: Std_logic;
    signal w_lvds_rx_24_d1: Std_logic;
    signal lvds_rx_24_inst_sr_0: Std_logic;
    signal lvds_rx_24_inst_sr_2: Std_logic;
    signal lvds_rx_24_inst_sr_3: Std_logic;
    signal lvds_rx_24_inst_sr_4: Std_logic;
    signal lvds_rx_24_inst_sr_5: Std_logic;
    signal lvds_rx_24_inst_sr_6: Std_logic;
    signal lvds_rx_24_inst_sr_7: Std_logic;
    signal lvds_rx_24_inst_sr_8: Std_logic;
    signal lvds_rx_24_inst_sr_9: Std_logic;
    signal lvds_rx_24_inst_sr_10: Std_logic;
    signal lvds_rx_24_inst_sr_11: Std_logic;
    signal lvds_rx_24_inst_sr_12: Std_logic;
    signal lvds_rx_24_inst_sr_13: Std_logic;
    signal lvds_rx_24_inst_sr_14: Std_logic;
    signal lvds_rx_24_inst_sr_18: Std_logic;
    signal lvds_rx_24_inst_sr_19: Std_logic;
    signal lvds_rx_24_inst_sr_20: Std_logic;
    signal lvds_rx_24_inst_sr_21: Std_logic;
    signal lvds_rx_24_inst_sr_22: Std_logic;
    signal lvds_rx_24_inst_sr_23: Std_logic;
    signal lvds_rx_24_inst_sr_24: Std_logic;
    signal lvds_rx_24_inst_sr_25: Std_logic;
    signal lvds_rx_24_inst_sr_26: Std_logic;
    signal lvds_rx_24_inst_sr_27: Std_logic;
    signal lvds_rx_24_inst_sr_28: Std_logic;
    signal lvds_rx_24_inst_sr_29: Std_logic;
    signal lvds_rx_24_inst_sr_30: Std_logic;
    signal n13080: Std_logic;
    signal r_state_1: Std_logic;
    signal real_candidate: Std_logic;
    signal n102: Std_logic;
    signal n12896: Std_logic;
    signal candidate_sr_30: Std_logic;
    signal n14316: Std_logic;
    signal n12902: Std_logic;
    signal match_count_next_1: Std_logic;
    signal match_count_next_0: Std_logic;
    signal match_count_0: Std_logic;
    signal match_count_1: Std_logic;
    signal n12584: Std_logic;
    signal n14299: Std_logic;
    signal n13402: Std_logic;
    signal i2c_slave_i2c_slave_inst_int_clk_out_enable_29: Std_logic;
    signal my_led_n162: Std_logic;
    signal my_led_n163: Std_logic;
    signal my_led_n160: Std_logic;
    signal my_led_n161: Std_logic;
    signal my_led_n158: Std_logic;
    signal my_led_n159: Std_logic;
    signal my_led_n156: Std_logic;
    signal my_led_n157: Std_logic;
    signal my_led_n154: Std_logic;
    signal my_led_n155: Std_logic;
    signal my_led_n152: Std_logic;
    signal my_led_n153: Std_logic;
    signal my_led_n150: Std_logic;
    signal my_led_n151: Std_logic;
    signal my_led_n148: Std_logic;
    signal my_led_n149: Std_logic;
    signal my_led_n146: Std_logic;
    signal my_led_n147: Std_logic;
    signal my_led_n144: Std_logic;
    signal my_led_n145: Std_logic;
    signal my_led_n142: Std_logic;
    signal my_led_n143: Std_logic;
    signal my_led_n140: Std_logic;
    signal my_led_n141: Std_logic;
    signal my_led_n138: Std_logic;
    signal my_led_n139: Std_logic;
    signal r_state_0: Std_logic;
    signal n11488: Std_logic;
    signal n14365: Std_logic;
    signal n13204: Std_logic;
    signal r_candidate_offset: Std_logic;
    signal n13401: Std_logic;
    signal lvds_rx_09_inst_sdr_rxclk_c_enable_2: Std_logic;
    signal lvds_rx_09_inst_valid_candidate_N_1125: Std_logic;
    signal n14315: Std_logic;
    signal lvds_rx_09_inst_r_state_next_0: Std_logic;
    signal lvds_rx_09_inst_n13296: Std_logic;
    signal lvds_rx_09_inst_n12718: Std_logic;
    signal lvds_rx_09_inst_n14364: Std_logic;
    signal lvds_rx_09_inst_n5716: Std_logic;
    signal lvds_rx_24_inst_n9592: Std_logic;
    signal r_state_0_adj_1181: Std_logic;
    signal lvds_rx_24_inst_r_state_next_0: Std_logic;
    signal n15: Std_logic;
    signal lvds_rx_24_inst_real_candidate: Std_logic;
    signal r_state_1_adj_1180: Std_logic;
    signal lvds_rx_24_inst_n12642: Std_logic;
    signal lvds_rx_24_inst_n5848: Std_logic;
    signal int_clk_out_enable_150: Std_logic;
    signal reg0_0: Std_logic;
    signal reg0_1: Std_logic;
    signal reg0_2: Std_logic;
    signal reg0_3: Std_logic;
    signal reg0_4: Std_logic;
    signal reg0_5: Std_logic;
    signal reg0_6: Std_logic;
    signal reg0_7: Std_logic;
    signal int_clk_out_enable_164: Std_logic;
    signal reg1_0: Std_logic;
    signal reg1_1: Std_logic;
    signal reg1_2: Std_logic;
    signal reg1_3: Std_logic;
    signal reg1_4: Std_logic;
    signal reg1_5: Std_logic;
    signal reg1_6: Std_logic;
    signal reg1_7: Std_logic;
    signal int_clk_out_enable_171: Std_logic;
    signal reg2_0: Std_logic;
    signal reg2_1: Std_logic;
    signal reg2_2: Std_logic;
    signal reg2_3: Std_logic;
    signal reg2_4: Std_logic;
    signal reg2_5: Std_logic;
    signal reg2_6: Std_logic;
    signal reg2_7: Std_logic;
    signal sample_count_1: Std_logic;
    signal sample_count_0: Std_logic;
    signal sample_count_next_1: Std_logic;
    signal sample_count_next_0: Std_logic;
    signal sample_count_2: Std_logic;
    signal n14337: Std_logic;
    signal sample_count_next_3: Std_logic;
    signal sample_count_next_2: Std_logic;
    signal n14268: Std_logic;
    signal sample_count_6: Std_logic;
    signal sample_count_7: Std_logic;
    signal lvds_rx_09_inst_n14273: Std_logic;
    signal sample_count_next_7: Std_logic;
    signal lvds_rx_09_inst_sample_count_next_6: Std_logic;
    signal sample_count_0_adj_1187: Std_logic;
    signal sample_count_next_0_adj_1192: Std_logic;
    signal sample_count_7_adj_1182: Std_logic;
    signal sample_count_1_adj_1186: Std_logic;
    signal lvds_rx_24_inst_n12254: Std_logic;
    signal lvds_rx_24_inst_n13280: Std_logic;
    signal n14360: Std_logic;
    signal sample_count_next_1_adj_1191: Std_logic;
    signal sample_count_2_adj_1185: Std_logic;
    signal n14338: Std_logic;
    signal sample_count_next_2_adj_1190: Std_logic;
    signal sample_count_next_3_adj_1189: Std_logic;
    signal sample_count_6_adj_1183: Std_logic;
    signal lvds_rx_24_inst_n14274: Std_logic;
    signal lvds_rx_24_inst_sample_count_next_6: Std_logic;
    signal n14269: Std_logic;
    signal sample_count_next_7_adj_1188: Std_logic;
    signal i2c_slave_i2c_slave_inst_sda_i_reg_N_943: Std_logic;
    signal i2c_slave_i2c_slave_inst_int_clk_out_enable_22: Std_logic;
    signal ufl_p7_sel_7_N_35_0: Std_logic;
    signal int_clk_out_enable_128: Std_logic;
    signal spi1_test_pattern_0: Std_logic;
    signal tx_lvds_test_pattern_31_N_119_27: Std_logic;
    signal tx_lvds_test_pattern_31_N_119_26: Std_logic;
    signal spi1_test_pattern_2: Std_logic;
    signal spi1_test_pattern_3: Std_logic;
    signal spi3_test_pattern_15_N_83_13: Std_logic;
    signal spi1_test_pattern_5: Std_logic;
    signal tx_lvds_test_pattern_31_N_119_31: Std_logic;
    signal spi1_test_pattern_7: Std_logic;
    signal tx_lvds_test_pattern_31_N_119_25: Std_logic;
    signal int_clk_out_enable_121: Std_logic;
    signal spi1_test_pattern_9: Std_logic;
    signal spi1_test_pattern_10: Std_logic;
    signal tx_lvds_test_pattern_31_N_119_28: Std_logic;
    signal spi1_test_pattern_12: Std_logic;
    signal tx_lvds_test_pattern_31_N_119_6: Std_logic;
    signal spi1_test_pattern_14: Std_logic;
    signal spi1_test_pattern_15: Std_logic;
    signal int_clk_out_enable_114: Std_logic;
    signal spi2_test_pattern_0: Std_logic;
    signal spi2_test_pattern_1: Std_logic;
    signal spi2_test_pattern_2: Std_logic;
    signal spi2_test_pattern_3: Std_logic;
    signal spi2_test_pattern_5: Std_logic;
    signal spi2_test_pattern_6: Std_logic;
    signal int_clk_out_enable_106: Std_logic;
    signal spi2_test_pattern_9: Std_logic;
    signal spi2_test_pattern_10: Std_logic;
    signal spi2_test_pattern_11: Std_logic;
    signal spi2_test_pattern_12: Std_logic;
    signal spi2_test_pattern_15: Std_logic;
    signal int_clk_out_enable_99: Std_logic;
    signal spi3_test_pattern_3: Std_logic;
    signal spi3_test_pattern_4: Std_logic;
    signal int_clk_out_enable_91: Std_logic;
    signal spi3_test_pattern_11: Std_logic;
    signal spi3_test_pattern_12: Std_logic;
    signal spi3_test_pattern_14: Std_logic;
    signal int_clk_out_enable_92: Std_logic;
    signal spi3_test_pattern_15: Std_logic;
    signal int_clk_out_enable_84: Std_logic;
    signal spi4_test_pattern_3: Std_logic;
    signal spi4_test_pattern_4: Std_logic;
    signal int_clk_out_enable_76: Std_logic;
    signal spi4_test_pattern_11: Std_logic;
    signal spi4_test_pattern_12: Std_logic;
    signal spi4_test_pattern_14: Std_logic;
    signal int_clk_out_enable_77: Std_logic;
    signal spi4_test_pattern_15: Std_logic;
    signal int_clk_out_enable_27: Std_logic;
    signal spi_test_pattern_enable_0: Std_logic;
    signal spi_test_pattern_enable_1: Std_logic;
    signal spi_test_pattern_enable_2: Std_logic;
    signal spi_test_pattern_enable_3: Std_logic;
    signal i2c_slave_i2c_slave_inst_n14326: Std_logic;
    signal i2c_slave_i2c_slave_inst_n3800: Std_logic;
    signal i2c_slave_i2c_slave_inst_n14329: Std_logic;
    signal i2c_slave_i2c_slave_inst_state_next_0: Std_logic;
    signal int_clk_out_enable_32: Std_logic;
    signal subg_delay_loadn: Std_logic;
    signal subg_i_fifo_dc_r_gdata_1: Std_logic;
    signal subg_i_fifo_dc_r_gdata_0: Std_logic;
    signal subg_i_fifo_dc_r_gcount_0: Std_logic;
    signal subg_i_fifo_dc_r_gcount_1: Std_logic;
    signal subg_i_fifo_dc_r_gcount_2: Std_logic;
    signal subg_i_fifo_dc_r_gcount_w0: Std_logic;
    signal subg_i_fifo_dc_r_gcount_w1: Std_logic;
    signal subg_i_fifo_dc_r_gcount_w2: Std_logic;
    signal subg_i_fifo_dc_r_gcount_w20: Std_logic;
    signal subg_i_fifo_dc_r_gcount_w21: Std_logic;
    signal subg_i_fifo_dc_r_gcount_w22: Std_logic;
    signal subg_i_fifo_dc_rptr_0: Std_logic;
    signal subg_i_fifo_dc_rptr_1: Std_logic;
    signal subg_i_fifo_dc_w_gdata_1: Std_logic;
    signal subg_i_fifo_dc_w_gdata_0: Std_logic;
    signal subg_i_fifo_dc_w_gcount_0: Std_logic;
    signal subg_i_fifo_dc_w_gcount_1: Std_logic;
    signal subg_i_fifo_dc_w_gcount_2: Std_logic;
    signal subg_i_fifo_dc_w_gcount_r0: Std_logic;
    signal subg_i_fifo_dc_w_gcount_r1: Std_logic;
    signal subg_i_fifo_dc_w_gcount_r2: Std_logic;
    signal subg_i_fifo_dc_w_gcount_r20: Std_logic;
    signal subg_i_fifo_dc_w_gcount_r21: Std_logic;
    signal subg_i_fifo_dc_w_gcount_r22: Std_logic;
    signal subg_i_fifo_dc_wptr_0: Std_logic;
    signal subg_i_fifo_dc_wptr_1: Std_logic;
    signal subg_i_spi_bit_counter_1: Std_logic;
    signal subg_i_spi_bit_counter_2: Std_logic;
    signal shift_reg_15_N_1175: Std_logic;
    signal subg_i_spi_bit_counter_0: Std_logic;
    signal subg_i_spi_bit_counter_5_N_1168_0: Std_logic;
    signal shift_reg_15_N_1166: Std_logic;
    signal subg_i_spi_n13130: Std_logic;
    signal subg_i_spi_n6384: Std_logic;
    signal subg_i_spi_n6382: Std_logic;
    signal subg_i_spi_bit_counter_3: Std_logic;
    signal subg_i_spi_n6380: Std_logic;
    signal stm_fpga_spare1_c: Std_logic;
    signal subg_i_spi_bit_counter_4: Std_logic;
    signal subg_i_spi_n14314: Std_logic;
    signal subg_i_spi_bit_counter_5_N_1144_4: Std_logic;
    signal internal_80MHz_enable_19: Std_logic;
    signal subg_i_spi_bit_counter_5: Std_logic;
    signal subg_i_spi_n6376: Std_logic;
    signal subg_i_spi_shift_reg_2: Std_logic;
    signal spi1_sck_N_394_1: Std_logic;
    signal subg_i_spi_shift_reg_1: Std_logic;
    signal spi1_sck_N_394_0: Std_logic;
    signal subg_i_spi_shift_reg_15_N_1126_1: Std_logic;
    signal subg_i_spi_shift_reg_15_N_1126_0: Std_logic;
    signal subg_i_spi_shift_reg_0: Std_logic;
    signal subg_i_spi_shift_reg_4: Std_logic;
    signal spi1_sck_N_394_3: Std_logic;
    signal subg_i_spi_shift_reg_3: Std_logic;
    signal spi1_sck_N_394_2: Std_logic;
    signal subg_i_spi_shift_reg_15_N_1126_3: Std_logic;
    signal subg_i_spi_shift_reg_15_N_1126_2: Std_logic;
    signal subg_i_spi_shift_reg_6: Std_logic;
    signal spi1_sck_N_394_5: Std_logic;
    signal subg_i_spi_shift_reg_5: Std_logic;
    signal spi1_sck_N_394_4: Std_logic;
    signal subg_i_spi_shift_reg_15_N_1126_5: Std_logic;
    signal subg_i_spi_shift_reg_15_N_1126_4: Std_logic;
    signal subg_i_spi_shift_reg_8: Std_logic;
    signal spi1_sck_N_394_7: Std_logic;
    signal subg_i_spi_shift_reg_7: Std_logic;
    signal spi1_sck_N_394_6: Std_logic;
    signal subg_i_spi_shift_reg_15_N_1126_7: Std_logic;
    signal subg_i_spi_shift_reg_15_N_1126_6: Std_logic;
    signal subg_i_spi_shift_reg_10: Std_logic;
    signal spi1_sck_N_394_9: Std_logic;
    signal subg_i_spi_shift_reg_9: Std_logic;
    signal spi1_sck_N_394_8: Std_logic;
    signal subg_i_spi_shift_reg_15_N_1126_9: Std_logic;
    signal subg_i_spi_shift_reg_15_N_1126_8: Std_logic;
    signal subg_i_spi_shift_reg_12: Std_logic;
    signal spi1_sck_N_394_11: Std_logic;
    signal subg_i_spi_shift_reg_11: Std_logic;
    signal spi1_sck_N_394_10: Std_logic;
    signal subg_i_spi_shift_reg_15_N_1126_11: Std_logic;
    signal subg_i_spi_shift_reg_15_N_1126_10: Std_logic;
    signal subg_i_spi_shift_reg_14: Std_logic;
    signal spi1_sck_N_394_13: Std_logic;
    signal subg_i_spi_shift_reg_13: Std_logic;
    signal spi1_sck_N_394_12: Std_logic;
    signal subg_i_spi_shift_reg_15_N_1126_13: Std_logic;
    signal subg_i_spi_shift_reg_15_N_1126_12: Std_logic;
    signal subg_i_fifo_data_out_14: Std_logic;
    signal subg_i_spi_shift_reg_15: Std_logic;
    signal spi1_sck_N_394_14: Std_logic;
    signal subg_i_spi_shift_reg_15_N_1126_14: Std_logic;
    signal subg_i_fifo_data_out_15: Std_logic;
    signal spi1_sck_N_394_15: Std_logic;
    signal internal_80MHz_enable_20: Std_logic;
    signal subg_q_fifo_dc_r_gdata_1: Std_logic;
    signal subg_q_fifo_dc_r_gdata_0: Std_logic;
    signal subg_q_fifo_dc_r_gcount_0: Std_logic;
    signal subg_q_fifo_dc_r_gcount_1: Std_logic;
    signal subg_q_fifo_dc_r_gcount_2: Std_logic;
    signal subg_q_fifo_dc_r_gcount_w0: Std_logic;
    signal subg_q_fifo_dc_r_gcount_w1: Std_logic;
    signal subg_q_fifo_dc_r_gcount_w2: Std_logic;
    signal subg_q_fifo_dc_r_gcount_w20: Std_logic;
    signal subg_q_fifo_dc_r_gcount_w21: Std_logic;
    signal subg_q_fifo_dc_r_gcount_w22: Std_logic;
    signal subg_q_fifo_dc_rptr_0: Std_logic;
    signal subg_q_fifo_dc_rptr_1: Std_logic;
    signal subg_q_fifo_dc_w_gdata_1: Std_logic;
    signal subg_q_fifo_dc_w_gdata_0: Std_logic;
    signal subg_q_fifo_dc_w_gcount_0: Std_logic;
    signal subg_q_fifo_dc_w_gcount_1: Std_logic;
    signal subg_q_fifo_dc_w_gcount_2: Std_logic;
    signal subg_q_fifo_dc_w_gcount_r0: Std_logic;
    signal subg_q_fifo_dc_w_gcount_r1: Std_logic;
    signal subg_q_fifo_dc_w_gcount_r2: Std_logic;
    signal subg_q_fifo_dc_w_gcount_r20: Std_logic;
    signal subg_q_fifo_dc_w_gcount_r21: Std_logic;
    signal subg_q_fifo_dc_w_gcount_r22: Std_logic;
    signal subg_q_fifo_dc_wptr_0: Std_logic;
    signal subg_q_fifo_dc_wptr_1: Std_logic;
    signal subg_q_spi_bit_counter_3: Std_logic;
    signal subg_q_spi_bit_counter_0: Std_logic;
    signal shift_reg_15_N_1175_adj_1193: Std_logic;
    signal subg_q_spi_bit_counter_5_N_1168_0: Std_logic;
    signal n14288: Std_logic;
    signal subg_q_spi_n13124: Std_logic;
    signal subg_q_spi_bit_counter_2: Std_logic;
    signal subg_q_spi_bit_counter_1: Std_logic;
    signal subg_q_spi_n6374: Std_logic;
    signal subg_q_spi_n6372: Std_logic;
    signal subg_q_spi_n6370: Std_logic;
    signal subg_q_spi_n14290: Std_logic;
    signal subg_q_spi_bit_counter_5: Std_logic;
    signal subg_q_spi_n13122: Std_logic;
    signal subg_q_spi_bit_counter_4: Std_logic;
    signal internal_80MHz_enable_36: Std_logic;
    signal subg_q_spi_bit_counter_5_N_1144_4: Std_logic;
    signal internal_80MHz_enable_35: Std_logic;
    signal subg_q_spi_n14313: Std_logic;
    signal subg_q_spi_n6366: Std_logic;
    signal subg_q_spi_shift_reg_2: Std_logic;
    signal spi2_sck_N_410_1: Std_logic;
    signal subg_q_spi_shift_reg_1: Std_logic;
    signal spi2_sck_N_410_0: Std_logic;
    signal subg_q_spi_shift_reg_15_N_1126_1: Std_logic;
    signal subg_q_spi_shift_reg_15_N_1126_0: Std_logic;
    signal subg_q_spi_shift_reg_0: Std_logic;
    signal subg_q_spi_shift_reg_4: Std_logic;
    signal spi2_sck_N_410_3: Std_logic;
    signal subg_q_spi_shift_reg_3: Std_logic;
    signal spi2_sck_N_410_2: Std_logic;
    signal subg_q_spi_shift_reg_15_N_1126_3: Std_logic;
    signal subg_q_spi_shift_reg_15_N_1126_2: Std_logic;
    signal subg_q_spi_shift_reg_6: Std_logic;
    signal spi2_sck_N_410_5: Std_logic;
    signal subg_q_spi_shift_reg_5: Std_logic;
    signal spi2_sck_N_410_4: Std_logic;
    signal subg_q_spi_shift_reg_15_N_1126_5: Std_logic;
    signal subg_q_spi_shift_reg_15_N_1126_4: Std_logic;
    signal subg_q_spi_shift_reg_8: Std_logic;
    signal spi2_sck_N_410_7: Std_logic;
    signal subg_q_spi_shift_reg_7: Std_logic;
    signal spi2_sck_N_410_6: Std_logic;
    signal subg_q_spi_shift_reg_15_N_1126_7: Std_logic;
    signal subg_q_spi_shift_reg_15_N_1126_6: Std_logic;
    signal subg_q_spi_shift_reg_10: Std_logic;
    signal spi2_sck_N_410_9: Std_logic;
    signal subg_q_spi_shift_reg_9: Std_logic;
    signal spi2_sck_N_410_8: Std_logic;
    signal subg_q_spi_shift_reg_15_N_1126_9: Std_logic;
    signal subg_q_spi_shift_reg_15_N_1126_8: Std_logic;
    signal subg_q_spi_shift_reg_12: Std_logic;
    signal spi2_sck_N_410_11: Std_logic;
    signal subg_q_spi_shift_reg_11: Std_logic;
    signal spi2_sck_N_410_10: Std_logic;
    signal subg_q_spi_shift_reg_15_N_1126_11: Std_logic;
    signal subg_q_spi_shift_reg_15_N_1126_10: Std_logic;
    signal subg_q_spi_shift_reg_14: Std_logic;
    signal spi2_sck_N_410_13: Std_logic;
    signal subg_q_spi_shift_reg_13: Std_logic;
    signal spi2_sck_N_410_12: Std_logic;
    signal subg_q_spi_shift_reg_15_N_1126_13: Std_logic;
    signal subg_q_spi_shift_reg_15_N_1126_12: Std_logic;
    signal spi2_test_pattern_14: Std_logic;
    signal subg_q_fifo_data_out_14: Std_logic;
    signal subg_q_spi_shift_reg_15: Std_logic;
    signal spi2_sck_N_410_14: Std_logic;
    signal subg_q_spi_shift_reg_15_N_1126_14: Std_logic;
    signal subg_q_fifo_data_out_15: Std_logic;
    signal spi2_sck_N_410_15: Std_logic;
    signal int_clk_out_enable_212: Std_logic;
    signal subg_rx_invert: Std_logic;
    signal subg_sync_check_enable: Std_logic;
    signal tx_lvds_test_pattern_1: Std_logic;
    signal tx_lvds_test_pattern_0: Std_logic;
    signal n14293: Std_logic;
    signal tx_ddr_data_0: Std_logic;
    signal tx_ddr_data_1: Std_logic;
    signal tx_lvds_test_pattern_3: Std_logic;
    signal tx_lvds_test_pattern_2: Std_logic;
    signal tx_ddr_data_31_N_175_3: Std_logic;
    signal tx_ddr_data_31_N_175_2: Std_logic;
    signal tx_ddr_data_2: Std_logic;
    signal tx_ddr_data_3: Std_logic;
    signal tx_lvds_test_pattern_5: Std_logic;
    signal tx_lvds_test_pattern_4: Std_logic;
    signal tx_ddr_data_31_N_175_5: Std_logic;
    signal tx_ddr_data_31_N_175_4: Std_logic;
    signal tx_ddr_data_4: Std_logic;
    signal tx_ddr_data_5: Std_logic;
    signal tx_lvds_test_pattern_7: Std_logic;
    signal tx_lvds_test_pattern_6: Std_logic;
    signal tx_ddr_data_31_N_175_7: Std_logic;
    signal tx_ddr_data_31_N_175_6: Std_logic;
    signal tx_ddr_data_6: Std_logic;
    signal tx_ddr_data_7: Std_logic;
    signal tx_lvds_test_pattern_9: Std_logic;
    signal tx_lvds_test_pattern_8: Std_logic;
    signal tx_ddr_data_31_N_175_9: Std_logic;
    signal tx_ddr_data_31_N_175_8: Std_logic;
    signal tx_ddr_data_8: Std_logic;
    signal tx_ddr_data_9: Std_logic;
    signal tx_lvds_test_pattern_11: Std_logic;
    signal tx_lvds_test_pattern_10: Std_logic;
    signal tx_ddr_data_31_N_175_11: Std_logic;
    signal tx_ddr_data_31_N_175_10: Std_logic;
    signal tx_ddr_data_10: Std_logic;
    signal tx_ddr_data_11: Std_logic;
    signal tx_lvds_test_pattern_13: Std_logic;
    signal tx_lvds_test_pattern_12: Std_logic;
    signal tx_ddr_data_31_N_175_13: Std_logic;
    signal tx_ddr_data_31_N_175_12: Std_logic;
    signal tx_ddr_data_12: Std_logic;
    signal tx_ddr_data_13: Std_logic;
    signal tx_lvds_test_pattern_15: Std_logic;
    signal tx_lvds_test_pattern_14: Std_logic;
    signal tx_ddr_data_31_N_175_15: Std_logic;
    signal tx_ddr_data_31_N_175_14: Std_logic;
    signal tx_ddr_data_14: Std_logic;
    signal tx_ddr_data_15: Std_logic;
    signal tx_lvds_test_pattern_17: Std_logic;
    signal tx_lvds_test_pattern_16: Std_logic;
    signal tx_ddr_data_31_N_175_17: Std_logic;
    signal tx_ddr_data_31_N_175_16: Std_logic;
    signal tx_ddr_data_16: Std_logic;
    signal tx_ddr_data_17: Std_logic;
    signal tx_lvds_test_pattern_19: Std_logic;
    signal tx_lvds_test_pattern_18: Std_logic;
    signal tx_ddr_data_31_N_175_19: Std_logic;
    signal tx_ddr_data_31_N_175_18: Std_logic;
    signal tx_ddr_data_18: Std_logic;
    signal tx_ddr_data_19: Std_logic;
    signal tx_lvds_test_pattern_21: Std_logic;
    signal tx_lvds_test_pattern_20: Std_logic;
    signal tx_ddr_data_31_N_175_21: Std_logic;
    signal tx_ddr_data_31_N_175_20: Std_logic;
    signal tx_ddr_data_20: Std_logic;
    signal tx_ddr_data_21: Std_logic;
    signal tx_lvds_test_pattern_23: Std_logic;
    signal tx_lvds_test_pattern_22: Std_logic;
    signal tx_ddr_data_31_N_175_23: Std_logic;
    signal tx_ddr_data_31_N_175_22: Std_logic;
    signal tx_ddr_data_22: Std_logic;
    signal tx_ddr_data_23: Std_logic;
    signal tx_lvds_test_pattern_25: Std_logic;
    signal tx_lvds_test_pattern_24: Std_logic;
    signal tx_ddr_data_31_N_175_25: Std_logic;
    signal tx_ddr_data_31_N_175_24: Std_logic;
    signal tx_ddr_data_24: Std_logic;
    signal tx_ddr_data_25: Std_logic;
    signal tx_lvds_test_pattern_27: Std_logic;
    signal tx_lvds_test_pattern_26: Std_logic;
    signal tx_ddr_data_31_N_175_27: Std_logic;
    signal tx_ddr_data_31_N_175_26: Std_logic;
    signal tx_ddr_data_26: Std_logic;
    signal tx_ddr_data_27: Std_logic;
    signal tx_lvds_test_pattern_29: Std_logic;
    signal tx_lvds_test_pattern_28: Std_logic;
    signal tx_ddr_data_31_N_175_29: Std_logic;
    signal tx_ddr_data_31_N_175_28: Std_logic;
    signal tx_ddr_data_28: Std_logic;
    signal tx_ddr_data_29: Std_logic;
    signal tx_lvds_test_pattern_31: Std_logic;
    signal tx_lvds_test_pattern_30: Std_logic;
    signal tx_ddr_data_31_N_175_31: Std_logic;
    signal tx_ddr_data_31_N_175_30: Std_logic;
    signal tx_ddr_data_30: Std_logic;
    signal tx_ddr_data_31: Std_logic;
    signal int_clk_out_enable_69: Std_logic;
    signal int_clk_out_enable_62: Std_logic;
    signal int_clk_out_enable_55: Std_logic;
    signal int_clk_out_enable_54: Std_logic;
    signal int_clk_out_enable_53: Std_logic;
    signal int_clk_out_enable_46: Std_logic;
    signal int_clk_out_enable_39: Std_logic;
    signal int_clk_out_enable_143: Std_logic;
    signal ufl_p7_sel_0: Std_logic;
    signal ufl_p7_sel_1: Std_logic;
    signal ufl_p7_sel_2: Std_logic;
    signal int_clk_out_enable_141: Std_logic;
    signal ufl_p7_sel_3: Std_logic;
    signal ufl_p7_sel_4: Std_logic;
    signal ufl_p7_sel_5: Std_logic;
    signal ufl_p7_sel_6: Std_logic;
    signal ufl_p7_sel_7: Std_logic;
    signal int_clk_out_enable_136: Std_logic;
    signal ufl_p8_sel_0: Std_logic;
    signal ufl_p8_sel_1: Std_logic;
    signal ufl_p8_sel_2: Std_logic;
    signal int_clk_out_enable_134: Std_logic;
    signal ufl_p8_sel_3: Std_logic;
    signal ufl_p8_sel_4: Std_logic;
    signal ufl_p8_sel_5: Std_logic;
    signal ufl_p8_sel_6: Std_logic;
    signal ufl_p8_sel_7: Std_logic;
    signal lvds_rx_09_inst_candidate_sr_1: Std_logic;
    signal lvds_rx_09_inst_sdr_rxclk_c_enable_40: Std_logic;
    signal w_rx_09_fifo_data_0: Std_logic;
    signal w_rx_09_fifo_data_1: Std_logic;
    signal lvds_rx_09_inst_candidate_sr_3: Std_logic;
    signal lvds_rx_09_inst_candidate_sr_2: Std_logic;
    signal w_rx_09_fifo_data_2: Std_logic;
    signal w_rx_09_fifo_data_3: Std_logic;
    signal lvds_rx_09_inst_candidate_sr_5: Std_logic;
    signal lvds_rx_09_inst_candidate_sr_4: Std_logic;
    signal w_rx_09_fifo_data_4: Std_logic;
    signal w_rx_09_fifo_data_5: Std_logic;
    signal lvds_rx_09_inst_candidate_sr_7: Std_logic;
    signal lvds_rx_09_inst_candidate_sr_6: Std_logic;
    signal w_rx_09_fifo_data_6: Std_logic;
    signal w_rx_09_fifo_data_7: Std_logic;
    signal lvds_rx_09_inst_candidate_sr_9: Std_logic;
    signal lvds_rx_09_inst_candidate_sr_8: Std_logic;
    signal w_rx_09_fifo_data_8: Std_logic;
    signal w_rx_09_fifo_data_9: Std_logic;
    signal lvds_rx_09_inst_candidate_sr_11: Std_logic;
    signal lvds_rx_09_inst_candidate_sr_10: Std_logic;
    signal w_rx_09_fifo_data_10: Std_logic;
    signal w_rx_09_fifo_data_11: Std_logic;
    signal lvds_rx_09_inst_candidate_sr_13: Std_logic;
    signal lvds_rx_09_inst_candidate_sr_12: Std_logic;
    signal w_rx_09_fifo_data_12: Std_logic;
    signal w_rx_09_fifo_data_13: Std_logic;
    signal lvds_rx_09_inst_candidate_sr_15: Std_logic;
    signal lvds_rx_09_inst_candidate_sr_14: Std_logic;
    signal w_rx_09_fifo_data_14: Std_logic;
    signal w_rx_09_fifo_data_15: Std_logic;
    signal lvds_rx_09_inst_candidate_sr_17: Std_logic;
    signal lvds_rx_09_inst_candidate_sr_16: Std_logic;
    signal w_rx_09_fifo_data_16: Std_logic;
    signal w_rx_09_fifo_data_17: Std_logic;
    signal lvds_rx_09_inst_candidate_sr_19: Std_logic;
    signal lvds_rx_09_inst_candidate_sr_18: Std_logic;
    signal w_rx_09_fifo_data_18: Std_logic;
    signal w_rx_09_fifo_data_19: Std_logic;
    signal lvds_rx_09_inst_candidate_sr_21: Std_logic;
    signal lvds_rx_09_inst_candidate_sr_20: Std_logic;
    signal w_rx_09_fifo_data_20: Std_logic;
    signal w_rx_09_fifo_data_21: Std_logic;
    signal lvds_rx_09_inst_candidate_sr_23: Std_logic;
    signal lvds_rx_09_inst_candidate_sr_22: Std_logic;
    signal w_rx_09_fifo_data_22: Std_logic;
    signal w_rx_09_fifo_data_23: Std_logic;
    signal lvds_rx_09_inst_candidate_sr_25: Std_logic;
    signal lvds_rx_09_inst_candidate_sr_24: Std_logic;
    signal w_rx_09_fifo_data_24: Std_logic;
    signal w_rx_09_fifo_data_25: Std_logic;
    signal lvds_rx_09_inst_candidate_sr_27: Std_logic;
    signal lvds_rx_09_inst_candidate_sr_26: Std_logic;
    signal w_rx_09_fifo_data_26: Std_logic;
    signal w_rx_09_fifo_data_27: Std_logic;
    signal lvds_rx_09_inst_candidate_sr_29: Std_logic;
    signal lvds_rx_09_inst_candidate_sr_28: Std_logic;
    signal w_rx_09_fifo_data_28: Std_logic;
    signal w_rx_09_fifo_data_29: Std_logic;
    signal lvds_rx_09_inst_n14362: Std_logic;
    signal w_rx_09_fifo_data_30: Std_logic;
    signal w_rx_09_fifo_data_31: Std_logic;
    signal lvds_rx_09_inst_n12488: Std_logic;
    signal lvds_rx_09_inst_n12492: Std_logic;
    signal lvds_rx_09_inst_n12490: Std_logic;
    signal lvds_rx_09_inst_n14361: Std_logic;
    signal lvds_rx_09_inst_n12404: Std_logic;
    signal n11591: Std_logic;
    signal w_rx_09_fifo_push: Std_logic;
    signal lvds_rx_09_inst_n11728: Std_logic;
    signal lvds_rx_24_inst_candidate_sr_1: Std_logic;
    signal lvds_rx_24_inst_candidate_sr_0: Std_logic;
    signal lvds_rx_24_inst_sdr_rxclk_c_enable_73: Std_logic;
    signal w_rx_24_fifo_data_0: Std_logic;
    signal w_rx_24_fifo_data_1: Std_logic;
    signal lvds_rx_24_inst_candidate_sr_3: Std_logic;
    signal lvds_rx_24_inst_candidate_sr_2: Std_logic;
    signal w_rx_24_fifo_data_2: Std_logic;
    signal w_rx_24_fifo_data_3: Std_logic;
    signal lvds_rx_24_inst_candidate_sr_5: Std_logic;
    signal lvds_rx_24_inst_candidate_sr_4: Std_logic;
    signal w_rx_24_fifo_data_4: Std_logic;
    signal w_rx_24_fifo_data_5: Std_logic;
    signal lvds_rx_24_inst_candidate_sr_7: Std_logic;
    signal lvds_rx_24_inst_candidate_sr_6: Std_logic;
    signal w_rx_24_fifo_data_6: Std_logic;
    signal w_rx_24_fifo_data_7: Std_logic;
    signal lvds_rx_24_inst_candidate_sr_9: Std_logic;
    signal lvds_rx_24_inst_candidate_sr_8: Std_logic;
    signal w_rx_24_fifo_data_8: Std_logic;
    signal w_rx_24_fifo_data_9: Std_logic;
    signal lvds_rx_24_inst_candidate_sr_11: Std_logic;
    signal lvds_rx_24_inst_candidate_sr_10: Std_logic;
    signal w_rx_24_fifo_data_10: Std_logic;
    signal w_rx_24_fifo_data_11: Std_logic;
    signal lvds_rx_24_inst_candidate_sr_13: Std_logic;
    signal lvds_rx_24_inst_candidate_sr_12: Std_logic;
    signal w_rx_24_fifo_data_12: Std_logic;
    signal w_rx_24_fifo_data_13: Std_logic;
    signal lvds_rx_24_inst_candidate_sr_15: Std_logic;
    signal lvds_rx_24_inst_candidate_sr_14: Std_logic;
    signal w_rx_24_fifo_data_14: Std_logic;
    signal w_rx_24_fifo_data_15: Std_logic;
    signal lvds_rx_24_inst_candidate_sr_17: Std_logic;
    signal lvds_rx_24_inst_candidate_sr_16: Std_logic;
    signal w_rx_24_fifo_data_16: Std_logic;
    signal w_rx_24_fifo_data_17: Std_logic;
    signal lvds_rx_24_inst_candidate_sr_19: Std_logic;
    signal lvds_rx_24_inst_candidate_sr_18: Std_logic;
    signal w_rx_24_fifo_data_18: Std_logic;
    signal w_rx_24_fifo_data_19: Std_logic;
    signal lvds_rx_24_inst_candidate_sr_21: Std_logic;
    signal lvds_rx_24_inst_candidate_sr_20: Std_logic;
    signal w_rx_24_fifo_data_20: Std_logic;
    signal w_rx_24_fifo_data_21: Std_logic;
    signal lvds_rx_24_inst_candidate_sr_23: Std_logic;
    signal lvds_rx_24_inst_candidate_sr_22: Std_logic;
    signal w_rx_24_fifo_data_22: Std_logic;
    signal w_rx_24_fifo_data_23: Std_logic;
    signal lvds_rx_24_inst_candidate_sr_25: Std_logic;
    signal lvds_rx_24_inst_candidate_sr_24: Std_logic;
    signal w_rx_24_fifo_data_24: Std_logic;
    signal w_rx_24_fifo_data_25: Std_logic;
    signal lvds_rx_24_inst_candidate_sr_27: Std_logic;
    signal lvds_rx_24_inst_candidate_sr_26: Std_logic;
    signal w_rx_24_fifo_data_26: Std_logic;
    signal w_rx_24_fifo_data_27: Std_logic;
    signal lvds_rx_24_inst_candidate_sr_29: Std_logic;
    signal lvds_rx_24_inst_candidate_sr_28: Std_logic;
    signal w_rx_24_fifo_data_28: Std_logic;
    signal w_rx_24_fifo_data_29: Std_logic;
    signal lvds_rx_24_inst_candidate_sr_31: Std_logic;
    signal lvds_rx_24_inst_candidate_sr_30: Std_logic;
    signal w_rx_24_fifo_data_30: Std_logic;
    signal w_rx_24_fifo_data_31: Std_logic;
    signal lvds_rx_24_inst_n12244: Std_logic;
    signal w_rx_24_fifo_push: Std_logic;
    signal n3019: Std_logic;
    signal n12156: Std_logic;
    signal n12153: Std_logic;
    signal n3020: Std_logic;
    signal data_mux_1: Std_logic;
    signal data_mux_0: Std_logic;
    signal wb_dat_i_0: Std_logic;
    signal wb_dat_i_1: Std_logic;
    signal n14915: Std_logic;
    signal n3018: Std_logic;
    signal data_mux_3: Std_logic;
    signal data_mux_2: Std_logic;
    signal wb_dat_i_2: Std_logic;
    signal wb_dat_i_3: Std_logic;
    signal n3015: Std_logic;
    signal n3016: Std_logic;
    signal data_mux_5: Std_logic;
    signal data_mux_4: Std_logic;
    signal wb_dat_i_4: Std_logic;
    signal wb_dat_i_5: Std_logic;
    signal n3013: Std_logic;
    signal n3014: Std_logic;
    signal data_mux_7: Std_logic;
    signal data_mux_6: Std_logic;
    signal wb_dat_i_6: Std_logic;
    signal wb_dat_i_7: Std_logic;
    signal i2c_slave_data_next_7_N_737_1: Std_logic;
    signal i2c_slave_data_next_7_N_737_0: Std_logic;
    signal i2c_slave_n3913: Std_logic;
    signal i2c_slave_n3914: Std_logic;
    signal i2c_slave_int_clk_out_enable_178: Std_logic;
    signal i2c_slave_data_next_7_N_737_3: Std_logic;
    signal i2c_slave_data_next_7_N_737_2: Std_logic;
    signal i2c_slave_n3911: Std_logic;
    signal i2c_slave_n3912: Std_logic;
    signal i2c_slave_data_next_7_N_737_5: Std_logic;
    signal i2c_slave_data_next_7_N_737_4: Std_logic;
    signal i2c_slave_n3909: Std_logic;
    signal i2c_slave_n3910: Std_logic;
    signal i2c_slave_data_next_7_N_737_7: Std_logic;
    signal i2c_slave_data_next_7_N_737_6: Std_logic;
    signal i2c_slave_n3907: Std_logic;
    signal i2c_slave_n3908: Std_logic;
    signal i2c_slave_n4964: Std_logic;
    signal i2c_slave_wb_stb_o_next: Std_logic;
    signal wb_stb_o: Std_logic;
    signal i2c_slave_n14300: Std_logic;
    signal i2c_slave_n12456: Std_logic;
    signal i2c_slave_n4894: Std_logic;
    signal i2c_slave_int_clk_out_enable_38: Std_logic;
    signal wb_we_o: Std_logic;
    signal wifi_i_fifo_dc_r_gdata_1: Std_logic;
    signal wifi_i_fifo_dc_r_gdata_0: Std_logic;
    signal wifi_i_fifo_dc_r_gcount_0: Std_logic;
    signal wifi_i_fifo_dc_r_gcount_1: Std_logic;
    signal wifi_i_fifo_dc_r_gcount_2: Std_logic;
    signal wifi_i_fifo_dc_r_gcount_w0: Std_logic;
    signal wifi_i_fifo_dc_r_gcount_w1: Std_logic;
    signal wifi_i_fifo_dc_r_gcount_w2: Std_logic;
    signal wifi_i_fifo_dc_r_gcount_w20: Std_logic;
    signal wifi_i_fifo_dc_r_gcount_w21: Std_logic;
    signal wifi_i_fifo_dc_r_gcount_w22: Std_logic;
    signal wifi_i_fifo_dc_rptr_0: Std_logic;
    signal wifi_i_fifo_dc_rptr_1: Std_logic;
    signal wifi_i_fifo_dc_w_gdata_1: Std_logic;
    signal wifi_i_fifo_dc_w_gdata_0: Std_logic;
    signal wifi_i_fifo_dc_w_gcount_0: Std_logic;
    signal wifi_i_fifo_dc_w_gcount_1: Std_logic;
    signal wifi_i_fifo_dc_w_gcount_2: Std_logic;
    signal wifi_i_fifo_dc_w_gcount_r0: Std_logic;
    signal wifi_i_fifo_dc_w_gcount_r1: Std_logic;
    signal wifi_i_fifo_dc_w_gcount_r2: Std_logic;
    signal wifi_i_fifo_dc_w_gcount_r20: Std_logic;
    signal wifi_i_fifo_dc_w_gcount_r21: Std_logic;
    signal wifi_i_fifo_dc_w_gcount_r22: Std_logic;
    signal wifi_i_fifo_dc_wptr_0: Std_logic;
    signal wifi_i_fifo_dc_wptr_1: Std_logic;
    signal wifi_i_spi_bit_counter_1: Std_logic;
    signal wifi_i_spi_bit_counter_2: Std_logic;
    signal shift_reg_15_N_1175_adj_1194: Std_logic;
    signal wifi_i_spi_bit_counter_0: Std_logic;
    signal wifi_i_spi_bit_counter_5_N_1168_0: Std_logic;
    signal n14287: Std_logic;
    signal wifi_i_spi_n13146: Std_logic;
    signal wifi_i_spi_n6364: Std_logic;
    signal wifi_i_spi_n6362: Std_logic;
    signal wifi_i_spi_bit_counter_3: Std_logic;
    signal wifi_i_spi_n6360: Std_logic;
    signal wifi_i_spi_n14289: Std_logic;
    signal wifi_i_spi_bit_counter_5: Std_logic;
    signal wifi_i_spi_n13148: Std_logic;
    signal wifi_i_spi_bit_counter_4: Std_logic;
    signal internal_80MHz_enable_52: Std_logic;
    signal wifi_i_spi_bit_counter_5_N_1144_4: Std_logic;
    signal internal_80MHz_enable_51: Std_logic;
    signal wifi_i_spi_n14312: Std_logic;
    signal wifi_i_spi_n6356: Std_logic;
    signal wifi_i_spi_shift_reg_2: Std_logic;
    signal spi3_sck_N_426_1: Std_logic;
    signal wifi_i_spi_shift_reg_1: Std_logic;
    signal spi3_sck_N_426_0: Std_logic;
    signal wifi_i_spi_shift_reg_15_N_1126_1: Std_logic;
    signal wifi_i_spi_shift_reg_15_N_1126_0: Std_logic;
    signal wifi_i_spi_shift_reg_0: Std_logic;
    signal wifi_i_spi_shift_reg_4: Std_logic;
    signal spi3_sck_N_426_3: Std_logic;
    signal wifi_i_spi_shift_reg_3: Std_logic;
    signal spi3_sck_N_426_2: Std_logic;
    signal wifi_i_spi_shift_reg_15_N_1126_3: Std_logic;
    signal wifi_i_spi_shift_reg_15_N_1126_2: Std_logic;
    signal wifi_i_spi_shift_reg_6: Std_logic;
    signal spi3_sck_N_426_5: Std_logic;
    signal wifi_i_spi_shift_reg_5: Std_logic;
    signal spi3_sck_N_426_4: Std_logic;
    signal wifi_i_spi_shift_reg_15_N_1126_5: Std_logic;
    signal wifi_i_spi_shift_reg_15_N_1126_4: Std_logic;
    signal wifi_i_spi_shift_reg_8: Std_logic;
    signal spi3_sck_N_426_7: Std_logic;
    signal wifi_i_spi_shift_reg_7: Std_logic;
    signal spi3_sck_N_426_6: Std_logic;
    signal wifi_i_spi_shift_reg_15_N_1126_7: Std_logic;
    signal wifi_i_spi_shift_reg_15_N_1126_6: Std_logic;
    signal wifi_i_spi_shift_reg_10: Std_logic;
    signal spi3_sck_N_426_9: Std_logic;
    signal wifi_i_spi_shift_reg_9: Std_logic;
    signal spi3_sck_N_426_8: Std_logic;
    signal wifi_i_spi_shift_reg_15_N_1126_9: Std_logic;
    signal wifi_i_spi_shift_reg_15_N_1126_8: Std_logic;
    signal wifi_i_spi_shift_reg_12: Std_logic;
    signal spi3_sck_N_426_11: Std_logic;
    signal wifi_i_spi_shift_reg_11: Std_logic;
    signal spi3_sck_N_426_10: Std_logic;
    signal wifi_i_spi_shift_reg_15_N_1126_11: Std_logic;
    signal wifi_i_spi_shift_reg_15_N_1126_10: Std_logic;
    signal wifi_i_spi_shift_reg_14: Std_logic;
    signal spi3_sck_N_426_13: Std_logic;
    signal wifi_i_spi_shift_reg_13: Std_logic;
    signal spi3_sck_N_426_12: Std_logic;
    signal wifi_i_spi_shift_reg_15_N_1126_13: Std_logic;
    signal wifi_i_spi_shift_reg_15_N_1126_12: Std_logic;
    signal wifi_i_fifo_data_out_14: Std_logic;
    signal wifi_i_spi_shift_reg_15: Std_logic;
    signal spi3_sck_N_426_14: Std_logic;
    signal wifi_i_spi_shift_reg_15_N_1126_14: Std_logic;
    signal wifi_i_fifo_data_out_15: Std_logic;
    signal spi3_sck_N_426_15: Std_logic;
    signal wifi_q_fifo_dc_r_gdata_1: Std_logic;
    signal wifi_q_fifo_dc_r_gdata_0: Std_logic;
    signal wifi_q_fifo_dc_r_gcount_0: Std_logic;
    signal wifi_q_fifo_dc_r_gcount_1: Std_logic;
    signal wifi_q_fifo_dc_r_gcount_2: Std_logic;
    signal wifi_q_fifo_dc_r_gcount_w0: Std_logic;
    signal wifi_q_fifo_dc_r_gcount_w1: Std_logic;
    signal wifi_q_fifo_dc_r_gcount_w2: Std_logic;
    signal wifi_q_fifo_dc_r_gcount_w20: Std_logic;
    signal wifi_q_fifo_dc_r_gcount_w21: Std_logic;
    signal wifi_q_fifo_dc_r_gcount_w22: Std_logic;
    signal wifi_q_fifo_dc_rptr_0: Std_logic;
    signal wifi_q_fifo_dc_rptr_1: Std_logic;
    signal wifi_q_fifo_dc_w_gdata_1: Std_logic;
    signal wifi_q_fifo_dc_w_gdata_0: Std_logic;
    signal wifi_q_fifo_dc_w_gcount_0: Std_logic;
    signal wifi_q_fifo_dc_w_gcount_1: Std_logic;
    signal wifi_q_fifo_dc_w_gcount_2: Std_logic;
    signal wifi_q_fifo_dc_w_gcount_r0: Std_logic;
    signal wifi_q_fifo_dc_w_gcount_r1: Std_logic;
    signal wifi_q_fifo_dc_w_gcount_r2: Std_logic;
    signal wifi_q_fifo_dc_w_gcount_r20: Std_logic;
    signal wifi_q_fifo_dc_w_gcount_r21: Std_logic;
    signal wifi_q_fifo_dc_w_gcount_r22: Std_logic;
    signal wifi_q_fifo_dc_wptr_0: Std_logic;
    signal wifi_q_fifo_dc_wptr_1: Std_logic;
    signal wifi_q_spi_bit_counter_3: Std_logic;
    signal wifi_q_spi_bit_counter_0: Std_logic;
    signal shift_reg_15_N_1175_adj_1195: Std_logic;
    signal wifi_q_spi_bit_counter_5_N_1168_0: Std_logic;
    signal n14285: Std_logic;
    signal wifi_q_spi_n13140: Std_logic;
    signal wifi_q_spi_bit_counter_2: Std_logic;
    signal wifi_q_spi_bit_counter_1: Std_logic;
    signal wifi_q_spi_n6354: Std_logic;
    signal wifi_q_spi_n6352: Std_logic;
    signal wifi_q_spi_n6350: Std_logic;
    signal wifi_q_spi_n14286: Std_logic;
    signal wifi_q_spi_bit_counter_5: Std_logic;
    signal wifi_q_spi_n13138: Std_logic;
    signal wifi_q_spi_bit_counter_4: Std_logic;
    signal internal_80MHz_enable_68: Std_logic;
    signal wifi_q_spi_bit_counter_5_N_1144_4: Std_logic;
    signal internal_80MHz_enable_67: Std_logic;
    signal wifi_q_spi_n14309: Std_logic;
    signal wifi_q_spi_n6346: Std_logic;
    signal wifi_q_spi_shift_reg_2: Std_logic;
    signal spi4_sck_N_442_1: Std_logic;
    signal wifi_q_spi_shift_reg_1: Std_logic;
    signal spi4_sck_N_442_0: Std_logic;
    signal wifi_q_spi_shift_reg_15_N_1126_1: Std_logic;
    signal wifi_q_spi_shift_reg_15_N_1126_0: Std_logic;
    signal wifi_q_spi_shift_reg_0: Std_logic;
    signal wifi_q_spi_shift_reg_4: Std_logic;
    signal spi4_sck_N_442_3: Std_logic;
    signal wifi_q_spi_shift_reg_3: Std_logic;
    signal spi4_sck_N_442_2: Std_logic;
    signal wifi_q_spi_shift_reg_15_N_1126_3: Std_logic;
    signal wifi_q_spi_shift_reg_15_N_1126_2: Std_logic;
    signal wifi_q_spi_shift_reg_6: Std_logic;
    signal spi4_sck_N_442_5: Std_logic;
    signal wifi_q_spi_shift_reg_5: Std_logic;
    signal spi4_sck_N_442_4: Std_logic;
    signal wifi_q_spi_shift_reg_15_N_1126_5: Std_logic;
    signal wifi_q_spi_shift_reg_15_N_1126_4: Std_logic;
    signal wifi_q_spi_shift_reg_8: Std_logic;
    signal spi4_sck_N_442_7: Std_logic;
    signal wifi_q_spi_shift_reg_7: Std_logic;
    signal spi4_sck_N_442_6: Std_logic;
    signal wifi_q_spi_shift_reg_15_N_1126_7: Std_logic;
    signal wifi_q_spi_shift_reg_15_N_1126_6: Std_logic;
    signal wifi_q_spi_shift_reg_10: Std_logic;
    signal spi4_sck_N_442_9: Std_logic;
    signal wifi_q_spi_shift_reg_9: Std_logic;
    signal spi4_sck_N_442_8: Std_logic;
    signal wifi_q_spi_shift_reg_15_N_1126_9: Std_logic;
    signal wifi_q_spi_shift_reg_15_N_1126_8: Std_logic;
    signal wifi_q_spi_shift_reg_12: Std_logic;
    signal spi4_sck_N_442_11: Std_logic;
    signal wifi_q_spi_shift_reg_11: Std_logic;
    signal spi4_sck_N_442_10: Std_logic;
    signal wifi_q_spi_shift_reg_15_N_1126_11: Std_logic;
    signal wifi_q_spi_shift_reg_15_N_1126_10: Std_logic;
    signal wifi_q_spi_shift_reg_14: Std_logic;
    signal spi4_sck_N_442_13: Std_logic;
    signal wifi_q_spi_shift_reg_13: Std_logic;
    signal spi4_sck_N_442_12: Std_logic;
    signal wifi_q_spi_shift_reg_15_N_1126_13: Std_logic;
    signal wifi_q_spi_shift_reg_15_N_1126_12: Std_logic;
    signal wifi_q_fifo_data_out_14: Std_logic;
    signal wifi_q_spi_shift_reg_15: Std_logic;
    signal spi4_sck_N_442_14: Std_logic;
    signal wifi_q_spi_shift_reg_15_N_1126_14: Std_logic;
    signal wifi_q_fifo_data_out_15: Std_logic;
    signal spi4_sck_N_442_15: Std_logic;
    signal wifi_rx_invert: Std_logic;
    signal wifi_sync_check_enable: Std_logic;
    signal n13395: Std_logic;
    signal n13477: Std_logic;
    signal n2893: Std_logic;
    signal n2881: Std_logic;
    signal n13431: Std_logic;
    signal n13392: Std_logic;
    signal n13470: Std_logic;
    signal n2894: Std_logic;
    signal n2882: Std_logic;
    signal n13472: Std_logic;
    signal n13471: Std_logic;
    signal n13475: Std_logic;
    signal n13479: Std_logic;
    signal spi1_test_pattern_11: Std_logic;
    signal n13480: Std_logic;
    signal n13476: Std_logic;
    signal n13473: Std_logic;
    signal n14004: Std_logic;
    signal n14120: Std_logic;
    signal n2843: Std_logic;
    signal n2867: Std_logic;
    signal n2855: Std_logic;
    signal n2831: Std_logic;
    signal n14118: Std_logic;
    signal n14121: Std_logic;
    signal n13481: Std_logic;
    signal spi4_test_pattern_2: Std_logic;
    signal spi4_test_pattern_10: Std_logic;
    signal spi3_test_pattern_2: Std_logic;
    signal spi3_test_pattern_10: Std_logic;
    signal n13474: Std_logic;
    signal n14021: Std_logic;
    signal n14114: Std_logic;
    signal n2842: Std_logic;
    signal n2866: Std_logic;
    signal n2854: Std_logic;
    signal n2830: Std_logic;
    signal n14112: Std_logic;
    signal n14115: Std_logic;
    signal n14031: Std_logic;
    signal n14105: Std_logic;
    signal n2841: Std_logic;
    signal n2865: Std_logic;
    signal n2853: Std_logic;
    signal n2829: Std_logic;
    signal n14103: Std_logic;
    signal n14106: Std_logic;
    signal second_pll_lock: Std_logic;
    signal n13464: Std_logic;
    signal n14058: Std_logic;
    signal n14092: Std_logic;
    signal n13388: Std_logic;
    signal led_rst: Std_logic;
    signal n13465: Std_logic;
    signal n13468: Std_logic;
    signal n2840: Std_logic;
    signal n2864: Std_logic;
    signal n2852: Std_logic;
    signal n2828: Std_logic;
    signal n14090: Std_logic;
    signal n14093: Std_logic;
    signal pll_lock: Std_logic;
    signal n13493: Std_logic;
    signal internal_rst: Std_logic;
    signal n13494: Std_logic;
    signal n13497: Std_logic;
    signal spi2_test_pattern_8: Std_logic;
    signal spi1_test_pattern_8: Std_logic;
    signal n13498: Std_logic;
    signal n13495: Std_logic;
    signal n13499: Std_logic;
    signal spi4_test_pattern_0: Std_logic;
    signal spi4_test_pattern_8: Std_logic;
    signal spi3_test_pattern_0: Std_logic;
    signal spi3_test_pattern_8: Std_logic;
    signal n13496: Std_logic;
    signal n14912: Std_logic;
    signal n14914: Std_logic;
    signal spi1_test_pattern_1: Std_logic;
    signal n13469: Std_logic;
    signal n13466: Std_logic;
    signal n13398: Std_logic;
    signal n13397: Std_logic;
    signal n14910: Std_logic;
    signal spi4_test_pattern_1: Std_logic;
    signal spi4_test_pattern_9: Std_logic;
    signal spi3_test_pattern_1: Std_logic;
    signal spi3_test_pattern_9: Std_logic;
    signal n13467: Std_logic;
    signal tx_lvds_test_pattern_enable: Std_logic;
    signal n13411: Std_logic;
    signal n13390: Std_logic;
    signal n14409: Std_logic;
    signal n14400: Std_logic;
    signal n13453: Std_logic;
    signal n14397: Std_logic;
    signal n14403: Std_logic;
    signal i2c_slave_i2c_slave_inst_n22: Std_logic;
    signal i2c_slave_i2c_slave_inst_n13967: Std_logic;
    signal i2c_slave_i2c_slave_inst_n8344: Std_logic;
    signal i2c_slave_i2c_slave_inst_n11865: Std_logic;
    signal i2c_slave_i2c_slave_inst_n8188: Std_logic;
    signal i2c_slave_i2c_slave_inst_n32: Std_logic;
    signal i2c_slave_i2c_slave_inst_n11479: Std_logic;
    signal lvds_rx_24_inst_n14394: Std_logic;
    signal lvds_rx_24_inst_n68: Std_logic;
    signal lvds_rx_24_inst_n14391: Std_logic;
    signal n2769: Std_logic;
    signal lvds_rx_09_inst_n14: Std_logic;
    signal i2c_slave_i2c_slave_inst_n11585: Std_logic;
    signal i2c_slave_i2c_slave_inst_n14916: Std_logic;
    signal i2c_slave_i2c_slave_inst_n12470: Std_logic;
    signal i2c_slave_i2c_slave_inst_n4085: Std_logic;
    signal i2c_slave_i2c_slave_inst_n3102: Std_logic;
    signal i2c_slave_i2c_slave_inst_n4095: Std_logic;
    signal i2c_slave_i2c_slave_inst_n4108: Std_logic;
    signal lvds_rx_24_inst_n12358: Std_logic;
    signal lvds_rx_24_inst_n12360: Std_logic;
    signal lvds_rx_24_inst_n42: Std_logic;
    signal lvds_rx_24_inst_n12364: Std_logic;
    signal lvds_rx_24_inst_n12434: Std_logic;
    signal lvds_rx_24_inst_n5175: Std_logic;
    signal lvds_rx_24_inst_n12446: Std_logic;
    signal my_led_n12924: Std_logic;
    signal my_led_n12936: Std_logic;
    signal my_led_n12912: Std_logic;
    signal my_led_n12918: Std_logic;
    signal my_led_n12920: Std_logic;
    signal my_led_n12928: Std_logic;
    signal my_led_n13276: Std_logic;
    signal my_led_n12922: Std_logic;
    signal n14366: Std_logic;
    signal int_clk_out_enable_28: Std_logic;
    signal sdr_txdata_N_388: Std_logic;
    signal n14363: Std_logic;
    signal lvds_rx_09_inst_n12834: Std_logic;
    signal lvds_rx_09_inst_n10: Std_logic;
    signal lvds_rx_09_inst_n13290: Std_logic;
    signal n12966: Std_logic;
    signal n11958: Std_logic;
    signal n12964: Std_logic;
    signal n9012: Std_logic;
    signal n12954: Std_logic;
    signal n14354: Std_logic;
    signal subg_i_spi_n13132: Std_logic;
    signal n14325: Std_logic;
    signal n14330: Std_logic;
    signal n12618: Std_logic;
    signal n14351: Std_logic;
    signal i2c_slave_n14386: Std_logic;
    signal i2c_slave_n14301: Std_logic;
    signal i2c_slave_n14291: Std_logic;
    signal i2c_slave_n13182: Std_logic;
    signal n13180: Std_logic;
    signal n14352: Std_logic;
    signal int_clk_out_enable_15: Std_logic;
    signal n13234: Std_logic;
    signal n13230: Std_logic;
    signal n11601: Std_logic;
    signal n12168: Std_logic;
    signal n11664: Std_logic;
    signal i2c_slave_n14383: Std_logic;
    signal i2c_slave_n14382: Std_logic;
    signal i2c_slave_n13362: Std_logic;
    signal n13044: Std_logic;
    signal i2c_slave_n13056: Std_logic;
    signal n14384: Std_logic;
    signal n13162: Std_logic;
    signal n14345: Std_logic;
    signal n14356: Std_logic;
    signal i2c_slave_n13354: Std_logic;
    signal n13302: Std_logic;
    signal n12798: Std_logic;
    signal n12812: Std_logic;
    signal lvds_rx_09_inst_n12314: Std_logic;
    signal lvds_rx_09_inst_n12478: Std_logic;
    signal lvds_rx_09_inst_n12476: Std_logic;
    signal lvds_rx_09_inst_n39: Std_logic;
    signal lvds_rx_09_inst_n12682: Std_logic;
    signal lvds_rx_09_inst_n11628: Std_logic;
    signal lvds_rx_09_inst_n12486: Std_logic;
    signal lvds_rx_09_inst_n12520: Std_logic;
    signal lvds_rx_09_inst_n11658: Std_logic;
    signal lvds_rx_09_inst_n12496: Std_logic;
    signal lvds_rx_09_inst_n12504: Std_logic;
    signal lvds_rx_09_inst_n11716: Std_logic;
    signal lvds_rx_09_inst_n12502: Std_logic;
    signal lvds_rx_09_inst_n12508: Std_logic;
    signal lvds_rx_09_inst_n12516: Std_logic;
    signal i2c_slave_n13014: Std_logic;
    signal i2c_slave_n12984: Std_logic;
    signal int_clk_out_enable_98: Std_logic;
    signal i2c_slave_n13008: Std_logic;
    signal i2c_slave_n13176: Std_logic;
    signal i2c_slave_n13188: Std_logic;
    signal i2c_slave_n11558: Std_logic;
    signal i2c_slave_n13246: Std_logic;
    signal i2c_slave_n6551: Std_logic;
    signal i2c_slave_n12822: Std_logic;
    signal i2c_slave_n14350: Std_logic;
    signal i2c_slave_n12994: Std_logic;
    signal i2c_slave_n14377: Std_logic;
    signal i2c_slave_n12606: Std_logic;
    signal i2c_slave_n12612: Std_logic;
    signal int_clk_out_enable_107: Std_logic;
    signal i2c_slave_n13300: Std_logic;
    signal i2c_slave_n13030: Std_logic;
    signal int_clk_out_enable_83: Std_logic;
    signal i2c_slave_n12978: Std_logic;
    signal i2c_slave_n14319: Std_logic;
    signal i2c_slave_n12972: Std_logic;
    signal i2c_slave_n13286: Std_logic;
    signal i2c_slave_n12886: Std_logic;
    signal i2c_slave_n14353: Std_logic;
    signal i2c_slave_n14332: Std_logic;
    signal i2c_slave_n12874: Std_logic;
    signal i2c_slave_n12212: Std_logic;
    signal i2c_slave_n12878: Std_logic;
    signal i2c_slave_n13358: Std_logic;
    signal i2c_slave_n12632: Std_logic;
    signal i2c_slave_n11604: Std_logic;
    signal i2c_slave_n14387: Std_logic;
    signal i2c_slave_n13310: Std_logic;
    signal i2c_slave_n13350: Std_logic;
    signal i2c_slave_n14331: Std_logic;
    signal i2c_slave_n13382: Std_logic;
    signal i2c_slave_n14376: Std_logic;
    signal i2c_slave_n11: Std_logic;
    signal i2c_slave_n14307: Std_logic;
    signal i2c_slave_n14327: Std_logic;
    signal i2c_slave_n13068: Std_logic;
    signal int_clk_out_enable_111: Std_logic;
    signal i2c_slave_n14385: Std_logic;
    signal i2c_slave_n6568: Std_logic;
    signal i2c_slave_n12728: Std_logic;
    signal int_clk_out_enable_129: Std_logic;
    signal i2c_slave_n14333: Std_logic;
    signal i2c_slave_n13360: Std_logic;
    signal i2c_slave_n12850: Std_logic;
    signal i2c_slave_n13294: Std_logic;
    signal i2c_slave_n12842: Std_logic;
    signal i2c_slave_n12588: Std_logic;
    signal i2c_slave_n3893: Std_logic;
    signal i2c_slave_n3866: Std_logic;
    signal i2c_slave_n3863: Std_logic;
    signal i2c_slave_n14317: Std_logic;
    signal i2c_slave_n12450: Std_logic;
    signal i2c_slave_n14334: Std_logic;
    signal i2c_slave_n13334: Std_logic;
    signal i2c_slave_i2c_slave_inst_n12526: Std_logic;
    signal i2c_slave_i2c_slave_inst_n12528: Std_logic;
    signal i2c_slave_i2c_slave_inst_n12524: Std_logic;
    signal i2c_slave_i2c_slave_inst_n14297: Std_logic;
    signal i2c_slave_i2c_slave_inst_n12748: Std_logic;
    signal i2c_slave_i2c_slave_inst_n12342: Std_logic;
    signal i2c_slave_i2c_slave_inst_n12562: Std_logic;
    signal i2c_slave_i2c_slave_inst_n14: Std_logic;
    signal i2c_slave_i2c_slave_inst_n14379: Std_logic;
    signal i2c_slave_i2c_slave_inst_n14381: Std_logic;
    signal i2c_slave_i2c_slave_inst_n14323: Std_logic;
    signal i2c_slave_i2c_slave_inst_n12346: Std_logic;
    signal i2c_slave_i2c_slave_inst_n3787: Std_logic;
    signal lvds_rx_24_inst_n14359: Std_logic;
    signal lvds_rx_24_inst_n12382: Std_logic;
    signal lvds_rx_24_inst_n14355: Std_logic;
    signal lvds_rx_24_inst_n12390: Std_logic;
    signal lvds_rx_24_inst_n12436: Std_logic;
    signal lvds_rx_24_inst_n36: Std_logic;
    signal lvds_rx_24_inst_n12428: Std_logic;
    signal lvds_rx_24_inst_n12444: Std_logic;
    signal lvds_rx_24_inst_n24: Std_logic;
    signal lvds_rx_24_inst_n12400: Std_logic;
    signal lvds_rx_24_inst_n25: Std_logic;
    signal lvds_rx_24_inst_n14236: Std_logic;
    signal lvds_rx_24_inst_n14238: Std_logic;
    signal lvds_rx_24_inst_n40: Std_logic;
    signal lvds_rx_24_inst_n14237: Std_logic;
    signal stm_fpga_spare2_c: Std_logic;
    signal subg_i_fifo_dc_rptr_2: Std_logic;
    signal subg_i_fifo_dc_wptr_2: Std_logic;
    signal wifi_i_fifo_dc_rptr_2: Std_logic;
    signal wifi_i_fifo_dc_wptr_2: Std_logic;
    signal subg_q_fifo_dc_rptr_2: Std_logic;
    signal subg_q_fifo_dc_wptr_2: Std_logic;
    signal int_clk_out_enable_122: Std_logic;
    signal i2c_slave_last_cycle_reg: Std_logic;
    signal wifi_q_fifo_dc_rptr_2: Std_logic;
    signal wifi_q_fifo_dc_wptr_2: Std_logic;
    signal wifi_q_spi_o_mosi_N_1176: Std_logic;
    signal subg_q_spi_o_mosi_N_1176: Std_logic;
    signal wifi_i_spi_o_mosi_N_1176: Std_logic;
    signal subg_i_spi_o_mosi_N_1176: Std_logic;
    signal tx_ddr_data_31_N_385: Std_logic;
    signal spi1_test_pattern_4: Std_logic;
    signal tx_ddr_data_30_N_387: Std_logic;
    signal wifi_i_fifo_data_out_4: Std_logic;
    signal spi3_test_pattern_5: Std_logic;
    signal wifi_i_fifo_data_out_5: Std_logic;
    signal subg_q_fifo_data_out_0: Std_logic;
    signal spi3_test_pattern_6: Std_logic;
    signal wifi_i_fifo_data_out_6: Std_logic;
    signal spi3_test_pattern_7: Std_logic;
    signal wifi_i_fifo_data_out_7: Std_logic;
    signal subg_i_fifo_data_out_1: Std_logic;
    signal subg_i_fifo_data_out_2: Std_logic;
    signal subg_i_fifo_data_out_3: Std_logic;
    signal subg_i_fifo_data_out_4: Std_logic;
    signal subg_i_fifo_data_out_5: Std_logic;
    signal spi1_test_pattern_6: Std_logic;
    signal subg_i_fifo_data_out_6: Std_logic;
    signal subg_i_fifo_data_out_7: Std_logic;
    signal subg_i_fifo_data_out_8: Std_logic;
    signal subg_i_fifo_data_out_9: Std_logic;
    signal subg_i_fifo_data_out_10: Std_logic;
    signal subg_i_fifo_data_out_11: Std_logic;
    signal subg_i_fifo_data_out_12: Std_logic;
    signal spi1_test_pattern_13: Std_logic;
    signal subg_i_fifo_data_out_13: Std_logic;
    signal subg_q_fifo_data_out_1: Std_logic;
    signal subg_q_fifo_data_out_2: Std_logic;
    signal subg_q_fifo_data_out_3: Std_logic;
    signal spi2_test_pattern_4: Std_logic;
    signal subg_q_fifo_data_out_4: Std_logic;
    signal subg_q_fifo_data_out_5: Std_logic;
    signal subg_q_fifo_data_out_6: Std_logic;
    signal spi2_test_pattern_7: Std_logic;
    signal subg_q_fifo_data_out_7: Std_logic;
    signal subg_q_fifo_data_out_8: Std_logic;
    signal subg_delay_move: Std_logic;
    signal subg_q_fifo_data_out_9: Std_logic;
    signal subg_q_fifo_data_out_10: Std_logic;
    signal subg_i_fifo_data_out_0: Std_logic;
    signal subg_q_fifo_data_out_11: Std_logic;
    signal subg_q_fifo_data_out_12: Std_logic;
    signal spi2_test_pattern_13: Std_logic;
    signal subg_q_fifo_data_out_13: Std_logic;
    signal wifi_i_fifo_data_out_1: Std_logic;
    signal wifi_i_fifo_data_out_2: Std_logic;
    signal wifi_i_fifo_data_out_3: Std_logic;
    signal wifi_i_fifo_data_out_8: Std_logic;
    signal subg_delay_direction: Std_logic;
    signal wifi_i_fifo_data_out_9: Std_logic;
    signal wifi_i_fifo_data_out_10: Std_logic;
    signal wifi_i_fifo_data_out_11: Std_logic;
    signal wifi_i_fifo_data_out_12: Std_logic;
    signal spi3_test_pattern_13: Std_logic;
    signal wifi_i_fifo_data_out_13: Std_logic;
    signal wifi_q_fifo_data_out_0: Std_logic;
    signal wifi_q_fifo_data_out_1: Std_logic;
    signal wifi_q_fifo_data_out_2: Std_logic;
    signal wifi_q_fifo_data_out_3: Std_logic;
    signal wifi_q_fifo_data_out_4: Std_logic;
    signal wifi_i_fifo_data_out_0: Std_logic;
    signal spi4_test_pattern_5: Std_logic;
    signal wifi_q_fifo_data_out_5: Std_logic;
    signal spi4_test_pattern_6: Std_logic;
    signal wifi_q_fifo_data_out_6: Std_logic;
    signal spi4_test_pattern_7: Std_logic;
    signal wifi_q_fifo_data_out_7: Std_logic;
    signal wifi_q_fifo_data_out_8: Std_logic;
    signal wifi_q_fifo_data_out_9: Std_logic;
    signal wifi_q_fifo_data_out_10: Std_logic;
    signal wifi_q_fifo_data_out_11: Std_logic;
    signal wifi_q_fifo_data_out_12: Std_logic;
    signal spi4_test_pattern_13: Std_logic;
    signal wifi_q_fifo_data_out_13: Std_logic;
    signal n14343: Std_logic;
    signal GND_net: Std_logic;
    signal sdr_txclk_c: Std_logic;
    signal sdr_txdata_c: Std_logic;
    signal spi1_sck_c: Std_logic;
    signal spi1_mosi_c: Std_logic;
    signal spi2_sck_c: Std_logic;
    signal spi2_mosi_c: Std_logic;
    signal spi3_sck_c: Std_logic;
    signal spi3_mosi_c: Std_logic;
    signal spi4_sck_c: Std_logic;
    signal spi4_mosi_c: Std_logic;
    signal fpga_ufl_p8_c_c: Std_logic;
    signal dpll_clkout2_c: Std_logic;
    signal dpll_clkout0_c: Std_logic;
    signal sdr_rx_wifi_c: Std_logic;
    signal second_pll_CLKOP: Std_logic;
    signal VCCI: Std_logic;
    component fpga_sclB
      port (PADDI: out Std_logic; PADDO: in Std_logic; PADDT: in Std_logic; 
            fpgascl: inout Std_logic);
    end component;
    component sdr_txclkB
      port (PADDO: in Std_logic; sdrtxclk: out Std_logic);
    end component;
    component fpga_sdaB
      port (PADDI: out Std_logic; PADDO: in Std_logic; PADDT: in Std_logic; 
            fpgasda: inout Std_logic);
    end component;
    component fpga_neopixelB
      port (fpganeopixel: out Std_logic);
    end component;
    component fpga_ledB
      port (PADDO: in Std_logic; fpgaled: out Std_logic);
    end component;
    component sdr_txdataB
      port (IOLDO: in Std_logic; sdrtxdata: out Std_logic);
    end component;
    component sdr_txdata_MGIOL
      port (IOLDO: out Std_logic; TXDATA0: in Std_logic; TXDATA1: in Std_logic; 
            LSR: in Std_logic; CLK: in Std_logic);
    end component;
    component rf_sel_0B
      port (rfsel0: out Std_logic);
    end component;
    component rf_sel_1B
      port (rfsel1: out Std_logic);
    end component;
    component rf_sel_2B
      port (rfsel2: out Std_logic);
    end component;
    component rf_sel_3B
      port (rfsel3: out Std_logic);
    end component;
    component subg_fem_sel0B
      port (subgfemsel0: out Std_logic);
    end component;
    component subg_fem_sel1B
      port (subgfemsel1: out Std_logic);
    end component;
    component wifi_fem_sel0B
      port (wififemsel0: out Std_logic);
    end component;
    component wifi_fem_sel1B
      port (wififemsel1: out Std_logic);
    end component;
    component wifi_fem_csdB
      port (wififemcsd: out Std_logic);
    end component;
    component wifi_fem_cpsB
      port (wififemcps: out Std_logic);
    end component;
    component wifi_fem_crxB
      port (wififemcrx: out Std_logic);
    end component;
    component wifi_fem_ctxB
      port (wififemctx: out Std_logic);
    end component;
    component wifi_fem_chlB
      port (wififemchl: out Std_logic);
    end component;
    component subg_fem_cpsB
      port (subgfemcps: out Std_logic);
    end component;
    component subg_fem_ctxB
      port (subgfemctx: out Std_logic);
    end component;
    component subg_fem_csdB
      port (subgfemcsd: out Std_logic);
    end component;
    component spi1_sckB
      port (IOLDO: in Std_logic; spi1sck: out Std_logic);
    end component;
    component spi1_sck_MGIOL
      port (IOLDO: out Std_logic; TXDATA0: in Std_logic; LSR: in Std_logic; 
            CLK: in Std_logic);
    end component;
    component spi1_mosiB
      port (IOLDO: in Std_logic; spi1mosi: out Std_logic);
    end component;
    component spi1_mosi_MGIOL
      port (IOLDO: out Std_logic; TXDATA0: in Std_logic; TXDATA1: in Std_logic; 
            LSR: in Std_logic; CLK: in Std_logic);
    end component;
    component spi2_sckB
      port (IOLDO: in Std_logic; spi2sck: out Std_logic);
    end component;
    component spi2_sck_MGIOL
      port (IOLDO: out Std_logic; TXDATA0: in Std_logic; LSR: in Std_logic; 
            CLK: in Std_logic);
    end component;
    component spi2_mosiB
      port (IOLDO: in Std_logic; spi2mosi: out Std_logic);
    end component;
    component spi2_mosi_MGIOL
      port (IOLDO: out Std_logic; TXDATA0: in Std_logic; TXDATA1: in Std_logic; 
            LSR: in Std_logic; CLK: in Std_logic);
    end component;
    component spi3_sckB
      port (IOLDO: in Std_logic; spi3sck: out Std_logic);
    end component;
    component spi3_sck_MGIOL
      port (IOLDO: out Std_logic; TXDATA0: in Std_logic; LSR: in Std_logic; 
            CLK: in Std_logic);
    end component;
    component spi3_mosiB
      port (IOLDO: in Std_logic; spi3mosi: out Std_logic);
    end component;
    component spi3_mosi_MGIOL
      port (IOLDO: out Std_logic; TXDATA0: in Std_logic; TXDATA1: in Std_logic; 
            LSR: in Std_logic; CLK: in Std_logic);
    end component;
    component spi4_sckB
      port (IOLDO: in Std_logic; spi4sck: out Std_logic);
    end component;
    component spi4_sck_MGIOL
      port (IOLDO: out Std_logic; TXDATA0: in Std_logic; LSR: in Std_logic; 
            CLK: in Std_logic);
    end component;
    component spi4_mosiB
      port (IOLDO: in Std_logic; spi4mosi: out Std_logic);
    end component;
    component spi4_mosi_MGIOL
      port (IOLDO: out Std_logic; TXDATA0: in Std_logic; TXDATA1: in Std_logic; 
            LSR: in Std_logic; CLK: in Std_logic);
    end component;
    component fpga_ufl_p7B
      port (PADDO: in Std_logic; fpgauflp7: out Std_logic);
    end component;
    component fpga_ufl_p8B
      port (PADDO: in Std_logic; fpgauflp8: out Std_logic);
    end component;
    component dpll_clkout2B
      port (PADDI: out Std_logic; dpllclkout2: in Std_logic);
    end component;
    component dpll_clkout0B
      port (PADDI: out Std_logic; dpllclkout0: in Std_logic);
    end component;
    component sdr_rx_wifiB
      port (PADDI: out Std_logic; sdrrxwifi: in Std_logic);
    end component;
    component sdr_rx_wifi_MGIOL
      port (DI: in Std_logic; LSR: in Std_logic; CLK: in Std_logic; 
            RXDATA0: out Std_logic; RXDATA1: out Std_logic);
    end component;
    component sdr_rx_subgB
      port (PADDI: out Std_logic; sdrrxsubg: in Std_logic);
    end component;
    component sdr_rx_subg_MGIOL
      port (DI: in Std_logic; LSR: in Std_logic; CLK: in Std_logic; 
            RXDATA0: out Std_logic; RXDATA1: out Std_logic);
    end component;
    component sdr_rxclkB
      port (PADDI: out Std_logic; sdrrxclk: in Std_logic);
    end component;
    component stm_fpga_spare1B
      port (PADDI: out Std_logic; stmfpgaspare1: in Std_logic);
    end component;
    component stm_fpga_spare2B
      port (PADDI: out Std_logic; stmfpgaspare2: in Std_logic);
    end component;
    component stm_fpga_spare5B
      port (PADDI: out Std_logic; stmfpgaspare5: in Std_logic);
    end component;
    component my_pll_PLLInst_0
      port (CLKI: in Std_logic; CLKFB: in Std_logic; STDBY: in Std_logic; 
            RST: in Std_logic; LOCK: out Std_logic; CLKOS3: out Std_logic; 
            CLKOS2: out Std_logic; CLKOP: out Std_logic);
    end component;
    component osch_inst
      port (OSC: out Std_logic);
    end component;
    component subg_i_fifo_dc_pdp_ram_0_0_0
      port (DIA15: in Std_logic; DIA14: in Std_logic; DIA13: in Std_logic; 
            DIA12: in Std_logic; DIA11: in Std_logic; DIA10: in Std_logic; 
            DIA9: in Std_logic; DIA8: in Std_logic; DIA7: in Std_logic; 
            DIA6: in Std_logic; DIA5: in Std_logic; DIA4: in Std_logic; 
            DIA3: in Std_logic; DIA2: in Std_logic; DIA1: in Std_logic; 
            DIA0: in Std_logic; ADA5: in Std_logic; ADA4: in Std_logic; 
            CEA: in Std_logic; OCEA: in Std_logic; RSTA: in Std_logic; 
            CLKA: in Std_logic; CLKB: in Std_logic; RSTB: in Std_logic; 
            OCEB: in Std_logic; CEB: in Std_logic; DOB0: out Std_logic; 
            DOB1: out Std_logic; DOB2: out Std_logic; DOB3: out Std_logic; 
            DOB4: out Std_logic; DOB5: out Std_logic; DOB6: out Std_logic; 
            DOB7: out Std_logic; DOB8: out Std_logic; DOB9: out Std_logic; 
            DOB10: out Std_logic; DOB11: out Std_logic; DOB12: out Std_logic; 
            DOB13: out Std_logic; DOB14: out Std_logic; DOB15: out Std_logic; 
            ADB4: in Std_logic; ADB5: in Std_logic);
    end component;
    component wifi_i_fifo_dc_pdp_ram_0_0_0
      port (DIA15: in Std_logic; DIA14: in Std_logic; DIA13: in Std_logic; 
            DIA12: in Std_logic; DIA11: in Std_logic; DIA10: in Std_logic; 
            DIA9: in Std_logic; DIA8: in Std_logic; DIA7: in Std_logic; 
            DIA6: in Std_logic; DIA5: in Std_logic; DIA4: in Std_logic; 
            DIA3: in Std_logic; DIA2: in Std_logic; DIA1: in Std_logic; 
            DIA0: in Std_logic; ADA5: in Std_logic; ADA4: in Std_logic; 
            CEA: in Std_logic; OCEA: in Std_logic; RSTA: in Std_logic; 
            CLKA: in Std_logic; CLKB: in Std_logic; RSTB: in Std_logic; 
            OCEB: in Std_logic; CEB: in Std_logic; DOB0: out Std_logic; 
            DOB1: out Std_logic; DOB2: out Std_logic; DOB3: out Std_logic; 
            DOB4: out Std_logic; DOB5: out Std_logic; DOB6: out Std_logic; 
            DOB7: out Std_logic; DOB8: out Std_logic; DOB9: out Std_logic; 
            DOB10: out Std_logic; DOB11: out Std_logic; DOB12: out Std_logic; 
            DOB13: out Std_logic; DOB14: out Std_logic; DOB15: out Std_logic; 
            ADB4: in Std_logic; ADB5: in Std_logic);
    end component;
    component subg_q_fifo_dc_pdp_ram_0_0_0
      port (DIA15: in Std_logic; DIA14: in Std_logic; DIA13: in Std_logic; 
            DIA12: in Std_logic; DIA11: in Std_logic; DIA10: in Std_logic; 
            DIA9: in Std_logic; DIA8: in Std_logic; DIA7: in Std_logic; 
            DIA6: in Std_logic; DIA5: in Std_logic; DIA4: in Std_logic; 
            DIA3: in Std_logic; DIA2: in Std_logic; DIA1: in Std_logic; 
            DIA0: in Std_logic; ADA5: in Std_logic; ADA4: in Std_logic; 
            CEA: in Std_logic; OCEA: in Std_logic; RSTA: in Std_logic; 
            CLKA: in Std_logic; CLKB: in Std_logic; RSTB: in Std_logic; 
            OCEB: in Std_logic; CEB: in Std_logic; DOB0: out Std_logic; 
            DOB1: out Std_logic; DOB2: out Std_logic; DOB3: out Std_logic; 
            DOB4: out Std_logic; DOB5: out Std_logic; DOB6: out Std_logic; 
            DOB7: out Std_logic; DOB8: out Std_logic; DOB9: out Std_logic; 
            DOB10: out Std_logic; DOB11: out Std_logic; DOB12: out Std_logic; 
            DOB13: out Std_logic; DOB14: out Std_logic; DOB15: out Std_logic; 
            ADB4: in Std_logic; ADB5: in Std_logic);
    end component;
    component second_pll_PLLInst_0
      port (CLKI: in Std_logic; CLKFB: in Std_logic; STDBY: in Std_logic; 
            RST: in Std_logic; LOCK: out Std_logic; CLKOP: out Std_logic);
    end component;
    component GSR_INSTB
      port (GSRNET: in Std_logic);
    end component;
    component wifi_q_fifo_dc_pdp_ram_0_0_0
      port (DIA15: in Std_logic; DIA14: in Std_logic; DIA13: in Std_logic; 
            DIA12: in Std_logic; DIA11: in Std_logic; DIA10: in Std_logic; 
            DIA9: in Std_logic; DIA8: in Std_logic; DIA7: in Std_logic; 
            DIA6: in Std_logic; DIA5: in Std_logic; DIA4: in Std_logic; 
            DIA3: in Std_logic; DIA2: in Std_logic; DIA1: in Std_logic; 
            DIA0: in Std_logic; ADA5: in Std_logic; ADA4: in Std_logic; 
            CEA: in Std_logic; OCEA: in Std_logic; RSTA: in Std_logic; 
            CLKA: in Std_logic; CLKB: in Std_logic; RSTB: in Std_logic; 
            OCEB: in Std_logic; CEB: in Std_logic; DOB0: out Std_logic; 
            DOB1: out Std_logic; DOB2: out Std_logic; DOB3: out Std_logic; 
            DOB4: out Std_logic; DOB5: out Std_logic; DOB6: out Std_logic; 
            DOB7: out Std_logic; DOB8: out Std_logic; DOB9: out Std_logic; 
            DOB10: out Std_logic; DOB11: out Std_logic; DOB12: out Std_logic; 
            DOB13: out Std_logic; DOB14: out Std_logic; DOB15: out Std_logic; 
            ADB4: in Std_logic; ADB5: in Std_logic);
    end component;
  begin
    my_led_SLICE_0I: SCCU2C
      generic map (CCU2_INJECT1_0=>"NO", CCU2_INJECT1_1=>"NO", 
                   INIT0_INITVAL=>X"AA00", INIT1_INITVAL=>X"AA00")
      port map (M1=>'X', A1=>my_led_counter_12, B1=>'X', C1=>'X', D1=>'1', 
                DI1=>'X', DI0=>'X', A0=>my_led_counter_11, B0=>'X', C0=>'X', 
                D0=>'1', FCI=>my_led_n10845, M0=>'X', CE=>'X', CLK=>'X', 
                LSR=>'X', FCO=>my_led_n10846, F1=>my_led_n123, Q1=>open, 
                F0=>my_led_n124, Q0=>open);
    my_led_SLICE_1I: SCCU2C
      generic map (CCU2_INJECT1_0=>"NO", CCU2_INJECT1_1=>"NO", 
                   INIT0_INITVAL=>X"AA00", INIT1_INITVAL=>X"AA00")
      port map (M1=>'X', A1=>my_led_counter_10, B1=>'X', C1=>'X', D1=>'1', 
                DI1=>'X', DI0=>'X', A0=>my_led_counter_9, B0=>'X', C0=>'X', 
                D0=>'1', FCI=>my_led_n10844, M0=>'X', CE=>'X', CLK=>'X', 
                LSR=>'X', FCO=>my_led_n10845, F1=>my_led_n125, Q1=>open, 
                F0=>my_led_n126, Q0=>open);
    my_led_SLICE_2I: SCCU2C
      generic map (CCU2_INJECT1_0=>"NO", CCU2_INJECT1_1=>"NO", 
                   INIT0_INITVAL=>X"AA00", INIT1_INITVAL=>X"AA00")
      port map (M1=>'X', A1=>my_led_counter_8, B1=>'X', C1=>'X', D1=>'1', 
                DI1=>'X', DI0=>'X', A0=>my_led_counter_7, B0=>'X', C0=>'X', 
                D0=>'1', FCI=>my_led_n10843, M0=>'X', CE=>'X', CLK=>'X', 
                LSR=>'X', FCO=>my_led_n10844, F1=>my_led_n127, Q1=>open, 
                F0=>my_led_n128, Q0=>open);
    my_led_SLICE_3I: SCCU2C
      generic map (CCU2_INJECT1_0=>"NO", CCU2_INJECT1_1=>"NO", 
                   INIT0_INITVAL=>X"AA00", INIT1_INITVAL=>X"AA00")
      port map (M1=>'X', A1=>my_led_counter_6, B1=>'X', C1=>'X', D1=>'1', 
                DI1=>'X', DI0=>'X', A0=>my_led_counter_5, B0=>'X', C0=>'X', 
                D0=>'1', FCI=>my_led_n10842, M0=>'X', CE=>'X', CLK=>'X', 
                LSR=>'X', FCO=>my_led_n10843, F1=>my_led_n129, Q1=>open, 
                F0=>my_led_n130, Q0=>open);
    my_led_SLICE_4I: SCCU2C
      generic map (CCU2_INJECT1_0=>"NO", CCU2_INJECT1_1=>"NO", 
                   INIT0_INITVAL=>X"AA00", INIT1_INITVAL=>X"AA00")
      port map (M1=>'X', A1=>my_led_counter_4, B1=>'X', C1=>'X', D1=>'1', 
                DI1=>'X', DI0=>'X', A0=>my_led_counter_3, B0=>'X', C0=>'X', 
                D0=>'1', FCI=>my_led_n10841, M0=>'X', CE=>'X', CLK=>'X', 
                LSR=>'X', FCO=>my_led_n10842, F1=>my_led_n131, Q1=>open, 
                F0=>my_led_n132, Q0=>open);
    my_led_SLICE_5I: SCCU2C
      generic map (CCU2_INJECT1_0=>"NO", CCU2_INJECT1_1=>"NO", 
                   INIT0_INITVAL=>X"AA00", INIT1_INITVAL=>X"AA00")
      port map (M1=>'X', A1=>my_led_counter_2, B1=>'X', C1=>'X', D1=>'1', 
                DI1=>'X', DI0=>'X', A0=>my_led_counter_1, B0=>'X', C0=>'X', 
                D0=>'1', FCI=>my_led_n10840, M0=>'X', CE=>'X', CLK=>'X', 
                LSR=>'X', FCO=>my_led_n10841, F1=>my_led_n133, Q1=>open, 
                F0=>my_led_n134, Q0=>open);
    my_led_SLICE_6I: SCCU2C
      generic map (CCU2_INJECT1_0=>"NO", CCU2_INJECT1_1=>"NO", 
                   INIT0_INITVAL=>X"0000", INIT1_INITVAL=>X"55FF")
      port map (M1=>'X', A1=>my_led_counter_0, B1=>'X', C1=>'X', D1=>'1', 
                DI1=>'X', DI0=>'X', A0=>'X', B0=>'X', C0=>'X', D0=>'X', 
                FCI=>'X', M0=>'X', CE=>'X', CLK=>'X', LSR=>'X', 
                FCO=>my_led_n10840, F1=>my_led_n135, Q1=>open, F0=>open, 
                Q0=>open);
    my_led_SLICE_7I: SCCU2C
      generic map (CCU2_INJECT1_0=>"NO", CCU2_INJECT1_1=>"NO", 
                   INIT0_INITVAL=>X"AA00", INIT1_INITVAL=>X"0000")
      port map (M1=>'X', A1=>'X', B1=>'X', C1=>'X', D1=>'X', DI1=>'X', 
                DI0=>'X', A0=>my_led_counter_25, B0=>'X', C0=>'X', D0=>'1', 
                FCI=>my_led_n10852, M0=>'X', CE=>'X', CLK=>'X', LSR=>'X', 
                FCO=>open, F1=>open, Q1=>open, F0=>my_led_n110, Q0=>open);
    my_led_SLICE_8I: SCCU2C
      generic map (CCU2_INJECT1_0=>"NO", CCU2_INJECT1_1=>"NO", 
                   INIT0_INITVAL=>X"AA00", INIT1_INITVAL=>X"AA00")
      port map (M1=>'X', A1=>my_led_counter_24, B1=>'X', C1=>'X', D1=>'1', 
                DI1=>'X', DI0=>'X', A0=>my_led_counter_23, B0=>'X', C0=>'X', 
                D0=>'1', FCI=>my_led_n10851, M0=>'X', CE=>'X', CLK=>'X', 
                LSR=>'X', FCO=>my_led_n10852, F1=>my_led_n111, Q1=>open, 
                F0=>my_led_n112, Q0=>open);
    my_led_SLICE_9I: SCCU2C
      generic map (CCU2_INJECT1_0=>"NO", CCU2_INJECT1_1=>"NO", 
                   INIT0_INITVAL=>X"AA00", INIT1_INITVAL=>X"AA00")
      port map (M1=>'X', A1=>my_led_counter_22, B1=>'X', C1=>'X', D1=>'1', 
                DI1=>'X', DI0=>'X', A0=>my_led_counter_21, B0=>'X', C0=>'X', 
                D0=>'1', FCI=>my_led_n10850, M0=>'X', CE=>'X', CLK=>'X', 
                LSR=>'X', FCO=>my_led_n10851, F1=>my_led_n113, Q1=>open, 
                F0=>my_led_n114, Q0=>open);
    my_led_SLICE_10I: SCCU2C
      generic map (CCU2_INJECT1_0=>"NO", CCU2_INJECT1_1=>"NO", 
                   INIT0_INITVAL=>X"AA00", INIT1_INITVAL=>X"AA00")
      port map (M1=>'X', A1=>my_led_counter_20, B1=>'X', C1=>'X', D1=>'1', 
                DI1=>'X', DI0=>'X', A0=>my_led_counter_19, B0=>'X', C0=>'X', 
                D0=>'1', FCI=>my_led_n10849, M0=>'X', CE=>'X', CLK=>'X', 
                LSR=>'X', FCO=>my_led_n10850, F1=>my_led_n115, Q1=>open, 
                F0=>my_led_n116, Q0=>open);
    my_led_SLICE_11I: SCCU2C
      generic map (CCU2_INJECT1_0=>"NO", CCU2_INJECT1_1=>"NO", 
                   INIT0_INITVAL=>X"AA00", INIT1_INITVAL=>X"AA00")
      port map (M1=>'X', A1=>my_led_counter_18, B1=>'X', C1=>'X', D1=>'1', 
                DI1=>'X', DI0=>'X', A0=>my_led_counter_17, B0=>'X', C0=>'X', 
                D0=>'1', FCI=>my_led_n10848, M0=>'X', CE=>'X', CLK=>'X', 
                LSR=>'X', FCO=>my_led_n10849, F1=>my_led_n117, Q1=>open, 
                F0=>my_led_n118, Q0=>open);
    my_led_SLICE_12I: SCCU2C
      generic map (CCU2_INJECT1_0=>"NO", CCU2_INJECT1_1=>"NO", 
                   INIT0_INITVAL=>X"AA00", INIT1_INITVAL=>X"AA00")
      port map (M1=>'X', A1=>my_led_counter_16, B1=>'X', C1=>'X', D1=>'1', 
                DI1=>'X', DI0=>'X', A0=>my_led_counter_15, B0=>'X', C0=>'X', 
                D0=>'1', FCI=>my_led_n10847, M0=>'X', CE=>'X', CLK=>'X', 
                LSR=>'X', FCO=>my_led_n10848, F1=>my_led_n119, Q1=>open, 
                F0=>my_led_n120, Q0=>open);
    my_led_SLICE_13I: SCCU2C
      generic map (CCU2_INJECT1_0=>"NO", CCU2_INJECT1_1=>"NO", 
                   INIT0_INITVAL=>X"AA00", INIT1_INITVAL=>X"AA00")
      port map (M1=>'X', A1=>my_led_counter_14, B1=>'X', C1=>'X', D1=>'1', 
                DI1=>'X', DI0=>'X', A0=>my_led_counter_13, B0=>'X', C0=>'X', 
                D0=>'1', FCI=>my_led_n10846, M0=>'X', CE=>'X', CLK=>'X', 
                LSR=>'X', FCO=>my_led_n10847, F1=>my_led_n121, Q1=>open, 
                F0=>my_led_n122, Q0=>open);
    SLICE_14I: SCCU2C
      generic map (CLKMUX=>"SIG", CEMUX=>"VHI", LSRMUX=>"SIG", 
                   CCU2_INJECT1_0=>"NO", CCU2_INJECT1_1=>"NO", 
                   INIT0_INITVAL=>X"AA00", INIT1_INITVAL=>X"0000", 
                   REG0_SD=>"VHI", CHECK_DI0=>TRUE, CHECK_LSR=>TRUE)
      port map (M1=>'X', A1=>'X', B1=>'X', C1=>'X', D1=>'X', DI1=>'X', 
                DI0=>n38, A0=>tx_counter_7, B0=>'X', C0=>'X', D0=>'1', 
                FCI=>n10827, M0=>'X', CE=>'X', CLK=>internal_64MHz, LSR=>n7334, 
                FCO=>open, F1=>open, Q1=>open, F0=>n38, Q0=>tx_counter_7);
    SLICE_15I: SCCU2C
      generic map (CLKMUX=>"SIG", CEMUX=>"VHI", LSRMUX=>"SIG", 
                   CCU2_INJECT1_0=>"NO", CCU2_INJECT1_1=>"NO", 
                   INIT0_INITVAL=>X"AA00", INIT1_INITVAL=>X"AA00", 
                   REG1_SD=>"VHI", REG0_SD=>"VHI", CHECK_DI1=>TRUE, 
                   CHECK_DI0=>TRUE, CHECK_LSR=>TRUE)
      port map (M1=>'X', A1=>tx_counter_2, B1=>'X', C1=>'X', D1=>'1', DI1=>n43, 
                DI0=>n44, A0=>tx_counter_1, B0=>'X', C0=>'X', D0=>'1', 
                FCI=>n10824, M0=>'X', CE=>'X', CLK=>internal_64MHz, LSR=>n7334, 
                FCO=>n10825, F1=>n43, Q1=>tx_counter_2, F0=>n44, 
                Q0=>tx_counter_1);
    SLICE_16I: SCCU2C
      generic map (CLKMUX=>"SIG", CEMUX=>"VHI", LSRMUX=>"SIG", 
                   CCU2_INJECT1_0=>"NO", CCU2_INJECT1_1=>"NO", 
                   INIT0_INITVAL=>X"AA00", INIT1_INITVAL=>X"AA00", 
                   REG1_SD=>"VHI", REG0_SD=>"VHI", CHECK_DI1=>TRUE, 
                   CHECK_DI0=>TRUE, CHECK_LSR=>TRUE)
      port map (M1=>'X', A1=>tx_counter_6, B1=>'X', C1=>'X', D1=>'1', DI1=>n39, 
                DI0=>n40, A0=>tx_counter_5, B0=>'X', C0=>'X', D0=>'1', 
                FCI=>n10826, M0=>'X', CE=>'X', CLK=>internal_64MHz, LSR=>n7334, 
                FCO=>n10827, F1=>n39, Q1=>tx_counter_6, F0=>n40, 
                Q0=>tx_counter_5);
    SLICE_17I: SCCU2C
      generic map (CLKMUX=>"SIG", CEMUX=>"VHI", LSRMUX=>"SIG", 
                   CCU2_INJECT1_0=>"NO", CCU2_INJECT1_1=>"NO", 
                   INIT0_INITVAL=>X"0000", INIT1_INITVAL=>X"55FF", 
                   REG1_SD=>"VHI", CHECK_DI1=>TRUE, CHECK_LSR=>TRUE)
      port map (M1=>'X', A1=>tx_counter_0, B1=>'X', C1=>'X', D1=>'1', DI1=>n45, 
                DI0=>'X', A0=>'X', B0=>'X', C0=>'X', D0=>'X', FCI=>'X', 
                M0=>'X', CE=>'X', CLK=>internal_64MHz, LSR=>n7334, FCO=>n10824, 
                F1=>n45, Q1=>tx_counter_0, F0=>open, Q0=>open);
    SLICE_18I: SCCU2C
      generic map (CLKMUX=>"SIG", CEMUX=>"VHI", LSRMUX=>"SIG", 
                   CCU2_INJECT1_0=>"NO", CCU2_INJECT1_1=>"NO", 
                   INIT0_INITVAL=>X"AA00", INIT1_INITVAL=>X"AA00", 
                   REG1_SD=>"VHI", REG0_SD=>"VHI", CHECK_DI1=>TRUE, 
                   CHECK_DI0=>TRUE, CHECK_LSR=>TRUE)
      port map (M1=>'X', A1=>tx_counter_4, B1=>'X', C1=>'X', D1=>'1', DI1=>n41, 
                DI0=>n42, A0=>tx_counter_3, B0=>'X', C0=>'X', D0=>'1', 
                FCI=>n10825, M0=>'X', CE=>'X', CLK=>internal_64MHz, LSR=>n7334, 
                FCO=>n10826, F1=>n41, Q1=>tx_counter_4, F0=>n42, 
                Q0=>tx_counter_3);
    subg_i_fifo_dc_SLICE_19I: SCCU2C
      generic map (CCU2_INJECT1_0=>"NO", CCU2_INJECT1_1=>"NO", 
                   INIT0_INITVAL=>X"0000", INIT1_INITVAL=>X"66AA")
      port map (M1=>'X', A1=>'1', B1=>'1', C1=>'1', D1=>'1', DI1=>'X', 
                DI0=>'X', A0=>'X', B0=>'X', C0=>'1', D0=>'1', FCI=>'X', 
                M0=>'X', CE=>'X', CLK=>'X', LSR=>'X', 
                FCO=>subg_i_fifo_dc_w_gctr_ci, F1=>open, Q1=>open, F0=>open, 
                Q0=>open);
    subg_i_fifo_dc_SLICE_20I: SCCU2C
      generic map (CLKMUX=>"SIG", CEMUX=>"SIG", CCU2_INJECT1_0=>"NO", 
                   CCU2_INJECT1_1=>"NO", REG0_REGSET=>"SET", SRMODE=>"ASYNC", 
                   INIT0_INITVAL=>X"AAAA", INIT1_INITVAL=>X"AAAA", 
                   REG1_SD=>"VHI", REG0_SD=>"VHI", CHECK_DI1=>TRUE, 
                   CHECK_DI0=>TRUE, CHECK_CE=>TRUE)
      port map (M1=>'X', A1=>subg_i_fifo_dc_wcount_1, B1=>'X', C1=>'1', 
                D1=>'1', DI1=>subg_i_fifo_dc_iwcount_1, 
                DI0=>subg_i_fifo_dc_iwcount_0, A0=>subg_i_fifo_dc_wcount_0, 
                B0=>'X', C0=>'1', D0=>'1', FCI=>subg_i_fifo_dc_w_gctr_ci, 
                M0=>'X', CE=>subg_i_fifo_dc_wren_i, CLK=>sdr_rxclk_c, LSR=>'X', 
                FCO=>subg_i_fifo_dc_co0, F1=>subg_i_fifo_dc_iwcount_1, 
                Q1=>subg_i_fifo_dc_wcount_1, F0=>subg_i_fifo_dc_iwcount_0, 
                Q0=>subg_i_fifo_dc_wcount_0);
    subg_i_fifo_dc_SLICE_21I: SCCU2C
      generic map (CLKMUX=>"SIG", CEMUX=>"SIG", CCU2_INJECT1_0=>"NO", 
                   CCU2_INJECT1_1=>"NO", SRMODE=>"ASYNC", 
                   INIT0_INITVAL=>X"AAAA", INIT1_INITVAL=>X"0000", 
                   REG0_SD=>"VHI", CHECK_DI0=>TRUE, CHECK_CE=>TRUE)
      port map (M1=>'X', A1=>'X', B1=>'X', C1=>'1', D1=>'1', DI1=>'X', 
                DI0=>subg_i_fifo_dc_iwcount_2, A0=>subg_i_fifo_dc_wcount_2, 
                B0=>'X', C0=>'1', D0=>'1', FCI=>subg_i_fifo_dc_co0, M0=>'X', 
                CE=>subg_i_fifo_dc_wren_i, CLK=>sdr_rxclk_c, LSR=>'X', 
                FCO=>open, F1=>open, Q1=>open, F0=>subg_i_fifo_dc_iwcount_2, 
                Q0=>subg_i_fifo_dc_wcount_2);
    subg_i_fifo_dc_SLICE_22I: SCCU2C
      generic map (CCU2_INJECT1_0=>"NO", CCU2_INJECT1_1=>"NO", 
                   INIT0_INITVAL=>X"0000", INIT1_INITVAL=>X"66AA")
      port map (M1=>'X', A1=>'1', B1=>'1', C1=>'1', D1=>'1', DI1=>'X', 
                DI0=>'X', A0=>'X', B0=>'X', C0=>'1', D0=>'1', FCI=>'X', 
                M0=>'X', CE=>'X', CLK=>'X', LSR=>'X', 
                FCO=>subg_i_fifo_dc_r_gctr_ci, F1=>open, Q1=>open, F0=>open, 
                Q0=>open);
    subg_i_fifo_dc_SLICE_23I: SCCU2C
      generic map (CLKMUX=>"SIG", CEMUX=>"INV", LSRMUX=>"SIG", 
                   CCU2_INJECT1_0=>"NO", CCU2_INJECT1_1=>"NO", 
                   REG0_REGSET=>"SET", SRMODE=>"ASYNC", INIT0_INITVAL=>X"AAAA", 
                   INIT1_INITVAL=>X"AAAA", REG1_SD=>"VHI", REG0_SD=>"VHI", 
                   CHECK_DI1=>TRUE, CHECK_DI0=>TRUE, CHECK_CE=>TRUE, 
                   CHECK_LSR=>TRUE)
      port map (M1=>'X', A1=>subg_i_fifo_dc_rcount_1, B1=>'X', C1=>'1', 
                D1=>'1', DI1=>subg_i_fifo_dc_ircount_1, 
                DI0=>subg_i_fifo_dc_ircount_0, A0=>subg_i_fifo_dc_rcount_0, 
                B0=>'X', C0=>'1', D0=>'1', FCI=>subg_i_fifo_dc_r_gctr_ci, 
                M0=>'X', CE=>subg_i_empty, CLK=>internal_80MHz, 
                LSR=>main_reset_n_N_208, FCO=>subg_i_fifo_dc_co0_1, 
                F1=>subg_i_fifo_dc_ircount_1, Q1=>subg_i_fifo_dc_rcount_1, 
                F0=>subg_i_fifo_dc_ircount_0, Q0=>subg_i_fifo_dc_rcount_0);
    subg_i_fifo_dc_SLICE_24I: SCCU2C
      generic map (CLKMUX=>"SIG", CEMUX=>"INV", LSRMUX=>"SIG", 
                   CCU2_INJECT1_0=>"NO", CCU2_INJECT1_1=>"NO", SRMODE=>"ASYNC", 
                   INIT0_INITVAL=>X"AAAA", INIT1_INITVAL=>X"0000", 
                   REG0_SD=>"VHI", CHECK_DI0=>TRUE, CHECK_CE=>TRUE, 
                   CHECK_LSR=>TRUE)
      port map (M1=>'X', A1=>'X', B1=>'X', C1=>'1', D1=>'1', DI1=>'X', 
                DI0=>subg_i_fifo_dc_ircount_2, A0=>subg_i_fifo_dc_rcount_2, 
                B0=>'X', C0=>'1', D0=>'1', FCI=>subg_i_fifo_dc_co0_1, M0=>'X', 
                CE=>subg_i_empty, CLK=>internal_80MHz, LSR=>main_reset_n_N_208, 
                FCO=>open, F1=>open, Q1=>open, F0=>subg_i_fifo_dc_ircount_2, 
                Q0=>subg_i_fifo_dc_rcount_2);
    subg_i_fifo_dc_SLICE_25I: SCCU2C
      generic map (CCU2_INJECT1_0=>"NO", CCU2_INJECT1_1=>"NO", 
                   INIT0_INITVAL=>X"0000", INIT1_INITVAL=>X"66AA")
      port map (M1=>'X', A1=>subg_i_fifo_dc_rden_i, B1=>subg_i_fifo_dc_rden_i, 
                C1=>'1', D1=>'1', DI1=>'X', DI0=>'X', A0=>'X', B0=>'X', 
                C0=>'1', D0=>'1', FCI=>'X', M0=>'X', CE=>'X', CLK=>'X', 
                LSR=>'X', FCO=>subg_i_fifo_dc_cmp_ci, F1=>open, Q1=>open, 
                F0=>open, Q0=>open);
    subg_i_fifo_dc_SLICE_26I: SCCU2C
      generic map (CCU2_INJECT1_0=>"NO", CCU2_INJECT1_1=>"NO", 
                   INIT0_INITVAL=>X"99AA", INIT1_INITVAL=>X"99AA")
      port map (M1=>'X', A1=>subg_i_fifo_dc_rcount_1, 
                B1=>subg_i_fifo_dc_wcount_r1, C1=>'1', D1=>'1', DI1=>'X', 
                DI0=>'X', A0=>subg_i_fifo_dc_rcount_0, 
                B0=>subg_i_fifo_dc_wcount_r0, C0=>'1', D0=>'1', 
                FCI=>subg_i_fifo_dc_cmp_ci, M0=>'X', CE=>'X', CLK=>'X', 
                LSR=>'X', FCO=>subg_i_fifo_dc_co0_2, F1=>open, Q1=>open, 
                F0=>open, Q0=>open);
    subg_i_fifo_dc_SLICE_27I: SCCU2C
      generic map (CCU2_INJECT1_0=>"NO", CCU2_INJECT1_1=>"NO", 
                   INIT0_INITVAL=>X"99AA", INIT1_INITVAL=>X"FF00")
      port map (M1=>'X', A1=>'X', B1=>'X', C1=>'1', D1=>'1', DI1=>'X', 
                DI0=>'X', A0=>subg_i_fifo_dc_empty_cmp_set, 
                B0=>subg_i_fifo_dc_empty_cmp_clr, C0=>'1', D0=>'1', 
                FCI=>subg_i_fifo_dc_co0_2, M0=>'X', CE=>'X', CLK=>'X', 
                LSR=>'X', FCO=>subg_i_fifo_dc_empty_d_c, F1=>open, Q1=>open, 
                F0=>open, Q0=>open);
    subg_i_fifo_dc_SLICE_28I: SCCU2C
      generic map (CLKMUX=>"SIG", CEMUX=>"VHI", LSRMUX=>"SIG", 
                   CCU2_INJECT1_0=>"NO", CCU2_INJECT1_1=>"NO", 
                   REG0_REGSET=>"SET", SRMODE=>"ASYNC", INIT0_INITVAL=>X"0000", 
                   INIT1_INITVAL=>X"0000", REG0_SD=>"VHI", CHECK_DI0=>TRUE, 
                   CHECK_LSR=>TRUE)
      port map (M1=>'X', A1=>'X', B1=>'X', C1=>'1', D1=>'1', DI1=>'X', 
                DI0=>subg_i_fifo_dc_empty_d, A0=>'X', B0=>'X', C0=>'1', 
                D0=>'1', FCI=>subg_i_fifo_dc_empty_d_c, M0=>'X', CE=>'X', 
                CLK=>internal_80MHz, LSR=>main_reset_n_N_208, FCO=>open, 
                F1=>open, Q1=>open, F0=>subg_i_fifo_dc_empty_d, 
                Q0=>subg_i_empty);
    subg_i_fifo_dc_SLICE_29I: SCCU2C
      generic map (CCU2_INJECT1_0=>"NO", CCU2_INJECT1_1=>"NO", 
                   INIT0_INITVAL=>X"0000", INIT1_INITVAL=>X"66AA")
      port map (M1=>'X', A1=>subg_i_fifo_dc_wren_i, B1=>subg_i_fifo_dc_wren_i, 
                C1=>'1', D1=>'1', DI1=>'X', DI0=>'X', A0=>'X', B0=>'X', 
                C0=>'1', D0=>'1', FCI=>'X', M0=>'X', CE=>'X', CLK=>'X', 
                LSR=>'X', FCO=>subg_i_fifo_dc_cmp_ci_1, F1=>open, Q1=>open, 
                F0=>open, Q0=>open);
    subg_i_fifo_dc_SLICE_30I: SCCU2C
      generic map (CCU2_INJECT1_0=>"NO", CCU2_INJECT1_1=>"NO", 
                   INIT0_INITVAL=>X"99AA", INIT1_INITVAL=>X"99AA")
      port map (M1=>'X', A1=>subg_i_fifo_dc_wcount_1, 
                B1=>subg_i_fifo_dc_rcount_w1, C1=>'1', D1=>'1', DI1=>'X', 
                DI0=>'X', A0=>subg_i_fifo_dc_wcount_0, 
                B0=>subg_i_fifo_dc_rcount_w0, C0=>'1', D0=>'1', 
                FCI=>subg_i_fifo_dc_cmp_ci_1, M0=>'X', CE=>'X', CLK=>'X', 
                LSR=>'X', FCO=>subg_i_fifo_dc_co0_3, F1=>open, Q1=>open, 
                F0=>open, Q0=>open);
    subg_i_fifo_dc_SLICE_31I: SCCU2C
      generic map (CCU2_INJECT1_0=>"NO", CCU2_INJECT1_1=>"NO", 
                   INIT0_INITVAL=>X"99AA", INIT1_INITVAL=>X"FF00")
      port map (M1=>'X', A1=>'X', B1=>'X', C1=>'1', D1=>'1', DI1=>'X', 
                DI0=>'X', A0=>subg_i_fifo_dc_full_cmp_set, 
                B0=>subg_i_fifo_dc_full_cmp_clr, C0=>'1', D0=>'1', 
                FCI=>subg_i_fifo_dc_co0_3, M0=>'X', CE=>'X', CLK=>'X', 
                LSR=>'X', FCO=>subg_i_fifo_dc_full_d_c, F1=>open, Q1=>open, 
                F0=>open, Q0=>open);
    subg_i_fifo_dc_SLICE_32I: SCCU2C
      generic map (CLKMUX=>"SIG", CEMUX=>"VHI", CCU2_INJECT1_0=>"NO", 
                   CCU2_INJECT1_1=>"NO", SRMODE=>"ASYNC", 
                   INIT0_INITVAL=>X"0000", INIT1_INITVAL=>X"0000", 
                   REG0_SD=>"VHI", CHECK_DI0=>TRUE)
      port map (M1=>'X', A1=>'X', B1=>'X', C1=>'1', D1=>'1', DI1=>'X', 
                DI0=>subg_i_fifo_dc_full_d, A0=>'X', B0=>'X', C0=>'1', D0=>'1', 
                FCI=>subg_i_fifo_dc_full_d_c, M0=>'X', CE=>'X', 
                CLK=>sdr_rxclk_c, LSR=>'X', FCO=>open, F1=>open, Q1=>open, 
                F0=>subg_i_fifo_dc_full_d, Q0=>subg_i_fifo_dc_Full);
    wifi_i_fifo_dc_SLICE_33I: SCCU2C
      generic map (CCU2_INJECT1_0=>"NO", CCU2_INJECT1_1=>"NO", 
                   INIT0_INITVAL=>X"0000", INIT1_INITVAL=>X"66AA")
      port map (M1=>'X', A1=>'1', B1=>'1', C1=>'1', D1=>'1', DI1=>'X', 
                DI0=>'X', A0=>'X', B0=>'X', C0=>'1', D0=>'1', FCI=>'X', 
                M0=>'X', CE=>'X', CLK=>'X', LSR=>'X', 
                FCO=>wifi_i_fifo_dc_w_gctr_ci, F1=>open, Q1=>open, F0=>open, 
                Q0=>open);
    wifi_i_fifo_dc_SLICE_34I: SCCU2C
      generic map (CLKMUX=>"SIG", CEMUX=>"SIG", CCU2_INJECT1_0=>"NO", 
                   CCU2_INJECT1_1=>"NO", REG0_REGSET=>"SET", SRMODE=>"ASYNC", 
                   INIT0_INITVAL=>X"AAAA", INIT1_INITVAL=>X"AAAA", 
                   REG1_SD=>"VHI", REG0_SD=>"VHI", CHECK_DI1=>TRUE, 
                   CHECK_DI0=>TRUE, CHECK_CE=>TRUE)
      port map (M1=>'X', A1=>wifi_i_fifo_dc_wcount_1, B1=>'X', C1=>'1', 
                D1=>'1', DI1=>wifi_i_fifo_dc_iwcount_1, 
                DI0=>wifi_i_fifo_dc_iwcount_0, A0=>wifi_i_fifo_dc_wcount_0, 
                B0=>'X', C0=>'1', D0=>'1', FCI=>wifi_i_fifo_dc_w_gctr_ci, 
                M0=>'X', CE=>wifi_i_fifo_dc_wren_i, CLK=>sdr_rxclk_c, LSR=>'X', 
                FCO=>wifi_i_fifo_dc_co0, F1=>wifi_i_fifo_dc_iwcount_1, 
                Q1=>wifi_i_fifo_dc_wcount_1, F0=>wifi_i_fifo_dc_iwcount_0, 
                Q0=>wifi_i_fifo_dc_wcount_0);
    wifi_i_fifo_dc_SLICE_35I: SCCU2C
      generic map (CLKMUX=>"SIG", CEMUX=>"SIG", CCU2_INJECT1_0=>"NO", 
                   CCU2_INJECT1_1=>"NO", SRMODE=>"ASYNC", 
                   INIT0_INITVAL=>X"AAAA", INIT1_INITVAL=>X"0000", 
                   REG0_SD=>"VHI", CHECK_DI0=>TRUE, CHECK_CE=>TRUE)
      port map (M1=>'X', A1=>'X', B1=>'X', C1=>'1', D1=>'1', DI1=>'X', 
                DI0=>wifi_i_fifo_dc_iwcount_2, A0=>wifi_i_fifo_dc_wcount_2, 
                B0=>'X', C0=>'1', D0=>'1', FCI=>wifi_i_fifo_dc_co0, M0=>'X', 
                CE=>wifi_i_fifo_dc_wren_i, CLK=>sdr_rxclk_c, LSR=>'X', 
                FCO=>open, F1=>open, Q1=>open, F0=>wifi_i_fifo_dc_iwcount_2, 
                Q0=>wifi_i_fifo_dc_wcount_2);
    wifi_i_fifo_dc_SLICE_36I: SCCU2C
      generic map (CCU2_INJECT1_0=>"NO", CCU2_INJECT1_1=>"NO", 
                   INIT0_INITVAL=>X"0000", INIT1_INITVAL=>X"66AA")
      port map (M1=>'X', A1=>'1', B1=>'1', C1=>'1', D1=>'1', DI1=>'X', 
                DI0=>'X', A0=>'X', B0=>'X', C0=>'1', D0=>'1', FCI=>'X', 
                M0=>'X', CE=>'X', CLK=>'X', LSR=>'X', 
                FCO=>wifi_i_fifo_dc_r_gctr_ci, F1=>open, Q1=>open, F0=>open, 
                Q0=>open);
    wifi_i_fifo_dc_SLICE_37I: SCCU2C
      generic map (CLKMUX=>"SIG", CEMUX=>"INV", LSRMUX=>"SIG", 
                   CCU2_INJECT1_0=>"NO", CCU2_INJECT1_1=>"NO", 
                   REG0_REGSET=>"SET", SRMODE=>"ASYNC", INIT0_INITVAL=>X"AAAA", 
                   INIT1_INITVAL=>X"AAAA", REG1_SD=>"VHI", REG0_SD=>"VHI", 
                   CHECK_DI1=>TRUE, CHECK_DI0=>TRUE, CHECK_CE=>TRUE, 
                   CHECK_LSR=>TRUE)
      port map (M1=>'X', A1=>wifi_i_fifo_dc_rcount_1, B1=>'X', C1=>'1', 
                D1=>'1', DI1=>wifi_i_fifo_dc_ircount_1, 
                DI0=>wifi_i_fifo_dc_ircount_0, A0=>wifi_i_fifo_dc_rcount_0, 
                B0=>'X', C0=>'1', D0=>'1', FCI=>wifi_i_fifo_dc_r_gctr_ci, 
                M0=>'X', CE=>wifi_i_empty, CLK=>internal_80MHz, 
                LSR=>main_reset_n_N_208, FCO=>wifi_i_fifo_dc_co0_1, 
                F1=>wifi_i_fifo_dc_ircount_1, Q1=>wifi_i_fifo_dc_rcount_1, 
                F0=>wifi_i_fifo_dc_ircount_0, Q0=>wifi_i_fifo_dc_rcount_0);
    wifi_i_fifo_dc_SLICE_38I: SCCU2C
      generic map (CLKMUX=>"SIG", CEMUX=>"INV", LSRMUX=>"SIG", 
                   CCU2_INJECT1_0=>"NO", CCU2_INJECT1_1=>"NO", SRMODE=>"ASYNC", 
                   INIT0_INITVAL=>X"AAAA", INIT1_INITVAL=>X"0000", 
                   REG0_SD=>"VHI", CHECK_DI0=>TRUE, CHECK_CE=>TRUE, 
                   CHECK_LSR=>TRUE)
      port map (M1=>'X', A1=>'X', B1=>'X', C1=>'1', D1=>'1', DI1=>'X', 
                DI0=>wifi_i_fifo_dc_ircount_2, A0=>wifi_i_fifo_dc_rcount_2, 
                B0=>'X', C0=>'1', D0=>'1', FCI=>wifi_i_fifo_dc_co0_1, M0=>'X', 
                CE=>wifi_i_empty, CLK=>internal_80MHz, LSR=>main_reset_n_N_208, 
                FCO=>open, F1=>open, Q1=>open, F0=>wifi_i_fifo_dc_ircount_2, 
                Q0=>wifi_i_fifo_dc_rcount_2);
    wifi_i_fifo_dc_SLICE_39I: SCCU2C
      generic map (CCU2_INJECT1_0=>"NO", CCU2_INJECT1_1=>"NO", 
                   INIT0_INITVAL=>X"0000", INIT1_INITVAL=>X"66AA")
      port map (M1=>'X', A1=>n14347, B1=>n14347, C1=>'1', D1=>'1', DI1=>'X', 
                DI0=>'X', A0=>'X', B0=>'X', C0=>'1', D0=>'1', FCI=>'X', 
                M0=>'X', CE=>'X', CLK=>'X', LSR=>'X', 
                FCO=>wifi_i_fifo_dc_cmp_ci, F1=>open, Q1=>open, F0=>open, 
                Q0=>open);
    wifi_i_fifo_dc_SLICE_40I: SCCU2C
      generic map (CCU2_INJECT1_0=>"NO", CCU2_INJECT1_1=>"NO", 
                   INIT0_INITVAL=>X"99AA", INIT1_INITVAL=>X"99AA")
      port map (M1=>'X', A1=>wifi_i_fifo_dc_rcount_1, 
                B1=>wifi_i_fifo_dc_wcount_r1, C1=>'1', D1=>'1', DI1=>'X', 
                DI0=>'X', A0=>wifi_i_fifo_dc_rcount_0, 
                B0=>wifi_i_fifo_dc_wcount_r0, C0=>'1', D0=>'1', 
                FCI=>wifi_i_fifo_dc_cmp_ci, M0=>'X', CE=>'X', CLK=>'X', 
                LSR=>'X', FCO=>wifi_i_fifo_dc_co0_2, F1=>open, Q1=>open, 
                F0=>open, Q0=>open);
    wifi_i_fifo_dc_SLICE_41I: SCCU2C
      generic map (CCU2_INJECT1_0=>"NO", CCU2_INJECT1_1=>"NO", 
                   INIT0_INITVAL=>X"99AA", INIT1_INITVAL=>X"FF00")
      port map (M1=>'X', A1=>'X', B1=>'X', C1=>'1', D1=>'1', DI1=>'X', 
                DI0=>'X', A0=>wifi_i_fifo_dc_empty_cmp_set, 
                B0=>wifi_i_fifo_dc_empty_cmp_clr, C0=>'1', D0=>'1', 
                FCI=>wifi_i_fifo_dc_co0_2, M0=>'X', CE=>'X', CLK=>'X', 
                LSR=>'X', FCO=>wifi_i_fifo_dc_empty_d_c, F1=>open, Q1=>open, 
                F0=>open, Q0=>open);
    wifi_i_fifo_dc_SLICE_42I: SCCU2C
      generic map (CLKMUX=>"SIG", CEMUX=>"VHI", LSRMUX=>"SIG", 
                   CCU2_INJECT1_0=>"NO", CCU2_INJECT1_1=>"NO", 
                   REG0_REGSET=>"SET", SRMODE=>"ASYNC", INIT0_INITVAL=>X"0000", 
                   INIT1_INITVAL=>X"0000", REG0_SD=>"VHI", CHECK_DI0=>TRUE, 
                   CHECK_LSR=>TRUE)
      port map (M1=>'X', A1=>'X', B1=>'X', C1=>'1', D1=>'1', DI1=>'X', 
                DI0=>wifi_i_fifo_dc_empty_d, A0=>'X', B0=>'X', C0=>'1', 
                D0=>'1', FCI=>wifi_i_fifo_dc_empty_d_c, M0=>'X', CE=>'X', 
                CLK=>internal_80MHz, LSR=>main_reset_n_N_208, FCO=>open, 
                F1=>open, Q1=>open, F0=>wifi_i_fifo_dc_empty_d, 
                Q0=>wifi_i_empty);
    wifi_i_fifo_dc_SLICE_43I: SCCU2C
      generic map (CCU2_INJECT1_0=>"NO", CCU2_INJECT1_1=>"NO", 
                   INIT0_INITVAL=>X"0000", INIT1_INITVAL=>X"66AA")
      port map (M1=>'X', A1=>wifi_i_fifo_dc_wren_i, B1=>wifi_i_fifo_dc_wren_i, 
                C1=>'1', D1=>'1', DI1=>'X', DI0=>'X', A0=>'X', B0=>'X', 
                C0=>'1', D0=>'1', FCI=>'X', M0=>'X', CE=>'X', CLK=>'X', 
                LSR=>'X', FCO=>wifi_i_fifo_dc_cmp_ci_1, F1=>open, Q1=>open, 
                F0=>open, Q0=>open);
    wifi_i_fifo_dc_SLICE_44I: SCCU2C
      generic map (CCU2_INJECT1_0=>"NO", CCU2_INJECT1_1=>"NO", 
                   INIT0_INITVAL=>X"99AA", INIT1_INITVAL=>X"99AA")
      port map (M1=>'X', A1=>wifi_i_fifo_dc_wcount_1, 
                B1=>wifi_i_fifo_dc_rcount_w1, C1=>'1', D1=>'1', DI1=>'X', 
                DI0=>'X', A0=>wifi_i_fifo_dc_wcount_0, 
                B0=>wifi_i_fifo_dc_rcount_w0, C0=>'1', D0=>'1', 
                FCI=>wifi_i_fifo_dc_cmp_ci_1, M0=>'X', CE=>'X', CLK=>'X', 
                LSR=>'X', FCO=>wifi_i_fifo_dc_co0_3, F1=>open, Q1=>open, 
                F0=>open, Q0=>open);
    wifi_i_fifo_dc_SLICE_45I: SCCU2C
      generic map (CCU2_INJECT1_0=>"NO", CCU2_INJECT1_1=>"NO", 
                   INIT0_INITVAL=>X"99AA", INIT1_INITVAL=>X"FF00")
      port map (M1=>'X', A1=>'X', B1=>'X', C1=>'1', D1=>'1', DI1=>'X', 
                DI0=>'X', A0=>wifi_i_fifo_dc_full_cmp_set, 
                B0=>wifi_i_fifo_dc_full_cmp_clr, C0=>'1', D0=>'1', 
                FCI=>wifi_i_fifo_dc_co0_3, M0=>'X', CE=>'X', CLK=>'X', 
                LSR=>'X', FCO=>wifi_i_fifo_dc_full_d_c, F1=>open, Q1=>open, 
                F0=>open, Q0=>open);
    wifi_i_fifo_dc_SLICE_46I: SCCU2C
      generic map (CLKMUX=>"SIG", CEMUX=>"VHI", CCU2_INJECT1_0=>"NO", 
                   CCU2_INJECT1_1=>"NO", SRMODE=>"ASYNC", 
                   INIT0_INITVAL=>X"0000", INIT1_INITVAL=>X"0000", 
                   REG0_SD=>"VHI", CHECK_DI0=>TRUE)
      port map (M1=>'X', A1=>'X', B1=>'X', C1=>'1', D1=>'1', DI1=>'X', 
                DI0=>wifi_i_fifo_dc_full_d, A0=>'X', B0=>'X', C0=>'1', D0=>'1', 
                FCI=>wifi_i_fifo_dc_full_d_c, M0=>'X', CE=>'X', 
                CLK=>sdr_rxclk_c, LSR=>'X', FCO=>open, F1=>open, Q1=>open, 
                F0=>wifi_i_fifo_dc_full_d, Q0=>wifi_i_fifo_dc_Full);
    subg_q_fifo_dc_SLICE_47I: SCCU2C
      generic map (CCU2_INJECT1_0=>"NO", CCU2_INJECT1_1=>"NO", 
                   INIT0_INITVAL=>X"0000", INIT1_INITVAL=>X"66AA")
      port map (M1=>'X', A1=>'1', B1=>'1', C1=>'1', D1=>'1', DI1=>'X', 
                DI0=>'X', A0=>'X', B0=>'X', C0=>'1', D0=>'1', FCI=>'X', 
                M0=>'X', CE=>'X', CLK=>'X', LSR=>'X', 
                FCO=>subg_q_fifo_dc_w_gctr_ci, F1=>open, Q1=>open, F0=>open, 
                Q0=>open);
    subg_q_fifo_dc_SLICE_48I: SCCU2C
      generic map (CLKMUX=>"SIG", CEMUX=>"SIG", CCU2_INJECT1_0=>"NO", 
                   CCU2_INJECT1_1=>"NO", REG0_REGSET=>"SET", SRMODE=>"ASYNC", 
                   INIT0_INITVAL=>X"AAAA", INIT1_INITVAL=>X"AAAA", 
                   REG1_SD=>"VHI", REG0_SD=>"VHI", CHECK_DI1=>TRUE, 
                   CHECK_DI0=>TRUE, CHECK_CE=>TRUE)
      port map (M1=>'X', A1=>subg_q_fifo_dc_wcount_1, B1=>'X', C1=>'1', 
                D1=>'1', DI1=>subg_q_fifo_dc_iwcount_1, 
                DI0=>subg_q_fifo_dc_iwcount_0, A0=>subg_q_fifo_dc_wcount_0, 
                B0=>'X', C0=>'1', D0=>'1', FCI=>subg_q_fifo_dc_w_gctr_ci, 
                M0=>'X', CE=>subg_q_fifo_dc_wren_i, CLK=>sdr_rxclk_c, LSR=>'X', 
                FCO=>subg_q_fifo_dc_co0, F1=>subg_q_fifo_dc_iwcount_1, 
                Q1=>subg_q_fifo_dc_wcount_1, F0=>subg_q_fifo_dc_iwcount_0, 
                Q0=>subg_q_fifo_dc_wcount_0);
    subg_q_fifo_dc_SLICE_49I: SCCU2C
      generic map (CLKMUX=>"SIG", CEMUX=>"SIG", CCU2_INJECT1_0=>"NO", 
                   CCU2_INJECT1_1=>"NO", SRMODE=>"ASYNC", 
                   INIT0_INITVAL=>X"AAAA", INIT1_INITVAL=>X"0000", 
                   REG0_SD=>"VHI", CHECK_DI0=>TRUE, CHECK_CE=>TRUE)
      port map (M1=>'X', A1=>'X', B1=>'X', C1=>'1', D1=>'1', DI1=>'X', 
                DI0=>subg_q_fifo_dc_iwcount_2, A0=>subg_q_fifo_dc_wcount_2, 
                B0=>'X', C0=>'1', D0=>'1', FCI=>subg_q_fifo_dc_co0, M0=>'X', 
                CE=>subg_q_fifo_dc_wren_i, CLK=>sdr_rxclk_c, LSR=>'X', 
                FCO=>open, F1=>open, Q1=>open, F0=>subg_q_fifo_dc_iwcount_2, 
                Q0=>subg_q_fifo_dc_wcount_2);
    subg_q_fifo_dc_SLICE_50I: SCCU2C
      generic map (CCU2_INJECT1_0=>"NO", CCU2_INJECT1_1=>"NO", 
                   INIT0_INITVAL=>X"0000", INIT1_INITVAL=>X"66AA")
      port map (M1=>'X', A1=>'1', B1=>'1', C1=>'1', D1=>'1', DI1=>'X', 
                DI0=>'X', A0=>'X', B0=>'X', C0=>'1', D0=>'1', FCI=>'X', 
                M0=>'X', CE=>'X', CLK=>'X', LSR=>'X', 
                FCO=>subg_q_fifo_dc_r_gctr_ci, F1=>open, Q1=>open, F0=>open, 
                Q0=>open);
    subg_q_fifo_dc_SLICE_51I: SCCU2C
      generic map (CLKMUX=>"SIG", CEMUX=>"INV", LSRMUX=>"SIG", 
                   CCU2_INJECT1_0=>"NO", CCU2_INJECT1_1=>"NO", 
                   REG0_REGSET=>"SET", SRMODE=>"ASYNC", INIT0_INITVAL=>X"AAAA", 
                   INIT1_INITVAL=>X"AAAA", REG1_SD=>"VHI", REG0_SD=>"VHI", 
                   CHECK_DI1=>TRUE, CHECK_DI0=>TRUE, CHECK_CE=>TRUE, 
                   CHECK_LSR=>TRUE)
      port map (M1=>'X', A1=>subg_q_fifo_dc_rcount_1, B1=>'X', C1=>'1', 
                D1=>'1', DI1=>subg_q_fifo_dc_ircount_1, 
                DI0=>subg_q_fifo_dc_ircount_0, A0=>subg_q_fifo_dc_rcount_0, 
                B0=>'X', C0=>'1', D0=>'1', FCI=>subg_q_fifo_dc_r_gctr_ci, 
                M0=>'X', CE=>subg_q_empty, CLK=>internal_80MHz, 
                LSR=>main_reset_n_N_208, FCO=>subg_q_fifo_dc_co0_1, 
                F1=>subg_q_fifo_dc_ircount_1, Q1=>subg_q_fifo_dc_rcount_1, 
                F0=>subg_q_fifo_dc_ircount_0, Q0=>subg_q_fifo_dc_rcount_0);
    subg_q_fifo_dc_SLICE_52I: SCCU2C
      generic map (CLKMUX=>"SIG", CEMUX=>"INV", LSRMUX=>"SIG", 
                   CCU2_INJECT1_0=>"NO", CCU2_INJECT1_1=>"NO", SRMODE=>"ASYNC", 
                   INIT0_INITVAL=>X"AAAA", INIT1_INITVAL=>X"0000", 
                   REG0_SD=>"VHI", CHECK_DI0=>TRUE, CHECK_CE=>TRUE, 
                   CHECK_LSR=>TRUE)
      port map (M1=>'X', A1=>'X', B1=>'X', C1=>'1', D1=>'1', DI1=>'X', 
                DI0=>subg_q_fifo_dc_ircount_2, A0=>subg_q_fifo_dc_rcount_2, 
                B0=>'X', C0=>'1', D0=>'1', FCI=>subg_q_fifo_dc_co0_1, M0=>'X', 
                CE=>subg_q_empty, CLK=>internal_80MHz, LSR=>main_reset_n_N_208, 
                FCO=>open, F1=>open, Q1=>open, F0=>subg_q_fifo_dc_ircount_2, 
                Q0=>subg_q_fifo_dc_rcount_2);
    subg_q_fifo_dc_SLICE_53I: SCCU2C
      generic map (CCU2_INJECT1_0=>"NO", CCU2_INJECT1_1=>"NO", 
                   INIT0_INITVAL=>X"0000", INIT1_INITVAL=>X"66AA")
      port map (M1=>'X', A1=>subg_q_fifo_dc_rden_i, B1=>subg_q_fifo_dc_rden_i, 
                C1=>'1', D1=>'1', DI1=>'X', DI0=>'X', A0=>'X', B0=>'X', 
                C0=>'1', D0=>'1', FCI=>'X', M0=>'X', CE=>'X', CLK=>'X', 
                LSR=>'X', FCO=>subg_q_fifo_dc_cmp_ci, F1=>open, Q1=>open, 
                F0=>open, Q0=>open);
    subg_q_fifo_dc_SLICE_54I: SCCU2C
      generic map (CCU2_INJECT1_0=>"NO", CCU2_INJECT1_1=>"NO", 
                   INIT0_INITVAL=>X"99AA", INIT1_INITVAL=>X"99AA")
      port map (M1=>'X', A1=>subg_q_fifo_dc_rcount_1, 
                B1=>subg_q_fifo_dc_wcount_r1, C1=>'1', D1=>'1', DI1=>'X', 
                DI0=>'X', A0=>subg_q_fifo_dc_rcount_0, 
                B0=>subg_q_fifo_dc_wcount_r0, C0=>'1', D0=>'1', 
                FCI=>subg_q_fifo_dc_cmp_ci, M0=>'X', CE=>'X', CLK=>'X', 
                LSR=>'X', FCO=>subg_q_fifo_dc_co0_2, F1=>open, Q1=>open, 
                F0=>open, Q0=>open);
    subg_q_fifo_dc_SLICE_55I: SCCU2C
      generic map (CCU2_INJECT1_0=>"NO", CCU2_INJECT1_1=>"NO", 
                   INIT0_INITVAL=>X"99AA", INIT1_INITVAL=>X"FF00")
      port map (M1=>'X', A1=>'X', B1=>'X', C1=>'1', D1=>'1', DI1=>'X', 
                DI0=>'X', A0=>subg_q_fifo_dc_empty_cmp_set, 
                B0=>subg_q_fifo_dc_empty_cmp_clr, C0=>'1', D0=>'1', 
                FCI=>subg_q_fifo_dc_co0_2, M0=>'X', CE=>'X', CLK=>'X', 
                LSR=>'X', FCO=>subg_q_fifo_dc_empty_d_c, F1=>open, Q1=>open, 
                F0=>open, Q0=>open);
    subg_q_fifo_dc_SLICE_56I: SCCU2C
      generic map (CLKMUX=>"SIG", CEMUX=>"VHI", LSRMUX=>"SIG", 
                   CCU2_INJECT1_0=>"NO", CCU2_INJECT1_1=>"NO", 
                   REG0_REGSET=>"SET", SRMODE=>"ASYNC", INIT0_INITVAL=>X"0000", 
                   INIT1_INITVAL=>X"0000", REG0_SD=>"VHI", CHECK_DI0=>TRUE, 
                   CHECK_LSR=>TRUE)
      port map (M1=>'X', A1=>'X', B1=>'X', C1=>'1', D1=>'1', DI1=>'X', 
                DI0=>subg_q_fifo_dc_empty_d, A0=>'X', B0=>'X', C0=>'1', 
                D0=>'1', FCI=>subg_q_fifo_dc_empty_d_c, M0=>'X', CE=>'X', 
                CLK=>internal_80MHz, LSR=>main_reset_n_N_208, FCO=>open, 
                F1=>open, Q1=>open, F0=>subg_q_fifo_dc_empty_d, 
                Q0=>subg_q_empty);
    subg_q_fifo_dc_SLICE_57I: SCCU2C
      generic map (CCU2_INJECT1_0=>"NO", CCU2_INJECT1_1=>"NO", 
                   INIT0_INITVAL=>X"0000", INIT1_INITVAL=>X"66AA")
      port map (M1=>'X', A1=>subg_q_fifo_dc_wren_i, B1=>subg_q_fifo_dc_wren_i, 
                C1=>'1', D1=>'1', DI1=>'X', DI0=>'X', A0=>'X', B0=>'X', 
                C0=>'1', D0=>'1', FCI=>'X', M0=>'X', CE=>'X', CLK=>'X', 
                LSR=>'X', FCO=>subg_q_fifo_dc_cmp_ci_1, F1=>open, Q1=>open, 
                F0=>open, Q0=>open);
    subg_q_fifo_dc_SLICE_58I: SCCU2C
      generic map (CCU2_INJECT1_0=>"NO", CCU2_INJECT1_1=>"NO", 
                   INIT0_INITVAL=>X"99AA", INIT1_INITVAL=>X"99AA")
      port map (M1=>'X', A1=>subg_q_fifo_dc_wcount_1, 
                B1=>subg_q_fifo_dc_rcount_w1, C1=>'1', D1=>'1', DI1=>'X', 
                DI0=>'X', A0=>subg_q_fifo_dc_wcount_0, 
                B0=>subg_q_fifo_dc_rcount_w0, C0=>'1', D0=>'1', 
                FCI=>subg_q_fifo_dc_cmp_ci_1, M0=>'X', CE=>'X', CLK=>'X', 
                LSR=>'X', FCO=>subg_q_fifo_dc_co0_3, F1=>open, Q1=>open, 
                F0=>open, Q0=>open);
    subg_q_fifo_dc_SLICE_59I: SCCU2C
      generic map (CCU2_INJECT1_0=>"NO", CCU2_INJECT1_1=>"NO", 
                   INIT0_INITVAL=>X"99AA", INIT1_INITVAL=>X"FF00")
      port map (M1=>'X', A1=>'X', B1=>'X', C1=>'1', D1=>'1', DI1=>'X', 
                DI0=>'X', A0=>subg_q_fifo_dc_full_cmp_set, 
                B0=>subg_q_fifo_dc_full_cmp_clr, C0=>'1', D0=>'1', 
                FCI=>subg_q_fifo_dc_co0_3, M0=>'X', CE=>'X', CLK=>'X', 
                LSR=>'X', FCO=>subg_q_fifo_dc_full_d_c, F1=>open, Q1=>open, 
                F0=>open, Q0=>open);
    subg_q_fifo_dc_SLICE_60I: SCCU2C
      generic map (CLKMUX=>"SIG", CEMUX=>"VHI", CCU2_INJECT1_0=>"NO", 
                   CCU2_INJECT1_1=>"NO", SRMODE=>"ASYNC", 
                   INIT0_INITVAL=>X"0000", INIT1_INITVAL=>X"0000", 
                   REG0_SD=>"VHI", CHECK_DI0=>TRUE)
      port map (M1=>'X', A1=>'X', B1=>'X', C1=>'1', D1=>'1', DI1=>'X', 
                DI0=>subg_q_fifo_dc_full_d, A0=>'X', B0=>'X', C0=>'1', D0=>'1', 
                FCI=>subg_q_fifo_dc_full_d_c, M0=>'X', CE=>'X', 
                CLK=>sdr_rxclk_c, LSR=>'X', FCO=>open, F1=>open, Q1=>open, 
                F0=>subg_q_fifo_dc_full_d, Q0=>subg_q_fifo_dc_Full);
    i2c_slave_SLICE_61I: SCCU2C
      generic map (CLKMUX=>"SIG", CEMUX=>"SIG", CCU2_INJECT1_0=>"NO", 
                   CCU2_INJECT1_1=>"NO", GSR=>"DISABLED", SRMODE=>"ASYNC", 
                   INIT0_INITVAL=>X"56aa", INIT1_INITVAL=>X"56aa", 
                   REG1_SD=>"VHI", REG0_SD=>"VHI", CHECK_DI1=>TRUE, 
                   CHECK_DI0=>TRUE, CHECK_CE=>TRUE)
      port map (M1=>'X', A1=>i2c_slave_n10802, B1=>i2c_slave_n1524, 
                C1=>i2c_slave_n1527, D1=>i2c_slave_wb_adr_o_15, 
                DI1=>i2c_slave_n70, DI0=>i2c_slave_n71, A0=>i2c_slave_n10804, 
                B0=>i2c_slave_n1524, C0=>i2c_slave_n1527, 
                D0=>i2c_slave_wb_adr_o_14, FCI=>i2c_slave_n10838, M0=>'X', 
                CE=>i2c_slave_int_clk_out_enable_210, CLK=>int_clk_out, 
                LSR=>'X', FCO=>open, F1=>i2c_slave_n70, 
                Q1=>i2c_slave_wb_adr_o_15, F0=>i2c_slave_n71, 
                Q0=>i2c_slave_wb_adr_o_14);
    i2c_slave_SLICE_62I: SCCU2C
      generic map (CLKMUX=>"SIG", CEMUX=>"SIG", CCU2_INJECT1_0=>"NO", 
                   CCU2_INJECT1_1=>"NO", GSR=>"DISABLED", SRMODE=>"ASYNC", 
                   INIT0_INITVAL=>X"56aa", INIT1_INITVAL=>X"56aa", 
                   REG1_SD=>"VHI", REG0_SD=>"VHI", CHECK_DI1=>TRUE, 
                   CHECK_DI0=>TRUE, CHECK_CE=>TRUE)
      port map (M1=>'X', A1=>i2c_slave_n10790, B1=>i2c_slave_n1524, 
                C1=>i2c_slave_n1527, D1=>i2c_slave_wb_adr_o_13, 
                DI1=>i2c_slave_n72, DI0=>i2c_slave_n73, A0=>i2c_slave_n10792, 
                B0=>i2c_slave_n1524, C0=>i2c_slave_n1527, 
                D0=>i2c_slave_wb_adr_o_12, FCI=>i2c_slave_n10837, M0=>'X', 
                CE=>i2c_slave_int_clk_out_enable_210, CLK=>int_clk_out, 
                LSR=>'X', FCO=>i2c_slave_n10838, F1=>i2c_slave_n72, 
                Q1=>i2c_slave_wb_adr_o_13, F0=>i2c_slave_n73, 
                Q0=>i2c_slave_wb_adr_o_12);
    i2c_slave_SLICE_63I: SCCU2C
      generic map (CLKMUX=>"SIG", CEMUX=>"SIG", CCU2_INJECT1_0=>"NO", 
                   CCU2_INJECT1_1=>"NO", GSR=>"DISABLED", SRMODE=>"ASYNC", 
                   INIT0_INITVAL=>X"56aa", INIT1_INITVAL=>X"56aa", 
                   REG1_SD=>"VHI", REG0_SD=>"VHI", CHECK_DI1=>TRUE, 
                   CHECK_DI0=>TRUE, CHECK_CE=>TRUE)
      port map (M1=>'X', A1=>i2c_slave_n10810, B1=>i2c_slave_n1524, 
                C1=>i2c_slave_n1527, D1=>i2c_slave_wb_adr_o_11, 
                DI1=>i2c_slave_n74, DI0=>i2c_slave_n75, A0=>i2c_slave_n10812, 
                B0=>i2c_slave_n1524, C0=>i2c_slave_n1527, 
                D0=>i2c_slave_wb_adr_o_10, FCI=>i2c_slave_n10836, M0=>'X', 
                CE=>i2c_slave_int_clk_out_enable_210, CLK=>int_clk_out, 
                LSR=>'X', FCO=>i2c_slave_n10837, F1=>i2c_slave_n74, 
                Q1=>i2c_slave_wb_adr_o_11, F0=>i2c_slave_n75, 
                Q0=>i2c_slave_wb_adr_o_10);
    i2c_slave_SLICE_64I: SCCU2C
      generic map (CLKMUX=>"SIG", CEMUX=>"SIG", CCU2_INJECT1_0=>"NO", 
                   CCU2_INJECT1_1=>"NO", GSR=>"DISABLED", SRMODE=>"ASYNC", 
                   INIT0_INITVAL=>X"56aa", INIT1_INITVAL=>X"56aa", 
                   REG1_SD=>"VHI", REG0_SD=>"VHI", CHECK_DI1=>TRUE, 
                   CHECK_DI0=>TRUE, CHECK_CE=>TRUE)
      port map (M1=>'X', A1=>i2c_slave_n10814, B1=>i2c_slave_n1524, 
                C1=>i2c_slave_n1527, D1=>i2c_slave_wb_adr_o_9, 
                DI1=>i2c_slave_n76, DI0=>i2c_slave_n77, A0=>i2c_slave_n10800, 
                B0=>i2c_slave_n1524, C0=>i2c_slave_n1527, D0=>wb_adr_o_8, 
                FCI=>i2c_slave_n10835, M0=>'X', 
                CE=>i2c_slave_int_clk_out_enable_210, CLK=>int_clk_out, 
                LSR=>'X', FCO=>i2c_slave_n10836, F1=>i2c_slave_n76, 
                Q1=>i2c_slave_wb_adr_o_9, F0=>i2c_slave_n77, Q0=>wb_adr_o_8);
    i2c_slave_SLICE_65I: SCCU2C
      generic map (CLKMUX=>"SIG", CEMUX=>"SIG", CCU2_INJECT1_0=>"NO", 
                   CCU2_INJECT1_1=>"NO", GSR=>"DISABLED", SRMODE=>"ASYNC", 
                   INIT0_INITVAL=>X"56aa", INIT1_INITVAL=>X"56aa", 
                   REG1_SD=>"VHI", REG0_SD=>"VHI", CHECK_DI1=>TRUE, 
                   CHECK_DI0=>TRUE, CHECK_CE=>TRUE)
      port map (M1=>'X', A1=>i2c_slave_n10802, B1=>i2c_slave_n1524, 
                C1=>i2c_slave_n1527, D1=>wb_adr_o_7, DI1=>i2c_slave_n78, 
                DI0=>i2c_slave_n79, A0=>i2c_slave_n10804, B0=>i2c_slave_n1524, 
                C0=>i2c_slave_n1527, D0=>wb_adr_o_6, FCI=>i2c_slave_n10834, 
                M0=>'X', CE=>i2c_slave_int_clk_out_enable_202, 
                CLK=>int_clk_out, LSR=>'X', FCO=>i2c_slave_n10835, 
                F1=>i2c_slave_n78, Q1=>wb_adr_o_7, F0=>i2c_slave_n79, 
                Q0=>wb_adr_o_6);
    i2c_slave_SLICE_66I: SCCU2C
      generic map (CLKMUX=>"SIG", CEMUX=>"SIG", CCU2_INJECT1_0=>"NO", 
                   CCU2_INJECT1_1=>"NO", GSR=>"DISABLED", SRMODE=>"ASYNC", 
                   INIT0_INITVAL=>X"56aa", INIT1_INITVAL=>X"56aa", 
                   REG1_SD=>"VHI", REG0_SD=>"VHI", CHECK_DI1=>TRUE, 
                   CHECK_DI0=>TRUE, CHECK_CE=>TRUE)
      port map (M1=>'X', A1=>i2c_slave_n10790, B1=>i2c_slave_n1524, 
                C1=>i2c_slave_n1527, D1=>wb_adr_o_5, DI1=>i2c_slave_n80, 
                DI0=>i2c_slave_n81, A0=>i2c_slave_n10792, B0=>i2c_slave_n1524, 
                C0=>i2c_slave_n1527, D0=>wb_adr_o_4, FCI=>i2c_slave_n10833, 
                M0=>'X', CE=>i2c_slave_int_clk_out_enable_202, 
                CLK=>int_clk_out, LSR=>'X', FCO=>i2c_slave_n10834, 
                F1=>i2c_slave_n80, Q1=>wb_adr_o_5, F0=>i2c_slave_n81, 
                Q0=>wb_adr_o_4);
    i2c_slave_SLICE_67I: SCCU2C
      generic map (CLKMUX=>"SIG", CEMUX=>"SIG", CCU2_INJECT1_0=>"NO", 
                   CCU2_INJECT1_1=>"NO", GSR=>"DISABLED", SRMODE=>"ASYNC", 
                   INIT0_INITVAL=>X"56aa", INIT1_INITVAL=>X"56aa", 
                   REG1_SD=>"VHI", REG0_SD=>"VHI", CHECK_DI1=>TRUE, 
                   CHECK_DI0=>TRUE, CHECK_CE=>TRUE)
      port map (M1=>'X', A1=>i2c_slave_n10810, B1=>i2c_slave_n1524, 
                C1=>i2c_slave_n1527, D1=>wb_adr_o_3, DI1=>i2c_slave_n82, 
                DI0=>i2c_slave_n83, A0=>i2c_slave_n10812, B0=>i2c_slave_n1524, 
                C0=>i2c_slave_n1527, D0=>wb_adr_o_2, FCI=>i2c_slave_n10832, 
                M0=>'X', CE=>i2c_slave_int_clk_out_enable_202, 
                CLK=>int_clk_out, LSR=>'X', FCO=>i2c_slave_n10833, 
                F1=>i2c_slave_n82, Q1=>wb_adr_o_3, F0=>i2c_slave_n83, 
                Q0=>wb_adr_o_2);
    i2c_slave_SLICE_68I: SCCU2C
      generic map (CLKMUX=>"SIG", CEMUX=>"SIG", CCU2_INJECT1_0=>"NO", 
                   CCU2_INJECT1_1=>"NO", GSR=>"DISABLED", SRMODE=>"ASYNC", 
                   INIT0_INITVAL=>X"74b8", INIT1_INITVAL=>X"56aa", 
                   REG1_SD=>"VHI", REG0_SD=>"VHI", CHECK_DI1=>TRUE, 
                   CHECK_DI0=>TRUE, CHECK_CE=>TRUE)
      port map (M1=>'X', A1=>i2c_slave_n10814, B1=>i2c_slave_n1524, 
                C1=>i2c_slave_n1527, D1=>wb_adr_o_1, DI1=>i2c_slave_n84, 
                DI0=>i2c_slave_n85, A0=>wb_adr_o_0, B0=>i2c_slave_n14342, 
                C0=>i2c_slave_data_out_0, D0=>wb_ack_i, FCI=>i2c_slave_n10831, 
                M0=>'X', CE=>i2c_slave_int_clk_out_enable_202, 
                CLK=>int_clk_out, LSR=>'X', FCO=>i2c_slave_n10832, 
                F1=>i2c_slave_n84, Q1=>wb_adr_o_1, F0=>i2c_slave_n85, 
                Q0=>wb_adr_o_0);
    i2c_slave_SLICE_69I: SCCU2C
      generic map (CCU2_INJECT1_0=>"NO", CCU2_INJECT1_1=>"NO", 
                   INIT0_INITVAL=>X"0000", INIT1_INITVAL=>X"ff00")
      port map (M1=>'X', A1=>i2c_slave_n1527, B1=>i2c_slave_n1524, C1=>'X', 
                D1=>'1', DI1=>'X', DI0=>'X', A0=>'X', B0=>'X', C0=>'X', 
                D0=>'1', FCI=>'X', M0=>'X', CE=>'X', CLK=>'X', LSR=>'X', 
                FCO=>i2c_slave_n10831, F1=>open, Q1=>open, F0=>open, Q0=>open);
    wifi_q_fifo_dc_SLICE_70I: SCCU2C
      generic map (CCU2_INJECT1_0=>"NO", CCU2_INJECT1_1=>"NO", 
                   INIT0_INITVAL=>X"0000", INIT1_INITVAL=>X"66AA")
      port map (M1=>'X', A1=>'1', B1=>'1', C1=>'1', D1=>'1', DI1=>'X', 
                DI0=>'X', A0=>'X', B0=>'X', C0=>'1', D0=>'1', FCI=>'X', 
                M0=>'X', CE=>'X', CLK=>'X', LSR=>'X', 
                FCO=>wifi_q_fifo_dc_w_gctr_ci, F1=>open, Q1=>open, F0=>open, 
                Q0=>open);
    wifi_q_fifo_dc_SLICE_71I: SCCU2C
      generic map (CLKMUX=>"SIG", CEMUX=>"SIG", CCU2_INJECT1_0=>"NO", 
                   CCU2_INJECT1_1=>"NO", REG0_REGSET=>"SET", SRMODE=>"ASYNC", 
                   INIT0_INITVAL=>X"AAAA", INIT1_INITVAL=>X"AAAA", 
                   REG1_SD=>"VHI", REG0_SD=>"VHI", CHECK_DI1=>TRUE, 
                   CHECK_DI0=>TRUE, CHECK_CE=>TRUE)
      port map (M1=>'X', A1=>wifi_q_fifo_dc_wcount_1, B1=>'X', C1=>'1', 
                D1=>'1', DI1=>wifi_q_fifo_dc_iwcount_1, 
                DI0=>wifi_q_fifo_dc_iwcount_0, A0=>wifi_q_fifo_dc_wcount_0, 
                B0=>'X', C0=>'1', D0=>'1', FCI=>wifi_q_fifo_dc_w_gctr_ci, 
                M0=>'X', CE=>wifi_q_fifo_dc_wren_i, CLK=>sdr_rxclk_c, LSR=>'X', 
                FCO=>wifi_q_fifo_dc_co0, F1=>wifi_q_fifo_dc_iwcount_1, 
                Q1=>wifi_q_fifo_dc_wcount_1, F0=>wifi_q_fifo_dc_iwcount_0, 
                Q0=>wifi_q_fifo_dc_wcount_0);
    wifi_q_fifo_dc_SLICE_72I: SCCU2C
      generic map (CLKMUX=>"SIG", CEMUX=>"SIG", CCU2_INJECT1_0=>"NO", 
                   CCU2_INJECT1_1=>"NO", SRMODE=>"ASYNC", 
                   INIT0_INITVAL=>X"AAAA", INIT1_INITVAL=>X"0000", 
                   REG0_SD=>"VHI", CHECK_DI0=>TRUE, CHECK_CE=>TRUE)
      port map (M1=>'X', A1=>'X', B1=>'X', C1=>'1', D1=>'1', DI1=>'X', 
                DI0=>wifi_q_fifo_dc_iwcount_2, A0=>wifi_q_fifo_dc_wcount_2, 
                B0=>'X', C0=>'1', D0=>'1', FCI=>wifi_q_fifo_dc_co0, M0=>'X', 
                CE=>wifi_q_fifo_dc_wren_i, CLK=>sdr_rxclk_c, LSR=>'X', 
                FCO=>open, F1=>open, Q1=>open, F0=>wifi_q_fifo_dc_iwcount_2, 
                Q0=>wifi_q_fifo_dc_wcount_2);
    wifi_q_fifo_dc_SLICE_73I: SCCU2C
      generic map (CCU2_INJECT1_0=>"NO", CCU2_INJECT1_1=>"NO", 
                   INIT0_INITVAL=>X"0000", INIT1_INITVAL=>X"66AA")
      port map (M1=>'X', A1=>'1', B1=>'1', C1=>'1', D1=>'1', DI1=>'X', 
                DI0=>'X', A0=>'X', B0=>'X', C0=>'1', D0=>'1', FCI=>'X', 
                M0=>'X', CE=>'X', CLK=>'X', LSR=>'X', 
                FCO=>wifi_q_fifo_dc_r_gctr_ci, F1=>open, Q1=>open, F0=>open, 
                Q0=>open);
    wifi_q_fifo_dc_SLICE_74I: SCCU2C
      generic map (CLKMUX=>"SIG", CEMUX=>"INV", LSRMUX=>"SIG", 
                   CCU2_INJECT1_0=>"NO", CCU2_INJECT1_1=>"NO", 
                   REG0_REGSET=>"SET", SRMODE=>"ASYNC", INIT0_INITVAL=>X"AAAA", 
                   INIT1_INITVAL=>X"AAAA", REG1_SD=>"VHI", REG0_SD=>"VHI", 
                   CHECK_DI1=>TRUE, CHECK_DI0=>TRUE, CHECK_CE=>TRUE, 
                   CHECK_LSR=>TRUE)
      port map (M1=>'X', A1=>wifi_q_fifo_dc_rcount_1, B1=>'X', C1=>'1', 
                D1=>'1', DI1=>wifi_q_fifo_dc_ircount_1, 
                DI0=>wifi_q_fifo_dc_ircount_0, A0=>wifi_q_fifo_dc_rcount_0, 
                B0=>'X', C0=>'1', D0=>'1', FCI=>wifi_q_fifo_dc_r_gctr_ci, 
                M0=>'X', CE=>wifi_q_empty, CLK=>internal_80MHz, 
                LSR=>main_reset_n_N_208, FCO=>wifi_q_fifo_dc_co0_1, 
                F1=>wifi_q_fifo_dc_ircount_1, Q1=>wifi_q_fifo_dc_rcount_1, 
                F0=>wifi_q_fifo_dc_ircount_0, Q0=>wifi_q_fifo_dc_rcount_0);
    wifi_q_fifo_dc_SLICE_75I: SCCU2C
      generic map (CLKMUX=>"SIG", CEMUX=>"INV", LSRMUX=>"SIG", 
                   CCU2_INJECT1_0=>"NO", CCU2_INJECT1_1=>"NO", SRMODE=>"ASYNC", 
                   INIT0_INITVAL=>X"AAAA", INIT1_INITVAL=>X"0000", 
                   REG0_SD=>"VHI", CHECK_DI0=>TRUE, CHECK_CE=>TRUE, 
                   CHECK_LSR=>TRUE)
      port map (M1=>'X', A1=>'X', B1=>'X', C1=>'1', D1=>'1', DI1=>'X', 
                DI0=>wifi_q_fifo_dc_ircount_2, A0=>wifi_q_fifo_dc_rcount_2, 
                B0=>'X', C0=>'1', D0=>'1', FCI=>wifi_q_fifo_dc_co0_1, M0=>'X', 
                CE=>wifi_q_empty, CLK=>internal_80MHz, LSR=>main_reset_n_N_208, 
                FCO=>open, F1=>open, Q1=>open, F0=>wifi_q_fifo_dc_ircount_2, 
                Q0=>wifi_q_fifo_dc_rcount_2);
    wifi_q_fifo_dc_SLICE_76I: SCCU2C
      generic map (CCU2_INJECT1_0=>"NO", CCU2_INJECT1_1=>"NO", 
                   INIT0_INITVAL=>X"0000", INIT1_INITVAL=>X"66AA")
      port map (M1=>'X', A1=>wifi_q_fifo_dc_rden_i, B1=>wifi_q_fifo_dc_rden_i, 
                C1=>'1', D1=>'1', DI1=>'X', DI0=>'X', A0=>'X', B0=>'X', 
                C0=>'1', D0=>'1', FCI=>'X', M0=>'X', CE=>'X', CLK=>'X', 
                LSR=>'X', FCO=>wifi_q_fifo_dc_cmp_ci, F1=>open, Q1=>open, 
                F0=>open, Q0=>open);
    wifi_q_fifo_dc_SLICE_77I: SCCU2C
      generic map (CCU2_INJECT1_0=>"NO", CCU2_INJECT1_1=>"NO", 
                   INIT0_INITVAL=>X"99AA", INIT1_INITVAL=>X"99AA")
      port map (M1=>'X', A1=>wifi_q_fifo_dc_rcount_1, 
                B1=>wifi_q_fifo_dc_wcount_r1, C1=>'1', D1=>'1', DI1=>'X', 
                DI0=>'X', A0=>wifi_q_fifo_dc_rcount_0, 
                B0=>wifi_q_fifo_dc_wcount_r0, C0=>'1', D0=>'1', 
                FCI=>wifi_q_fifo_dc_cmp_ci, M0=>'X', CE=>'X', CLK=>'X', 
                LSR=>'X', FCO=>wifi_q_fifo_dc_co0_2, F1=>open, Q1=>open, 
                F0=>open, Q0=>open);
    wifi_q_fifo_dc_SLICE_78I: SCCU2C
      generic map (CCU2_INJECT1_0=>"NO", CCU2_INJECT1_1=>"NO", 
                   INIT0_INITVAL=>X"99AA", INIT1_INITVAL=>X"FF00")
      port map (M1=>'X', A1=>'X', B1=>'X', C1=>'1', D1=>'1', DI1=>'X', 
                DI0=>'X', A0=>wifi_q_fifo_dc_empty_cmp_set, 
                B0=>wifi_q_fifo_dc_empty_cmp_clr, C0=>'1', D0=>'1', 
                FCI=>wifi_q_fifo_dc_co0_2, M0=>'X', CE=>'X', CLK=>'X', 
                LSR=>'X', FCO=>wifi_q_fifo_dc_empty_d_c, F1=>open, Q1=>open, 
                F0=>open, Q0=>open);
    wifi_q_fifo_dc_SLICE_79I: SCCU2C
      generic map (CLKMUX=>"SIG", CEMUX=>"VHI", LSRMUX=>"SIG", 
                   CCU2_INJECT1_0=>"NO", CCU2_INJECT1_1=>"NO", 
                   REG0_REGSET=>"SET", SRMODE=>"ASYNC", INIT0_INITVAL=>X"0000", 
                   INIT1_INITVAL=>X"0000", REG0_SD=>"VHI", CHECK_DI0=>TRUE, 
                   CHECK_LSR=>TRUE)
      port map (M1=>'X', A1=>'X', B1=>'X', C1=>'1', D1=>'1', DI1=>'X', 
                DI0=>wifi_q_fifo_dc_empty_d, A0=>'X', B0=>'X', C0=>'1', 
                D0=>'1', FCI=>wifi_q_fifo_dc_empty_d_c, M0=>'X', CE=>'X', 
                CLK=>internal_80MHz, LSR=>main_reset_n_N_208, FCO=>open, 
                F1=>open, Q1=>open, F0=>wifi_q_fifo_dc_empty_d, 
                Q0=>wifi_q_empty);
    wifi_q_fifo_dc_SLICE_80I: SCCU2C
      generic map (CCU2_INJECT1_0=>"NO", CCU2_INJECT1_1=>"NO", 
                   INIT0_INITVAL=>X"0000", INIT1_INITVAL=>X"66AA")
      port map (M1=>'X', A1=>wifi_q_fifo_dc_wren_i, B1=>wifi_q_fifo_dc_wren_i, 
                C1=>'1', D1=>'1', DI1=>'X', DI0=>'X', A0=>'X', B0=>'X', 
                C0=>'1', D0=>'1', FCI=>'X', M0=>'X', CE=>'X', CLK=>'X', 
                LSR=>'X', FCO=>wifi_q_fifo_dc_cmp_ci_1, F1=>open, Q1=>open, 
                F0=>open, Q0=>open);
    wifi_q_fifo_dc_SLICE_81I: SCCU2C
      generic map (CCU2_INJECT1_0=>"NO", CCU2_INJECT1_1=>"NO", 
                   INIT0_INITVAL=>X"99AA", INIT1_INITVAL=>X"99AA")
      port map (M1=>'X', A1=>wifi_q_fifo_dc_wcount_1, 
                B1=>wifi_q_fifo_dc_rcount_w1, C1=>'1', D1=>'1', DI1=>'X', 
                DI0=>'X', A0=>wifi_q_fifo_dc_wcount_0, 
                B0=>wifi_q_fifo_dc_rcount_w0, C0=>'1', D0=>'1', 
                FCI=>wifi_q_fifo_dc_cmp_ci_1, M0=>'X', CE=>'X', CLK=>'X', 
                LSR=>'X', FCO=>wifi_q_fifo_dc_co0_3, F1=>open, Q1=>open, 
                F0=>open, Q0=>open);
    wifi_q_fifo_dc_SLICE_82I: SCCU2C
      generic map (CCU2_INJECT1_0=>"NO", CCU2_INJECT1_1=>"NO", 
                   INIT0_INITVAL=>X"99AA", INIT1_INITVAL=>X"FF00")
      port map (M1=>'X', A1=>'X', B1=>'X', C1=>'1', D1=>'1', DI1=>'X', 
                DI0=>'X', A0=>wifi_q_fifo_dc_full_cmp_set, 
                B0=>wifi_q_fifo_dc_full_cmp_clr, C0=>'1', D0=>'1', 
                FCI=>wifi_q_fifo_dc_co0_3, M0=>'X', CE=>'X', CLK=>'X', 
                LSR=>'X', FCO=>wifi_q_fifo_dc_full_d_c, F1=>open, Q1=>open, 
                F0=>open, Q0=>open);
    wifi_q_fifo_dc_SLICE_83I: SCCU2C
      generic map (CLKMUX=>"SIG", CEMUX=>"VHI", CCU2_INJECT1_0=>"NO", 
                   CCU2_INJECT1_1=>"NO", SRMODE=>"ASYNC", 
                   INIT0_INITVAL=>X"0000", INIT1_INITVAL=>X"0000", 
                   REG0_SD=>"VHI", CHECK_DI0=>TRUE)
      port map (M1=>'X', A1=>'X', B1=>'X', C1=>'1', D1=>'1', DI1=>'X', 
                DI0=>wifi_q_fifo_dc_full_d, A0=>'X', B0=>'X', C0=>'1', D0=>'1', 
                FCI=>wifi_q_fifo_dc_full_d_c, M0=>'X', CE=>'X', 
                CLK=>sdr_rxclk_c, LSR=>'X', FCO=>open, F1=>open, Q1=>open, 
                F0=>wifi_q_fifo_dc_full_d, Q0=>wifi_q_fifo_dc_Full);
    SLICE_84I: SLOGICB
      generic map (CLKMUX=>"SIG", CEMUX=>"SIG", LSRMUX=>"SIG", GSR=>"DISABLED", 
                   LUT0_INITVAL=>X"CCAC", LUT1_INITVAL=>X"C8C8", 
                   REG0_SD=>"VHI", CHECK_DI0=>TRUE, CHECK_CE=>TRUE, 
                   CHECK_LSR=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', 
                A1=>i2c_slave_i2c_slave_inst_state_reg_1, 
                B1=>stm_fpga_spare5_c, 
                C1=>i2c_slave_i2c_slave_inst_state_reg_2, D1=>'X', DI1=>'X', 
                DI0=>n13400, A0=>bus_addressed, B0=>state_reg_0, C0=>n13324, 
                D0=>n14324, M0=>'X', 
                CE=>i2c_slave_i2c_slave_inst_int_clk_out_enable_1, 
                CLK=>int_clk_out, LSR=>i2c_slave_i2c_slave_inst_n6297, 
                OFX1=>open, F1=>n13324, Q1=>open, OFX0=>open, F0=>n13400, 
                Q0=>bus_addressed);
    my_led_SLICE_85I: SLOGICB
      generic map (CLKMUX=>"SIG", CEMUX=>"VHI", LSRMUX=>"SIG", GSR=>"DISABLED", 
                   SRMODE=>"ASYNC", LUT0_INITVAL=>X"9999", 
                   LUT1_INITVAL=>X"FFFD", REG0_SD=>"VHI", CHECK_DI0=>TRUE, 
                   CHECK_LSR=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>my_led_n13348, 
                B1=>my_led_n12946, C1=>my_led_n12948, D1=>my_led_n12942, 
                DI1=>'X', DI0=>my_led_led_N_536, A0=>fpga_led_c, 
                B0=>my_led_n51, C0=>'X', D0=>'X', M0=>'X', CE=>'X', 
                CLK=>int_clk_out, LSR=>fpga_led_N_383, OFX1=>open, 
                F1=>my_led_n51, Q1=>open, OFX0=>open, F0=>my_led_led_N_536, 
                Q0=>fpga_led_c);
    i2c_slave_i2c_slave_inst_SLICE_86I: SLOGICB
      generic map (CLKMUX=>"SIG", CEMUX=>"SIG", LSRMUX=>"INV", 
                   REG0_REGSET=>"SET", GSR=>"DISABLED", LUT0_INITVAL=>X"FD0D", 
                   REG0_SD=>"VHI", CHECK_DI0=>TRUE, CHECK_CE=>TRUE, 
                   CHECK_LSR=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', 
                DI0=>i2c_slave_i2c_slave_inst_scl_o_next_N_961, 
                A0=>i2c_slave_data_out_valid, B0=>i2c_slave_data_out_ready_reg, 
                C0=>i2c_slave_i2c_slave_inst_state_reg_2, 
                D0=>i2c_slave_i2c_slave_inst_data_valid_reg, M0=>'X', 
                CE=>i2c_slave_i2c_slave_inst_int_clk_out_enable_34, 
                CLK=>int_clk_out, LSR=>stm_fpga_spare5_c, OFX1=>open, F1=>open, 
                Q1=>open, OFX0=>open, 
                F0=>i2c_slave_i2c_slave_inst_scl_o_next_N_961, 
                Q0=>fpga_scl_out);
    i2c_slave_i2c_slave_inst_SLICE_87I: SLOGICB
      generic map (CLKMUX=>"SIG", CEMUX=>"SIG", LSRMUX=>"INV", 
                   REG0_REGSET=>"SET", GSR=>"DISABLED", LUT0_INITVAL=>X"FACA", 
                   LUT1_INITVAL=>X"B0B0", REG0_SD=>"VHI", CHECK_DI0=>TRUE, 
                   CHECK_CE=>TRUE, CHECK_LSR=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', 
                A1=>i2c_slave_i2c_slave_inst_state_reg_1, 
                B1=>i2c_slave_i2c_slave_inst_state_reg_2, C1=>state_reg_0, 
                D1=>'X', DI1=>'X', 
                DI0=>i2c_slave_i2c_slave_inst_sda_o_next_N_968, 
                A0=>state_reg_0, B0=>i2c_slave_i2c_slave_inst_data_reg_7, 
                C0=>i2c_slave_i2c_slave_inst_state_reg_2, 
                D0=>i2c_slave_i2c_slave_inst_state_reg_1, M0=>'X', 
                CE=>i2c_slave_i2c_slave_inst_int_clk_out_enable_35, 
                CLK=>int_clk_out, LSR=>stm_fpga_spare5_c, OFX1=>open, 
                F1=>i2c_slave_i2c_slave_inst_n6_adj_1177, Q1=>open, OFX0=>open, 
                F0=>i2c_slave_i2c_slave_inst_sda_o_next_N_968, 
                Q0=>fpga_sda_out);
    i2c_slave_SLICE_88I: SLOGICB
      generic map (M0MUX=>"SIG", CLKMUX=>"SIG", CEMUX=>"SIG", GSR=>"DISABLED", 
                   SRMODE=>"ASYNC", LUT0_INITVAL=>X"5073", 
                   LUT1_INITVAL=>X"0404", REG0_SD=>"VHI", CHECK_DI0=>TRUE, 
                   CHECK_CE=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>i2c_slave_count_reg_0, 
                B1=>i2c_slave_n14298, C1=>i2c_slave_data_out_last, D1=>'X', 
                DI1=>'X', DI0=>i2c_slave_n14412, A0=>i2c_slave_count_reg_0, 
                B0=>i2c_slave_n1526, C0=>i2c_slave_n14298, D0=>i2c_slave_n1528, 
                M0=>i2c_slave_n1525, CE=>i2c_slave_int_clk_out_enable_157, 
                CLK=>int_clk_out, LSR=>'X', OFX1=>open, F1=>open, Q1=>open, 
                OFX0=>i2c_slave_n14412, F0=>open, Q0=>i2c_slave_count_reg_0);
    i2c_slave_SLICE_89I: SLOGICB
      generic map (CLKMUX=>"SIG", CEMUX=>"SIG", GSR=>"DISABLED", 
                   SRMODE=>"ASYNC", LUT0_INITVAL=>X"8580", 
                   LUT1_INITVAL=>X"6666", REG0_SD=>"VHI", CHECK_DI0=>TRUE, 
                   CHECK_CE=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>i2c_slave_count_reg_1, 
                B1=>i2c_slave_count_reg_0, C1=>'X', D1=>'X', DI1=>'X', 
                DI0=>i2c_slave_n11253, A0=>i2c_slave_n581, 
                B0=>i2c_slave_n14277, C0=>i2c_slave_n3934, 
                D0=>i2c_slave_n14276, M0=>'X', 
                CE=>i2c_slave_int_clk_out_enable_157, CLK=>int_clk_out, 
                LSR=>'X', OFX1=>open, F1=>i2c_slave_n581, Q1=>open, OFX0=>open, 
                F0=>i2c_slave_n11253, Q0=>i2c_slave_count_reg_1);
    i2c_slave_SLICE_90I: SLOGICB
      generic map (M0MUX=>"SIG", CLKMUX=>"SIG", CEMUX=>"SIG", GSR=>"DISABLED", 
                   SRMODE=>"ASYNC", LUT0_INITVAL=>X"8008", 
                   LUT1_INITVAL=>X"6A00", REG0_SD=>"VHI", CHECK_DI0=>TRUE, 
                   CHECK_CE=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>i2c_slave_count_reg_2, 
                B1=>i2c_slave_count_reg_1, C1=>i2c_slave_count_reg_0, 
                D1=>i2c_slave_n14277, DI1=>'X', DI0=>i2c_slave_n3941, 
                A0=>i2c_slave_n1528, B0=>i2c_slave_n14298, C0=>i2c_slave_n3, 
                D0=>i2c_slave_count_reg_2, M0=>i2c_slave_n3934, 
                CE=>i2c_slave_int_clk_out_enable_157, CLK=>int_clk_out, 
                LSR=>'X', OFX1=>open, F1=>open, Q1=>open, 
                OFX0=>i2c_slave_n3941, F0=>open, Q0=>i2c_slave_count_reg_2);
    i2c_slave_SLICE_91I: SLOGICB
      generic map (M0MUX=>"SIG", CLKMUX=>"SIG", CEMUX=>"SIG", GSR=>"DISABLED", 
                   SRMODE=>"ASYNC", LUT0_INITVAL=>X"8882", 
                   LUT1_INITVAL=>X"6A00", REG0_SD=>"VHI", CHECK_DI0=>TRUE, 
                   CHECK_CE=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>i2c_slave_count_reg_3, 
                B1=>i2c_slave_count_reg_2, C1=>i2c_slave_n14335, 
                D1=>i2c_slave_n14277, DI1=>'X', DI0=>i2c_slave_n3940, 
                A0=>i2c_slave_n14276, B0=>i2c_slave_count_reg_3, 
                C0=>i2c_slave_n14336, D0=>i2c_slave_count_reg_0, 
                M0=>i2c_slave_n3934, CE=>i2c_slave_int_clk_out_enable_157, 
                CLK=>int_clk_out, LSR=>'X', OFX1=>open, F1=>open, Q1=>open, 
                OFX0=>i2c_slave_n3940, F0=>open, Q0=>i2c_slave_count_reg_3);
    i2c_slave_SLICE_92I: SLOGICB
      generic map (M0MUX=>"SIG", CLKMUX=>"SIG", CEMUX=>"SIG", GSR=>"DISABLED", 
                   SRMODE=>"ASYNC", LUT0_INITVAL=>X"C084", 
                   LUT1_INITVAL=>X"6A00", REG0_SD=>"VHI", CHECK_DI0=>TRUE, 
                   CHECK_CE=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>i2c_slave_count_reg_4, 
                B1=>i2c_slave_count_reg_3, C1=>i2c_slave_n14303, 
                D1=>i2c_slave_n14277, DI1=>'X', DI0=>i2c_slave_n11183, 
                A0=>i2c_slave_n3, B0=>i2c_slave_n14276, 
                C0=>i2c_slave_count_reg_4, D0=>i2c_slave_n14388, 
                M0=>i2c_slave_n3934, CE=>i2c_slave_int_clk_out_enable_157, 
                CLK=>int_clk_out, LSR=>'X', OFX1=>open, F1=>open, Q1=>open, 
                OFX0=>i2c_slave_n11183, F0=>open, Q0=>i2c_slave_count_reg_4);
    i2c_slave_SLICE_93I: SLOGICB
      generic map (M0MUX=>"SIG", CLKMUX=>"SIG", CEMUX=>"SIG", GSR=>"DISABLED", 
                   SRMODE=>"ASYNC", LUT0_INITVAL=>X"8882", 
                   LUT1_INITVAL=>X"6A00", REG0_SD=>"VHI", CHECK_DI0=>TRUE, 
                   CHECK_CE=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>i2c_slave_count_reg_5, 
                B1=>i2c_slave_count_reg_4, C1=>i2c_slave_n14281, 
                D1=>i2c_slave_n14277, DI1=>'X', DI0=>i2c_slave_n3938, 
                A0=>i2c_slave_n14276, B0=>i2c_slave_count_reg_5, 
                C0=>i2c_slave_n13090, D0=>i2c_slave_n14378, 
                M0=>i2c_slave_n3934, CE=>i2c_slave_int_clk_out_enable_157, 
                CLK=>int_clk_out, LSR=>'X', OFX1=>open, F1=>open, Q1=>open, 
                OFX0=>i2c_slave_n3938, F0=>open, Q0=>i2c_slave_count_reg_5);
    i2c_slave_SLICE_94I: SLOGICB
      generic map (M0MUX=>"SIG", CLKMUX=>"SIG", CEMUX=>"SIG", GSR=>"DISABLED", 
                   SRMODE=>"ASYNC", LUT0_INITVAL=>X"8882", 
                   LUT1_INITVAL=>X"6A00", REG0_SD=>"VHI", CHECK_DI0=>TRUE, 
                   CHECK_CE=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>i2c_slave_count_reg_6, 
                B1=>i2c_slave_count_reg_5, C1=>i2c_slave_n14272, 
                D1=>i2c_slave_n14277, DI1=>'X', DI0=>i2c_slave_n3937, 
                A0=>i2c_slave_n14276, B0=>i2c_slave_count_reg_6, 
                C0=>i2c_slave_n13098, D0=>i2c_slave_n3, M0=>i2c_slave_n3934, 
                CE=>i2c_slave_int_clk_out_enable_157, CLK=>int_clk_out, 
                LSR=>'X', OFX1=>open, F1=>open, Q1=>open, 
                OFX0=>i2c_slave_n3937, F0=>open, Q0=>i2c_slave_count_reg_6);
    i2c_slave_SLICE_95I: SLOGICB
      generic map (M0MUX=>"SIG", CLKMUX=>"SIG", CEMUX=>"SIG", GSR=>"DISABLED", 
                   SRMODE=>"ASYNC", LUT0_INITVAL=>X"C084", 
                   LUT1_INITVAL=>X"4888", REG0_SD=>"VHI", CHECK_DI0=>TRUE, 
                   CHECK_CE=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>i2c_slave_count_reg_7, 
                B1=>i2c_slave_n14277, C1=>i2c_slave_count_reg_6, 
                D1=>i2c_slave_n14267, DI1=>'X', DI0=>i2c_slave_n11149, 
                A0=>i2c_slave_n13214, B0=>i2c_slave_n14276, 
                C0=>i2c_slave_count_reg_7, D0=>i2c_slave_n13212, 
                M0=>i2c_slave_n3934, CE=>i2c_slave_int_clk_out_enable_157, 
                CLK=>int_clk_out, LSR=>'X', OFX1=>open, F1=>open, Q1=>open, 
                OFX0=>i2c_slave_n11149, F0=>open, Q0=>i2c_slave_count_reg_7);
    i2c_slave_i2c_slave_inst_SLICE_96I: SLOGICB
      generic map (CLKMUX=>"SIG", CEMUX=>"VHI", LSRMUX=>"SIG", GSR=>"DISABLED", 
                   LUT0_INITVAL=>X"D1C0", LUT1_INITVAL=>X"0080", 
                   REG0_SD=>"VHI", CHECK_DI0=>TRUE, CHECK_LSR=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', 
                A1=>i2c_slave_i2c_slave_inst_last_scl_i_reg, B1=>mode_read_reg, 
                C1=>i2c_slave_i2c_slave_inst_state_reg_1, 
                D1=>i2c_slave_i2c_slave_inst_scl_i_reg, DI1=>'X', 
                DI0=>i2c_slave_i2c_slave_inst_s_axis_data_tready_next_N_934, 
                A0=>state_reg_0, B0=>i2c_slave_i2c_slave_inst_state_reg_2, 
                C0=>i2c_slave_i2c_slave_inst_n6, 
                D0=>i2c_slave_i2c_slave_inst_n13244, M0=>'X', CE=>'X', 
                CLK=>int_clk_out, LSR=>i2c_slave_i2c_slave_inst_n6297, 
                OFX1=>open, F1=>i2c_slave_i2c_slave_inst_n13244, Q1=>open, 
                OFX0=>open, 
                F0=>i2c_slave_i2c_slave_inst_s_axis_data_tready_next_N_934, 
                Q0=>i2c_slave_data_in_ready);
    i2c_slave_SLICE_97I: SLOGICB
      generic map (CLKMUX=>"SIG", CEMUX=>"VHI", LSRMUX=>"INV", GSR=>"DISABLED", 
                   LUT0_INITVAL=>X"2000", REG0_SD=>"VHI", CHECK_DI0=>TRUE, 
                   CHECK_LSR=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>i2c_slave_n2323, 
                A0=>i2c_slave_data_in_ready, B0=>i2c_slave_data_in_valid_reg, 
                C0=>i2c_slave_n1526, D0=>i2c_slave_n14340, M0=>'X', CE=>'X', 
                CLK=>int_clk_out, LSR=>wb_dat_o_0, OFX1=>open, F1=>open, 
                Q1=>open, OFX0=>open, F0=>i2c_slave_n2323, 
                Q0=>i2c_slave_data_in_reg_0);
    i2c_slave_SLICE_98I: SLOGICB
      generic map (M0MUX=>"SIG", CLKMUX=>"SIG", CEMUX=>"VHI", LSRMUX=>"INV", 
                   GSR=>"DISABLED", CHECK_M0=>TRUE, CHECK_LSR=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>'X', B0=>'X', C0=>'X', 
                D0=>'X', M0=>i2c_slave_n2323, CE=>'X', CLK=>int_clk_out, 
                LSR=>wb_dat_o_1, OFX1=>open, F1=>open, Q1=>open, OFX0=>open, 
                F0=>open, Q0=>i2c_slave_data_in_reg_1);
    i2c_slave_SLICE_99I: SLOGICB
      generic map (M0MUX=>"SIG", CLKMUX=>"SIG", CEMUX=>"VHI", LSRMUX=>"INV", 
                   GSR=>"DISABLED", CHECK_M0=>TRUE, CHECK_LSR=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>'X', B0=>'X', C0=>'X', 
                D0=>'X', M0=>i2c_slave_n2323, CE=>'X', CLK=>int_clk_out, 
                LSR=>wb_dat_o_2, OFX1=>open, F1=>open, Q1=>open, OFX0=>open, 
                F0=>open, Q0=>i2c_slave_data_in_reg_2);
    i2c_slave_SLICE_100I: SLOGICB
      generic map (M0MUX=>"SIG", CLKMUX=>"SIG", CEMUX=>"VHI", LSRMUX=>"INV", 
                   GSR=>"DISABLED", CHECK_M0=>TRUE, CHECK_LSR=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>'X', B0=>'X', C0=>'X', 
                D0=>'X', M0=>i2c_slave_n2323, CE=>'X', CLK=>int_clk_out, 
                LSR=>wb_dat_o_3, OFX1=>open, F1=>open, Q1=>open, OFX0=>open, 
                F0=>open, Q0=>i2c_slave_data_in_reg_3);
    i2c_slave_SLICE_101I: SLOGICB
      generic map (M0MUX=>"SIG", CLKMUX=>"SIG", CEMUX=>"VHI", LSRMUX=>"INV", 
                   GSR=>"DISABLED", CHECK_M0=>TRUE, CHECK_LSR=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>'X', B0=>'X', C0=>'X', 
                D0=>'X', M0=>i2c_slave_n2323, CE=>'X', CLK=>int_clk_out, 
                LSR=>wb_dat_o_4, OFX1=>open, F1=>open, Q1=>open, OFX0=>open, 
                F0=>open, Q0=>i2c_slave_data_in_reg_4);
    i2c_slave_SLICE_102I: SLOGICB
      generic map (M0MUX=>"SIG", CLKMUX=>"SIG", CEMUX=>"VHI", LSRMUX=>"INV", 
                   GSR=>"DISABLED", CHECK_M0=>TRUE, CHECK_LSR=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>'X', B0=>'X', C0=>'X', 
                D0=>'X', M0=>i2c_slave_n2323, CE=>'X', CLK=>int_clk_out, 
                LSR=>wb_dat_o_5, OFX1=>open, F1=>open, Q1=>open, OFX0=>open, 
                F0=>open, Q0=>i2c_slave_data_in_reg_5);
    i2c_slave_SLICE_103I: SLOGICB
      generic map (M0MUX=>"SIG", CLKMUX=>"SIG", CEMUX=>"VHI", LSRMUX=>"INV", 
                   GSR=>"DISABLED", CHECK_M0=>TRUE, CHECK_LSR=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>'X', B0=>'X', C0=>'X', 
                D0=>'X', M0=>i2c_slave_n2323, CE=>'X', CLK=>int_clk_out, 
                LSR=>wb_dat_o_6, OFX1=>open, F1=>open, Q1=>open, OFX0=>open, 
                F0=>open, Q0=>i2c_slave_data_in_reg_6);
    i2c_slave_SLICE_104I: SLOGICB
      generic map (M0MUX=>"SIG", CLKMUX=>"SIG", CEMUX=>"VHI", LSRMUX=>"INV", 
                   GSR=>"DISABLED", CHECK_M0=>TRUE, CHECK_LSR=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>'X', B0=>'X', C0=>'X', 
                D0=>'X', M0=>i2c_slave_n2323, CE=>'X', CLK=>int_clk_out, 
                LSR=>wb_dat_o_7, OFX1=>open, F1=>open, Q1=>open, OFX0=>open, 
                F0=>open, Q0=>i2c_slave_data_in_reg_7);
    i2c_slave_SLICE_105I: SLOGICB
      generic map (CLKMUX=>"SIG", CEMUX=>"VHI", LSRMUX=>"SIG", GSR=>"DISABLED", 
                   LUT0_INITVAL=>X"2222", REG0_SD=>"VHI", CHECK_DI0=>TRUE, 
                   CHECK_LSR=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>i2c_slave_n14339, 
                A0=>i2c_slave_data_in_ready, B0=>i2c_slave_data_in_valid_reg, 
                C0=>'X', D0=>'X', M0=>'X', CE=>'X', CLK=>int_clk_out, 
                LSR=>i2c_slave_n12324, OFX1=>open, F1=>open, Q1=>open, 
                OFX0=>open, F0=>i2c_slave_n14339, 
                Q0=>i2c_slave_data_in_valid_reg);
    i2c_slave_i2c_slave_inst_SLICE_106I: SLOGICB
      generic map (M0MUX=>"SIG", M1MUX=>"SIG", CLKMUX=>"SIG", CEMUX=>"SIG", 
                   GSR=>"DISABLED", SRMODE=>"ASYNC", CHECK_M1=>TRUE, 
                   CHECK_M0=>TRUE, CHECK_CE=>TRUE)
      port map (M1=>i2c_slave_i2c_slave_inst_data_reg_1, FXA=>'X', FXB=>'X', 
                A1=>'X', B1=>'X', C1=>'X', D1=>'X', DI1=>'X', DI0=>'X', 
                A0=>'X', B0=>'X', C0=>'X', D0=>'X', 
                M0=>i2c_slave_i2c_slave_inst_data_reg_0, 
                CE=>i2c_slave_i2c_slave_inst_int_clk_out_enable_195, 
                CLK=>int_clk_out, LSR=>'X', OFX1=>open, F1=>open, 
                Q1=>i2c_slave_data_out_1, OFX0=>open, F0=>open, 
                Q0=>i2c_slave_data_out_0);
    i2c_slave_i2c_slave_inst_SLICE_107I: SLOGICB
      generic map (M0MUX=>"SIG", M1MUX=>"SIG", CLKMUX=>"SIG", CEMUX=>"SIG", 
                   GSR=>"DISABLED", SRMODE=>"ASYNC", CHECK_M1=>TRUE, 
                   CHECK_M0=>TRUE, CHECK_CE=>TRUE)
      port map (M1=>i2c_slave_i2c_slave_inst_data_reg_3, FXA=>'X', FXB=>'X', 
                A1=>'X', B1=>'X', C1=>'X', D1=>'X', DI1=>'X', DI0=>'X', 
                A0=>'X', B0=>'X', C0=>'X', D0=>'X', 
                M0=>i2c_slave_i2c_slave_inst_data_reg_2, 
                CE=>i2c_slave_i2c_slave_inst_int_clk_out_enable_195, 
                CLK=>int_clk_out, LSR=>'X', OFX1=>open, F1=>open, 
                Q1=>i2c_slave_data_out_3, OFX0=>open, F0=>open, 
                Q0=>i2c_slave_data_out_2);
    i2c_slave_i2c_slave_inst_SLICE_108I: SLOGICB
      generic map (M0MUX=>"SIG", M1MUX=>"SIG", CLKMUX=>"SIG", CEMUX=>"SIG", 
                   GSR=>"DISABLED", SRMODE=>"ASYNC", CHECK_M1=>TRUE, 
                   CHECK_M0=>TRUE, CHECK_CE=>TRUE)
      port map (M1=>i2c_slave_i2c_slave_inst_data_reg_5, FXA=>'X', FXB=>'X', 
                A1=>'X', B1=>'X', C1=>'X', D1=>'X', DI1=>'X', DI0=>'X', 
                A0=>'X', B0=>'X', C0=>'X', D0=>'X', 
                M0=>i2c_slave_i2c_slave_inst_data_reg_4, 
                CE=>i2c_slave_i2c_slave_inst_int_clk_out_enable_195, 
                CLK=>int_clk_out, LSR=>'X', OFX1=>open, F1=>open, 
                Q1=>i2c_slave_data_out_5, OFX0=>open, F0=>open, 
                Q0=>i2c_slave_data_out_4);
    i2c_slave_i2c_slave_inst_SLICE_109I: SLOGICB
      generic map (M0MUX=>"SIG", M1MUX=>"SIG", CLKMUX=>"SIG", CEMUX=>"SIG", 
                   GSR=>"DISABLED", SRMODE=>"ASYNC", CHECK_M1=>TRUE, 
                   CHECK_M0=>TRUE, CHECK_CE=>TRUE)
      port map (M1=>i2c_slave_i2c_slave_inst_data_reg_7, FXA=>'X', FXB=>'X', 
                A1=>'X', B1=>'X', C1=>'X', D1=>'X', DI1=>'X', DI0=>'X', 
                A0=>'X', B0=>'X', C0=>'X', D0=>'X', 
                M0=>i2c_slave_i2c_slave_inst_data_reg_6, 
                CE=>i2c_slave_i2c_slave_inst_int_clk_out_enable_195, 
                CLK=>int_clk_out, LSR=>'X', OFX1=>open, F1=>open, 
                Q1=>i2c_slave_data_out_7, OFX0=>open, F0=>open, 
                Q0=>i2c_slave_data_out_6);
    i2c_slave_i2c_slave_inst_SLICE_110I: SLOGICB
      generic map (CLKMUX=>"SIG", CEMUX=>"VHI", LSRMUX=>"SIG", 
                   REG0_REGSET=>"SET", GSR=>"DISABLED", LUT0_INITVAL=>X"F040", 
                   LUT1_INITVAL=>X"EFFF", REG0_SD=>"VHI", CHECK_DI0=>TRUE, 
                   CHECK_LSR=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', 
                A1=>i2c_slave_i2c_slave_inst_n14375, 
                B1=>i2c_slave_i2c_slave_inst_n14372, C1=>state_reg_0, 
                D1=>i2c_slave_i2c_slave_inst_data_valid_reg, DI1=>'X', 
                DI0=>i2c_slave_i2c_slave_inst_n7314, 
                A0=>i2c_slave_i2c_slave_inst_n14367, B0=>fpga_scl_out, 
                C0=>i2c_slave_data_out_last, 
                D0=>i2c_slave_i2c_slave_inst_n12664, M0=>'X', CE=>'X', 
                CLK=>int_clk_out, LSR=>n14324, OFX1=>open, 
                F1=>i2c_slave_i2c_slave_inst_n12664, Q1=>open, OFX0=>open, 
                F0=>i2c_slave_i2c_slave_inst_n7314, 
                Q0=>i2c_slave_data_out_last);
    i2c_slave_SLICE_111I: SLOGICB
      generic map (CLKMUX=>"SIG", CEMUX=>"VHI", LSRMUX=>"INV", GSR=>"DISABLED", 
                   LUT0_INITVAL=>X"EEEE", REG0_SD=>"VHI", CHECK_DI0=>TRUE, 
                   CHECK_LSR=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>i2c_slave_data_out_ready_next, 
                A0=>i2c_slave_n1528, B0=>i2c_slave_n1525, C0=>'X', D0=>'X', 
                M0=>'X', CE=>'X', CLK=>int_clk_out, LSR=>stm_fpga_spare5_c, 
                OFX1=>open, F1=>open, Q1=>open, OFX0=>open, 
                F0=>i2c_slave_data_out_ready_next, 
                Q0=>i2c_slave_data_out_ready_reg);
    i2c_slave_i2c_slave_inst_SLICE_112I: SLOGICB
      generic map (CLKMUX=>"SIG", CEMUX=>"VHI", LSRMUX=>"INV", GSR=>"DISABLED", 
                   LUT0_INITVAL=>X"AACA", LUT1_INITVAL=>X"2222", 
                   REG0_SD=>"VHI", CHECK_DI0=>TRUE, CHECK_LSR=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>i2c_slave_data_out_valid, 
                B1=>i2c_slave_data_out_ready_reg, C1=>'X', D1=>'X', DI1=>'X', 
                DI0=>i2c_slave_i2c_slave_inst_m_axis_data_tvalid_next, 
                A0=>i2c_slave_i2c_slave_inst_data_out_reg_valid_reg, 
                B0=>i2c_slave_i2c_slave_inst_n14372, 
                C0=>i2c_slave_i2c_slave_inst_n6480, D0=>n14324, M0=>'X', 
                CE=>'X', CLK=>int_clk_out, LSR=>stm_fpga_spare5_c, OFX1=>open, 
                F1=>i2c_slave_i2c_slave_inst_n14372, Q1=>open, OFX0=>open, 
                F0=>i2c_slave_i2c_slave_inst_m_axis_data_tvalid_next, 
                Q0=>i2c_slave_data_out_valid);
    i2c_slave_i2c_slave_inst_SLICE_113I: SLOGICB
      generic map (CLKMUX=>"SIG", CEMUX=>"SIG", GSR=>"DISABLED", 
                   SRMODE=>"ASYNC", LUT0_INITVAL=>X"EFFE", 
                   LUT1_INITVAL=>X"FEFD", REG1_SD=>"VHI", REG0_SD=>"VHI", 
                   CHECK_DI1=>TRUE, CHECK_DI0=>TRUE, CHECK_CE=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', 
                A1=>i2c_slave_i2c_slave_inst_bit_count_reg_1, 
                B1=>i2c_slave_i2c_slave_inst_n4111, 
                C1=>i2c_slave_i2c_slave_inst_start_bit, 
                D1=>i2c_slave_i2c_slave_inst_n14308, 
                DI1=>i2c_slave_i2c_slave_inst_bit_count_next_1, 
                DI0=>i2c_slave_i2c_slave_inst_bit_count_next_0, 
                A0=>i2c_slave_i2c_slave_inst_start_bit, 
                B0=>i2c_slave_i2c_slave_inst_n4111, 
                C0=>i2c_slave_i2c_slave_inst_n14370, 
                D0=>i2c_slave_i2c_slave_inst_bit_count_reg_0, M0=>'X', 
                CE=>i2c_slave_i2c_slave_inst_int_clk_out_enable_180, 
                CLK=>int_clk_out, LSR=>'X', OFX1=>open, 
                F1=>i2c_slave_i2c_slave_inst_bit_count_next_1, 
                Q1=>i2c_slave_i2c_slave_inst_bit_count_reg_1, OFX0=>open, 
                F0=>i2c_slave_i2c_slave_inst_bit_count_next_0, 
                Q0=>i2c_slave_i2c_slave_inst_bit_count_reg_0);
    i2c_slave_i2c_slave_inst_SLICE_114I: SLOGICB
      generic map (CLKMUX=>"SIG", CEMUX=>"SIG", GSR=>"DISABLED", 
                   SRMODE=>"ASYNC", LUT0_INITVAL=>X"FEFD", 
                   LUT1_INITVAL=>X"4040", REG0_SD=>"VHI", CHECK_DI0=>TRUE, 
                   CHECK_CE=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>sda_i_reg, 
                B1=>i2c_slave_i2c_slave_inst_last_sda_i_reg, 
                C1=>i2c_slave_i2c_slave_inst_scl_i_reg, D1=>'X', DI1=>'X', 
                DI0=>i2c_slave_i2c_slave_inst_bit_count_next_2, 
                A0=>i2c_slave_i2c_slave_inst_bit_count_reg_2, 
                B0=>i2c_slave_i2c_slave_inst_n4111, 
                C0=>i2c_slave_i2c_slave_inst_start_bit, 
                D0=>i2c_slave_i2c_slave_inst_n4_adj_1178, M0=>'X', 
                CE=>i2c_slave_i2c_slave_inst_int_clk_out_enable_180, 
                CLK=>int_clk_out, LSR=>'X', OFX1=>open, 
                F1=>i2c_slave_i2c_slave_inst_start_bit, Q1=>open, OFX0=>open, 
                F0=>i2c_slave_i2c_slave_inst_bit_count_next_2, 
                Q0=>i2c_slave_i2c_slave_inst_bit_count_reg_2);
    i2c_slave_i2c_slave_inst_SLICE_115I: SLOGICB
      generic map (CLKMUX=>"SIG", CEMUX=>"SIG", LSRMUX=>"SIG", GSR=>"DISABLED", 
                   LUT0_INITVAL=>X"2221", LUT1_INITVAL=>X"FCFD", 
                   REG0_SD=>"VHI", CHECK_DI0=>TRUE, CHECK_CE=>TRUE, 
                   CHECK_LSR=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', 
                A1=>i2c_slave_i2c_slave_inst_bit_count_reg_2, 
                B1=>i2c_slave_i2c_slave_inst_bit_count_reg_1, 
                C1=>i2c_slave_i2c_slave_inst_bit_count_reg_0, 
                D1=>i2c_slave_i2c_slave_inst_bit_count_reg_3, DI1=>'X', 
                DI0=>i2c_slave_i2c_slave_inst_n9276, 
                A0=>i2c_slave_i2c_slave_inst_bit_count_reg_3, 
                B0=>i2c_slave_i2c_slave_inst_n4111, 
                C0=>i2c_slave_i2c_slave_inst_bit_count_reg_2, 
                D0=>i2c_slave_i2c_slave_inst_n4_adj_1178, M0=>'X', 
                CE=>i2c_slave_i2c_slave_inst_int_clk_out_enable_181, 
                CLK=>int_clk_out, LSR=>i2c_slave_i2c_slave_inst_start_bit, 
                OFX1=>open, F1=>i2c_slave_i2c_slave_inst_n4_adj_1178, Q1=>open, 
                OFX0=>open, F0=>i2c_slave_i2c_slave_inst_n9276, 
                Q0=>i2c_slave_i2c_slave_inst_bit_count_reg_3);
    i2c_slave_i2c_slave_inst_SLICE_116I: SLOGICB
      generic map (CLKMUX=>"SIG", CEMUX=>"SIG", GSR=>"DISABLED", 
                   SRMODE=>"ASYNC", LUT0_INITVAL=>X"0200", 
                   LUT1_INITVAL=>X"4F4F", REG0_SD=>"VHI", CHECK_DI0=>TRUE, 
                   CHECK_CE=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', 
                A1=>i2c_slave_i2c_slave_inst_scl_i_reg, 
                B1=>i2c_slave_i2c_slave_inst_last_scl_i_reg, C1=>fpga_scl_out, 
                D1=>'X', DI1=>'X', DI0=>i2c_slave_i2c_slave_inst_n12272, 
                A0=>i2c_slave_i2c_slave_inst_n14318, B0=>n14324, 
                C0=>i2c_slave_i2c_slave_inst_n14372, 
                D0=>i2c_slave_i2c_slave_inst_n12668, M0=>'X', 
                CE=>i2c_slave_i2c_slave_inst_int_clk_out_enable_25, 
                CLK=>int_clk_out, LSR=>'X', OFX1=>open, 
                F1=>i2c_slave_i2c_slave_inst_n14318, Q1=>open, OFX0=>open, 
                F0=>i2c_slave_i2c_slave_inst_n12272, 
                Q0=>i2c_slave_i2c_slave_inst_data_out_reg_valid_reg);
    i2c_slave_i2c_slave_inst_SLICE_117I: SLOGICB
      generic map (CLKMUX=>"SIG", CEMUX=>"SIG", GSR=>"DISABLED", 
                   SRMODE=>"ASYNC", LUT0_INITVAL=>X"F808", 
                   LUT1_INITVAL=>X"2222", REG0_SD=>"VHI", CHECK_DI0=>TRUE, 
                   CHECK_CE=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', 
                A1=>i2c_slave_i2c_slave_inst_scl_i_reg, 
                B1=>i2c_slave_i2c_slave_inst_last_scl_i_reg, C1=>'X', D1=>'X', 
                DI1=>'X', DI0=>i2c_slave_i2c_slave_inst_data_next_7_N_843_0, 
                A0=>sda_i_reg, B0=>i2c_slave_i2c_slave_inst_n14374, 
                C0=>state_reg_0, D0=>i2c_slave_i2c_slave_inst_n3050, M0=>'X', 
                CE=>i2c_slave_i2c_slave_inst_int_clk_out_enable_188, 
                CLK=>int_clk_out, LSR=>'X', OFX1=>open, 
                F1=>i2c_slave_i2c_slave_inst_n14374, Q1=>open, OFX0=>open, 
                F0=>i2c_slave_i2c_slave_inst_data_next_7_N_843_0, 
                Q0=>i2c_slave_i2c_slave_inst_data_reg_0);
    i2c_slave_i2c_slave_inst_SLICE_118I: SLOGICB
      generic map (M0MUX=>"SIG", CLKMUX=>"SIG", CEMUX=>"SIG", GSR=>"DISABLED", 
                   SRMODE=>"ASYNC", LUT0_INITVAL=>X"EA40", 
                   LUT1_INITVAL=>X"A200", REG0_SD=>"VHI", CHECK_DI0=>TRUE, 
                   CHECK_CE=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', 
                A1=>i2c_slave_i2c_slave_inst_data_reg_0, B1=>state_reg_0, 
                C1=>i2c_slave_i2c_slave_inst_n14370, 
                D1=>i2c_slave_i2c_slave_inst_n14374, DI1=>'X', 
                DI0=>i2c_slave_i2c_slave_inst_data_next_7_N_843_1, 
                A0=>i2c_slave_i2c_slave_inst_n14292, 
                B0=>i2c_slave_i2c_slave_inst_n14368, 
                C0=>i2c_slave_data_in_reg_1, 
                D0=>i2c_slave_i2c_slave_inst_data_reg_0, 
                M0=>i2c_slave_i2c_slave_inst_n13424, 
                CE=>i2c_slave_i2c_slave_inst_int_clk_out_enable_188, 
                CLK=>int_clk_out, LSR=>'X', OFX1=>open, F1=>open, Q1=>open, 
                OFX0=>i2c_slave_i2c_slave_inst_data_next_7_N_843_1, F0=>open, 
                Q0=>i2c_slave_i2c_slave_inst_data_reg_1);
    i2c_slave_i2c_slave_inst_SLICE_119I: SLOGICB
      generic map (M0MUX=>"SIG", CLKMUX=>"SIG", CEMUX=>"SIG", GSR=>"DISABLED", 
                   SRMODE=>"ASYNC", LUT0_INITVAL=>X"EA40", 
                   LUT1_INITVAL=>X"A200", REG0_SD=>"VHI", CHECK_DI0=>TRUE, 
                   CHECK_CE=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', 
                A1=>i2c_slave_i2c_slave_inst_data_reg_1, B1=>state_reg_0, 
                C1=>i2c_slave_i2c_slave_inst_n14370, 
                D1=>i2c_slave_i2c_slave_inst_n14374, DI1=>'X', 
                DI0=>i2c_slave_i2c_slave_inst_data_next_7_N_843_2, 
                A0=>i2c_slave_i2c_slave_inst_n14292, 
                B0=>i2c_slave_i2c_slave_inst_n14368, 
                C0=>i2c_slave_data_in_reg_2, 
                D0=>i2c_slave_i2c_slave_inst_data_reg_1, 
                M0=>i2c_slave_i2c_slave_inst_n13424, 
                CE=>i2c_slave_i2c_slave_inst_int_clk_out_enable_188, 
                CLK=>int_clk_out, LSR=>'X', OFX1=>open, F1=>open, Q1=>open, 
                OFX0=>i2c_slave_i2c_slave_inst_data_next_7_N_843_2, F0=>open, 
                Q0=>i2c_slave_i2c_slave_inst_data_reg_2);
    i2c_slave_i2c_slave_inst_SLICE_120I: SLOGICB
      generic map (M0MUX=>"SIG", CLKMUX=>"SIG", CEMUX=>"SIG", GSR=>"DISABLED", 
                   SRMODE=>"ASYNC", LUT0_INITVAL=>X"EA40", 
                   LUT1_INITVAL=>X"A200", REG0_SD=>"VHI", CHECK_DI0=>TRUE, 
                   CHECK_CE=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', 
                A1=>i2c_slave_i2c_slave_inst_data_reg_2, B1=>state_reg_0, 
                C1=>i2c_slave_i2c_slave_inst_n14370, 
                D1=>i2c_slave_i2c_slave_inst_n14374, DI1=>'X', 
                DI0=>i2c_slave_i2c_slave_inst_data_next_7_N_843_3, 
                A0=>i2c_slave_i2c_slave_inst_n14292, 
                B0=>i2c_slave_i2c_slave_inst_n14368, 
                C0=>i2c_slave_data_in_reg_3, 
                D0=>i2c_slave_i2c_slave_inst_data_reg_2, 
                M0=>i2c_slave_i2c_slave_inst_n13424, 
                CE=>i2c_slave_i2c_slave_inst_int_clk_out_enable_188, 
                CLK=>int_clk_out, LSR=>'X', OFX1=>open, F1=>open, Q1=>open, 
                OFX0=>i2c_slave_i2c_slave_inst_data_next_7_N_843_3, F0=>open, 
                Q0=>i2c_slave_i2c_slave_inst_data_reg_3);
    i2c_slave_i2c_slave_inst_SLICE_121I: SLOGICB
      generic map (M0MUX=>"SIG", CLKMUX=>"SIG", CEMUX=>"SIG", GSR=>"DISABLED", 
                   SRMODE=>"ASYNC", LUT0_INITVAL=>X"EA40", 
                   LUT1_INITVAL=>X"A200", REG0_SD=>"VHI", CHECK_DI0=>TRUE, 
                   CHECK_CE=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', 
                A1=>i2c_slave_i2c_slave_inst_data_reg_3, B1=>state_reg_0, 
                C1=>i2c_slave_i2c_slave_inst_n14370, 
                D1=>i2c_slave_i2c_slave_inst_n14374, DI1=>'X', 
                DI0=>i2c_slave_i2c_slave_inst_data_next_7_N_843_4, 
                A0=>i2c_slave_i2c_slave_inst_n14292, 
                B0=>i2c_slave_i2c_slave_inst_n14368, 
                C0=>i2c_slave_data_in_reg_4, 
                D0=>i2c_slave_i2c_slave_inst_data_reg_3, 
                M0=>i2c_slave_i2c_slave_inst_n13424, 
                CE=>i2c_slave_i2c_slave_inst_int_clk_out_enable_188, 
                CLK=>int_clk_out, LSR=>'X', OFX1=>open, F1=>open, Q1=>open, 
                OFX0=>i2c_slave_i2c_slave_inst_data_next_7_N_843_4, F0=>open, 
                Q0=>i2c_slave_i2c_slave_inst_data_reg_4);
    i2c_slave_i2c_slave_inst_SLICE_122I: SLOGICB
      generic map (M0MUX=>"SIG", CLKMUX=>"SIG", CEMUX=>"SIG", GSR=>"DISABLED", 
                   SRMODE=>"ASYNC", LUT0_INITVAL=>X"EA40", 
                   LUT1_INITVAL=>X"A200", REG0_SD=>"VHI", CHECK_DI0=>TRUE, 
                   CHECK_CE=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', 
                A1=>i2c_slave_i2c_slave_inst_data_reg_4, B1=>state_reg_0, 
                C1=>i2c_slave_i2c_slave_inst_n14370, 
                D1=>i2c_slave_i2c_slave_inst_n14374, DI1=>'X', 
                DI0=>i2c_slave_i2c_slave_inst_data_next_7_N_843_5, 
                A0=>i2c_slave_i2c_slave_inst_n14292, 
                B0=>i2c_slave_i2c_slave_inst_n14368, 
                C0=>i2c_slave_data_in_reg_5, 
                D0=>i2c_slave_i2c_slave_inst_data_reg_4, 
                M0=>i2c_slave_i2c_slave_inst_n13424, 
                CE=>i2c_slave_i2c_slave_inst_int_clk_out_enable_188, 
                CLK=>int_clk_out, LSR=>'X', OFX1=>open, F1=>open, Q1=>open, 
                OFX0=>i2c_slave_i2c_slave_inst_data_next_7_N_843_5, F0=>open, 
                Q0=>i2c_slave_i2c_slave_inst_data_reg_5);
    i2c_slave_i2c_slave_inst_SLICE_123I: SLOGICB
      generic map (M0MUX=>"SIG", CLKMUX=>"SIG", CEMUX=>"SIG", GSR=>"DISABLED", 
                   SRMODE=>"ASYNC", LUT0_INITVAL=>X"EA40", 
                   LUT1_INITVAL=>X"A200", REG0_SD=>"VHI", CHECK_DI0=>TRUE, 
                   CHECK_CE=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', 
                A1=>i2c_slave_i2c_slave_inst_data_reg_5, B1=>state_reg_0, 
                C1=>i2c_slave_i2c_slave_inst_n14370, 
                D1=>i2c_slave_i2c_slave_inst_n14374, DI1=>'X', 
                DI0=>i2c_slave_i2c_slave_inst_data_next_7_N_843_6, 
                A0=>i2c_slave_i2c_slave_inst_n14292, 
                B0=>i2c_slave_i2c_slave_inst_n14368, 
                C0=>i2c_slave_data_in_reg_6, 
                D0=>i2c_slave_i2c_slave_inst_data_reg_5, 
                M0=>i2c_slave_i2c_slave_inst_n13424, 
                CE=>i2c_slave_i2c_slave_inst_int_clk_out_enable_188, 
                CLK=>int_clk_out, LSR=>'X', OFX1=>open, F1=>open, Q1=>open, 
                OFX0=>i2c_slave_i2c_slave_inst_data_next_7_N_843_6, F0=>open, 
                Q0=>i2c_slave_i2c_slave_inst_data_reg_6);
    i2c_slave_i2c_slave_inst_SLICE_124I: SLOGICB
      generic map (M0MUX=>"SIG", CLKMUX=>"SIG", CEMUX=>"SIG", GSR=>"DISABLED", 
                   SRMODE=>"ASYNC", LUT0_INITVAL=>X"EA40", 
                   LUT1_INITVAL=>X"A200", REG0_SD=>"VHI", CHECK_DI0=>TRUE, 
                   CHECK_CE=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', 
                A1=>i2c_slave_i2c_slave_inst_data_reg_6, B1=>state_reg_0, 
                C1=>i2c_slave_i2c_slave_inst_n14370, 
                D1=>i2c_slave_i2c_slave_inst_n14374, DI1=>'X', 
                DI0=>i2c_slave_i2c_slave_inst_data_next_7_N_843_7, 
                A0=>i2c_slave_i2c_slave_inst_n14292, 
                B0=>i2c_slave_i2c_slave_inst_n14368, 
                C0=>i2c_slave_data_in_reg_7, 
                D0=>i2c_slave_i2c_slave_inst_data_reg_6, 
                M0=>i2c_slave_i2c_slave_inst_n13424, 
                CE=>i2c_slave_i2c_slave_inst_int_clk_out_enable_188, 
                CLK=>int_clk_out, LSR=>'X', OFX1=>open, F1=>open, Q1=>open, 
                OFX0=>i2c_slave_i2c_slave_inst_data_next_7_N_843_7, F0=>open, 
                Q0=>i2c_slave_i2c_slave_inst_data_reg_7);
    i2c_slave_i2c_slave_inst_SLICE_125I: SLOGICB
      generic map (CLKMUX=>"SIG", CEMUX=>"SIG", GSR=>"DISABLED", 
                   SRMODE=>"ASYNC", LUT0_INITVAL=>X"00D7", 
                   LUT1_INITVAL=>X"BBBB", REG0_SD=>"VHI", CHECK_DI0=>TRUE, 
                   CHECK_CE=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', 
                A1=>i2c_slave_i2c_slave_inst_state_reg_1, 
                B1=>i2c_slave_i2c_slave_inst_state_reg_2, C1=>'X', D1=>'X', 
                DI1=>'X', DI0=>i2c_slave_i2c_slave_inst_n12249, 
                A0=>i2c_slave_i2c_slave_inst_scl_i_reg, B0=>sda_i_reg, 
                C0=>i2c_slave_i2c_slave_inst_last_sda_i_reg, 
                D0=>i2c_slave_i2c_slave_inst_n14369, M0=>'X', 
                CE=>i2c_slave_i2c_slave_inst_int_clk_out_enable_36, 
                CLK=>int_clk_out, LSR=>'X', OFX1=>open, 
                F1=>i2c_slave_i2c_slave_inst_n14369, Q1=>open, OFX0=>open, 
                F0=>i2c_slave_i2c_slave_inst_n12249, 
                Q0=>i2c_slave_i2c_slave_inst_data_valid_reg);
    i2c_slave_i2c_slave_inst_SLICE_128I: SLOGICB
      generic map (M0MUX=>"SIG", M1MUX=>"SIG", CLKMUX=>"SIG", CEMUX=>"VHI", 
                   REG0_REGSET=>"SET", REG1_REGSET=>"SET", GSR=>"DISABLED", 
                   SRMODE=>"ASYNC", CHECK_M1=>TRUE, CHECK_M0=>TRUE)
      port map (M1=>i2c_slave_i2c_slave_inst_scl_i_filter_0, FXA=>'X', 
                FXB=>'X', A1=>'X', B1=>'X', C1=>'X', D1=>'X', DI1=>'X', 
                DI0=>'X', A0=>'X', B0=>'X', C0=>'X', D0=>'X', M0=>fpga_scl_in, 
                CE=>'X', CLK=>int_clk_out, LSR=>'X', OFX1=>open, F1=>open, 
                Q1=>i2c_slave_i2c_slave_inst_scl_i_filter_1, OFX0=>open, 
                F0=>open, Q0=>i2c_slave_i2c_slave_inst_scl_i_filter_0);
    i2c_slave_i2c_slave_inst_SLICE_129I: SLOGICB
      generic map (M0MUX=>"SIG", M1MUX=>"SIG", CLKMUX=>"SIG", CEMUX=>"VHI", 
                   REG0_REGSET=>"SET", REG1_REGSET=>"SET", GSR=>"DISABLED", 
                   SRMODE=>"ASYNC", CHECK_M1=>TRUE, CHECK_M0=>TRUE)
      port map (M1=>i2c_slave_i2c_slave_inst_scl_i_filter_2, FXA=>'X', 
                FXB=>'X', A1=>'X', B1=>'X', C1=>'X', D1=>'X', DI1=>'X', 
                DI0=>'X', A0=>'X', B0=>'X', C0=>'X', D0=>'X', 
                M0=>i2c_slave_i2c_slave_inst_scl_i_filter_1, CE=>'X', 
                CLK=>int_clk_out, LSR=>'X', OFX1=>open, F1=>open, 
                Q1=>i2c_slave_i2c_slave_inst_scl_i_filter_3, OFX0=>open, 
                F0=>open, Q0=>i2c_slave_i2c_slave_inst_scl_i_filter_2);
    i2c_slave_i2c_slave_inst_SLICE_130I: SLOGICB
      generic map (CLKMUX=>"SIG", CEMUX=>"SIG", REG0_REGSET=>"SET", 
                   GSR=>"DISABLED", SRMODE=>"ASYNC", LUT0_INITVAL=>X"8000", 
                   LUT1_INITVAL=>X"8001", REG0_SD=>"VHI", CHECK_DI0=>TRUE, 
                   CHECK_CE=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', 
                A1=>i2c_slave_i2c_slave_inst_scl_i_filter_1, 
                B1=>i2c_slave_i2c_slave_inst_scl_i_filter_3, 
                C1=>i2c_slave_i2c_slave_inst_scl_i_filter_0, 
                D1=>i2c_slave_i2c_slave_inst_scl_i_filter_2, DI1=>'X', 
                DI0=>i2c_slave_i2c_slave_inst_scl_i_reg_N_956, 
                A0=>i2c_slave_i2c_slave_inst_scl_i_filter_1, 
                B0=>i2c_slave_i2c_slave_inst_scl_i_filter_2, 
                C0=>i2c_slave_i2c_slave_inst_scl_i_filter_0, 
                D0=>i2c_slave_i2c_slave_inst_scl_i_filter_3, M0=>'X', 
                CE=>i2c_slave_i2c_slave_inst_int_clk_out_enable_21, 
                CLK=>int_clk_out, LSR=>'X', OFX1=>open, 
                F1=>i2c_slave_i2c_slave_inst_int_clk_out_enable_21, Q1=>open, 
                OFX0=>open, F0=>i2c_slave_i2c_slave_inst_scl_i_reg_N_956, 
                Q0=>i2c_slave_i2c_slave_inst_scl_i_reg);
    i2c_slave_i2c_slave_inst_SLICE_131I: SLOGICB
      generic map (M0MUX=>"SIG", M1MUX=>"SIG", CLKMUX=>"SIG", CEMUX=>"VHI", 
                   REG0_REGSET=>"SET", REG1_REGSET=>"SET", GSR=>"DISABLED", 
                   SRMODE=>"ASYNC", CHECK_M1=>TRUE, CHECK_M0=>TRUE)
      port map (M1=>i2c_slave_i2c_slave_inst_sda_i_filter_0, FXA=>'X', 
                FXB=>'X', A1=>'X', B1=>'X', C1=>'X', D1=>'X', DI1=>'X', 
                DI0=>'X', A0=>'X', B0=>'X', C0=>'X', D0=>'X', M0=>fpga_sda_in, 
                CE=>'X', CLK=>int_clk_out, LSR=>'X', OFX1=>open, F1=>open, 
                Q1=>i2c_slave_i2c_slave_inst_sda_i_filter_1, OFX0=>open, 
                F0=>open, Q0=>i2c_slave_i2c_slave_inst_sda_i_filter_0);
    i2c_slave_i2c_slave_inst_SLICE_132I: SLOGICB
      generic map (M0MUX=>"SIG", M1MUX=>"SIG", CLKMUX=>"SIG", CEMUX=>"VHI", 
                   REG0_REGSET=>"SET", REG1_REGSET=>"SET", GSR=>"DISABLED", 
                   SRMODE=>"ASYNC", CHECK_M1=>TRUE, CHECK_M0=>TRUE)
      port map (M1=>i2c_slave_i2c_slave_inst_sda_i_filter_2, FXA=>'X', 
                FXB=>'X', A1=>'X', B1=>'X', C1=>'X', D1=>'X', DI1=>'X', 
                DI0=>'X', A0=>'X', B0=>'X', C0=>'X', D0=>'X', 
                M0=>i2c_slave_i2c_slave_inst_sda_i_filter_1, CE=>'X', 
                CLK=>int_clk_out, LSR=>'X', OFX1=>open, F1=>open, 
                Q1=>i2c_slave_i2c_slave_inst_sda_i_filter_3, OFX0=>open, 
                F0=>open, Q0=>i2c_slave_i2c_slave_inst_sda_i_filter_2);
    i2c_slave_i2c_slave_inst_SLICE_133I: SLOGICB
      generic map (M0MUX=>"SIG", CLKMUX=>"SIG", CEMUX=>"VHI", LSRMUX=>"SIG", 
                   GSR=>"DISABLED", LUT0_INITVAL=>X"01F1", 
                   LUT1_INITVAL=>X"CACA", REG0_SD=>"VHI", CHECK_DI0=>TRUE, 
                   CHECK_LSR=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', 
                A1=>i2c_slave_i2c_slave_inst_n14406, 
                B1=>i2c_slave_i2c_slave_inst_n13386, 
                C1=>i2c_slave_i2c_slave_inst_state_reg_2, D1=>'X', DI1=>'X', 
                DI0=>i2c_slave_i2c_slave_inst_n11155, 
                A0=>i2c_slave_i2c_slave_inst_n14370, 
                B0=>i2c_slave_i2c_slave_inst_n14373, 
                C0=>i2c_slave_i2c_slave_inst_state_reg_1, 
                D0=>i2c_slave_i2c_slave_inst_n14178, M0=>state_reg_0, CE=>'X', 
                CLK=>int_clk_out, LSR=>i2c_slave_i2c_slave_inst_n12184, 
                OFX1=>open, F1=>open, Q1=>open, 
                OFX0=>i2c_slave_i2c_slave_inst_n11155, F0=>open, 
                Q0=>i2c_slave_i2c_slave_inst_state_reg_1);
    i2c_slave_i2c_slave_inst_SLICE_134I: SLOGICB
      generic map (M0MUX=>"SIG", CLKMUX=>"SIG", CEMUX=>"VHI", LSRMUX=>"SIG", 
                   GSR=>"DISABLED", LUT0_INITVAL=>X"FCAC", 
                   LUT1_INITVAL=>X"FC74", REG0_SD=>"VHI", CHECK_DI0=>TRUE, 
                   CHECK_LSR=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', 
                A1=>i2c_slave_i2c_slave_inst_state_reg_1, 
                B1=>i2c_slave_i2c_slave_inst_state_reg_2, 
                C1=>i2c_slave_i2c_slave_inst_n14296, 
                D1=>i2c_slave_i2c_slave_inst_n14322, DI1=>'X', 
                DI0=>i2c_slave_i2c_slave_inst_n14235, 
                A0=>i2c_slave_i2c_slave_inst_n14320, 
                B0=>i2c_slave_i2c_slave_inst_n14321, 
                C0=>i2c_slave_i2c_slave_inst_state_reg_1, 
                D0=>i2c_slave_i2c_slave_inst_state_reg_2, M0=>state_reg_0, 
                CE=>'X', CLK=>int_clk_out, 
                LSR=>i2c_slave_i2c_slave_inst_n12184, OFX1=>open, F1=>open, 
                Q1=>open, OFX0=>i2c_slave_i2c_slave_inst_n14235, F0=>open, 
                Q0=>i2c_slave_i2c_slave_inst_state_reg_2);
    i2c_slave_SLICE_136I: SLOGICB
      generic map (CLKMUX=>"SIG", CEMUX=>"VHI", LSRMUX=>"INV", GSR=>"DISABLED", 
                   LUT0_INITVAL=>X"EAAA", LUT1_INITVAL=>X"FDFC", 
                   REG1_SD=>"VHI", REG0_SD=>"VHI", CHECK_DI1=>TRUE, 
                   CHECK_DI0=>TRUE, CHECK_LSR=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>i2c_slave_n14328, 
                B1=>i2c_slave_n5080, C1=>i2c_slave_n11557, 
                D1=>i2c_slave_n13196, DI1=>i2c_slave_n12054, 
                DI0=>i2c_slave_n5053, A0=>i2c_slave_n5052, 
                B0=>i2c_slave_int_clk_out_enable_12, C0=>i2c_slave_n14278, 
                D0=>i2c_slave_n1525, M0=>'X', CE=>'X', CLK=>int_clk_out, 
                LSR=>stm_fpga_spare5_c, OFX1=>open, F1=>i2c_slave_n12054, 
                Q1=>i2c_slave_n1525, OFX0=>open, F0=>i2c_slave_n5053, 
                Q0=>i2c_slave_n1524);
    i2c_slave_SLICE_137I: SLOGICB
      generic map (CLKMUX=>"SIG", CEMUX=>"VHI", LSRMUX=>"INV", GSR=>"DISABLED", 
                   LUT0_INITVAL=>X"EECE", LUT1_INITVAL=>X"F222", 
                   REG1_SD=>"VHI", REG0_SD=>"VHI", CHECK_DI1=>TRUE, 
                   CHECK_DI0=>TRUE, CHECK_LSR=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>i2c_slave_n1527, B1=>wb_ack_i, 
                C1=>i2c_slave_n14339, D1=>i2c_slave_n14344, 
                DI1=>i2c_slave_n5085, DI0=>i2c_slave_n5083, 
                A0=>i2c_slave_n12856, B0=>i2c_slave_n1554, 
                C0=>i2c_slave_n14339, D0=>i2c_slave_n14298, M0=>'X', CE=>'X', 
                CLK=>int_clk_out, LSR=>stm_fpga_spare5_c, OFX1=>open, 
                F1=>i2c_slave_n5085, Q1=>i2c_slave_n1527, OFX0=>open, 
                F0=>i2c_slave_n5083, Q0=>i2c_slave_n1526);
    i2c_slave_SLICE_138I: SLOGICB
      generic map (CLKMUX=>"SIG", CEMUX=>"VHI", LSRMUX=>"INV", 
                   REG1_REGSET=>"SET", GSR=>"DISABLED", LUT0_INITVAL=>X"ECA0", 
                   LUT1_INITVAL=>X"EEEA", REG1_SD=>"VHI", REG0_SD=>"VHI", 
                   CHECK_DI1=>TRUE, CHECK_DI0=>TRUE, CHECK_LSR=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>i2c_slave_n12648, 
                B1=>i2c_slave_n1526, C1=>i2c_slave_n12071, 
                D1=>i2c_slave_n14371, DI1=>i2c_slave_n12291, 
                DI0=>i2c_slave_n5087, A0=>i2c_slave_n1528, 
                B0=>i2c_slave_data_out_valid, C0=>i2c_slave_n14275, 
                D0=>i2c_slave_n1529, M0=>'X', CE=>'X', CLK=>int_clk_out, 
                LSR=>stm_fpga_spare5_c, OFX1=>open, F1=>i2c_slave_n12291, 
                Q1=>i2c_slave_n1529, OFX0=>open, F0=>i2c_slave_n5087, 
                Q0=>i2c_slave_n1528);
    SLICE_141I: SLOGICB
      generic map (CLKMUX=>"SIG", CEMUX=>"SIG", SRMODE=>"ASYNC", 
                   LUT0_INITVAL=>X"0000", REG0_SD=>"VHI", CHECK_DI0=>TRUE, 
                   CHECK_CE=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>n14917, A0=>'X', B0=>'X', C0=>'X', 
                D0=>'X', M0=>'X', CE=>lvds_rx_09_inst_sdr_rxclk_c_enable_86, 
                CLK=>sdr_rxclk_c, LSR=>'X', OFX1=>open, F1=>open, Q1=>open, 
                OFX0=>open, F0=>n14917, Q0=>lvds_rx_09_inst_match_count_2);
    lvds_rx_09_inst_SLICE_142I: SLOGICB
      generic map (CLKMUX=>"SIG", CEMUX=>"SIG", SRMODE=>"ASYNC", 
                   LUT0_INITVAL=>X"7080", LUT1_INITVAL=>X"7080", 
                   REG1_SD=>"VHI", REG0_SD=>"VHI", CHECK_DI1=>TRUE, 
                   CHECK_DI0=>TRUE, CHECK_CE=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', 
                A1=>lvds_rx_09_inst_sample_count_4, B1=>lvds_rx_09_inst_n14282, 
                C1=>n14294, D1=>lvds_rx_09_inst_sample_count_5, 
                DI1=>lvds_rx_09_inst_sample_count_next_5, 
                DI0=>lvds_rx_09_inst_sample_count_next_4, A0=>sample_count_3, 
                B0=>n14304, C0=>n14294, D0=>lvds_rx_09_inst_sample_count_4, 
                M0=>'X', CE=>sdr_rxclk_c_enable_88, CLK=>sdr_rxclk_c, LSR=>'X', 
                OFX1=>open, F1=>lvds_rx_09_inst_sample_count_next_5, 
                Q1=>lvds_rx_09_inst_sample_count_5, OFX0=>open, 
                F0=>lvds_rx_09_inst_sample_count_next_4, 
                Q0=>lvds_rx_09_inst_sample_count_4);
    lvds_rx_09_inst_SLICE_143I: SLOGICB
      generic map (M0MUX=>"SIG", M1MUX=>"SIG", CLKMUX=>"SIG", CEMUX=>"VHI", 
                   SRMODE=>"ASYNC", CHECK_M1=>TRUE, CHECK_M0=>TRUE)
      port map (M1=>w_lvds_rx_09_d0, FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', 
                C1=>'X', D1=>'X', DI1=>'X', DI0=>'X', A0=>'X', B0=>'X', 
                C0=>'X', D0=>'X', M0=>w_lvds_rx_09_d1, CE=>'X', 
                CLK=>sdr_rxclk_c, LSR=>'X', OFX1=>open, F1=>open, 
                Q1=>lvds_rx_09_inst_sr_1, OFX0=>open, F0=>open, 
                Q0=>lvds_rx_09_inst_sr_0);
    lvds_rx_09_inst_SLICE_144I: SLOGICB
      generic map (M0MUX=>"SIG", M1MUX=>"SIG", CLKMUX=>"SIG", CEMUX=>"VHI", 
                   SRMODE=>"ASYNC", CHECK_M1=>TRUE, CHECK_M0=>TRUE)
      port map (M1=>lvds_rx_09_inst_sr_1, FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', 
                C1=>'X', D1=>'X', DI1=>'X', DI0=>'X', A0=>'X', B0=>'X', 
                C0=>'X', D0=>'X', M0=>lvds_rx_09_inst_sr_0, CE=>'X', 
                CLK=>sdr_rxclk_c, LSR=>'X', OFX1=>open, F1=>open, 
                Q1=>lvds_rx_09_inst_sr_3, OFX0=>open, F0=>open, 
                Q0=>lvds_rx_09_inst_sr_2);
    lvds_rx_09_inst_SLICE_145I: SLOGICB
      generic map (M0MUX=>"SIG", M1MUX=>"SIG", CLKMUX=>"SIG", CEMUX=>"VHI", 
                   SRMODE=>"ASYNC", CHECK_M1=>TRUE, CHECK_M0=>TRUE)
      port map (M1=>lvds_rx_09_inst_sr_3, FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', 
                C1=>'X', D1=>'X', DI1=>'X', DI0=>'X', A0=>'X', B0=>'X', 
                C0=>'X', D0=>'X', M0=>lvds_rx_09_inst_sr_2, CE=>'X', 
                CLK=>sdr_rxclk_c, LSR=>'X', OFX1=>open, F1=>open, 
                Q1=>lvds_rx_09_inst_sr_5, OFX0=>open, F0=>open, 
                Q0=>lvds_rx_09_inst_sr_4);
    lvds_rx_09_inst_SLICE_146I: SLOGICB
      generic map (M0MUX=>"SIG", M1MUX=>"SIG", CLKMUX=>"SIG", CEMUX=>"VHI", 
                   SRMODE=>"ASYNC", CHECK_M1=>TRUE, CHECK_M0=>TRUE)
      port map (M1=>lvds_rx_09_inst_sr_5, FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', 
                C1=>'X', D1=>'X', DI1=>'X', DI0=>'X', A0=>'X', B0=>'X', 
                C0=>'X', D0=>'X', M0=>lvds_rx_09_inst_sr_4, CE=>'X', 
                CLK=>sdr_rxclk_c, LSR=>'X', OFX1=>open, F1=>open, 
                Q1=>lvds_rx_09_inst_sr_7, OFX0=>open, F0=>open, 
                Q0=>lvds_rx_09_inst_sr_6);
    lvds_rx_09_inst_SLICE_147I: SLOGICB
      generic map (M0MUX=>"SIG", M1MUX=>"SIG", CLKMUX=>"SIG", CEMUX=>"VHI", 
                   SRMODE=>"ASYNC", CHECK_M1=>TRUE, CHECK_M0=>TRUE)
      port map (M1=>lvds_rx_09_inst_sr_7, FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', 
                C1=>'X', D1=>'X', DI1=>'X', DI0=>'X', A0=>'X', B0=>'X', 
                C0=>'X', D0=>'X', M0=>lvds_rx_09_inst_sr_6, CE=>'X', 
                CLK=>sdr_rxclk_c, LSR=>'X', OFX1=>open, F1=>open, 
                Q1=>lvds_rx_09_inst_sr_9, OFX0=>open, F0=>open, 
                Q0=>lvds_rx_09_inst_sr_8);
    lvds_rx_09_inst_SLICE_148I: SLOGICB
      generic map (M0MUX=>"SIG", M1MUX=>"SIG", CLKMUX=>"SIG", CEMUX=>"VHI", 
                   SRMODE=>"ASYNC", CHECK_M1=>TRUE, CHECK_M0=>TRUE)
      port map (M1=>lvds_rx_09_inst_sr_9, FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', 
                C1=>'X', D1=>'X', DI1=>'X', DI0=>'X', A0=>'X', B0=>'X', 
                C0=>'X', D0=>'X', M0=>lvds_rx_09_inst_sr_8, CE=>'X', 
                CLK=>sdr_rxclk_c, LSR=>'X', OFX1=>open, F1=>open, 
                Q1=>lvds_rx_09_inst_sr_11, OFX0=>open, F0=>open, 
                Q0=>lvds_rx_09_inst_sr_10);
    lvds_rx_09_inst_SLICE_149I: SLOGICB
      generic map (M0MUX=>"SIG", M1MUX=>"SIG", CLKMUX=>"SIG", CEMUX=>"VHI", 
                   SRMODE=>"ASYNC", CHECK_M1=>TRUE, CHECK_M0=>TRUE)
      port map (M1=>lvds_rx_09_inst_sr_11, FXA=>'X', FXB=>'X', A1=>'X', 
                B1=>'X', C1=>'X', D1=>'X', DI1=>'X', DI0=>'X', A0=>'X', 
                B0=>'X', C0=>'X', D0=>'X', M0=>lvds_rx_09_inst_sr_10, CE=>'X', 
                CLK=>sdr_rxclk_c, LSR=>'X', OFX1=>open, F1=>open, 
                Q1=>lvds_rx_09_inst_sr_13, OFX0=>open, F0=>open, 
                Q0=>lvds_rx_09_inst_sr_12);
    lvds_rx_09_inst_SLICE_150I: SLOGICB
      generic map (M0MUX=>"SIG", M1MUX=>"SIG", CLKMUX=>"SIG", CEMUX=>"VHI", 
                   SRMODE=>"ASYNC", CHECK_M1=>TRUE, CHECK_M0=>TRUE)
      port map (M1=>lvds_rx_09_inst_sr_13, FXA=>'X', FXB=>'X', A1=>'X', 
                B1=>'X', C1=>'X', D1=>'X', DI1=>'X', DI0=>'X', A0=>'X', 
                B0=>'X', C0=>'X', D0=>'X', M0=>lvds_rx_09_inst_sr_12, CE=>'X', 
                CLK=>sdr_rxclk_c, LSR=>'X', OFX1=>open, F1=>open, 
                Q1=>lvds_rx_09_inst_sr_15, OFX0=>open, F0=>open, 
                Q0=>lvds_rx_09_inst_sr_14);
    lvds_rx_09_inst_SLICE_151I: SLOGICB
      generic map (M0MUX=>"SIG", M1MUX=>"SIG", CLKMUX=>"SIG", CEMUX=>"VHI", 
                   SRMODE=>"ASYNC", CHECK_M1=>TRUE, CHECK_M0=>TRUE)
      port map (M1=>sr_16, FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>'X', B0=>'X', C0=>'X', 
                D0=>'X', M0=>lvds_rx_09_inst_sr_15, CE=>'X', CLK=>sdr_rxclk_c, 
                LSR=>'X', OFX1=>open, F1=>open, Q1=>lvds_rx_09_inst_sr_18, 
                OFX0=>open, F0=>open, Q0=>lvds_rx_09_inst_sr_17);
    lvds_rx_09_inst_SLICE_152I: SLOGICB
      generic map (M0MUX=>"SIG", M1MUX=>"SIG", CLKMUX=>"SIG", CEMUX=>"VHI", 
                   SRMODE=>"ASYNC", CHECK_M1=>TRUE, CHECK_M0=>TRUE)
      port map (M1=>lvds_rx_09_inst_sr_18, FXA=>'X', FXB=>'X', A1=>'X', 
                B1=>'X', C1=>'X', D1=>'X', DI1=>'X', DI0=>'X', A0=>'X', 
                B0=>'X', C0=>'X', D0=>'X', M0=>lvds_rx_09_inst_sr_17, CE=>'X', 
                CLK=>sdr_rxclk_c, LSR=>'X', OFX1=>open, F1=>open, 
                Q1=>lvds_rx_09_inst_sr_20, OFX0=>open, F0=>open, 
                Q0=>lvds_rx_09_inst_sr_19);
    lvds_rx_09_inst_SLICE_153I: SLOGICB
      generic map (M0MUX=>"SIG", M1MUX=>"SIG", CLKMUX=>"SIG", CEMUX=>"VHI", 
                   SRMODE=>"ASYNC", CHECK_M1=>TRUE, CHECK_M0=>TRUE)
      port map (M1=>lvds_rx_09_inst_sr_20, FXA=>'X', FXB=>'X', A1=>'X', 
                B1=>'X', C1=>'X', D1=>'X', DI1=>'X', DI0=>'X', A0=>'X', 
                B0=>'X', C0=>'X', D0=>'X', M0=>lvds_rx_09_inst_sr_19, CE=>'X', 
                CLK=>sdr_rxclk_c, LSR=>'X', OFX1=>open, F1=>open, 
                Q1=>lvds_rx_09_inst_sr_22, OFX0=>open, F0=>open, 
                Q0=>lvds_rx_09_inst_sr_21);
    lvds_rx_09_inst_SLICE_154I: SLOGICB
      generic map (M0MUX=>"SIG", M1MUX=>"SIG", CLKMUX=>"SIG", CEMUX=>"VHI", 
                   SRMODE=>"ASYNC", CHECK_M1=>TRUE, CHECK_M0=>TRUE)
      port map (M1=>lvds_rx_09_inst_sr_22, FXA=>'X', FXB=>'X', A1=>'X', 
                B1=>'X', C1=>'X', D1=>'X', DI1=>'X', DI0=>'X', A0=>'X', 
                B0=>'X', C0=>'X', D0=>'X', M0=>lvds_rx_09_inst_sr_21, CE=>'X', 
                CLK=>sdr_rxclk_c, LSR=>'X', OFX1=>open, F1=>open, 
                Q1=>lvds_rx_09_inst_sr_24, OFX0=>open, F0=>open, 
                Q0=>lvds_rx_09_inst_sr_23);
    lvds_rx_09_inst_SLICE_155I: SLOGICB
      generic map (M0MUX=>"SIG", M1MUX=>"SIG", CLKMUX=>"SIG", CEMUX=>"VHI", 
                   SRMODE=>"ASYNC", CHECK_M1=>TRUE, CHECK_M0=>TRUE)
      port map (M1=>lvds_rx_09_inst_sr_24, FXA=>'X', FXB=>'X', A1=>'X', 
                B1=>'X', C1=>'X', D1=>'X', DI1=>'X', DI0=>'X', A0=>'X', 
                B0=>'X', C0=>'X', D0=>'X', M0=>lvds_rx_09_inst_sr_23, CE=>'X', 
                CLK=>sdr_rxclk_c, LSR=>'X', OFX1=>open, F1=>open, 
                Q1=>lvds_rx_09_inst_sr_26, OFX0=>open, F0=>open, 
                Q0=>lvds_rx_09_inst_sr_25);
    lvds_rx_09_inst_SLICE_156I: SLOGICB
      generic map (M0MUX=>"SIG", M1MUX=>"SIG", CLKMUX=>"SIG", CEMUX=>"VHI", 
                   SRMODE=>"ASYNC", CHECK_M1=>TRUE, CHECK_M0=>TRUE)
      port map (M1=>lvds_rx_09_inst_sr_26, FXA=>'X', FXB=>'X', A1=>'X', 
                B1=>'X', C1=>'X', D1=>'X', DI1=>'X', DI0=>'X', A0=>'X', 
                B0=>'X', C0=>'X', D0=>'X', M0=>lvds_rx_09_inst_sr_25, CE=>'X', 
                CLK=>sdr_rxclk_c, LSR=>'X', OFX1=>open, F1=>open, 
                Q1=>lvds_rx_09_inst_sr_28, OFX0=>open, F0=>open, 
                Q0=>lvds_rx_09_inst_sr_27);
    lvds_rx_09_inst_SLICE_157I: SLOGICB
      generic map (M0MUX=>"SIG", M1MUX=>"SIG", CLKMUX=>"SIG", CEMUX=>"VHI", 
                   SRMODE=>"ASYNC", CHECK_M1=>TRUE, CHECK_M0=>TRUE)
      port map (M1=>lvds_rx_09_inst_sr_28, FXA=>'X', FXB=>'X', A1=>'X', 
                B1=>'X', C1=>'X', D1=>'X', DI1=>'X', DI0=>'X', A0=>'X', 
                B0=>'X', C0=>'X', D0=>'X', M0=>lvds_rx_09_inst_sr_27, CE=>'X', 
                CLK=>sdr_rxclk_c, LSR=>'X', OFX1=>open, F1=>open, 
                Q1=>lvds_rx_09_inst_sr_30, OFX0=>open, F0=>open, 
                Q0=>lvds_rx_09_inst_sr_29);
    lvds_rx_09_inst_SLICE_158I: SLOGICB
      generic map (M0MUX=>"SIG", M1MUX=>"SIG", CLKMUX=>"SIG", CEMUX=>"VHI", 
                   SRMODE=>"ASYNC", CHECK_M1=>TRUE, CHECK_M0=>TRUE)
      port map (M1=>lvds_rx_09_inst_sr_30, FXA=>'X', FXB=>'X', A1=>'X', 
                B1=>'X', C1=>'X', D1=>'X', DI1=>'X', DI0=>'X', A0=>'X', 
                B0=>'X', C0=>'X', D0=>'X', M0=>lvds_rx_09_inst_sr_29, CE=>'X', 
                CLK=>sdr_rxclk_c, LSR=>'X', OFX1=>open, F1=>open, 
                Q1=>lvds_rx_09_inst_sr_32, OFX0=>open, F0=>open, 
                Q0=>lvds_rx_09_inst_sr_31);
    lvds_rx_24_inst_SLICE_159I: SLOGICB
      generic map (CLKMUX=>"SIG", CEMUX=>"SIG", SRMODE=>"ASYNC", 
                   LUT0_INITVAL=>X"0008", LUT1_INITVAL=>X"0008", 
                   REG1_SD=>"VHI", REG0_SD=>"VHI", CHECK_DI1=>TRUE, 
                   CHECK_DI0=>TRUE, CHECK_CE=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>lvds_rx_24_inst_n13106, 
                B1=>lvds_rx_24_inst_n11, C1=>lvds_rx_24_inst_n14357, 
                D1=>lvds_rx_24_inst_sr_16, 
                DI1=>lvds_rx_24_inst_match_count_next_1, 
                DI0=>lvds_rx_24_inst_match_count_next_0, 
                A0=>lvds_rx_24_inst_n13114, B0=>lvds_rx_24_inst_n11, 
                C0=>lvds_rx_24_inst_n14357, D0=>lvds_rx_24_inst_sr_16, M0=>'X', 
                CE=>lvds_rx_24_inst_sdr_rxclk_c_enable_82, CLK=>sdr_rxclk_c, 
                LSR=>'X', OFX1=>open, F1=>lvds_rx_24_inst_match_count_next_1, 
                Q1=>lvds_rx_24_inst_match_count_1, OFX0=>open, 
                F0=>lvds_rx_24_inst_match_count_next_0, 
                Q0=>lvds_rx_24_inst_match_count_0);
    lvds_rx_24_inst_SLICE_160I: SLOGICB
      generic map (CLKMUX=>"SIG", CEMUX=>"SIG", SRMODE=>"ASYNC", 
                   LUT0_INITVAL=>X"0000", REG0_SD=>"VHI", CHECK_DI0=>TRUE, 
                   CHECK_CE=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>n14917_000_BUF0, A0=>'X', B0=>'X', 
                C0=>'X', D0=>'X', M0=>'X', 
                CE=>lvds_rx_24_inst_sdr_rxclk_c_enable_82, CLK=>sdr_rxclk_c, 
                LSR=>'X', OFX1=>open, F1=>open, Q1=>open, OFX0=>open, 
                F0=>n14917_000_BUF0, Q0=>lvds_rx_24_inst_match_count_2);
    lvds_rx_24_inst_SLICE_161I: SLOGICB
      generic map (CLKMUX=>"SIG", CEMUX=>"SIG", SRMODE=>"ASYNC", 
                   LUT0_INITVAL=>X"F7F7", LUT1_INITVAL=>X"0100", 
                   REG0_SD=>"VHI", CHECK_DI0=>TRUE, CHECK_CE=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>lvds_rx_24_inst_sr_31, 
                B1=>lvds_rx_24_inst_sr_17, C1=>lvds_rx_24_inst_sr_1, 
                D1=>lvds_rx_24_inst_sr_32, DI1=>'X', 
                DI0=>lvds_rx_24_inst_r_candidate_offset_next_N_1098, 
                A0=>lvds_rx_24_inst_sr_15, B0=>lvds_rx_24_inst_n9573, 
                C0=>lvds_rx_24_inst_sr_16, D0=>'X', M0=>'X', 
                CE=>lvds_rx_24_inst_sdr_rxclk_c_enable_5, CLK=>sdr_rxclk_c, 
                LSR=>'X', OFX1=>open, F1=>lvds_rx_24_inst_n9573, Q1=>open, 
                OFX0=>open, F0=>lvds_rx_24_inst_r_candidate_offset_next_N_1098, 
                Q0=>lvds_rx_24_inst_r_candidate_offset);
    lvds_rx_24_inst_SLICE_162I: SLOGICB
      generic map (CLKMUX=>"SIG", CEMUX=>"SIG", SRMODE=>"ASYNC", 
                   LUT0_INITVAL=>X"7080", LUT1_INITVAL=>X"7080", 
                   REG1_SD=>"VHI", REG0_SD=>"VHI", CHECK_DI1=>TRUE, 
                   CHECK_DI0=>TRUE, CHECK_CE=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', 
                A1=>lvds_rx_24_inst_sample_count_4, B1=>lvds_rx_24_inst_n14283, 
                C1=>n14284, D1=>lvds_rx_24_inst_sample_count_5, 
                DI1=>lvds_rx_24_inst_sample_count_next_5, 
                DI0=>lvds_rx_24_inst_sample_count_next_4, 
                A0=>sample_count_3_adj_1184, B0=>n14305, C0=>n14284, 
                D0=>lvds_rx_24_inst_sample_count_4, M0=>'X', 
                CE=>lvds_rx_24_inst_sdr_rxclk_c_enable_80, CLK=>sdr_rxclk_c, 
                LSR=>'X', OFX1=>open, F1=>lvds_rx_24_inst_sample_count_next_5, 
                Q1=>lvds_rx_24_inst_sample_count_5, OFX0=>open, 
                F0=>lvds_rx_24_inst_sample_count_next_4, 
                Q0=>lvds_rx_24_inst_sample_count_4);
    lvds_rx_24_inst_SLICE_163I: SLOGICB
      generic map (M0MUX=>"SIG", M1MUX=>"SIG", CLKMUX=>"SIG", CEMUX=>"VHI", 
                   SRMODE=>"ASYNC", CHECK_M1=>TRUE, CHECK_M0=>TRUE)
      port map (M1=>w_lvds_rx_24_d0, FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', 
                C1=>'X', D1=>'X', DI1=>'X', DI0=>'X', A0=>'X', B0=>'X', 
                C0=>'X', D0=>'X', M0=>w_lvds_rx_24_d1, CE=>'X', 
                CLK=>sdr_rxclk_c, LSR=>'X', OFX1=>open, F1=>open, 
                Q1=>lvds_rx_24_inst_sr_1, OFX0=>open, F0=>open, 
                Q0=>lvds_rx_24_inst_sr_0);
    lvds_rx_24_inst_SLICE_164I: SLOGICB
      generic map (M0MUX=>"SIG", M1MUX=>"SIG", CLKMUX=>"SIG", CEMUX=>"VHI", 
                   SRMODE=>"ASYNC", CHECK_M1=>TRUE, CHECK_M0=>TRUE)
      port map (M1=>lvds_rx_24_inst_sr_1, FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', 
                C1=>'X', D1=>'X', DI1=>'X', DI0=>'X', A0=>'X', B0=>'X', 
                C0=>'X', D0=>'X', M0=>lvds_rx_24_inst_sr_0, CE=>'X', 
                CLK=>sdr_rxclk_c, LSR=>'X', OFX1=>open, F1=>open, 
                Q1=>lvds_rx_24_inst_sr_3, OFX0=>open, F0=>open, 
                Q0=>lvds_rx_24_inst_sr_2);
    lvds_rx_24_inst_SLICE_165I: SLOGICB
      generic map (M0MUX=>"SIG", M1MUX=>"SIG", CLKMUX=>"SIG", CEMUX=>"VHI", 
                   SRMODE=>"ASYNC", CHECK_M1=>TRUE, CHECK_M0=>TRUE)
      port map (M1=>lvds_rx_24_inst_sr_3, FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', 
                C1=>'X', D1=>'X', DI1=>'X', DI0=>'X', A0=>'X', B0=>'X', 
                C0=>'X', D0=>'X', M0=>lvds_rx_24_inst_sr_2, CE=>'X', 
                CLK=>sdr_rxclk_c, LSR=>'X', OFX1=>open, F1=>open, 
                Q1=>lvds_rx_24_inst_sr_5, OFX0=>open, F0=>open, 
                Q0=>lvds_rx_24_inst_sr_4);
    lvds_rx_24_inst_SLICE_166I: SLOGICB
      generic map (M0MUX=>"SIG", M1MUX=>"SIG", CLKMUX=>"SIG", CEMUX=>"VHI", 
                   SRMODE=>"ASYNC", CHECK_M1=>TRUE, CHECK_M0=>TRUE)
      port map (M1=>lvds_rx_24_inst_sr_5, FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', 
                C1=>'X', D1=>'X', DI1=>'X', DI0=>'X', A0=>'X', B0=>'X', 
                C0=>'X', D0=>'X', M0=>lvds_rx_24_inst_sr_4, CE=>'X', 
                CLK=>sdr_rxclk_c, LSR=>'X', OFX1=>open, F1=>open, 
                Q1=>lvds_rx_24_inst_sr_7, OFX0=>open, F0=>open, 
                Q0=>lvds_rx_24_inst_sr_6);
    lvds_rx_24_inst_SLICE_167I: SLOGICB
      generic map (M0MUX=>"SIG", M1MUX=>"SIG", CLKMUX=>"SIG", CEMUX=>"VHI", 
                   SRMODE=>"ASYNC", CHECK_M1=>TRUE, CHECK_M0=>TRUE)
      port map (M1=>lvds_rx_24_inst_sr_7, FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', 
                C1=>'X', D1=>'X', DI1=>'X', DI0=>'X', A0=>'X', B0=>'X', 
                C0=>'X', D0=>'X', M0=>lvds_rx_24_inst_sr_6, CE=>'X', 
                CLK=>sdr_rxclk_c, LSR=>'X', OFX1=>open, F1=>open, 
                Q1=>lvds_rx_24_inst_sr_9, OFX0=>open, F0=>open, 
                Q0=>lvds_rx_24_inst_sr_8);
    lvds_rx_24_inst_SLICE_168I: SLOGICB
      generic map (M0MUX=>"SIG", M1MUX=>"SIG", CLKMUX=>"SIG", CEMUX=>"VHI", 
                   SRMODE=>"ASYNC", CHECK_M1=>TRUE, CHECK_M0=>TRUE)
      port map (M1=>lvds_rx_24_inst_sr_9, FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', 
                C1=>'X', D1=>'X', DI1=>'X', DI0=>'X', A0=>'X', B0=>'X', 
                C0=>'X', D0=>'X', M0=>lvds_rx_24_inst_sr_8, CE=>'X', 
                CLK=>sdr_rxclk_c, LSR=>'X', OFX1=>open, F1=>open, 
                Q1=>lvds_rx_24_inst_sr_11, OFX0=>open, F0=>open, 
                Q0=>lvds_rx_24_inst_sr_10);
    lvds_rx_24_inst_SLICE_169I: SLOGICB
      generic map (M0MUX=>"SIG", M1MUX=>"SIG", CLKMUX=>"SIG", CEMUX=>"VHI", 
                   SRMODE=>"ASYNC", CHECK_M1=>TRUE, CHECK_M0=>TRUE)
      port map (M1=>lvds_rx_24_inst_sr_11, FXA=>'X', FXB=>'X', A1=>'X', 
                B1=>'X', C1=>'X', D1=>'X', DI1=>'X', DI0=>'X', A0=>'X', 
                B0=>'X', C0=>'X', D0=>'X', M0=>lvds_rx_24_inst_sr_10, CE=>'X', 
                CLK=>sdr_rxclk_c, LSR=>'X', OFX1=>open, F1=>open, 
                Q1=>lvds_rx_24_inst_sr_13, OFX0=>open, F0=>open, 
                Q0=>lvds_rx_24_inst_sr_12);
    lvds_rx_24_inst_SLICE_170I: SLOGICB
      generic map (M0MUX=>"SIG", M1MUX=>"SIG", CLKMUX=>"SIG", CEMUX=>"VHI", 
                   SRMODE=>"ASYNC", CHECK_M1=>TRUE, CHECK_M0=>TRUE)
      port map (M1=>lvds_rx_24_inst_sr_13, FXA=>'X', FXB=>'X', A1=>'X', 
                B1=>'X', C1=>'X', D1=>'X', DI1=>'X', DI0=>'X', A0=>'X', 
                B0=>'X', C0=>'X', D0=>'X', M0=>lvds_rx_24_inst_sr_12, CE=>'X', 
                CLK=>sdr_rxclk_c, LSR=>'X', OFX1=>open, F1=>open, 
                Q1=>lvds_rx_24_inst_sr_15, OFX0=>open, F0=>open, 
                Q0=>lvds_rx_24_inst_sr_14);
    lvds_rx_24_inst_SLICE_171I: SLOGICB
      generic map (M0MUX=>"SIG", M1MUX=>"SIG", CLKMUX=>"SIG", CEMUX=>"VHI", 
                   SRMODE=>"ASYNC", CHECK_M1=>TRUE, CHECK_M0=>TRUE)
      port map (M1=>lvds_rx_24_inst_sr_15, FXA=>'X', FXB=>'X', A1=>'X', 
                B1=>'X', C1=>'X', D1=>'X', DI1=>'X', DI0=>'X', A0=>'X', 
                B0=>'X', C0=>'X', D0=>'X', M0=>lvds_rx_24_inst_sr_14, CE=>'X', 
                CLK=>sdr_rxclk_c, LSR=>'X', OFX1=>open, F1=>open, 
                Q1=>lvds_rx_24_inst_sr_17, OFX0=>open, F0=>open, 
                Q0=>lvds_rx_24_inst_sr_16);
    lvds_rx_24_inst_SLICE_172I: SLOGICB
      generic map (M0MUX=>"SIG", M1MUX=>"SIG", CLKMUX=>"SIG", CEMUX=>"VHI", 
                   SRMODE=>"ASYNC", CHECK_M1=>TRUE, CHECK_M0=>TRUE)
      port map (M1=>lvds_rx_24_inst_sr_17, FXA=>'X', FXB=>'X', A1=>'X', 
                B1=>'X', C1=>'X', D1=>'X', DI1=>'X', DI0=>'X', A0=>'X', 
                B0=>'X', C0=>'X', D0=>'X', M0=>lvds_rx_24_inst_sr_16, CE=>'X', 
                CLK=>sdr_rxclk_c, LSR=>'X', OFX1=>open, F1=>open, 
                Q1=>lvds_rx_24_inst_sr_19, OFX0=>open, F0=>open, 
                Q0=>lvds_rx_24_inst_sr_18);
    lvds_rx_24_inst_SLICE_173I: SLOGICB
      generic map (M0MUX=>"SIG", M1MUX=>"SIG", CLKMUX=>"SIG", CEMUX=>"VHI", 
                   SRMODE=>"ASYNC", CHECK_M1=>TRUE, CHECK_M0=>TRUE)
      port map (M1=>lvds_rx_24_inst_sr_19, FXA=>'X', FXB=>'X', A1=>'X', 
                B1=>'X', C1=>'X', D1=>'X', DI1=>'X', DI0=>'X', A0=>'X', 
                B0=>'X', C0=>'X', D0=>'X', M0=>lvds_rx_24_inst_sr_18, CE=>'X', 
                CLK=>sdr_rxclk_c, LSR=>'X', OFX1=>open, F1=>open, 
                Q1=>lvds_rx_24_inst_sr_21, OFX0=>open, F0=>open, 
                Q0=>lvds_rx_24_inst_sr_20);
    lvds_rx_24_inst_SLICE_174I: SLOGICB
      generic map (M0MUX=>"SIG", M1MUX=>"SIG", CLKMUX=>"SIG", CEMUX=>"VHI", 
                   SRMODE=>"ASYNC", CHECK_M1=>TRUE, CHECK_M0=>TRUE)
      port map (M1=>lvds_rx_24_inst_sr_21, FXA=>'X', FXB=>'X', A1=>'X', 
                B1=>'X', C1=>'X', D1=>'X', DI1=>'X', DI0=>'X', A0=>'X', 
                B0=>'X', C0=>'X', D0=>'X', M0=>lvds_rx_24_inst_sr_20, CE=>'X', 
                CLK=>sdr_rxclk_c, LSR=>'X', OFX1=>open, F1=>open, 
                Q1=>lvds_rx_24_inst_sr_23, OFX0=>open, F0=>open, 
                Q0=>lvds_rx_24_inst_sr_22);
    lvds_rx_24_inst_SLICE_175I: SLOGICB
      generic map (M0MUX=>"SIG", M1MUX=>"SIG", CLKMUX=>"SIG", CEMUX=>"VHI", 
                   SRMODE=>"ASYNC", CHECK_M1=>TRUE, CHECK_M0=>TRUE)
      port map (M1=>lvds_rx_24_inst_sr_23, FXA=>'X', FXB=>'X', A1=>'X', 
                B1=>'X', C1=>'X', D1=>'X', DI1=>'X', DI0=>'X', A0=>'X', 
                B0=>'X', C0=>'X', D0=>'X', M0=>lvds_rx_24_inst_sr_22, CE=>'X', 
                CLK=>sdr_rxclk_c, LSR=>'X', OFX1=>open, F1=>open, 
                Q1=>lvds_rx_24_inst_sr_25, OFX0=>open, F0=>open, 
                Q0=>lvds_rx_24_inst_sr_24);
    lvds_rx_24_inst_SLICE_176I: SLOGICB
      generic map (M0MUX=>"SIG", M1MUX=>"SIG", CLKMUX=>"SIG", CEMUX=>"VHI", 
                   SRMODE=>"ASYNC", CHECK_M1=>TRUE, CHECK_M0=>TRUE)
      port map (M1=>lvds_rx_24_inst_sr_25, FXA=>'X', FXB=>'X', A1=>'X', 
                B1=>'X', C1=>'X', D1=>'X', DI1=>'X', DI0=>'X', A0=>'X', 
                B0=>'X', C0=>'X', D0=>'X', M0=>lvds_rx_24_inst_sr_24, CE=>'X', 
                CLK=>sdr_rxclk_c, LSR=>'X', OFX1=>open, F1=>open, 
                Q1=>lvds_rx_24_inst_sr_27, OFX0=>open, F0=>open, 
                Q0=>lvds_rx_24_inst_sr_26);
    lvds_rx_24_inst_SLICE_177I: SLOGICB
      generic map (M0MUX=>"SIG", M1MUX=>"SIG", CLKMUX=>"SIG", CEMUX=>"VHI", 
                   SRMODE=>"ASYNC", CHECK_M1=>TRUE, CHECK_M0=>TRUE)
      port map (M1=>lvds_rx_24_inst_sr_27, FXA=>'X', FXB=>'X', A1=>'X', 
                B1=>'X', C1=>'X', D1=>'X', DI1=>'X', DI0=>'X', A0=>'X', 
                B0=>'X', C0=>'X', D0=>'X', M0=>lvds_rx_24_inst_sr_26, CE=>'X', 
                CLK=>sdr_rxclk_c, LSR=>'X', OFX1=>open, F1=>open, 
                Q1=>lvds_rx_24_inst_sr_29, OFX0=>open, F0=>open, 
                Q0=>lvds_rx_24_inst_sr_28);
    lvds_rx_24_inst_SLICE_178I: SLOGICB
      generic map (M0MUX=>"SIG", M1MUX=>"SIG", CLKMUX=>"SIG", CEMUX=>"VHI", 
                   SRMODE=>"ASYNC", CHECK_M1=>TRUE, CHECK_M0=>TRUE)
      port map (M1=>lvds_rx_24_inst_sr_29, FXA=>'X', FXB=>'X', A1=>'X', 
                B1=>'X', C1=>'X', D1=>'X', DI1=>'X', DI0=>'X', A0=>'X', 
                B0=>'X', C0=>'X', D0=>'X', M0=>lvds_rx_24_inst_sr_28, CE=>'X', 
                CLK=>sdr_rxclk_c, LSR=>'X', OFX1=>open, F1=>open, 
                Q1=>lvds_rx_24_inst_sr_31, OFX0=>open, F0=>open, 
                Q0=>lvds_rx_24_inst_sr_30);
    SLICE_180I: SLOGICB
      generic map (CLKMUX=>"SIG", CEMUX=>"SIG", SRMODE=>"ASYNC", 
                   LUT0_INITVAL=>X"0004", LUT1_INITVAL=>X"0400", 
                   REG1_SD=>"VHI", REG0_SD=>"VHI", CHECK_DI1=>TRUE, 
                   CHECK_DI0=>TRUE, CHECK_CE=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>n102, B1=>real_candidate, 
                C1=>r_state_1, D1=>n13080, DI1=>match_count_next_1, 
                DI0=>match_count_next_0, A0=>n12902, B0=>n14316, 
                C0=>candidate_sr_30, D0=>n12896, M0=>'X', 
                CE=>lvds_rx_09_inst_sdr_rxclk_c_enable_86, CLK=>sdr_rxclk_c, 
                LSR=>'X', OFX1=>open, F1=>match_count_next_1, 
                Q1=>match_count_1, OFX0=>open, F0=>match_count_next_0, 
                Q0=>match_count_0);
    SLICE_181I: SLOGICB
      generic map (CLKMUX=>"SIG", CEMUX=>"SIG", GSR=>"DISABLED", 
                   SRMODE=>"ASYNC", LUT0_INITVAL=>X"ACAA", 
                   LUT1_INITVAL=>X"0200", REG0_SD=>"VHI", CHECK_DI0=>TRUE, 
                   CHECK_CE=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', 
                A1=>i2c_slave_i2c_slave_inst_scl_i_reg, 
                B1=>i2c_slave_i2c_slave_inst_last_scl_i_reg, 
                C1=>i2c_slave_i2c_slave_inst_state_reg_2, D1=>state_reg_0, 
                DI1=>'X', DI0=>n13402, A0=>mode_read_reg, B0=>sda_i_reg, 
                C0=>n14299, D0=>n12584, M0=>'X', 
                CE=>i2c_slave_i2c_slave_inst_int_clk_out_enable_29, 
                CLK=>int_clk_out, LSR=>'X', OFX1=>open, F1=>n12584, Q1=>open, 
                OFX0=>open, F0=>n13402, Q0=>mode_read_reg);
    my_led_SLICE_182I: SLOGICB
      generic map (CLKMUX=>"SIG", CEMUX=>"VHI", LSRMUX=>"SIG", GSR=>"DISABLED", 
                   SRMODE=>"ASYNC", LUT0_INITVAL=>X"8888", 
                   LUT1_INITVAL=>X"8888", REG1_SD=>"VHI", REG0_SD=>"VHI", 
                   CHECK_DI1=>TRUE, CHECK_DI0=>TRUE, CHECK_LSR=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>my_led_n134, B1=>my_led_n51, 
                C1=>'X', D1=>'X', DI1=>my_led_n162, DI0=>my_led_n163, 
                A0=>my_led_n135, B0=>my_led_n51, C0=>'X', D0=>'X', M0=>'X', 
                CE=>'X', CLK=>int_clk_out, LSR=>fpga_led_N_383, OFX1=>open, 
                F1=>my_led_n162, Q1=>my_led_counter_1, OFX0=>open, 
                F0=>my_led_n163, Q0=>my_led_counter_0);
    my_led_SLICE_183I: SLOGICB
      generic map (CLKMUX=>"SIG", CEMUX=>"VHI", LSRMUX=>"SIG", GSR=>"DISABLED", 
                   SRMODE=>"ASYNC", LUT0_INITVAL=>X"8888", 
                   LUT1_INITVAL=>X"8888", REG1_SD=>"VHI", REG0_SD=>"VHI", 
                   CHECK_DI1=>TRUE, CHECK_DI0=>TRUE, CHECK_LSR=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>my_led_n132, B1=>my_led_n51, 
                C1=>'X', D1=>'X', DI1=>my_led_n160, DI0=>my_led_n161, 
                A0=>my_led_n133, B0=>my_led_n51, C0=>'X', D0=>'X', M0=>'X', 
                CE=>'X', CLK=>int_clk_out, LSR=>fpga_led_N_383, OFX1=>open, 
                F1=>my_led_n160, Q1=>my_led_counter_3, OFX0=>open, 
                F0=>my_led_n161, Q0=>my_led_counter_2);
    my_led_SLICE_184I: SLOGICB
      generic map (CLKMUX=>"SIG", CEMUX=>"VHI", LSRMUX=>"SIG", GSR=>"DISABLED", 
                   SRMODE=>"ASYNC", LUT0_INITVAL=>X"8888", 
                   LUT1_INITVAL=>X"8888", REG1_SD=>"VHI", REG0_SD=>"VHI", 
                   CHECK_DI1=>TRUE, CHECK_DI0=>TRUE, CHECK_LSR=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>my_led_n130, B1=>my_led_n51, 
                C1=>'X', D1=>'X', DI1=>my_led_n158, DI0=>my_led_n159, 
                A0=>my_led_n131, B0=>my_led_n51, C0=>'X', D0=>'X', M0=>'X', 
                CE=>'X', CLK=>int_clk_out, LSR=>fpga_led_N_383, OFX1=>open, 
                F1=>my_led_n158, Q1=>my_led_counter_5, OFX0=>open, 
                F0=>my_led_n159, Q0=>my_led_counter_4);
    my_led_SLICE_185I: SLOGICB
      generic map (CLKMUX=>"SIG", CEMUX=>"VHI", LSRMUX=>"SIG", GSR=>"DISABLED", 
                   SRMODE=>"ASYNC", LUT0_INITVAL=>X"8888", 
                   LUT1_INITVAL=>X"8888", REG1_SD=>"VHI", REG0_SD=>"VHI", 
                   CHECK_DI1=>TRUE, CHECK_DI0=>TRUE, CHECK_LSR=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>my_led_n128, B1=>my_led_n51, 
                C1=>'X', D1=>'X', DI1=>my_led_n156, DI0=>my_led_n157, 
                A0=>my_led_n129, B0=>my_led_n51, C0=>'X', D0=>'X', M0=>'X', 
                CE=>'X', CLK=>int_clk_out, LSR=>fpga_led_N_383, OFX1=>open, 
                F1=>my_led_n156, Q1=>my_led_counter_7, OFX0=>open, 
                F0=>my_led_n157, Q0=>my_led_counter_6);
    my_led_SLICE_186I: SLOGICB
      generic map (CLKMUX=>"SIG", CEMUX=>"VHI", LSRMUX=>"SIG", GSR=>"DISABLED", 
                   SRMODE=>"ASYNC", LUT0_INITVAL=>X"8888", 
                   LUT1_INITVAL=>X"8888", REG1_SD=>"VHI", REG0_SD=>"VHI", 
                   CHECK_DI1=>TRUE, CHECK_DI0=>TRUE, CHECK_LSR=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>my_led_n126, B1=>my_led_n51, 
                C1=>'X', D1=>'X', DI1=>my_led_n154, DI0=>my_led_n155, 
                A0=>my_led_n127, B0=>my_led_n51, C0=>'X', D0=>'X', M0=>'X', 
                CE=>'X', CLK=>int_clk_out, LSR=>fpga_led_N_383, OFX1=>open, 
                F1=>my_led_n154, Q1=>my_led_counter_9, OFX0=>open, 
                F0=>my_led_n155, Q0=>my_led_counter_8);
    my_led_SLICE_187I: SLOGICB
      generic map (CLKMUX=>"SIG", CEMUX=>"VHI", LSRMUX=>"SIG", GSR=>"DISABLED", 
                   SRMODE=>"ASYNC", LUT0_INITVAL=>X"8888", 
                   LUT1_INITVAL=>X"8888", REG1_SD=>"VHI", REG0_SD=>"VHI", 
                   CHECK_DI1=>TRUE, CHECK_DI0=>TRUE, CHECK_LSR=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>my_led_n124, B1=>my_led_n51, 
                C1=>'X', D1=>'X', DI1=>my_led_n152, DI0=>my_led_n153, 
                A0=>my_led_n125, B0=>my_led_n51, C0=>'X', D0=>'X', M0=>'X', 
                CE=>'X', CLK=>int_clk_out, LSR=>fpga_led_N_383, OFX1=>open, 
                F1=>my_led_n152, Q1=>my_led_counter_11, OFX0=>open, 
                F0=>my_led_n153, Q0=>my_led_counter_10);
    my_led_SLICE_188I: SLOGICB
      generic map (CLKMUX=>"SIG", CEMUX=>"VHI", LSRMUX=>"SIG", GSR=>"DISABLED", 
                   SRMODE=>"ASYNC", LUT0_INITVAL=>X"8888", 
                   LUT1_INITVAL=>X"8888", REG1_SD=>"VHI", REG0_SD=>"VHI", 
                   CHECK_DI1=>TRUE, CHECK_DI0=>TRUE, CHECK_LSR=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>my_led_n122, B1=>my_led_n51, 
                C1=>'X', D1=>'X', DI1=>my_led_n150, DI0=>my_led_n151, 
                A0=>my_led_n123, B0=>my_led_n51, C0=>'X', D0=>'X', M0=>'X', 
                CE=>'X', CLK=>int_clk_out, LSR=>fpga_led_N_383, OFX1=>open, 
                F1=>my_led_n150, Q1=>my_led_counter_13, OFX0=>open, 
                F0=>my_led_n151, Q0=>my_led_counter_12);
    my_led_SLICE_189I: SLOGICB
      generic map (CLKMUX=>"SIG", CEMUX=>"VHI", LSRMUX=>"SIG", GSR=>"DISABLED", 
                   SRMODE=>"ASYNC", LUT0_INITVAL=>X"8888", 
                   LUT1_INITVAL=>X"8888", REG1_SD=>"VHI", REG0_SD=>"VHI", 
                   CHECK_DI1=>TRUE, CHECK_DI0=>TRUE, CHECK_LSR=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>my_led_n120, B1=>my_led_n51, 
                C1=>'X', D1=>'X', DI1=>my_led_n148, DI0=>my_led_n149, 
                A0=>my_led_n121, B0=>my_led_n51, C0=>'X', D0=>'X', M0=>'X', 
                CE=>'X', CLK=>int_clk_out, LSR=>fpga_led_N_383, OFX1=>open, 
                F1=>my_led_n148, Q1=>my_led_counter_15, OFX0=>open, 
                F0=>my_led_n149, Q0=>my_led_counter_14);
    my_led_SLICE_190I: SLOGICB
      generic map (CLKMUX=>"SIG", CEMUX=>"VHI", LSRMUX=>"SIG", GSR=>"DISABLED", 
                   SRMODE=>"ASYNC", LUT0_INITVAL=>X"8888", 
                   LUT1_INITVAL=>X"8888", REG1_SD=>"VHI", REG0_SD=>"VHI", 
                   CHECK_DI1=>TRUE, CHECK_DI0=>TRUE, CHECK_LSR=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>my_led_n118, B1=>my_led_n51, 
                C1=>'X', D1=>'X', DI1=>my_led_n146, DI0=>my_led_n147, 
                A0=>my_led_n119, B0=>my_led_n51, C0=>'X', D0=>'X', M0=>'X', 
                CE=>'X', CLK=>int_clk_out, LSR=>fpga_led_N_383, OFX1=>open, 
                F1=>my_led_n146, Q1=>my_led_counter_17, OFX0=>open, 
                F0=>my_led_n147, Q0=>my_led_counter_16);
    my_led_SLICE_191I: SLOGICB
      generic map (CLKMUX=>"SIG", CEMUX=>"VHI", LSRMUX=>"SIG", GSR=>"DISABLED", 
                   SRMODE=>"ASYNC", LUT0_INITVAL=>X"8888", 
                   LUT1_INITVAL=>X"8888", REG1_SD=>"VHI", REG0_SD=>"VHI", 
                   CHECK_DI1=>TRUE, CHECK_DI0=>TRUE, CHECK_LSR=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>my_led_n116, B1=>my_led_n51, 
                C1=>'X', D1=>'X', DI1=>my_led_n144, DI0=>my_led_n145, 
                A0=>my_led_n117, B0=>my_led_n51, C0=>'X', D0=>'X', M0=>'X', 
                CE=>'X', CLK=>int_clk_out, LSR=>fpga_led_N_383, OFX1=>open, 
                F1=>my_led_n144, Q1=>my_led_counter_19, OFX0=>open, 
                F0=>my_led_n145, Q0=>my_led_counter_18);
    my_led_SLICE_192I: SLOGICB
      generic map (CLKMUX=>"SIG", CEMUX=>"VHI", LSRMUX=>"SIG", GSR=>"DISABLED", 
                   SRMODE=>"ASYNC", LUT0_INITVAL=>X"8888", 
                   LUT1_INITVAL=>X"8888", REG1_SD=>"VHI", REG0_SD=>"VHI", 
                   CHECK_DI1=>TRUE, CHECK_DI0=>TRUE, CHECK_LSR=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>my_led_n114, B1=>my_led_n51, 
                C1=>'X', D1=>'X', DI1=>my_led_n142, DI0=>my_led_n143, 
                A0=>my_led_n115, B0=>my_led_n51, C0=>'X', D0=>'X', M0=>'X', 
                CE=>'X', CLK=>int_clk_out, LSR=>fpga_led_N_383, OFX1=>open, 
                F1=>my_led_n142, Q1=>my_led_counter_21, OFX0=>open, 
                F0=>my_led_n143, Q0=>my_led_counter_20);
    my_led_SLICE_193I: SLOGICB
      generic map (CLKMUX=>"SIG", CEMUX=>"VHI", LSRMUX=>"SIG", GSR=>"DISABLED", 
                   SRMODE=>"ASYNC", LUT0_INITVAL=>X"8888", 
                   LUT1_INITVAL=>X"8888", REG1_SD=>"VHI", REG0_SD=>"VHI", 
                   CHECK_DI1=>TRUE, CHECK_DI0=>TRUE, CHECK_LSR=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>my_led_n112, B1=>my_led_n51, 
                C1=>'X', D1=>'X', DI1=>my_led_n140, DI0=>my_led_n141, 
                A0=>my_led_n113, B0=>my_led_n51, C0=>'X', D0=>'X', M0=>'X', 
                CE=>'X', CLK=>int_clk_out, LSR=>fpga_led_N_383, OFX1=>open, 
                F1=>my_led_n140, Q1=>my_led_counter_23, OFX0=>open, 
                F0=>my_led_n141, Q0=>my_led_counter_22);
    my_led_SLICE_194I: SLOGICB
      generic map (CLKMUX=>"SIG", CEMUX=>"VHI", LSRMUX=>"SIG", GSR=>"DISABLED", 
                   SRMODE=>"ASYNC", LUT0_INITVAL=>X"8888", 
                   LUT1_INITVAL=>X"8888", REG1_SD=>"VHI", REG0_SD=>"VHI", 
                   CHECK_DI1=>TRUE, CHECK_DI0=>TRUE, CHECK_LSR=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>my_led_n110, B1=>my_led_n51, 
                C1=>'X', D1=>'X', DI1=>my_led_n138, DI0=>my_led_n139, 
                A0=>my_led_n111, B0=>my_led_n51, C0=>'X', D0=>'X', M0=>'X', 
                CE=>'X', CLK=>int_clk_out, LSR=>fpga_led_N_383, OFX1=>open, 
                F1=>my_led_n138, Q1=>my_led_counter_25, OFX0=>open, 
                F0=>my_led_n139, Q0=>my_led_counter_24);
    SLICE_195I: SLOGICB
      generic map (CLKMUX=>"SIG", CEMUX=>"SIG", SRMODE=>"ASYNC", 
                   LUT0_INITVAL=>X"A3AF", LUT1_INITVAL=>X"EEEE", 
                   REG0_SD=>"VHI", CHECK_DI0=>TRUE, CHECK_CE=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>r_state_1, B1=>r_state_0, 
                C1=>'X', D1=>'X', DI1=>'X', DI0=>n13401, 
                A0=>r_candidate_offset, B0=>n13204, C0=>n14365, D0=>n11488, 
                M0=>'X', CE=>lvds_rx_09_inst_sdr_rxclk_c_enable_2, 
                CLK=>sdr_rxclk_c, LSR=>'X', OFX1=>open, F1=>n14365, Q1=>open, 
                OFX0=>open, F0=>n13401, Q0=>r_candidate_offset);
    lvds_rx_09_inst_SLICE_196I: SLOGICB
      generic map (M0MUX=>"SIG", CLKMUX=>"SIG", CEMUX=>"VHI", SRMODE=>"ASYNC", 
                   LUT0_INITVAL=>X"2222", LUT1_INITVAL=>X"FEFE", 
                   REG0_SD=>"VHI", CHECK_DI0=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>n14315, 
                B1=>lvds_rx_09_inst_valid_candidate_N_1125, C1=>real_candidate, 
                D1=>'X', DI1=>'X', DI0=>lvds_rx_09_inst_r_state_next_0, 
                A0=>lvds_rx_09_inst_sdr_rxclk_c_enable_2, B0=>r_state_1, 
                C0=>'X', D0=>'X', M0=>r_state_0, CE=>'X', CLK=>sdr_rxclk_c, 
                LSR=>'X', OFX1=>open, F1=>open, Q1=>open, 
                OFX0=>lvds_rx_09_inst_r_state_next_0, F0=>open, Q0=>r_state_0);
    lvds_rx_09_inst_SLICE_197I: SLOGICB
      generic map (M0MUX=>"SIG", CLKMUX=>"SIG", CEMUX=>"VHI", LSRMUX=>"INV", 
                   LUT0_INITVAL=>X"0040", LUT1_INITVAL=>X"FEFE", 
                   REG0_SD=>"VHI", CHECK_DI0=>TRUE, CHECK_LSR=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>n14315, 
                B1=>lvds_rx_09_inst_valid_candidate_N_1125, C1=>real_candidate, 
                D1=>'X', DI1=>'X', DI0=>lvds_rx_09_inst_n5716, 
                A0=>lvds_rx_09_inst_n14364, B0=>lvds_rx_09_inst_n12718, 
                C0=>lvds_rx_09_inst_n13296, D0=>n14315, M0=>r_state_1, CE=>'X', 
                CLK=>sdr_rxclk_c, LSR=>r_state_0, OFX1=>open, F1=>open, 
                Q1=>open, OFX0=>lvds_rx_09_inst_n5716, F0=>open, Q0=>r_state_1);
    lvds_rx_24_inst_SLICE_198I: SLOGICB
      generic map (CLKMUX=>"SIG", CEMUX=>"VHI", SRMODE=>"ASYNC", 
                   LUT0_INITVAL=>X"ECEC", REG0_SD=>"VHI", CHECK_DI0=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>lvds_rx_24_inst_r_state_next_0, 
                A0=>r_state_0_adj_1181, 
                B0=>lvds_rx_24_inst_sdr_rxclk_c_enable_5, 
                C0=>lvds_rx_24_inst_n9592, D0=>'X', M0=>'X', CE=>'X', 
                CLK=>sdr_rxclk_c, LSR=>'X', OFX1=>open, F1=>open, Q1=>open, 
                OFX0=>open, F0=>lvds_rx_24_inst_r_state_next_0, 
                Q0=>r_state_0_adj_1181);
    lvds_rx_24_inst_SLICE_199I: SLOGICB
      generic map (CLKMUX=>"SIG", CEMUX=>"VHI", LSRMUX=>"INV", 
                   LUT0_INITVAL=>X"CAC0", LUT1_INITVAL=>X"0E0E", 
                   REG0_SD=>"VHI", CHECK_DI0=>TRUE, CHECK_LSR=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>lvds_rx_24_inst_match_count_2, 
                B1=>lvds_rx_24_inst_match_count_1, C1=>n15, D1=>'X', DI1=>'X', 
                DI0=>lvds_rx_24_inst_n5848, A0=>lvds_rx_24_inst_n12642, 
                B0=>lvds_rx_24_inst_n9592, C0=>r_state_1_adj_1180, 
                D0=>lvds_rx_24_inst_real_candidate, M0=>'X', CE=>'X', 
                CLK=>sdr_rxclk_c, LSR=>r_state_0_adj_1181, OFX1=>open, 
                F1=>lvds_rx_24_inst_n12642, Q1=>open, OFX0=>open, 
                F0=>lvds_rx_24_inst_n5848, Q0=>r_state_1_adj_1180);
    SLICE_200I: SLOGICB
      generic map (M0MUX=>"SIG", M1MUX=>"SIG", CLKMUX=>"SIG", CEMUX=>"SIG", 
                   LSRMUX=>"INV", GSR=>"DISABLED", CHECK_M1=>TRUE, 
                   CHECK_M0=>TRUE, CHECK_CE=>TRUE, CHECK_LSR=>TRUE)
      port map (M1=>wb_dat_o_1, FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>'X', B0=>'X', C0=>'X', 
                D0=>'X', M0=>wb_dat_o_0, CE=>int_clk_out_enable_150, 
                CLK=>int_clk_out, LSR=>stm_fpga_spare5_c, OFX1=>open, F1=>open, 
                Q1=>reg0_1, OFX0=>open, F0=>open, Q0=>reg0_0);
    SLICE_201I: SLOGICB
      generic map (M0MUX=>"SIG", M1MUX=>"SIG", CLKMUX=>"SIG", CEMUX=>"SIG", 
                   LSRMUX=>"INV", GSR=>"DISABLED", CHECK_M1=>TRUE, 
                   CHECK_M0=>TRUE, CHECK_CE=>TRUE, CHECK_LSR=>TRUE)
      port map (M1=>wb_dat_o_3, FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>'X', B0=>'X', C0=>'X', 
                D0=>'X', M0=>wb_dat_o_2, CE=>int_clk_out_enable_150, 
                CLK=>int_clk_out, LSR=>stm_fpga_spare5_c, OFX1=>open, F1=>open, 
                Q1=>reg0_3, OFX0=>open, F0=>open, Q0=>reg0_2);
    SLICE_202I: SLOGICB
      generic map (M0MUX=>"SIG", M1MUX=>"SIG", CLKMUX=>"SIG", CEMUX=>"SIG", 
                   LSRMUX=>"INV", GSR=>"DISABLED", CHECK_M1=>TRUE, 
                   CHECK_M0=>TRUE, CHECK_CE=>TRUE, CHECK_LSR=>TRUE)
      port map (M1=>wb_dat_o_5, FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>'X', B0=>'X', C0=>'X', 
                D0=>'X', M0=>wb_dat_o_4, CE=>int_clk_out_enable_150, 
                CLK=>int_clk_out, LSR=>stm_fpga_spare5_c, OFX1=>open, F1=>open, 
                Q1=>reg0_5, OFX0=>open, F0=>open, Q0=>reg0_4);
    SLICE_203I: SLOGICB
      generic map (M0MUX=>"SIG", M1MUX=>"SIG", CLKMUX=>"SIG", CEMUX=>"SIG", 
                   LSRMUX=>"INV", GSR=>"DISABLED", CHECK_M1=>TRUE, 
                   CHECK_M0=>TRUE, CHECK_CE=>TRUE, CHECK_LSR=>TRUE)
      port map (M1=>wb_dat_o_7, FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>'X', B0=>'X', C0=>'X', 
                D0=>'X', M0=>wb_dat_o_6, CE=>int_clk_out_enable_150, 
                CLK=>int_clk_out, LSR=>stm_fpga_spare5_c, OFX1=>open, F1=>open, 
                Q1=>reg0_7, OFX0=>open, F0=>open, Q0=>reg0_6);
    SLICE_204I: SLOGICB
      generic map (M0MUX=>"SIG", M1MUX=>"SIG", CLKMUX=>"SIG", CEMUX=>"SIG", 
                   LSRMUX=>"INV", GSR=>"DISABLED", CHECK_M1=>TRUE, 
                   CHECK_M0=>TRUE, CHECK_CE=>TRUE, CHECK_LSR=>TRUE)
      port map (M1=>wb_dat_o_1, FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>'X', B0=>'X', C0=>'X', 
                D0=>'X', M0=>wb_dat_o_0, CE=>int_clk_out_enable_164, 
                CLK=>int_clk_out, LSR=>stm_fpga_spare5_c, OFX1=>open, F1=>open, 
                Q1=>reg1_1, OFX0=>open, F0=>open, Q0=>reg1_0);
    SLICE_205I: SLOGICB
      generic map (M0MUX=>"SIG", M1MUX=>"SIG", CLKMUX=>"SIG", CEMUX=>"SIG", 
                   LSRMUX=>"INV", GSR=>"DISABLED", CHECK_M1=>TRUE, 
                   CHECK_M0=>TRUE, CHECK_CE=>TRUE, CHECK_LSR=>TRUE)
      port map (M1=>wb_dat_o_3, FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>'X', B0=>'X', C0=>'X', 
                D0=>'X', M0=>wb_dat_o_2, CE=>int_clk_out_enable_164, 
                CLK=>int_clk_out, LSR=>stm_fpga_spare5_c, OFX1=>open, F1=>open, 
                Q1=>reg1_3, OFX0=>open, F0=>open, Q0=>reg1_2);
    SLICE_206I: SLOGICB
      generic map (M0MUX=>"SIG", M1MUX=>"SIG", CLKMUX=>"SIG", CEMUX=>"SIG", 
                   LSRMUX=>"INV", GSR=>"DISABLED", CHECK_M1=>TRUE, 
                   CHECK_M0=>TRUE, CHECK_CE=>TRUE, CHECK_LSR=>TRUE)
      port map (M1=>wb_dat_o_5, FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>'X', B0=>'X', C0=>'X', 
                D0=>'X', M0=>wb_dat_o_4, CE=>int_clk_out_enable_164, 
                CLK=>int_clk_out, LSR=>stm_fpga_spare5_c, OFX1=>open, F1=>open, 
                Q1=>reg1_5, OFX0=>open, F0=>open, Q0=>reg1_4);
    SLICE_207I: SLOGICB
      generic map (M0MUX=>"SIG", M1MUX=>"SIG", CLKMUX=>"SIG", CEMUX=>"SIG", 
                   LSRMUX=>"INV", GSR=>"DISABLED", CHECK_M1=>TRUE, 
                   CHECK_M0=>TRUE, CHECK_CE=>TRUE, CHECK_LSR=>TRUE)
      port map (M1=>wb_dat_o_7, FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>'X', B0=>'X', C0=>'X', 
                D0=>'X', M0=>wb_dat_o_6, CE=>int_clk_out_enable_164, 
                CLK=>int_clk_out, LSR=>stm_fpga_spare5_c, OFX1=>open, F1=>open, 
                Q1=>reg1_7, OFX0=>open, F0=>open, Q0=>reg1_6);
    SLICE_208I: SLOGICB
      generic map (M0MUX=>"SIG", M1MUX=>"SIG", CLKMUX=>"SIG", CEMUX=>"SIG", 
                   LSRMUX=>"INV", GSR=>"DISABLED", CHECK_M1=>TRUE, 
                   CHECK_M0=>TRUE, CHECK_CE=>TRUE, CHECK_LSR=>TRUE)
      port map (M1=>wb_dat_o_1, FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>'X', B0=>'X', C0=>'X', 
                D0=>'X', M0=>wb_dat_o_0, CE=>int_clk_out_enable_171, 
                CLK=>int_clk_out, LSR=>stm_fpga_spare5_c, OFX1=>open, F1=>open, 
                Q1=>reg2_1, OFX0=>open, F0=>open, Q0=>reg2_0);
    SLICE_209I: SLOGICB
      generic map (M0MUX=>"SIG", M1MUX=>"SIG", CLKMUX=>"SIG", CEMUX=>"SIG", 
                   LSRMUX=>"INV", GSR=>"DISABLED", CHECK_M1=>TRUE, 
                   CHECK_M0=>TRUE, CHECK_CE=>TRUE, CHECK_LSR=>TRUE)
      port map (M1=>wb_dat_o_3, FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>'X', B0=>'X', C0=>'X', 
                D0=>'X', M0=>wb_dat_o_2, CE=>int_clk_out_enable_171, 
                CLK=>int_clk_out, LSR=>stm_fpga_spare5_c, OFX1=>open, F1=>open, 
                Q1=>reg2_3, OFX0=>open, F0=>open, Q0=>reg2_2);
    SLICE_210I: SLOGICB
      generic map (M0MUX=>"SIG", M1MUX=>"SIG", CLKMUX=>"SIG", CEMUX=>"SIG", 
                   LSRMUX=>"INV", GSR=>"DISABLED", CHECK_M1=>TRUE, 
                   CHECK_M0=>TRUE, CHECK_CE=>TRUE, CHECK_LSR=>TRUE)
      port map (M1=>wb_dat_o_5, FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>'X', B0=>'X', C0=>'X', 
                D0=>'X', M0=>wb_dat_o_4, CE=>int_clk_out_enable_171, 
                CLK=>int_clk_out, LSR=>stm_fpga_spare5_c, OFX1=>open, F1=>open, 
                Q1=>reg2_5, OFX0=>open, F0=>open, Q0=>reg2_4);
    SLICE_211I: SLOGICB
      generic map (M0MUX=>"SIG", M1MUX=>"SIG", CLKMUX=>"SIG", CEMUX=>"SIG", 
                   LSRMUX=>"INV", GSR=>"DISABLED", CHECK_M1=>TRUE, 
                   CHECK_M0=>TRUE, CHECK_CE=>TRUE, CHECK_LSR=>TRUE)
      port map (M1=>wb_dat_o_7, FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>'X', B0=>'X', C0=>'X', 
                D0=>'X', M0=>wb_dat_o_6, CE=>int_clk_out_enable_171, 
                CLK=>int_clk_out, LSR=>stm_fpga_spare5_c, OFX1=>open, F1=>open, 
                Q1=>reg2_7, OFX0=>open, F0=>open, Q0=>reg2_6);
    SLICE_212I: SLOGICB
      generic map (CLKMUX=>"SIG", CEMUX=>"SIG", SRMODE=>"ASYNC", 
                   LUT0_INITVAL=>X"0E0E", LUT1_INITVAL=>X"0880", 
                   REG1_SD=>"VHI", REG0_SD=>"VHI", CHECK_DI1=>TRUE, 
                   CHECK_DI0=>TRUE, CHECK_CE=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>n14315, B1=>n14365, 
                C1=>sample_count_0, D1=>sample_count_1, 
                DI1=>sample_count_next_1, DI0=>sample_count_next_0, 
                A0=>r_state_1, B0=>r_state_0, C0=>sample_count_0, D0=>'X', 
                M0=>'X', CE=>sdr_rxclk_c_enable_88, CLK=>sdr_rxclk_c, LSR=>'X', 
                OFX1=>open, F1=>sample_count_next_1, Q1=>sample_count_1, 
                OFX0=>open, F0=>sample_count_next_0, Q0=>sample_count_0);
    SLICE_213I: SLOGICB
      generic map (CLKMUX=>"SIG", CEMUX=>"SIG", SRMODE=>"ASYNC", 
                   LUT0_INITVAL=>X"0880", LUT1_INITVAL=>X"0880", 
                   REG1_SD=>"VHI", REG0_SD=>"VHI", CHECK_DI1=>TRUE, 
                   CHECK_DI0=>TRUE, CHECK_CE=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>n14315, B1=>n14365, 
                C1=>n14304, D1=>sample_count_3, DI1=>sample_count_next_3, 
                DI0=>sample_count_next_2, A0=>n14315, B0=>n14365, C0=>n14337, 
                D0=>sample_count_2, M0=>'X', CE=>sdr_rxclk_c_enable_88, 
                CLK=>sdr_rxclk_c, LSR=>'X', OFX1=>open, 
                F1=>sample_count_next_3, Q1=>sample_count_3, OFX0=>open, 
                F0=>sample_count_next_2, Q0=>sample_count_2);
    SLICE_214I: SLOGICB
      generic map (CLKMUX=>"SIG", CEMUX=>"SIG", SRMODE=>"ASYNC", 
                   LUT0_INITVAL=>X"7080", LUT1_INITVAL=>X"4888", 
                   REG1_SD=>"VHI", REG0_SD=>"VHI", CHECK_DI1=>TRUE, 
                   CHECK_DI0=>TRUE, CHECK_CE=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>sample_count_7, B1=>n14294, 
                C1=>sample_count_6, D1=>n14268, DI1=>sample_count_next_7, 
                DI0=>lvds_rx_09_inst_sample_count_next_6, 
                A0=>lvds_rx_09_inst_sample_count_5, B0=>lvds_rx_09_inst_n14273, 
                C0=>n14294, D0=>sample_count_6, M0=>'X', 
                CE=>sdr_rxclk_c_enable_88, CLK=>sdr_rxclk_c, LSR=>'X', 
                OFX1=>open, F1=>sample_count_next_7, Q1=>sample_count_7, 
                OFX0=>open, F0=>lvds_rx_09_inst_sample_count_next_6, 
                Q0=>sample_count_6);
    SLICE_215I: SLOGICB
      generic map (CLKMUX=>"SIG", CEMUX=>"SIG", SRMODE=>"ASYNC", 
                   LUT0_INITVAL=>X"0E0E", REG0_SD=>"VHI", CHECK_DI0=>TRUE, 
                   CHECK_CE=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>sample_count_next_0_adj_1192, 
                A0=>r_state_1_adj_1180, B0=>r_state_0_adj_1181, 
                C0=>sample_count_0_adj_1187, D0=>'X', M0=>'X', 
                CE=>lvds_rx_24_inst_sdr_rxclk_c_enable_80, CLK=>sdr_rxclk_c, 
                LSR=>'X', OFX1=>open, F1=>open, Q1=>open, OFX0=>open, 
                F0=>sample_count_next_0_adj_1192, Q0=>sample_count_0_adj_1187);
    SLICE_216I: SLOGICB
      generic map (CLKMUX=>"SIG", CEMUX=>"SIG", SRMODE=>"ASYNC", 
                   LUT0_INITVAL=>X"0880", LUT1_INITVAL=>X"FFDF", 
                   REG0_SD=>"VHI", CHECK_DI0=>TRUE, CHECK_CE=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>lvds_rx_24_inst_n13280, 
                B1=>lvds_rx_24_inst_n12254, C1=>sample_count_1_adj_1186, 
                D1=>sample_count_7_adj_1182, DI1=>'X', 
                DI0=>sample_count_next_1_adj_1191, A0=>n15, B0=>n14360, 
                C0=>sample_count_0_adj_1187, D0=>sample_count_1_adj_1186, 
                M0=>'X', CE=>lvds_rx_24_inst_sdr_rxclk_c_enable_80, 
                CLK=>sdr_rxclk_c, LSR=>'X', OFX1=>open, F1=>n15, Q1=>open, 
                OFX0=>open, F0=>sample_count_next_1_adj_1191, 
                Q0=>sample_count_1_adj_1186);
    SLICE_217I: SLOGICB
      generic map (CLKMUX=>"SIG", CEMUX=>"SIG", SRMODE=>"ASYNC", 
                   LUT0_INITVAL=>X"0880", LUT1_INITVAL=>X"8888", 
                   REG0_SD=>"VHI", CHECK_DI0=>TRUE, CHECK_CE=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>sample_count_1_adj_1186, 
                B1=>sample_count_0_adj_1187, C1=>'X', D1=>'X', DI1=>'X', 
                DI0=>sample_count_next_2_adj_1190, A0=>n15, B0=>n14360, 
                C0=>n14338, D0=>sample_count_2_adj_1185, M0=>'X', 
                CE=>lvds_rx_24_inst_sdr_rxclk_c_enable_80, CLK=>sdr_rxclk_c, 
                LSR=>'X', OFX1=>open, F1=>n14338, Q1=>open, OFX0=>open, 
                F0=>sample_count_next_2_adj_1190, Q0=>sample_count_2_adj_1185);
    SLICE_218I: SLOGICB
      generic map (CLKMUX=>"SIG", CEMUX=>"SIG", SRMODE=>"ASYNC", 
                   LUT0_INITVAL=>X"0880", LUT1_INITVAL=>X"EEEE", 
                   REG0_SD=>"VHI", CHECK_DI0=>TRUE, CHECK_CE=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>r_state_1_adj_1180, 
                B1=>r_state_0_adj_1181, C1=>'X', D1=>'X', DI1=>'X', 
                DI0=>sample_count_next_3_adj_1189, A0=>n15, B0=>n14360, 
                C0=>n14305, D0=>sample_count_3_adj_1184, M0=>'X', 
                CE=>lvds_rx_24_inst_sdr_rxclk_c_enable_80, CLK=>sdr_rxclk_c, 
                LSR=>'X', OFX1=>open, F1=>n14360, Q1=>open, OFX0=>open, 
                F0=>sample_count_next_3_adj_1189, Q0=>sample_count_3_adj_1184);
    lvds_rx_24_inst_SLICE_219I: SLOGICB
      generic map (CLKMUX=>"SIG", CEMUX=>"SIG", SRMODE=>"ASYNC", 
                   LUT0_INITVAL=>X"7080", LUT1_INITVAL=>X"8000", 
                   REG0_SD=>"VHI", CHECK_DI0=>TRUE, CHECK_CE=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>sample_count_2_adj_1185, 
                B1=>n14338, C1=>lvds_rx_24_inst_sample_count_4, 
                D1=>sample_count_3_adj_1184, DI1=>'X', 
                DI0=>lvds_rx_24_inst_sample_count_next_6, 
                A0=>lvds_rx_24_inst_sample_count_5, B0=>lvds_rx_24_inst_n14274, 
                C0=>n14284, D0=>sample_count_6_adj_1183, M0=>'X', 
                CE=>lvds_rx_24_inst_sdr_rxclk_c_enable_80, CLK=>sdr_rxclk_c, 
                LSR=>'X', OFX1=>open, F1=>lvds_rx_24_inst_n14274, Q1=>open, 
                OFX0=>open, F0=>lvds_rx_24_inst_sample_count_next_6, 
                Q0=>sample_count_6_adj_1183);
    SLICE_220I: SLOGICB
      generic map (CLKMUX=>"SIG", CEMUX=>"SIG", SRMODE=>"ASYNC", 
                   LUT0_INITVAL=>X"4888", LUT1_INITVAL=>X"E0E0", 
                   REG0_SD=>"VHI", CHECK_DI0=>TRUE, CHECK_CE=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>r_state_1_adj_1180, 
                B1=>r_state_0_adj_1181, C1=>n15, D1=>'X', DI1=>'X', 
                DI0=>sample_count_next_7_adj_1188, A0=>sample_count_7_adj_1182, 
                B0=>n14284, C0=>sample_count_6_adj_1183, D0=>n14269, M0=>'X', 
                CE=>lvds_rx_24_inst_sdr_rxclk_c_enable_80, CLK=>sdr_rxclk_c, 
                LSR=>'X', OFX1=>open, F1=>n14284, Q1=>open, OFX0=>open, 
                F0=>sample_count_next_7_adj_1188, Q0=>sample_count_7_adj_1182);
    i2c_slave_i2c_slave_inst_SLICE_221I: SLOGICB
      generic map (CLKMUX=>"SIG", CEMUX=>"SIG", REG0_REGSET=>"SET", 
                   GSR=>"DISABLED", SRMODE=>"ASYNC", LUT0_INITVAL=>X"8000", 
                   LUT1_INITVAL=>X"8001", REG0_SD=>"VHI", CHECK_DI0=>TRUE, 
                   CHECK_CE=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', 
                A1=>i2c_slave_i2c_slave_inst_sda_i_filter_0, 
                B1=>i2c_slave_i2c_slave_inst_sda_i_filter_3, 
                C1=>i2c_slave_i2c_slave_inst_sda_i_filter_1, 
                D1=>i2c_slave_i2c_slave_inst_sda_i_filter_2, DI1=>'X', 
                DI0=>i2c_slave_i2c_slave_inst_sda_i_reg_N_943, 
                A0=>i2c_slave_i2c_slave_inst_sda_i_filter_1, 
                B0=>i2c_slave_i2c_slave_inst_sda_i_filter_2, 
                C0=>i2c_slave_i2c_slave_inst_sda_i_filter_0, 
                D0=>i2c_slave_i2c_slave_inst_sda_i_filter_3, M0=>'X', 
                CE=>i2c_slave_i2c_slave_inst_int_clk_out_enable_22, 
                CLK=>int_clk_out, LSR=>'X', OFX1=>open, 
                F1=>i2c_slave_i2c_slave_inst_int_clk_out_enable_22, Q1=>open, 
                OFX0=>open, F0=>i2c_slave_i2c_slave_inst_sda_i_reg_N_943, 
                Q0=>sda_i_reg);
    SLICE_222I: SLOGICB
      generic map (CLKMUX=>"SIG", CEMUX=>"SIG", GSR=>"DISABLED", 
                   SRMODE=>"ASYNC", LUT0_INITVAL=>X"DDDD", REG0_SD=>"VHI", 
                   CHECK_DI0=>TRUE, CHECK_CE=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>ufl_p7_sel_7_N_35_0, 
                A0=>stm_fpga_spare5_c, B0=>wb_dat_o_0, C0=>'X', D0=>'X', 
                M0=>'X', CE=>int_clk_out_enable_128, CLK=>int_clk_out, 
                LSR=>'X', OFX1=>open, F1=>open, Q1=>open, OFX0=>open, 
                F0=>ufl_p7_sel_7_N_35_0, Q0=>spi1_test_pattern_0);
    SLICE_224I: SLOGICB
      generic map (CLKMUX=>"SIG", CEMUX=>"SIG", GSR=>"DISABLED", 
                   SRMODE=>"ASYNC", LUT0_INITVAL=>X"DDDD", 
                   LUT1_INITVAL=>X"DDDD", REG1_SD=>"VHI", REG0_SD=>"VHI", 
                   CHECK_DI1=>TRUE, CHECK_DI0=>TRUE, CHECK_CE=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>stm_fpga_spare5_c, 
                B1=>wb_dat_o_3, C1=>'X', D1=>'X', 
                DI1=>tx_lvds_test_pattern_31_N_119_27, 
                DI0=>tx_lvds_test_pattern_31_N_119_26, A0=>stm_fpga_spare5_c, 
                B0=>wb_dat_o_2, C0=>'X', D0=>'X', M0=>'X', 
                CE=>int_clk_out_enable_128, CLK=>int_clk_out, LSR=>'X', 
                OFX1=>open, F1=>tx_lvds_test_pattern_31_N_119_27, 
                Q1=>spi1_test_pattern_3, OFX0=>open, 
                F0=>tx_lvds_test_pattern_31_N_119_26, Q0=>spi1_test_pattern_2);
    SLICE_226I: SLOGICB
      generic map (CLKMUX=>"SIG", CEMUX=>"SIG", GSR=>"DISABLED", 
                   SRMODE=>"ASYNC", LUT0_INITVAL=>X"DDDD", REG0_SD=>"VHI", 
                   CHECK_DI0=>TRUE, CHECK_CE=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>spi3_test_pattern_15_N_83_13, 
                A0=>stm_fpga_spare5_c, B0=>wb_dat_o_5, C0=>'X', D0=>'X', 
                M0=>'X', CE=>int_clk_out_enable_128, CLK=>int_clk_out, 
                LSR=>'X', OFX1=>open, F1=>open, Q1=>open, OFX0=>open, 
                F0=>spi3_test_pattern_15_N_83_13, Q0=>spi1_test_pattern_5);
    SLICE_228I: SLOGICB
      generic map (CLKMUX=>"SIG", CEMUX=>"SIG", GSR=>"DISABLED", 
                   SRMODE=>"ASYNC", LUT0_INITVAL=>X"DDDD", REG0_SD=>"VHI", 
                   CHECK_DI0=>TRUE, CHECK_CE=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>tx_lvds_test_pattern_31_N_119_31, 
                A0=>stm_fpga_spare5_c, B0=>wb_dat_o_7, C0=>'X', D0=>'X', 
                M0=>'X', CE=>int_clk_out_enable_128, CLK=>int_clk_out, 
                LSR=>'X', OFX1=>open, F1=>open, Q1=>open, OFX0=>open, 
                F0=>tx_lvds_test_pattern_31_N_119_31, Q0=>spi1_test_pattern_7);
    SLICE_230I: SLOGICB
      generic map (M1MUX=>"SIG", CLKMUX=>"SIG", CEMUX=>"SIG", GSR=>"DISABLED", 
                   SRMODE=>"ASYNC", LUT0_INITVAL=>X"DDDD", REG0_SD=>"VHI", 
                   CHECK_DI0=>TRUE, CHECK_M1=>TRUE, CHECK_CE=>TRUE)
      port map (M1=>tx_lvds_test_pattern_31_N_119_26, FXA=>'X', FXB=>'X', 
                A1=>'X', B1=>'X', C1=>'X', D1=>'X', DI1=>'X', 
                DI0=>tx_lvds_test_pattern_31_N_119_25, A0=>stm_fpga_spare5_c, 
                B0=>wb_dat_o_1, C0=>'X', D0=>'X', M0=>'X', 
                CE=>int_clk_out_enable_121, CLK=>int_clk_out, LSR=>'X', 
                OFX1=>open, F1=>open, Q1=>spi1_test_pattern_10, OFX0=>open, 
                F0=>tx_lvds_test_pattern_31_N_119_25, Q0=>spi1_test_pattern_9);
    SLICE_232I: SLOGICB
      generic map (CLKMUX=>"SIG", CEMUX=>"SIG", GSR=>"DISABLED", 
                   SRMODE=>"ASYNC", LUT0_INITVAL=>X"DDDD", REG0_SD=>"VHI", 
                   CHECK_DI0=>TRUE, CHECK_CE=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>tx_lvds_test_pattern_31_N_119_28, 
                A0=>stm_fpga_spare5_c, B0=>wb_dat_o_4, C0=>'X', D0=>'X', 
                M0=>'X', CE=>int_clk_out_enable_121, CLK=>int_clk_out, 
                LSR=>'X', OFX1=>open, F1=>open, Q1=>open, OFX0=>open, 
                F0=>tx_lvds_test_pattern_31_N_119_28, Q0=>spi1_test_pattern_12);
    SLICE_234I: SLOGICB
      generic map (M1MUX=>"SIG", CLKMUX=>"SIG", CEMUX=>"SIG", GSR=>"DISABLED", 
                   SRMODE=>"ASYNC", LUT0_INITVAL=>X"DDDD", REG0_SD=>"VHI", 
                   CHECK_DI0=>TRUE, CHECK_M1=>TRUE, CHECK_CE=>TRUE)
      port map (M1=>tx_lvds_test_pattern_31_N_119_31, FXA=>'X', FXB=>'X', 
                A1=>'X', B1=>'X', C1=>'X', D1=>'X', DI1=>'X', 
                DI0=>tx_lvds_test_pattern_31_N_119_6, A0=>stm_fpga_spare5_c, 
                B0=>wb_dat_o_6, C0=>'X', D0=>'X', M0=>'X', 
                CE=>int_clk_out_enable_121, CLK=>int_clk_out, LSR=>'X', 
                OFX1=>open, F1=>open, Q1=>spi1_test_pattern_15, OFX0=>open, 
                F0=>tx_lvds_test_pattern_31_N_119_6, Q0=>spi1_test_pattern_14);
    SLICE_235I: SLOGICB
      generic map (M0MUX=>"SIG", M1MUX=>"SIG", CLKMUX=>"SIG", CEMUX=>"SIG", 
                   GSR=>"DISABLED", SRMODE=>"ASYNC", CHECK_M1=>TRUE, 
                   CHECK_M0=>TRUE, CHECK_CE=>TRUE)
      port map (M1=>tx_lvds_test_pattern_31_N_119_25, FXA=>'X', FXB=>'X', 
                A1=>'X', B1=>'X', C1=>'X', D1=>'X', DI1=>'X', DI0=>'X', 
                A0=>'X', B0=>'X', C0=>'X', D0=>'X', M0=>ufl_p7_sel_7_N_35_0, 
                CE=>int_clk_out_enable_114, CLK=>int_clk_out, LSR=>'X', 
                OFX1=>open, F1=>open, Q1=>spi2_test_pattern_1, OFX0=>open, 
                F0=>open, Q0=>spi2_test_pattern_0);
    SLICE_236I: SLOGICB
      generic map (M0MUX=>"SIG", M1MUX=>"SIG", CLKMUX=>"SIG", CEMUX=>"SIG", 
                   GSR=>"DISABLED", SRMODE=>"ASYNC", CHECK_M1=>TRUE, 
                   CHECK_M0=>TRUE, CHECK_CE=>TRUE)
      port map (M1=>tx_lvds_test_pattern_31_N_119_27, FXA=>'X', FXB=>'X', 
                A1=>'X', B1=>'X', C1=>'X', D1=>'X', DI1=>'X', DI0=>'X', 
                A0=>'X', B0=>'X', C0=>'X', D0=>'X', 
                M0=>tx_lvds_test_pattern_31_N_119_26, 
                CE=>int_clk_out_enable_114, CLK=>int_clk_out, LSR=>'X', 
                OFX1=>open, F1=>open, Q1=>spi2_test_pattern_3, OFX0=>open, 
                F0=>open, Q0=>spi2_test_pattern_2);
    SLICE_238I: SLOGICB
      generic map (M0MUX=>"SIG", M1MUX=>"SIG", CLKMUX=>"SIG", CEMUX=>"SIG", 
                   GSR=>"DISABLED", SRMODE=>"ASYNC", CHECK_M1=>TRUE, 
                   CHECK_M0=>TRUE, CHECK_CE=>TRUE)
      port map (M1=>tx_lvds_test_pattern_31_N_119_6, FXA=>'X', FXB=>'X', 
                A1=>'X', B1=>'X', C1=>'X', D1=>'X', DI1=>'X', DI0=>'X', 
                A0=>'X', B0=>'X', C0=>'X', D0=>'X', 
                M0=>spi3_test_pattern_15_N_83_13, CE=>int_clk_out_enable_114, 
                CLK=>int_clk_out, LSR=>'X', OFX1=>open, F1=>open, 
                Q1=>spi2_test_pattern_6, OFX0=>open, F0=>open, 
                Q0=>spi2_test_pattern_5);
    SLICE_241I: SLOGICB
      generic map (M0MUX=>"SIG", M1MUX=>"SIG", CLKMUX=>"SIG", CEMUX=>"SIG", 
                   GSR=>"DISABLED", SRMODE=>"ASYNC", CHECK_M1=>TRUE, 
                   CHECK_M0=>TRUE, CHECK_CE=>TRUE)
      port map (M1=>tx_lvds_test_pattern_31_N_119_26, FXA=>'X', FXB=>'X', 
                A1=>'X', B1=>'X', C1=>'X', D1=>'X', DI1=>'X', DI0=>'X', 
                A0=>'X', B0=>'X', C0=>'X', D0=>'X', 
                M0=>tx_lvds_test_pattern_31_N_119_25, 
                CE=>int_clk_out_enable_106, CLK=>int_clk_out, LSR=>'X', 
                OFX1=>open, F1=>open, Q1=>spi2_test_pattern_10, OFX0=>open, 
                F0=>open, Q0=>spi2_test_pattern_9);
    SLICE_242I: SLOGICB
      generic map (M0MUX=>"SIG", M1MUX=>"SIG", CLKMUX=>"SIG", CEMUX=>"SIG", 
                   GSR=>"DISABLED", SRMODE=>"ASYNC", CHECK_M1=>TRUE, 
                   CHECK_M0=>TRUE, CHECK_CE=>TRUE)
      port map (M1=>tx_lvds_test_pattern_31_N_119_28, FXA=>'X', FXB=>'X', 
                A1=>'X', B1=>'X', C1=>'X', D1=>'X', DI1=>'X', DI0=>'X', 
                A0=>'X', B0=>'X', C0=>'X', D0=>'X', 
                M0=>tx_lvds_test_pattern_31_N_119_27, 
                CE=>int_clk_out_enable_106, CLK=>int_clk_out, LSR=>'X', 
                OFX1=>open, F1=>open, Q1=>spi2_test_pattern_12, OFX0=>open, 
                F0=>open, Q0=>spi2_test_pattern_11);
    SLICE_245I: SLOGICB
      generic map (M0MUX=>"SIG", CLKMUX=>"SIG", CEMUX=>"SIG", GSR=>"DISABLED", 
                   SRMODE=>"ASYNC", CHECK_M0=>TRUE, CHECK_CE=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>'X', B0=>'X', C0=>'X', 
                D0=>'X', M0=>tx_lvds_test_pattern_31_N_119_31, 
                CE=>int_clk_out_enable_106, CLK=>int_clk_out, LSR=>'X', 
                OFX1=>open, F1=>open, Q1=>open, OFX0=>open, F0=>open, 
                Q0=>spi2_test_pattern_15);
    SLICE_249I: SLOGICB
      generic map (M0MUX=>"SIG", M1MUX=>"SIG", CLKMUX=>"SIG", CEMUX=>"SIG", 
                   LSRMUX=>"INV", GSR=>"DISABLED", CHECK_M1=>TRUE, 
                   CHECK_M0=>TRUE, CHECK_CE=>TRUE, CHECK_LSR=>TRUE)
      port map (M1=>wb_dat_o_4, FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>'X', B0=>'X', C0=>'X', 
                D0=>'X', M0=>wb_dat_o_3, CE=>int_clk_out_enable_99, 
                CLK=>int_clk_out, LSR=>stm_fpga_spare5_c, OFX1=>open, F1=>open, 
                Q1=>spi3_test_pattern_4, OFX0=>open, F0=>open, 
                Q0=>spi3_test_pattern_3);
    SLICE_256I: SLOGICB
      generic map (M0MUX=>"SIG", M1MUX=>"SIG", CLKMUX=>"SIG", CEMUX=>"SIG", 
                   LSRMUX=>"INV", GSR=>"DISABLED", CHECK_M1=>TRUE, 
                   CHECK_M0=>TRUE, CHECK_CE=>TRUE, CHECK_LSR=>TRUE)
      port map (M1=>wb_dat_o_4, FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>'X', B0=>'X', C0=>'X', 
                D0=>'X', M0=>wb_dat_o_3, CE=>int_clk_out_enable_91, 
                CLK=>int_clk_out, LSR=>stm_fpga_spare5_c, OFX1=>open, F1=>open, 
                Q1=>spi3_test_pattern_12, OFX0=>open, F0=>open, 
                Q0=>spi3_test_pattern_11);
    SLICE_258I: SLOGICB
      generic map (M0MUX=>"SIG", CLKMUX=>"SIG", CEMUX=>"SIG", LSRMUX=>"INV", 
                   GSR=>"DISABLED", CHECK_M0=>TRUE, CHECK_CE=>TRUE, 
                   CHECK_LSR=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>'X', B0=>'X', C0=>'X', 
                D0=>'X', M0=>wb_dat_o_6, CE=>int_clk_out_enable_91, 
                CLK=>int_clk_out, LSR=>stm_fpga_spare5_c, OFX1=>open, F1=>open, 
                Q1=>open, OFX0=>open, F0=>open, Q0=>spi3_test_pattern_14);
    SLICE_259I: SLOGICB
      generic map (M0MUX=>"SIG", CLKMUX=>"SIG", CEMUX=>"SIG", GSR=>"DISABLED", 
                   SRMODE=>"ASYNC", CHECK_M0=>TRUE, CHECK_CE=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>'X', B0=>'X', C0=>'X', 
                D0=>'X', M0=>tx_lvds_test_pattern_31_N_119_31, 
                CE=>int_clk_out_enable_92, CLK=>int_clk_out, LSR=>'X', 
                OFX1=>open, F1=>open, Q1=>open, OFX0=>open, F0=>open, 
                Q0=>spi3_test_pattern_15);
    SLICE_263I: SLOGICB
      generic map (M0MUX=>"SIG", M1MUX=>"SIG", CLKMUX=>"SIG", CEMUX=>"SIG", 
                   GSR=>"DISABLED", SRMODE=>"ASYNC", CHECK_M1=>TRUE, 
                   CHECK_M0=>TRUE, CHECK_CE=>TRUE)
      port map (M1=>tx_lvds_test_pattern_31_N_119_28, FXA=>'X', FXB=>'X', 
                A1=>'X', B1=>'X', C1=>'X', D1=>'X', DI1=>'X', DI0=>'X', 
                A0=>'X', B0=>'X', C0=>'X', D0=>'X', 
                M0=>tx_lvds_test_pattern_31_N_119_27, 
                CE=>int_clk_out_enable_84, CLK=>int_clk_out, LSR=>'X', 
                OFX1=>open, F1=>open, Q1=>spi4_test_pattern_4, OFX0=>open, 
                F0=>open, Q0=>spi4_test_pattern_3);
    SLICE_270I: SLOGICB
      generic map (M0MUX=>"SIG", M1MUX=>"SIG", CLKMUX=>"SIG", CEMUX=>"SIG", 
                   GSR=>"DISABLED", SRMODE=>"ASYNC", CHECK_M1=>TRUE, 
                   CHECK_M0=>TRUE, CHECK_CE=>TRUE)
      port map (M1=>tx_lvds_test_pattern_31_N_119_28, FXA=>'X', FXB=>'X', 
                A1=>'X', B1=>'X', C1=>'X', D1=>'X', DI1=>'X', DI0=>'X', 
                A0=>'X', B0=>'X', C0=>'X', D0=>'X', 
                M0=>tx_lvds_test_pattern_31_N_119_27, 
                CE=>int_clk_out_enable_76, CLK=>int_clk_out, LSR=>'X', 
                OFX1=>open, F1=>open, Q1=>spi4_test_pattern_12, OFX0=>open, 
                F0=>open, Q0=>spi4_test_pattern_11);
    SLICE_272I: SLOGICB
      generic map (M0MUX=>"SIG", CLKMUX=>"SIG", CEMUX=>"SIG", GSR=>"DISABLED", 
                   SRMODE=>"ASYNC", CHECK_M0=>TRUE, CHECK_CE=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>'X', B0=>'X', C0=>'X', 
                D0=>'X', M0=>tx_lvds_test_pattern_31_N_119_6, 
                CE=>int_clk_out_enable_76, CLK=>int_clk_out, LSR=>'X', 
                OFX1=>open, F1=>open, Q1=>open, OFX0=>open, F0=>open, 
                Q0=>spi4_test_pattern_14);
    SLICE_273I: SLOGICB
      generic map (M0MUX=>"SIG", CLKMUX=>"SIG", CEMUX=>"SIG", LSRMUX=>"INV", 
                   GSR=>"DISABLED", CHECK_M0=>TRUE, CHECK_CE=>TRUE, 
                   CHECK_LSR=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>'X', B0=>'X', C0=>'X', 
                D0=>'X', M0=>wb_dat_o_7, CE=>int_clk_out_enable_77, 
                CLK=>int_clk_out, LSR=>stm_fpga_spare5_c, OFX1=>open, F1=>open, 
                Q1=>open, OFX0=>open, F0=>open, Q0=>spi4_test_pattern_15);
    SLICE_274I: SLOGICB
      generic map (M0MUX=>"SIG", M1MUX=>"SIG", CLKMUX=>"SIG", CEMUX=>"SIG", 
                   LSRMUX=>"INV", GSR=>"DISABLED", CHECK_M1=>TRUE, 
                   CHECK_M0=>TRUE, CHECK_CE=>TRUE, CHECK_LSR=>TRUE)
      port map (M1=>wb_dat_o_1, FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>'X', B0=>'X', C0=>'X', 
                D0=>'X', M0=>wb_dat_o_0, CE=>int_clk_out_enable_27, 
                CLK=>int_clk_out, LSR=>stm_fpga_spare5_c, OFX1=>open, F1=>open, 
                Q1=>spi_test_pattern_enable_1, OFX0=>open, F0=>open, 
                Q0=>spi_test_pattern_enable_0);
    SLICE_275I: SLOGICB
      generic map (M0MUX=>"SIG", M1MUX=>"SIG", CLKMUX=>"SIG", CEMUX=>"SIG", 
                   LSRMUX=>"INV", GSR=>"DISABLED", CHECK_M1=>TRUE, 
                   CHECK_M0=>TRUE, CHECK_CE=>TRUE, CHECK_LSR=>TRUE)
      port map (M1=>wb_dat_o_3, FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>'X', B0=>'X', C0=>'X', 
                D0=>'X', M0=>wb_dat_o_2, CE=>int_clk_out_enable_27, 
                CLK=>int_clk_out, LSR=>stm_fpga_spare5_c, OFX1=>open, F1=>open, 
                Q1=>spi_test_pattern_enable_3, OFX0=>open, F0=>open, 
                Q0=>spi_test_pattern_enable_2);
    i2c_slave_i2c_slave_inst_SLICE_277I: SLOGICB
      generic map (CLKMUX=>"SIG", CEMUX=>"VHI", LSRMUX=>"INV", GSR=>"DISABLED", 
                   LUT0_INITVAL=>X"DCCC", LUT1_INITVAL=>X"2020", 
                   REG0_SD=>"VHI", CHECK_DI0=>TRUE, CHECK_LSR=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>sda_i_reg, 
                B1=>i2c_slave_i2c_slave_inst_last_sda_i_reg, 
                C1=>i2c_slave_i2c_slave_inst_scl_i_reg, D1=>'X', DI1=>'X', 
                DI0=>i2c_slave_i2c_slave_inst_state_next_0, 
                A0=>i2c_slave_i2c_slave_inst_n14329, 
                B0=>i2c_slave_i2c_slave_inst_start_bit, 
                C0=>i2c_slave_i2c_slave_inst_n3800, 
                D0=>i2c_slave_i2c_slave_inst_n14326, M0=>'X', CE=>'X', 
                CLK=>int_clk_out, LSR=>stm_fpga_spare5_c, OFX1=>open, 
                F1=>i2c_slave_i2c_slave_inst_n14329, Q1=>open, OFX0=>open, 
                F0=>i2c_slave_i2c_slave_inst_state_next_0, Q0=>state_reg_0);
    SLICE_279I: SLOGICB
      generic map (M0MUX=>"SIG", CLKMUX=>"SIG", CEMUX=>"SIG", LSRMUX=>"INV", 
                   GSR=>"DISABLED", CHECK_M0=>TRUE, CHECK_CE=>TRUE, 
                   CHECK_LSR=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>'X', B0=>'X', C0=>'X', 
                D0=>'X', M0=>wb_dat_o_0, CE=>int_clk_out_enable_32, 
                CLK=>int_clk_out, LSR=>stm_fpga_spare5_c, OFX1=>open, F1=>open, 
                Q1=>open, OFX0=>open, F0=>open, Q0=>subg_delay_loadn);
    subg_i_fifo_dc_SLICE_281I: SLOGICB
      generic map (CLKMUX=>"SIG", CEMUX=>"INV", LSRMUX=>"SIG", SRMODE=>"ASYNC", 
                   LUT0_INITVAL=>X"6666", LUT1_INITVAL=>X"6666", 
                   REG1_SD=>"VHI", REG0_SD=>"VHI", CHECK_DI1=>TRUE, 
                   CHECK_DI0=>TRUE, CHECK_CE=>TRUE, CHECK_LSR=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>subg_i_fifo_dc_rcount_1, 
                B1=>subg_i_fifo_dc_rcount_2, C1=>'X', D1=>'X', 
                DI1=>subg_i_fifo_dc_r_gdata_1, DI0=>subg_i_fifo_dc_r_gdata_0, 
                A0=>subg_i_fifo_dc_rcount_0, B0=>subg_i_fifo_dc_rcount_1, 
                C0=>'X', D0=>'X', M0=>'X', CE=>subg_i_empty, 
                CLK=>internal_80MHz, LSR=>main_reset_n_N_208, OFX1=>open, 
                F1=>subg_i_fifo_dc_r_gdata_1, Q1=>subg_i_fifo_dc_r_gcount_1, 
                OFX0=>open, F0=>subg_i_fifo_dc_r_gdata_0, 
                Q0=>subg_i_fifo_dc_r_gcount_0);
    subg_i_fifo_dc_SLICE_282I: SLOGICB
      generic map (M0MUX=>"SIG", CLKMUX=>"SIG", CEMUX=>"INV", LSRMUX=>"SIG", 
                   SRMODE=>"ASYNC", CHECK_M0=>TRUE, CHECK_CE=>TRUE, 
                   CHECK_LSR=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>'X', B0=>'X', C0=>'X', 
                D0=>'X', M0=>subg_i_fifo_dc_rcount_2, CE=>subg_i_empty, 
                CLK=>internal_80MHz, LSR=>main_reset_n_N_208, OFX1=>open, 
                F1=>open, Q1=>open, OFX0=>open, F0=>open, 
                Q0=>subg_i_fifo_dc_r_gcount_2);
    subg_i_fifo_dc_SLICE_283I: SLOGICB
      generic map (M0MUX=>"SIG", M1MUX=>"SIG", CLKMUX=>"SIG", CEMUX=>"VHI", 
                   LSRMUX=>"SIG", SRMODE=>"ASYNC", CHECK_M1=>TRUE, 
                   CHECK_M0=>TRUE, CHECK_LSR=>TRUE)
      port map (M1=>subg_i_fifo_dc_r_gcount_1, FXA=>'X', FXB=>'X', A1=>'X', 
                B1=>'X', C1=>'X', D1=>'X', DI1=>'X', DI0=>'X', A0=>'X', 
                B0=>'X', C0=>'X', D0=>'X', M0=>subg_i_fifo_dc_r_gcount_0, 
                CE=>'X', CLK=>sdr_rxclk_c, LSR=>main_reset_n_N_208, OFX1=>open, 
                F1=>open, Q1=>subg_i_fifo_dc_r_gcount_w1, OFX0=>open, F0=>open, 
                Q0=>subg_i_fifo_dc_r_gcount_w0);
    subg_i_fifo_dc_SLICE_284I: SLOGICB
      generic map (M0MUX=>"SIG", M1MUX=>"SIG", CLKMUX=>"SIG", CEMUX=>"VHI", 
                   LSRMUX=>"SIG", SRMODE=>"ASYNC", CHECK_M1=>TRUE, 
                   CHECK_M0=>TRUE, CHECK_LSR=>TRUE)
      port map (M1=>subg_i_fifo_dc_r_gcount_w0, FXA=>'X', FXB=>'X', A1=>'X', 
                B1=>'X', C1=>'X', D1=>'X', DI1=>'X', DI0=>'X', A0=>'X', 
                B0=>'X', C0=>'X', D0=>'X', M0=>subg_i_fifo_dc_r_gcount_2, 
                CE=>'X', CLK=>sdr_rxclk_c, LSR=>main_reset_n_N_208, OFX1=>open, 
                F1=>open, Q1=>subg_i_fifo_dc_r_gcount_w20, OFX0=>open, 
                F0=>open, Q0=>subg_i_fifo_dc_r_gcount_w2);
    subg_i_fifo_dc_SLICE_285I: SLOGICB
      generic map (M0MUX=>"SIG", M1MUX=>"SIG", CLKMUX=>"SIG", CEMUX=>"VHI", 
                   LSRMUX=>"SIG", SRMODE=>"ASYNC", CHECK_M1=>TRUE, 
                   CHECK_M0=>TRUE, CHECK_LSR=>TRUE)
      port map (M1=>subg_i_fifo_dc_r_gcount_w2, FXA=>'X', FXB=>'X', A1=>'X', 
                B1=>'X', C1=>'X', D1=>'X', DI1=>'X', DI0=>'X', A0=>'X', 
                B0=>'X', C0=>'X', D0=>'X', M0=>subg_i_fifo_dc_r_gcount_w1, 
                CE=>'X', CLK=>sdr_rxclk_c, LSR=>main_reset_n_N_208, OFX1=>open, 
                F1=>open, Q1=>subg_i_fifo_dc_r_gcount_w22, OFX0=>open, 
                F0=>open, Q0=>subg_i_fifo_dc_r_gcount_w21);
    subg_i_fifo_dc_SLICE_286I: SLOGICB
      generic map (M0MUX=>"SIG", M1MUX=>"SIG", CLKMUX=>"SIG", CEMUX=>"INV", 
                   LSRMUX=>"SIG", SRMODE=>"ASYNC", CHECK_M1=>TRUE, 
                   CHECK_M0=>TRUE, CHECK_CE=>TRUE, CHECK_LSR=>TRUE)
      port map (M1=>subg_i_fifo_dc_rcount_1, FXA=>'X', FXB=>'X', A1=>'X', 
                B1=>'X', C1=>'X', D1=>'X', DI1=>'X', DI0=>'X', A0=>'X', 
                B0=>'X', C0=>'X', D0=>'X', M0=>subg_i_fifo_dc_rcount_0, 
                CE=>subg_i_empty, CLK=>internal_80MHz, LSR=>main_reset_n_N_208, 
                OFX1=>open, F1=>open, Q1=>subg_i_fifo_dc_rptr_1, OFX0=>open, 
                F0=>open, Q0=>subg_i_fifo_dc_rptr_0);
    subg_i_fifo_dc_SLICE_288I: SLOGICB
      generic map (CLKMUX=>"SIG", CEMUX=>"SIG", SRMODE=>"ASYNC", 
                   LUT0_INITVAL=>X"6666", LUT1_INITVAL=>X"6666", 
                   REG1_SD=>"VHI", REG0_SD=>"VHI", CHECK_DI1=>TRUE, 
                   CHECK_DI0=>TRUE, CHECK_CE=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>subg_i_fifo_dc_wcount_1, 
                B1=>subg_i_fifo_dc_wcount_2, C1=>'X', D1=>'X', 
                DI1=>subg_i_fifo_dc_w_gdata_1, DI0=>subg_i_fifo_dc_w_gdata_0, 
                A0=>subg_i_fifo_dc_wcount_0, B0=>subg_i_fifo_dc_wcount_1, 
                C0=>'X', D0=>'X', M0=>'X', CE=>subg_i_fifo_dc_wren_i, 
                CLK=>sdr_rxclk_c, LSR=>'X', OFX1=>open, 
                F1=>subg_i_fifo_dc_w_gdata_1, Q1=>subg_i_fifo_dc_w_gcount_1, 
                OFX0=>open, F0=>subg_i_fifo_dc_w_gdata_0, 
                Q0=>subg_i_fifo_dc_w_gcount_0);
    subg_i_fifo_dc_SLICE_289I: SLOGICB
      generic map (M0MUX=>"SIG", CLKMUX=>"SIG", CEMUX=>"SIG", SRMODE=>"ASYNC", 
                   CHECK_M0=>TRUE, CHECK_CE=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>'X', B0=>'X', C0=>'X', 
                D0=>'X', M0=>subg_i_fifo_dc_wcount_2, 
                CE=>subg_i_fifo_dc_wren_i, CLK=>sdr_rxclk_c, LSR=>'X', 
                OFX1=>open, F1=>open, Q1=>open, OFX0=>open, F0=>open, 
                Q0=>subg_i_fifo_dc_w_gcount_2);
    subg_i_fifo_dc_SLICE_290I: SLOGICB
      generic map (M0MUX=>"SIG", M1MUX=>"SIG", CLKMUX=>"SIG", CEMUX=>"VHI", 
                   SRMODE=>"ASYNC", CHECK_M1=>TRUE, CHECK_M0=>TRUE)
      port map (M1=>subg_i_fifo_dc_w_gcount_1, FXA=>'X', FXB=>'X', A1=>'X', 
                B1=>'X', C1=>'X', D1=>'X', DI1=>'X', DI0=>'X', A0=>'X', 
                B0=>'X', C0=>'X', D0=>'X', M0=>subg_i_fifo_dc_w_gcount_0, 
                CE=>'X', CLK=>internal_80MHz, LSR=>'X', OFX1=>open, F1=>open, 
                Q1=>subg_i_fifo_dc_w_gcount_r1, OFX0=>open, F0=>open, 
                Q0=>subg_i_fifo_dc_w_gcount_r0);
    subg_i_fifo_dc_SLICE_291I: SLOGICB
      generic map (M0MUX=>"SIG", M1MUX=>"SIG", CLKMUX=>"SIG", CEMUX=>"VHI", 
                   SRMODE=>"ASYNC", CHECK_M1=>TRUE, CHECK_M0=>TRUE)
      port map (M1=>subg_i_fifo_dc_w_gcount_r0, FXA=>'X', FXB=>'X', A1=>'X', 
                B1=>'X', C1=>'X', D1=>'X', DI1=>'X', DI0=>'X', A0=>'X', 
                B0=>'X', C0=>'X', D0=>'X', M0=>subg_i_fifo_dc_w_gcount_2, 
                CE=>'X', CLK=>internal_80MHz, LSR=>'X', OFX1=>open, F1=>open, 
                Q1=>subg_i_fifo_dc_w_gcount_r20, OFX0=>open, F0=>open, 
                Q0=>subg_i_fifo_dc_w_gcount_r2);
    subg_i_fifo_dc_SLICE_292I: SLOGICB
      generic map (M0MUX=>"SIG", M1MUX=>"SIG", CLKMUX=>"SIG", CEMUX=>"VHI", 
                   SRMODE=>"ASYNC", CHECK_M1=>TRUE, CHECK_M0=>TRUE)
      port map (M1=>subg_i_fifo_dc_w_gcount_r2, FXA=>'X', FXB=>'X', A1=>'X', 
                B1=>'X', C1=>'X', D1=>'X', DI1=>'X', DI0=>'X', A0=>'X', 
                B0=>'X', C0=>'X', D0=>'X', M0=>subg_i_fifo_dc_w_gcount_r1, 
                CE=>'X', CLK=>internal_80MHz, LSR=>'X', OFX1=>open, F1=>open, 
                Q1=>subg_i_fifo_dc_w_gcount_r22, OFX0=>open, F0=>open, 
                Q0=>subg_i_fifo_dc_w_gcount_r21);
    subg_i_fifo_dc_SLICE_293I: SLOGICB
      generic map (M0MUX=>"SIG", M1MUX=>"SIG", CLKMUX=>"SIG", CEMUX=>"SIG", 
                   SRMODE=>"ASYNC", CHECK_M1=>TRUE, CHECK_M0=>TRUE, 
                   CHECK_CE=>TRUE)
      port map (M1=>subg_i_fifo_dc_wcount_1, FXA=>'X', FXB=>'X', A1=>'X', 
                B1=>'X', C1=>'X', D1=>'X', DI1=>'X', DI0=>'X', A0=>'X', 
                B0=>'X', C0=>'X', D0=>'X', M0=>subg_i_fifo_dc_wcount_0, 
                CE=>subg_i_fifo_dc_wren_i, CLK=>sdr_rxclk_c, LSR=>'X', 
                OFX1=>open, F1=>open, Q1=>subg_i_fifo_dc_wptr_1, OFX0=>open, 
                F0=>open, Q0=>subg_i_fifo_dc_wptr_0);
    subg_i_spi_SLICE_295I: SLOGICB
      generic map (CLKMUX=>"SIG", CEMUX=>"VHI", LSRMUX=>"SIG", 
                   LUT0_INITVAL=>X"6666", LUT1_INITVAL=>X"EEEE", 
                   REG0_SD=>"VHI", CHECK_DI0=>TRUE, CHECK_LSR=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>subg_i_spi_bit_counter_2, 
                B1=>subg_i_spi_bit_counter_1, C1=>'X', D1=>'X', DI1=>'X', 
                DI0=>subg_i_spi_bit_counter_5_N_1168_0, 
                A0=>subg_i_spi_bit_counter_0, B0=>shift_reg_15_N_1175, C0=>'X', 
                D0=>'X', M0=>'X', CE=>'X', CLK=>internal_80MHz, 
                LSR=>shift_reg_15_N_1166, OFX1=>open, F1=>subg_i_spi_n13130, 
                Q1=>open, OFX0=>open, F0=>subg_i_spi_bit_counter_5_N_1168_0, 
                Q0=>subg_i_spi_bit_counter_0);
    subg_i_spi_SLICE_296I: SLOGICB
      generic map (CLKMUX=>"SIG", CEMUX=>"SIG", LSRMUX=>"SIG", 
                   LUT0_INITVAL=>X"9999", LUT1_INITVAL=>X"E1E1", 
                   REG1_SD=>"VHI", REG0_SD=>"VHI", CHECK_DI1=>TRUE, 
                   CHECK_DI0=>TRUE, CHECK_CE=>TRUE, CHECK_LSR=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>subg_i_spi_bit_counter_1, 
                B1=>subg_i_spi_bit_counter_0, C1=>subg_i_spi_bit_counter_2, 
                D1=>'X', DI1=>subg_i_spi_n6384, DI0=>subg_i_spi_n6382, 
                A0=>subg_i_spi_bit_counter_1, B0=>subg_i_spi_bit_counter_0, 
                C0=>'X', D0=>'X', M0=>'X', CE=>shift_reg_15_N_1175, 
                CLK=>internal_80MHz, LSR=>shift_reg_15_N_1166, OFX1=>open, 
                F1=>subg_i_spi_n6384, Q1=>subg_i_spi_bit_counter_2, OFX0=>open, 
                F0=>subg_i_spi_n6382, Q0=>subg_i_spi_bit_counter_1);
    subg_i_spi_SLICE_297I: SLOGICB
      generic map (CLKMUX=>"SIG", CEMUX=>"SIG", LSRMUX=>"SIG", 
                   LUT0_INITVAL=>X"F0E1", REG0_SD=>"VHI", CHECK_DI0=>TRUE, 
                   CHECK_CE=>TRUE, CHECK_LSR=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>subg_i_spi_n6380, 
                A0=>subg_i_spi_bit_counter_1, B0=>subg_i_spi_bit_counter_0, 
                C0=>subg_i_spi_bit_counter_3, D0=>subg_i_spi_bit_counter_2, 
                M0=>'X', CE=>shift_reg_15_N_1175, CLK=>internal_80MHz, 
                LSR=>shift_reg_15_N_1166, OFX1=>open, F1=>open, Q1=>open, 
                OFX0=>open, F0=>subg_i_spi_n6380, Q0=>subg_i_spi_bit_counter_3);
    SLICE_298I: SLOGICB
      generic map (CLKMUX=>"SIG", CEMUX=>"SIG", SRMODE=>"ASYNC", 
                   LUT0_INITVAL=>X"FEF1", LUT1_INITVAL=>X"0202", 
                   REG0_SD=>"VHI", CHECK_DI0=>TRUE, CHECK_CE=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>stm_fpga_spare1_c, 
                B1=>subg_i_empty, C1=>shift_reg_15_N_1175, D1=>'X', DI1=>'X', 
                DI0=>subg_i_spi_bit_counter_5_N_1144_4, 
                A0=>subg_i_spi_bit_counter_3, B0=>subg_i_spi_n14314, 
                C0=>shift_reg_15_N_1166, D0=>subg_i_spi_bit_counter_4, M0=>'X', 
                CE=>internal_80MHz_enable_19, CLK=>internal_80MHz, LSR=>'X', 
                OFX1=>open, F1=>shift_reg_15_N_1166, Q1=>open, OFX0=>open, 
                F0=>subg_i_spi_bit_counter_5_N_1144_4, 
                Q0=>subg_i_spi_bit_counter_4);
    subg_i_spi_SLICE_299I: SLOGICB
      generic map (CLKMUX=>"SIG", CEMUX=>"SIG", LSRMUX=>"SIG", 
                   LUT0_INITVAL=>X"FE01", LUT1_INITVAL=>X"FEFE", 
                   REG0_SD=>"VHI", CHECK_DI0=>TRUE, CHECK_CE=>TRUE, 
                   CHECK_LSR=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>subg_i_spi_bit_counter_1, 
                B1=>subg_i_spi_bit_counter_0, C1=>subg_i_spi_bit_counter_2, 
                D1=>'X', DI1=>'X', DI0=>subg_i_spi_n6376, 
                A0=>subg_i_spi_bit_counter_3, B0=>subg_i_spi_n14314, 
                C0=>subg_i_spi_bit_counter_4, D0=>subg_i_spi_bit_counter_5, 
                M0=>'X', CE=>shift_reg_15_N_1175, CLK=>internal_80MHz, 
                LSR=>shift_reg_15_N_1166, OFX1=>open, F1=>subg_i_spi_n14314, 
                Q1=>open, OFX0=>open, F0=>subg_i_spi_n6376, 
                Q0=>subg_i_spi_bit_counter_5);
    subg_i_spi_SLICE_300I: SLOGICB
      generic map (CLKMUX=>"SIG", CEMUX=>"SIG", SRMODE=>"ASYNC", 
                   LUT0_INITVAL=>X"CACA", LUT1_INITVAL=>X"CACA", 
                   REG1_SD=>"VHI", REG0_SD=>"VHI", CHECK_DI1=>TRUE, 
                   CHECK_DI0=>TRUE, CHECK_CE=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>spi1_sck_N_394_1, 
                B1=>subg_i_spi_shift_reg_2, C1=>shift_reg_15_N_1175, D1=>'X', 
                DI1=>subg_i_spi_shift_reg_15_N_1126_1, 
                DI0=>subg_i_spi_shift_reg_15_N_1126_0, A0=>spi1_sck_N_394_0, 
                B0=>subg_i_spi_shift_reg_1, C0=>shift_reg_15_N_1175, D0=>'X', 
                M0=>'X', CE=>internal_80MHz_enable_19, CLK=>internal_80MHz, 
                LSR=>'X', OFX1=>open, F1=>subg_i_spi_shift_reg_15_N_1126_1, 
                Q1=>subg_i_spi_shift_reg_1, OFX0=>open, 
                F0=>subg_i_spi_shift_reg_15_N_1126_0, 
                Q0=>subg_i_spi_shift_reg_0);
    subg_i_spi_SLICE_301I: SLOGICB
      generic map (CLKMUX=>"SIG", CEMUX=>"SIG", SRMODE=>"ASYNC", 
                   LUT0_INITVAL=>X"CACA", LUT1_INITVAL=>X"CACA", 
                   REG1_SD=>"VHI", REG0_SD=>"VHI", CHECK_DI1=>TRUE, 
                   CHECK_DI0=>TRUE, CHECK_CE=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>spi1_sck_N_394_3, 
                B1=>subg_i_spi_shift_reg_4, C1=>shift_reg_15_N_1175, D1=>'X', 
                DI1=>subg_i_spi_shift_reg_15_N_1126_3, 
                DI0=>subg_i_spi_shift_reg_15_N_1126_2, A0=>spi1_sck_N_394_2, 
                B0=>subg_i_spi_shift_reg_3, C0=>shift_reg_15_N_1175, D0=>'X', 
                M0=>'X', CE=>internal_80MHz_enable_19, CLK=>internal_80MHz, 
                LSR=>'X', OFX1=>open, F1=>subg_i_spi_shift_reg_15_N_1126_3, 
                Q1=>subg_i_spi_shift_reg_3, OFX0=>open, 
                F0=>subg_i_spi_shift_reg_15_N_1126_2, 
                Q0=>subg_i_spi_shift_reg_2);
    subg_i_spi_SLICE_302I: SLOGICB
      generic map (CLKMUX=>"SIG", CEMUX=>"SIG", SRMODE=>"ASYNC", 
                   LUT0_INITVAL=>X"CACA", LUT1_INITVAL=>X"CACA", 
                   REG1_SD=>"VHI", REG0_SD=>"VHI", CHECK_DI1=>TRUE, 
                   CHECK_DI0=>TRUE, CHECK_CE=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>spi1_sck_N_394_5, 
                B1=>subg_i_spi_shift_reg_6, C1=>shift_reg_15_N_1175, D1=>'X', 
                DI1=>subg_i_spi_shift_reg_15_N_1126_5, 
                DI0=>subg_i_spi_shift_reg_15_N_1126_4, A0=>spi1_sck_N_394_4, 
                B0=>subg_i_spi_shift_reg_5, C0=>shift_reg_15_N_1175, D0=>'X', 
                M0=>'X', CE=>internal_80MHz_enable_19, CLK=>internal_80MHz, 
                LSR=>'X', OFX1=>open, F1=>subg_i_spi_shift_reg_15_N_1126_5, 
                Q1=>subg_i_spi_shift_reg_5, OFX0=>open, 
                F0=>subg_i_spi_shift_reg_15_N_1126_4, 
                Q0=>subg_i_spi_shift_reg_4);
    subg_i_spi_SLICE_303I: SLOGICB
      generic map (CLKMUX=>"SIG", CEMUX=>"SIG", SRMODE=>"ASYNC", 
                   LUT0_INITVAL=>X"CACA", LUT1_INITVAL=>X"CACA", 
                   REG1_SD=>"VHI", REG0_SD=>"VHI", CHECK_DI1=>TRUE, 
                   CHECK_DI0=>TRUE, CHECK_CE=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>spi1_sck_N_394_7, 
                B1=>subg_i_spi_shift_reg_8, C1=>shift_reg_15_N_1175, D1=>'X', 
                DI1=>subg_i_spi_shift_reg_15_N_1126_7, 
                DI0=>subg_i_spi_shift_reg_15_N_1126_6, A0=>spi1_sck_N_394_6, 
                B0=>subg_i_spi_shift_reg_7, C0=>shift_reg_15_N_1175, D0=>'X', 
                M0=>'X', CE=>internal_80MHz_enable_19, CLK=>internal_80MHz, 
                LSR=>'X', OFX1=>open, F1=>subg_i_spi_shift_reg_15_N_1126_7, 
                Q1=>subg_i_spi_shift_reg_7, OFX0=>open, 
                F0=>subg_i_spi_shift_reg_15_N_1126_6, 
                Q0=>subg_i_spi_shift_reg_6);
    subg_i_spi_SLICE_304I: SLOGICB
      generic map (CLKMUX=>"SIG", CEMUX=>"SIG", SRMODE=>"ASYNC", 
                   LUT0_INITVAL=>X"CACA", LUT1_INITVAL=>X"CACA", 
                   REG1_SD=>"VHI", REG0_SD=>"VHI", CHECK_DI1=>TRUE, 
                   CHECK_DI0=>TRUE, CHECK_CE=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>spi1_sck_N_394_9, 
                B1=>subg_i_spi_shift_reg_10, C1=>shift_reg_15_N_1175, D1=>'X', 
                DI1=>subg_i_spi_shift_reg_15_N_1126_9, 
                DI0=>subg_i_spi_shift_reg_15_N_1126_8, A0=>spi1_sck_N_394_8, 
                B0=>subg_i_spi_shift_reg_9, C0=>shift_reg_15_N_1175, D0=>'X', 
                M0=>'X', CE=>internal_80MHz_enable_19, CLK=>internal_80MHz, 
                LSR=>'X', OFX1=>open, F1=>subg_i_spi_shift_reg_15_N_1126_9, 
                Q1=>subg_i_spi_shift_reg_9, OFX0=>open, 
                F0=>subg_i_spi_shift_reg_15_N_1126_8, 
                Q0=>subg_i_spi_shift_reg_8);
    subg_i_spi_SLICE_305I: SLOGICB
      generic map (CLKMUX=>"SIG", CEMUX=>"SIG", SRMODE=>"ASYNC", 
                   LUT0_INITVAL=>X"CACA", LUT1_INITVAL=>X"CACA", 
                   REG1_SD=>"VHI", REG0_SD=>"VHI", CHECK_DI1=>TRUE, 
                   CHECK_DI0=>TRUE, CHECK_CE=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>spi1_sck_N_394_11, 
                B1=>subg_i_spi_shift_reg_12, C1=>shift_reg_15_N_1175, D1=>'X', 
                DI1=>subg_i_spi_shift_reg_15_N_1126_11, 
                DI0=>subg_i_spi_shift_reg_15_N_1126_10, A0=>spi1_sck_N_394_10, 
                B0=>subg_i_spi_shift_reg_11, C0=>shift_reg_15_N_1175, D0=>'X', 
                M0=>'X', CE=>internal_80MHz_enable_19, CLK=>internal_80MHz, 
                LSR=>'X', OFX1=>open, F1=>subg_i_spi_shift_reg_15_N_1126_11, 
                Q1=>subg_i_spi_shift_reg_11, OFX0=>open, 
                F0=>subg_i_spi_shift_reg_15_N_1126_10, 
                Q0=>subg_i_spi_shift_reg_10);
    subg_i_spi_SLICE_306I: SLOGICB
      generic map (CLKMUX=>"SIG", CEMUX=>"SIG", SRMODE=>"ASYNC", 
                   LUT0_INITVAL=>X"CACA", LUT1_INITVAL=>X"CACA", 
                   REG1_SD=>"VHI", REG0_SD=>"VHI", CHECK_DI1=>TRUE, 
                   CHECK_DI0=>TRUE, CHECK_CE=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>spi1_sck_N_394_13, 
                B1=>subg_i_spi_shift_reg_14, C1=>shift_reg_15_N_1175, D1=>'X', 
                DI1=>subg_i_spi_shift_reg_15_N_1126_13, 
                DI0=>subg_i_spi_shift_reg_15_N_1126_12, A0=>spi1_sck_N_394_12, 
                B0=>subg_i_spi_shift_reg_13, C0=>shift_reg_15_N_1175, D0=>'X', 
                M0=>'X', CE=>internal_80MHz_enable_19, CLK=>internal_80MHz, 
                LSR=>'X', OFX1=>open, F1=>subg_i_spi_shift_reg_15_N_1126_13, 
                Q1=>subg_i_spi_shift_reg_13, OFX0=>open, 
                F0=>subg_i_spi_shift_reg_15_N_1126_12, 
                Q0=>subg_i_spi_shift_reg_12);
    SLICE_307I: SLOGICB
      generic map (CLKMUX=>"SIG", CEMUX=>"SIG", SRMODE=>"ASYNC", 
                   LUT0_INITVAL=>X"CACA", LUT1_INITVAL=>X"CACA", 
                   REG0_SD=>"VHI", CHECK_DI0=>TRUE, CHECK_CE=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>subg_i_fifo_data_out_14, 
                B1=>spi1_test_pattern_14, C1=>spi_test_pattern_enable_0, 
                D1=>'X', DI1=>'X', DI0=>subg_i_spi_shift_reg_15_N_1126_14, 
                A0=>spi1_sck_N_394_14, B0=>subg_i_spi_shift_reg_15, 
                C0=>shift_reg_15_N_1175, D0=>'X', M0=>'X', 
                CE=>internal_80MHz_enable_19, CLK=>internal_80MHz, LSR=>'X', 
                OFX1=>open, F1=>spi1_sck_N_394_14, Q1=>open, OFX0=>open, 
                F0=>subg_i_spi_shift_reg_15_N_1126_14, 
                Q0=>subg_i_spi_shift_reg_14);
    SLICE_308I: SLOGICB
      generic map (CLKMUX=>"SIG", CEMUX=>"SIG", LSRMUX=>"SIG", 
                   LUT0_INITVAL=>X"CACA", REG0_SD=>"VHI", CHECK_DI0=>TRUE, 
                   CHECK_CE=>TRUE, CHECK_LSR=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>spi1_sck_N_394_15, 
                A0=>subg_i_fifo_data_out_15, B0=>spi1_test_pattern_15, 
                C0=>spi_test_pattern_enable_0, D0=>'X', M0=>'X', 
                CE=>internal_80MHz_enable_20, CLK=>internal_80MHz, 
                LSR=>shift_reg_15_N_1175, OFX1=>open, F1=>open, Q1=>open, 
                OFX0=>open, F0=>spi1_sck_N_394_15, Q0=>subg_i_spi_shift_reg_15);
    subg_q_fifo_dc_SLICE_309I: SLOGICB
      generic map (CLKMUX=>"SIG", CEMUX=>"INV", LSRMUX=>"SIG", SRMODE=>"ASYNC", 
                   LUT0_INITVAL=>X"6666", LUT1_INITVAL=>X"6666", 
                   REG1_SD=>"VHI", REG0_SD=>"VHI", CHECK_DI1=>TRUE, 
                   CHECK_DI0=>TRUE, CHECK_CE=>TRUE, CHECK_LSR=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>subg_q_fifo_dc_rcount_1, 
                B1=>subg_q_fifo_dc_rcount_2, C1=>'X', D1=>'X', 
                DI1=>subg_q_fifo_dc_r_gdata_1, DI0=>subg_q_fifo_dc_r_gdata_0, 
                A0=>subg_q_fifo_dc_rcount_0, B0=>subg_q_fifo_dc_rcount_1, 
                C0=>'X', D0=>'X', M0=>'X', CE=>subg_q_empty, 
                CLK=>internal_80MHz, LSR=>main_reset_n_N_208, OFX1=>open, 
                F1=>subg_q_fifo_dc_r_gdata_1, Q1=>subg_q_fifo_dc_r_gcount_1, 
                OFX0=>open, F0=>subg_q_fifo_dc_r_gdata_0, 
                Q0=>subg_q_fifo_dc_r_gcount_0);
    subg_q_fifo_dc_SLICE_310I: SLOGICB
      generic map (M0MUX=>"SIG", CLKMUX=>"SIG", CEMUX=>"INV", LSRMUX=>"SIG", 
                   SRMODE=>"ASYNC", CHECK_M0=>TRUE, CHECK_CE=>TRUE, 
                   CHECK_LSR=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>'X', B0=>'X', C0=>'X', 
                D0=>'X', M0=>subg_q_fifo_dc_rcount_2, CE=>subg_q_empty, 
                CLK=>internal_80MHz, LSR=>main_reset_n_N_208, OFX1=>open, 
                F1=>open, Q1=>open, OFX0=>open, F0=>open, 
                Q0=>subg_q_fifo_dc_r_gcount_2);
    subg_q_fifo_dc_SLICE_311I: SLOGICB
      generic map (M0MUX=>"SIG", M1MUX=>"SIG", CLKMUX=>"SIG", CEMUX=>"VHI", 
                   LSRMUX=>"SIG", SRMODE=>"ASYNC", CHECK_M1=>TRUE, 
                   CHECK_M0=>TRUE, CHECK_LSR=>TRUE)
      port map (M1=>subg_q_fifo_dc_r_gcount_1, FXA=>'X', FXB=>'X', A1=>'X', 
                B1=>'X', C1=>'X', D1=>'X', DI1=>'X', DI0=>'X', A0=>'X', 
                B0=>'X', C0=>'X', D0=>'X', M0=>subg_q_fifo_dc_r_gcount_0, 
                CE=>'X', CLK=>sdr_rxclk_c, LSR=>main_reset_n_N_208, OFX1=>open, 
                F1=>open, Q1=>subg_q_fifo_dc_r_gcount_w1, OFX0=>open, F0=>open, 
                Q0=>subg_q_fifo_dc_r_gcount_w0);
    subg_q_fifo_dc_SLICE_312I: SLOGICB
      generic map (M0MUX=>"SIG", M1MUX=>"SIG", CLKMUX=>"SIG", CEMUX=>"VHI", 
                   LSRMUX=>"SIG", SRMODE=>"ASYNC", CHECK_M1=>TRUE, 
                   CHECK_M0=>TRUE, CHECK_LSR=>TRUE)
      port map (M1=>subg_q_fifo_dc_r_gcount_w0, FXA=>'X', FXB=>'X', A1=>'X', 
                B1=>'X', C1=>'X', D1=>'X', DI1=>'X', DI0=>'X', A0=>'X', 
                B0=>'X', C0=>'X', D0=>'X', M0=>subg_q_fifo_dc_r_gcount_2, 
                CE=>'X', CLK=>sdr_rxclk_c, LSR=>main_reset_n_N_208, OFX1=>open, 
                F1=>open, Q1=>subg_q_fifo_dc_r_gcount_w20, OFX0=>open, 
                F0=>open, Q0=>subg_q_fifo_dc_r_gcount_w2);
    subg_q_fifo_dc_SLICE_313I: SLOGICB
      generic map (M0MUX=>"SIG", M1MUX=>"SIG", CLKMUX=>"SIG", CEMUX=>"VHI", 
                   LSRMUX=>"SIG", SRMODE=>"ASYNC", CHECK_M1=>TRUE, 
                   CHECK_M0=>TRUE, CHECK_LSR=>TRUE)
      port map (M1=>subg_q_fifo_dc_r_gcount_w2, FXA=>'X', FXB=>'X', A1=>'X', 
                B1=>'X', C1=>'X', D1=>'X', DI1=>'X', DI0=>'X', A0=>'X', 
                B0=>'X', C0=>'X', D0=>'X', M0=>subg_q_fifo_dc_r_gcount_w1, 
                CE=>'X', CLK=>sdr_rxclk_c, LSR=>main_reset_n_N_208, OFX1=>open, 
                F1=>open, Q1=>subg_q_fifo_dc_r_gcount_w22, OFX0=>open, 
                F0=>open, Q0=>subg_q_fifo_dc_r_gcount_w21);
    subg_q_fifo_dc_SLICE_314I: SLOGICB
      generic map (M0MUX=>"SIG", M1MUX=>"SIG", CLKMUX=>"SIG", CEMUX=>"INV", 
                   LSRMUX=>"SIG", SRMODE=>"ASYNC", CHECK_M1=>TRUE, 
                   CHECK_M0=>TRUE, CHECK_CE=>TRUE, CHECK_LSR=>TRUE)
      port map (M1=>subg_q_fifo_dc_rcount_1, FXA=>'X', FXB=>'X', A1=>'X', 
                B1=>'X', C1=>'X', D1=>'X', DI1=>'X', DI0=>'X', A0=>'X', 
                B0=>'X', C0=>'X', D0=>'X', M0=>subg_q_fifo_dc_rcount_0, 
                CE=>subg_q_empty, CLK=>internal_80MHz, LSR=>main_reset_n_N_208, 
                OFX1=>open, F1=>open, Q1=>subg_q_fifo_dc_rptr_1, OFX0=>open, 
                F0=>open, Q0=>subg_q_fifo_dc_rptr_0);
    subg_q_fifo_dc_SLICE_316I: SLOGICB
      generic map (CLKMUX=>"SIG", CEMUX=>"SIG", SRMODE=>"ASYNC", 
                   LUT0_INITVAL=>X"6666", LUT1_INITVAL=>X"6666", 
                   REG1_SD=>"VHI", REG0_SD=>"VHI", CHECK_DI1=>TRUE, 
                   CHECK_DI0=>TRUE, CHECK_CE=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>subg_q_fifo_dc_wcount_1, 
                B1=>subg_q_fifo_dc_wcount_2, C1=>'X', D1=>'X', 
                DI1=>subg_q_fifo_dc_w_gdata_1, DI0=>subg_q_fifo_dc_w_gdata_0, 
                A0=>subg_q_fifo_dc_wcount_0, B0=>subg_q_fifo_dc_wcount_1, 
                C0=>'X', D0=>'X', M0=>'X', CE=>subg_q_fifo_dc_wren_i, 
                CLK=>sdr_rxclk_c, LSR=>'X', OFX1=>open, 
                F1=>subg_q_fifo_dc_w_gdata_1, Q1=>subg_q_fifo_dc_w_gcount_1, 
                OFX0=>open, F0=>subg_q_fifo_dc_w_gdata_0, 
                Q0=>subg_q_fifo_dc_w_gcount_0);
    subg_q_fifo_dc_SLICE_317I: SLOGICB
      generic map (M0MUX=>"SIG", CLKMUX=>"SIG", CEMUX=>"SIG", SRMODE=>"ASYNC", 
                   CHECK_M0=>TRUE, CHECK_CE=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>'X', B0=>'X', C0=>'X', 
                D0=>'X', M0=>subg_q_fifo_dc_wcount_2, 
                CE=>subg_q_fifo_dc_wren_i, CLK=>sdr_rxclk_c, LSR=>'X', 
                OFX1=>open, F1=>open, Q1=>open, OFX0=>open, F0=>open, 
                Q0=>subg_q_fifo_dc_w_gcount_2);
    subg_q_fifo_dc_SLICE_318I: SLOGICB
      generic map (M0MUX=>"SIG", M1MUX=>"SIG", CLKMUX=>"SIG", CEMUX=>"VHI", 
                   SRMODE=>"ASYNC", CHECK_M1=>TRUE, CHECK_M0=>TRUE)
      port map (M1=>subg_q_fifo_dc_w_gcount_1, FXA=>'X', FXB=>'X', A1=>'X', 
                B1=>'X', C1=>'X', D1=>'X', DI1=>'X', DI0=>'X', A0=>'X', 
                B0=>'X', C0=>'X', D0=>'X', M0=>subg_q_fifo_dc_w_gcount_0, 
                CE=>'X', CLK=>internal_80MHz, LSR=>'X', OFX1=>open, F1=>open, 
                Q1=>subg_q_fifo_dc_w_gcount_r1, OFX0=>open, F0=>open, 
                Q0=>subg_q_fifo_dc_w_gcount_r0);
    subg_q_fifo_dc_SLICE_319I: SLOGICB
      generic map (M0MUX=>"SIG", M1MUX=>"SIG", CLKMUX=>"SIG", CEMUX=>"VHI", 
                   SRMODE=>"ASYNC", CHECK_M1=>TRUE, CHECK_M0=>TRUE)
      port map (M1=>subg_q_fifo_dc_w_gcount_r0, FXA=>'X', FXB=>'X', A1=>'X', 
                B1=>'X', C1=>'X', D1=>'X', DI1=>'X', DI0=>'X', A0=>'X', 
                B0=>'X', C0=>'X', D0=>'X', M0=>subg_q_fifo_dc_w_gcount_2, 
                CE=>'X', CLK=>internal_80MHz, LSR=>'X', OFX1=>open, F1=>open, 
                Q1=>subg_q_fifo_dc_w_gcount_r20, OFX0=>open, F0=>open, 
                Q0=>subg_q_fifo_dc_w_gcount_r2);
    subg_q_fifo_dc_SLICE_320I: SLOGICB
      generic map (M0MUX=>"SIG", M1MUX=>"SIG", CLKMUX=>"SIG", CEMUX=>"VHI", 
                   SRMODE=>"ASYNC", CHECK_M1=>TRUE, CHECK_M0=>TRUE)
      port map (M1=>subg_q_fifo_dc_w_gcount_r2, FXA=>'X', FXB=>'X', A1=>'X', 
                B1=>'X', C1=>'X', D1=>'X', DI1=>'X', DI0=>'X', A0=>'X', 
                B0=>'X', C0=>'X', D0=>'X', M0=>subg_q_fifo_dc_w_gcount_r1, 
                CE=>'X', CLK=>internal_80MHz, LSR=>'X', OFX1=>open, F1=>open, 
                Q1=>subg_q_fifo_dc_w_gcount_r22, OFX0=>open, F0=>open, 
                Q0=>subg_q_fifo_dc_w_gcount_r21);
    subg_q_fifo_dc_SLICE_321I: SLOGICB
      generic map (M0MUX=>"SIG", M1MUX=>"SIG", CLKMUX=>"SIG", CEMUX=>"SIG", 
                   SRMODE=>"ASYNC", CHECK_M1=>TRUE, CHECK_M0=>TRUE, 
                   CHECK_CE=>TRUE)
      port map (M1=>subg_q_fifo_dc_wcount_1, FXA=>'X', FXB=>'X', A1=>'X', 
                B1=>'X', C1=>'X', D1=>'X', DI1=>'X', DI0=>'X', A0=>'X', 
                B0=>'X', C0=>'X', D0=>'X', M0=>subg_q_fifo_dc_wcount_0, 
                CE=>subg_q_fifo_dc_wren_i, CLK=>sdr_rxclk_c, LSR=>'X', 
                OFX1=>open, F1=>open, Q1=>subg_q_fifo_dc_wptr_1, OFX0=>open, 
                F0=>open, Q0=>subg_q_fifo_dc_wptr_0);
    subg_q_spi_SLICE_323I: SLOGICB
      generic map (CLKMUX=>"SIG", CEMUX=>"VHI", LSRMUX=>"SIG", 
                   LUT0_INITVAL=>X"6666", LUT1_INITVAL=>X"EEEE", 
                   REG0_SD=>"VHI", CHECK_DI0=>TRUE, CHECK_LSR=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>subg_q_spi_bit_counter_0, 
                B1=>subg_q_spi_bit_counter_3, C1=>'X', D1=>'X', DI1=>'X', 
                DI0=>subg_q_spi_bit_counter_5_N_1168_0, 
                A0=>subg_q_spi_bit_counter_0, B0=>shift_reg_15_N_1175_adj_1193, 
                C0=>'X', D0=>'X', M0=>'X', CE=>'X', CLK=>internal_80MHz, 
                LSR=>n14288, OFX1=>open, F1=>subg_q_spi_n13124, Q1=>open, 
                OFX0=>open, F0=>subg_q_spi_bit_counter_5_N_1168_0, 
                Q0=>subg_q_spi_bit_counter_0);
    subg_q_spi_SLICE_324I: SLOGICB
      generic map (CLKMUX=>"SIG", CEMUX=>"SIG", LSRMUX=>"SIG", 
                   LUT0_INITVAL=>X"9999", LUT1_INITVAL=>X"E1E1", 
                   REG1_SD=>"VHI", REG0_SD=>"VHI", CHECK_DI1=>TRUE, 
                   CHECK_DI0=>TRUE, CHECK_CE=>TRUE, CHECK_LSR=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>subg_q_spi_bit_counter_1, 
                B1=>subg_q_spi_bit_counter_0, C1=>subg_q_spi_bit_counter_2, 
                D1=>'X', DI1=>subg_q_spi_n6374, DI0=>subg_q_spi_n6372, 
                A0=>subg_q_spi_bit_counter_1, B0=>subg_q_spi_bit_counter_0, 
                C0=>'X', D0=>'X', M0=>'X', CE=>shift_reg_15_N_1175_adj_1193, 
                CLK=>internal_80MHz, LSR=>n14288, OFX1=>open, 
                F1=>subg_q_spi_n6374, Q1=>subg_q_spi_bit_counter_2, OFX0=>open, 
                F0=>subg_q_spi_n6372, Q0=>subg_q_spi_bit_counter_1);
    subg_q_spi_SLICE_325I: SLOGICB
      generic map (CLKMUX=>"SIG", CEMUX=>"SIG", LSRMUX=>"SIG", 
                   LUT0_INITVAL=>X"F0E1", LUT1_INITVAL=>X"FFFE", 
                   REG0_SD=>"VHI", CHECK_DI0=>TRUE, CHECK_CE=>TRUE, 
                   CHECK_LSR=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>subg_q_spi_bit_counter_1, 
                B1=>subg_q_spi_bit_counter_0, C1=>subg_q_spi_bit_counter_3, 
                D1=>subg_q_spi_bit_counter_2, DI1=>'X', DI0=>subg_q_spi_n6370, 
                A0=>subg_q_spi_bit_counter_1, B0=>subg_q_spi_bit_counter_0, 
                C0=>subg_q_spi_bit_counter_3, D0=>subg_q_spi_bit_counter_2, 
                M0=>'X', CE=>shift_reg_15_N_1175_adj_1193, CLK=>internal_80MHz, 
                LSR=>n14288, OFX1=>open, F1=>subg_q_spi_n14290, Q1=>open, 
                OFX0=>open, F0=>subg_q_spi_n6370, Q0=>subg_q_spi_bit_counter_3);
    subg_q_spi_SLICE_326I: SLOGICB
      generic map (CLKMUX=>"SIG", CEMUX=>"SIG", SRMODE=>"ASYNC", 
                   LUT0_INITVAL=>X"F22F", LUT1_INITVAL=>X"FFFE", 
                   REG0_SD=>"VHI", CHECK_DI0=>TRUE, CHECK_CE=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>subg_q_spi_bit_counter_4, 
                B1=>subg_q_spi_n13124, C1=>subg_q_spi_n13122, 
                D1=>subg_q_spi_bit_counter_5, DI1=>'X', 
                DI0=>subg_q_spi_bit_counter_5_N_1144_4, 
                A0=>internal_80MHz_enable_36, B0=>shift_reg_15_N_1175_adj_1193, 
                C0=>subg_q_spi_n14290, D0=>subg_q_spi_bit_counter_4, M0=>'X', 
                CE=>internal_80MHz_enable_35, CLK=>internal_80MHz, LSR=>'X', 
                OFX1=>open, F1=>shift_reg_15_N_1175_adj_1193, Q1=>open, 
                OFX0=>open, F0=>subg_q_spi_bit_counter_5_N_1144_4, 
                Q0=>subg_q_spi_bit_counter_4);
    subg_q_spi_SLICE_327I: SLOGICB
      generic map (CLKMUX=>"SIG", CEMUX=>"SIG", LSRMUX=>"SIG", 
                   LUT0_INITVAL=>X"FE01", LUT1_INITVAL=>X"FEFE", 
                   REG0_SD=>"VHI", CHECK_DI0=>TRUE, CHECK_CE=>TRUE, 
                   CHECK_LSR=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>subg_q_spi_bit_counter_1, 
                B1=>subg_q_spi_bit_counter_0, C1=>subg_q_spi_bit_counter_2, 
                D1=>'X', DI1=>'X', DI0=>subg_q_spi_n6366, 
                A0=>subg_q_spi_bit_counter_3, B0=>subg_q_spi_n14313, 
                C0=>subg_q_spi_bit_counter_4, D0=>subg_q_spi_bit_counter_5, 
                M0=>'X', CE=>shift_reg_15_N_1175_adj_1193, CLK=>internal_80MHz, 
                LSR=>n14288, OFX1=>open, F1=>subg_q_spi_n14313, Q1=>open, 
                OFX0=>open, F0=>subg_q_spi_n6366, Q0=>subg_q_spi_bit_counter_5);
    subg_q_spi_SLICE_328I: SLOGICB
      generic map (CLKMUX=>"SIG", CEMUX=>"SIG", SRMODE=>"ASYNC", 
                   LUT0_INITVAL=>X"CACA", LUT1_INITVAL=>X"CACA", 
                   REG1_SD=>"VHI", REG0_SD=>"VHI", CHECK_DI1=>TRUE, 
                   CHECK_DI0=>TRUE, CHECK_CE=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>spi2_sck_N_410_1, 
                B1=>subg_q_spi_shift_reg_2, C1=>shift_reg_15_N_1175_adj_1193, 
                D1=>'X', DI1=>subg_q_spi_shift_reg_15_N_1126_1, 
                DI0=>subg_q_spi_shift_reg_15_N_1126_0, A0=>spi2_sck_N_410_0, 
                B0=>subg_q_spi_shift_reg_1, C0=>shift_reg_15_N_1175_adj_1193, 
                D0=>'X', M0=>'X', CE=>internal_80MHz_enable_35, 
                CLK=>internal_80MHz, LSR=>'X', OFX1=>open, 
                F1=>subg_q_spi_shift_reg_15_N_1126_1, 
                Q1=>subg_q_spi_shift_reg_1, OFX0=>open, 
                F0=>subg_q_spi_shift_reg_15_N_1126_0, 
                Q0=>subg_q_spi_shift_reg_0);
    subg_q_spi_SLICE_329I: SLOGICB
      generic map (CLKMUX=>"SIG", CEMUX=>"SIG", SRMODE=>"ASYNC", 
                   LUT0_INITVAL=>X"CACA", LUT1_INITVAL=>X"CACA", 
                   REG1_SD=>"VHI", REG0_SD=>"VHI", CHECK_DI1=>TRUE, 
                   CHECK_DI0=>TRUE, CHECK_CE=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>spi2_sck_N_410_3, 
                B1=>subg_q_spi_shift_reg_4, C1=>shift_reg_15_N_1175_adj_1193, 
                D1=>'X', DI1=>subg_q_spi_shift_reg_15_N_1126_3, 
                DI0=>subg_q_spi_shift_reg_15_N_1126_2, A0=>spi2_sck_N_410_2, 
                B0=>subg_q_spi_shift_reg_3, C0=>shift_reg_15_N_1175_adj_1193, 
                D0=>'X', M0=>'X', CE=>internal_80MHz_enable_35, 
                CLK=>internal_80MHz, LSR=>'X', OFX1=>open, 
                F1=>subg_q_spi_shift_reg_15_N_1126_3, 
                Q1=>subg_q_spi_shift_reg_3, OFX0=>open, 
                F0=>subg_q_spi_shift_reg_15_N_1126_2, 
                Q0=>subg_q_spi_shift_reg_2);
    subg_q_spi_SLICE_330I: SLOGICB
      generic map (CLKMUX=>"SIG", CEMUX=>"SIG", SRMODE=>"ASYNC", 
                   LUT0_INITVAL=>X"CACA", LUT1_INITVAL=>X"CACA", 
                   REG1_SD=>"VHI", REG0_SD=>"VHI", CHECK_DI1=>TRUE, 
                   CHECK_DI0=>TRUE, CHECK_CE=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>spi2_sck_N_410_5, 
                B1=>subg_q_spi_shift_reg_6, C1=>shift_reg_15_N_1175_adj_1193, 
                D1=>'X', DI1=>subg_q_spi_shift_reg_15_N_1126_5, 
                DI0=>subg_q_spi_shift_reg_15_N_1126_4, A0=>spi2_sck_N_410_4, 
                B0=>subg_q_spi_shift_reg_5, C0=>shift_reg_15_N_1175_adj_1193, 
                D0=>'X', M0=>'X', CE=>internal_80MHz_enable_35, 
                CLK=>internal_80MHz, LSR=>'X', OFX1=>open, 
                F1=>subg_q_spi_shift_reg_15_N_1126_5, 
                Q1=>subg_q_spi_shift_reg_5, OFX0=>open, 
                F0=>subg_q_spi_shift_reg_15_N_1126_4, 
                Q0=>subg_q_spi_shift_reg_4);
    subg_q_spi_SLICE_331I: SLOGICB
      generic map (CLKMUX=>"SIG", CEMUX=>"SIG", SRMODE=>"ASYNC", 
                   LUT0_INITVAL=>X"CACA", LUT1_INITVAL=>X"CACA", 
                   REG1_SD=>"VHI", REG0_SD=>"VHI", CHECK_DI1=>TRUE, 
                   CHECK_DI0=>TRUE, CHECK_CE=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>spi2_sck_N_410_7, 
                B1=>subg_q_spi_shift_reg_8, C1=>shift_reg_15_N_1175_adj_1193, 
                D1=>'X', DI1=>subg_q_spi_shift_reg_15_N_1126_7, 
                DI0=>subg_q_spi_shift_reg_15_N_1126_6, A0=>spi2_sck_N_410_6, 
                B0=>subg_q_spi_shift_reg_7, C0=>shift_reg_15_N_1175_adj_1193, 
                D0=>'X', M0=>'X', CE=>internal_80MHz_enable_35, 
                CLK=>internal_80MHz, LSR=>'X', OFX1=>open, 
                F1=>subg_q_spi_shift_reg_15_N_1126_7, 
                Q1=>subg_q_spi_shift_reg_7, OFX0=>open, 
                F0=>subg_q_spi_shift_reg_15_N_1126_6, 
                Q0=>subg_q_spi_shift_reg_6);
    subg_q_spi_SLICE_332I: SLOGICB
      generic map (CLKMUX=>"SIG", CEMUX=>"SIG", SRMODE=>"ASYNC", 
                   LUT0_INITVAL=>X"CACA", LUT1_INITVAL=>X"CACA", 
                   REG1_SD=>"VHI", REG0_SD=>"VHI", CHECK_DI1=>TRUE, 
                   CHECK_DI0=>TRUE, CHECK_CE=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>spi2_sck_N_410_9, 
                B1=>subg_q_spi_shift_reg_10, C1=>shift_reg_15_N_1175_adj_1193, 
                D1=>'X', DI1=>subg_q_spi_shift_reg_15_N_1126_9, 
                DI0=>subg_q_spi_shift_reg_15_N_1126_8, A0=>spi2_sck_N_410_8, 
                B0=>subg_q_spi_shift_reg_9, C0=>shift_reg_15_N_1175_adj_1193, 
                D0=>'X', M0=>'X', CE=>internal_80MHz_enable_35, 
                CLK=>internal_80MHz, LSR=>'X', OFX1=>open, 
                F1=>subg_q_spi_shift_reg_15_N_1126_9, 
                Q1=>subg_q_spi_shift_reg_9, OFX0=>open, 
                F0=>subg_q_spi_shift_reg_15_N_1126_8, 
                Q0=>subg_q_spi_shift_reg_8);
    subg_q_spi_SLICE_333I: SLOGICB
      generic map (CLKMUX=>"SIG", CEMUX=>"SIG", SRMODE=>"ASYNC", 
                   LUT0_INITVAL=>X"CACA", LUT1_INITVAL=>X"CACA", 
                   REG1_SD=>"VHI", REG0_SD=>"VHI", CHECK_DI1=>TRUE, 
                   CHECK_DI0=>TRUE, CHECK_CE=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>spi2_sck_N_410_11, 
                B1=>subg_q_spi_shift_reg_12, C1=>shift_reg_15_N_1175_adj_1193, 
                D1=>'X', DI1=>subg_q_spi_shift_reg_15_N_1126_11, 
                DI0=>subg_q_spi_shift_reg_15_N_1126_10, A0=>spi2_sck_N_410_10, 
                B0=>subg_q_spi_shift_reg_11, C0=>shift_reg_15_N_1175_adj_1193, 
                D0=>'X', M0=>'X', CE=>internal_80MHz_enable_35, 
                CLK=>internal_80MHz, LSR=>'X', OFX1=>open, 
                F1=>subg_q_spi_shift_reg_15_N_1126_11, 
                Q1=>subg_q_spi_shift_reg_11, OFX0=>open, 
                F0=>subg_q_spi_shift_reg_15_N_1126_10, 
                Q0=>subg_q_spi_shift_reg_10);
    subg_q_spi_SLICE_334I: SLOGICB
      generic map (CLKMUX=>"SIG", CEMUX=>"SIG", SRMODE=>"ASYNC", 
                   LUT0_INITVAL=>X"CACA", LUT1_INITVAL=>X"CACA", 
                   REG1_SD=>"VHI", REG0_SD=>"VHI", CHECK_DI1=>TRUE, 
                   CHECK_DI0=>TRUE, CHECK_CE=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>spi2_sck_N_410_13, 
                B1=>subg_q_spi_shift_reg_14, C1=>shift_reg_15_N_1175_adj_1193, 
                D1=>'X', DI1=>subg_q_spi_shift_reg_15_N_1126_13, 
                DI0=>subg_q_spi_shift_reg_15_N_1126_12, A0=>spi2_sck_N_410_12, 
                B0=>subg_q_spi_shift_reg_13, C0=>shift_reg_15_N_1175_adj_1193, 
                D0=>'X', M0=>'X', CE=>internal_80MHz_enable_35, 
                CLK=>internal_80MHz, LSR=>'X', OFX1=>open, 
                F1=>subg_q_spi_shift_reg_15_N_1126_13, 
                Q1=>subg_q_spi_shift_reg_13, OFX0=>open, 
                F0=>subg_q_spi_shift_reg_15_N_1126_12, 
                Q0=>subg_q_spi_shift_reg_12);
    SLICE_335I: SLOGICB
      generic map (CLKMUX=>"SIG", CEMUX=>"SIG", SRMODE=>"ASYNC", 
                   LUT0_INITVAL=>X"CACA", LUT1_INITVAL=>X"CACA", 
                   REG0_SD=>"VHI", CHECK_DI0=>TRUE, CHECK_CE=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>subg_q_fifo_data_out_14, 
                B1=>spi2_test_pattern_14, C1=>spi_test_pattern_enable_1, 
                D1=>'X', DI1=>'X', DI0=>subg_q_spi_shift_reg_15_N_1126_14, 
                A0=>spi2_sck_N_410_14, B0=>subg_q_spi_shift_reg_15, 
                C0=>shift_reg_15_N_1175_adj_1193, D0=>'X', M0=>'X', 
                CE=>internal_80MHz_enable_35, CLK=>internal_80MHz, LSR=>'X', 
                OFX1=>open, F1=>spi2_sck_N_410_14, Q1=>open, OFX0=>open, 
                F0=>subg_q_spi_shift_reg_15_N_1126_14, 
                Q0=>subg_q_spi_shift_reg_14);
    SLICE_336I: SLOGICB
      generic map (CLKMUX=>"SIG", CEMUX=>"SIG", LSRMUX=>"SIG", 
                   LUT0_INITVAL=>X"CACA", REG0_SD=>"VHI", CHECK_DI0=>TRUE, 
                   CHECK_CE=>TRUE, CHECK_LSR=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>spi2_sck_N_410_15, 
                A0=>subg_q_fifo_data_out_15, B0=>spi2_test_pattern_15, 
                C0=>spi_test_pattern_enable_1, D0=>'X', M0=>'X', 
                CE=>internal_80MHz_enable_36, CLK=>internal_80MHz, 
                LSR=>shift_reg_15_N_1175_adj_1193, OFX1=>open, F1=>open, 
                Q1=>open, OFX0=>open, F0=>spi2_sck_N_410_15, 
                Q0=>subg_q_spi_shift_reg_15);
    SLICE_337I: SLOGICB
      generic map (M0MUX=>"SIG", CLKMUX=>"SIG", CEMUX=>"SIG", GSR=>"DISABLED", 
                   SRMODE=>"ASYNC", CHECK_M0=>TRUE, CHECK_CE=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>'X', B0=>'X', C0=>'X', 
                D0=>'X', M0=>ufl_p7_sel_7_N_35_0, CE=>int_clk_out_enable_212, 
                CLK=>int_clk_out, LSR=>'X', OFX1=>open, F1=>open, Q1=>open, 
                OFX0=>open, F0=>open, Q0=>subg_rx_invert);
    SLICE_338I: SLOGICB
      generic map (M0MUX=>"SIG", CLKMUX=>"SIG", CEMUX=>"SIG", LSRMUX=>"INV", 
                   REG0_REGSET=>"SET", GSR=>"DISABLED", CHECK_M0=>TRUE, 
                   CHECK_CE=>TRUE, CHECK_LSR=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>'X', B0=>'X', C0=>'X', 
                D0=>'X', M0=>wb_dat_o_2, CE=>int_clk_out_enable_212, 
                CLK=>int_clk_out, LSR=>stm_fpga_spare5_c, OFX1=>open, F1=>open, 
                Q1=>open, OFX0=>open, F0=>open, Q0=>subg_sync_check_enable);
    SLICE_339I: SLOGICB
      generic map (M0MUX=>"SIG", M1MUX=>"SIG", CLKMUX=>"SIG", CEMUX=>"VHI", 
                   LSRMUX=>"SIG", CHECK_M1=>TRUE, CHECK_M0=>TRUE, 
                   CHECK_LSR=>TRUE)
      port map (M1=>tx_lvds_test_pattern_1, FXA=>'X', FXB=>'X', A1=>'X', 
                B1=>'X', C1=>'X', D1=>'X', DI1=>'X', DI0=>'X', A0=>'X', 
                B0=>'X', C0=>'X', D0=>'X', M0=>tx_lvds_test_pattern_0, CE=>'X', 
                CLK=>internal_64MHz, LSR=>n14293, OFX1=>open, F1=>open, 
                Q1=>tx_ddr_data_1, OFX0=>open, F0=>open, Q0=>tx_ddr_data_0);
    SLICE_340I: SLOGICB
      generic map (CLKMUX=>"SIG", CEMUX=>"VHI", SRMODE=>"ASYNC", 
                   LUT0_INITVAL=>X"CACA", LUT1_INITVAL=>X"CACA", 
                   REG1_SD=>"VHI", REG0_SD=>"VHI", CHECK_DI1=>TRUE, 
                   CHECK_DI0=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>tx_lvds_test_pattern_3, 
                B1=>tx_ddr_data_1, C1=>n14293, D1=>'X', 
                DI1=>tx_ddr_data_31_N_175_3, DI0=>tx_ddr_data_31_N_175_2, 
                A0=>tx_lvds_test_pattern_2, B0=>tx_ddr_data_0, C0=>n14293, 
                D0=>'X', M0=>'X', CE=>'X', CLK=>internal_64MHz, LSR=>'X', 
                OFX1=>open, F1=>tx_ddr_data_31_N_175_3, Q1=>tx_ddr_data_3, 
                OFX0=>open, F0=>tx_ddr_data_31_N_175_2, Q0=>tx_ddr_data_2);
    SLICE_341I: SLOGICB
      generic map (CLKMUX=>"SIG", CEMUX=>"VHI", SRMODE=>"ASYNC", 
                   LUT0_INITVAL=>X"CACA", LUT1_INITVAL=>X"CACA", 
                   REG1_SD=>"VHI", REG0_SD=>"VHI", CHECK_DI1=>TRUE, 
                   CHECK_DI0=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>tx_lvds_test_pattern_5, 
                B1=>tx_ddr_data_3, C1=>n14293, D1=>'X', 
                DI1=>tx_ddr_data_31_N_175_5, DI0=>tx_ddr_data_31_N_175_4, 
                A0=>tx_lvds_test_pattern_4, B0=>tx_ddr_data_2, C0=>n14293, 
                D0=>'X', M0=>'X', CE=>'X', CLK=>internal_64MHz, LSR=>'X', 
                OFX1=>open, F1=>tx_ddr_data_31_N_175_5, Q1=>tx_ddr_data_5, 
                OFX0=>open, F0=>tx_ddr_data_31_N_175_4, Q0=>tx_ddr_data_4);
    SLICE_342I: SLOGICB
      generic map (CLKMUX=>"SIG", CEMUX=>"VHI", SRMODE=>"ASYNC", 
                   LUT0_INITVAL=>X"CACA", LUT1_INITVAL=>X"CACA", 
                   REG1_SD=>"VHI", REG0_SD=>"VHI", CHECK_DI1=>TRUE, 
                   CHECK_DI0=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>tx_lvds_test_pattern_7, 
                B1=>tx_ddr_data_5, C1=>n14293, D1=>'X', 
                DI1=>tx_ddr_data_31_N_175_7, DI0=>tx_ddr_data_31_N_175_6, 
                A0=>tx_lvds_test_pattern_6, B0=>tx_ddr_data_4, C0=>n14293, 
                D0=>'X', M0=>'X', CE=>'X', CLK=>internal_64MHz, LSR=>'X', 
                OFX1=>open, F1=>tx_ddr_data_31_N_175_7, Q1=>tx_ddr_data_7, 
                OFX0=>open, F0=>tx_ddr_data_31_N_175_6, Q0=>tx_ddr_data_6);
    SLICE_343I: SLOGICB
      generic map (CLKMUX=>"SIG", CEMUX=>"VHI", SRMODE=>"ASYNC", 
                   LUT0_INITVAL=>X"CACA", LUT1_INITVAL=>X"CACA", 
                   REG1_SD=>"VHI", REG0_SD=>"VHI", CHECK_DI1=>TRUE, 
                   CHECK_DI0=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>tx_lvds_test_pattern_9, 
                B1=>tx_ddr_data_7, C1=>n14293, D1=>'X', 
                DI1=>tx_ddr_data_31_N_175_9, DI0=>tx_ddr_data_31_N_175_8, 
                A0=>tx_lvds_test_pattern_8, B0=>tx_ddr_data_6, C0=>n14293, 
                D0=>'X', M0=>'X', CE=>'X', CLK=>internal_64MHz, LSR=>'X', 
                OFX1=>open, F1=>tx_ddr_data_31_N_175_9, Q1=>tx_ddr_data_9, 
                OFX0=>open, F0=>tx_ddr_data_31_N_175_8, Q0=>tx_ddr_data_8);
    SLICE_344I: SLOGICB
      generic map (CLKMUX=>"SIG", CEMUX=>"VHI", SRMODE=>"ASYNC", 
                   LUT0_INITVAL=>X"CACA", LUT1_INITVAL=>X"CACA", 
                   REG1_SD=>"VHI", REG0_SD=>"VHI", CHECK_DI1=>TRUE, 
                   CHECK_DI0=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>tx_lvds_test_pattern_11, 
                B1=>tx_ddr_data_9, C1=>n14293, D1=>'X', 
                DI1=>tx_ddr_data_31_N_175_11, DI0=>tx_ddr_data_31_N_175_10, 
                A0=>tx_lvds_test_pattern_10, B0=>tx_ddr_data_8, C0=>n14293, 
                D0=>'X', M0=>'X', CE=>'X', CLK=>internal_64MHz, LSR=>'X', 
                OFX1=>open, F1=>tx_ddr_data_31_N_175_11, Q1=>tx_ddr_data_11, 
                OFX0=>open, F0=>tx_ddr_data_31_N_175_10, Q0=>tx_ddr_data_10);
    SLICE_345I: SLOGICB
      generic map (CLKMUX=>"SIG", CEMUX=>"VHI", SRMODE=>"ASYNC", 
                   LUT0_INITVAL=>X"CACA", LUT1_INITVAL=>X"CACA", 
                   REG1_SD=>"VHI", REG0_SD=>"VHI", CHECK_DI1=>TRUE, 
                   CHECK_DI0=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>tx_lvds_test_pattern_13, 
                B1=>tx_ddr_data_11, C1=>n14293, D1=>'X', 
                DI1=>tx_ddr_data_31_N_175_13, DI0=>tx_ddr_data_31_N_175_12, 
                A0=>tx_lvds_test_pattern_12, B0=>tx_ddr_data_10, C0=>n14293, 
                D0=>'X', M0=>'X', CE=>'X', CLK=>internal_64MHz, LSR=>'X', 
                OFX1=>open, F1=>tx_ddr_data_31_N_175_13, Q1=>tx_ddr_data_13, 
                OFX0=>open, F0=>tx_ddr_data_31_N_175_12, Q0=>tx_ddr_data_12);
    SLICE_346I: SLOGICB
      generic map (CLKMUX=>"SIG", CEMUX=>"VHI", SRMODE=>"ASYNC", 
                   LUT0_INITVAL=>X"CACA", LUT1_INITVAL=>X"CACA", 
                   REG1_SD=>"VHI", REG0_SD=>"VHI", CHECK_DI1=>TRUE, 
                   CHECK_DI0=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>tx_lvds_test_pattern_15, 
                B1=>tx_ddr_data_13, C1=>n14293, D1=>'X', 
                DI1=>tx_ddr_data_31_N_175_15, DI0=>tx_ddr_data_31_N_175_14, 
                A0=>tx_lvds_test_pattern_14, B0=>tx_ddr_data_12, C0=>n14293, 
                D0=>'X', M0=>'X', CE=>'X', CLK=>internal_64MHz, LSR=>'X', 
                OFX1=>open, F1=>tx_ddr_data_31_N_175_15, Q1=>tx_ddr_data_15, 
                OFX0=>open, F0=>tx_ddr_data_31_N_175_14, Q0=>tx_ddr_data_14);
    SLICE_347I: SLOGICB
      generic map (CLKMUX=>"SIG", CEMUX=>"VHI", SRMODE=>"ASYNC", 
                   LUT0_INITVAL=>X"CACA", LUT1_INITVAL=>X"CACA", 
                   REG1_SD=>"VHI", REG0_SD=>"VHI", CHECK_DI1=>TRUE, 
                   CHECK_DI0=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>tx_lvds_test_pattern_17, 
                B1=>tx_ddr_data_15, C1=>n14293, D1=>'X', 
                DI1=>tx_ddr_data_31_N_175_17, DI0=>tx_ddr_data_31_N_175_16, 
                A0=>tx_lvds_test_pattern_16, B0=>tx_ddr_data_14, C0=>n14293, 
                D0=>'X', M0=>'X', CE=>'X', CLK=>internal_64MHz, LSR=>'X', 
                OFX1=>open, F1=>tx_ddr_data_31_N_175_17, Q1=>tx_ddr_data_17, 
                OFX0=>open, F0=>tx_ddr_data_31_N_175_16, Q0=>tx_ddr_data_16);
    SLICE_348I: SLOGICB
      generic map (CLKMUX=>"SIG", CEMUX=>"VHI", SRMODE=>"ASYNC", 
                   LUT0_INITVAL=>X"CACA", LUT1_INITVAL=>X"CACA", 
                   REG1_SD=>"VHI", REG0_SD=>"VHI", CHECK_DI1=>TRUE, 
                   CHECK_DI0=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>tx_lvds_test_pattern_19, 
                B1=>tx_ddr_data_17, C1=>n14293, D1=>'X', 
                DI1=>tx_ddr_data_31_N_175_19, DI0=>tx_ddr_data_31_N_175_18, 
                A0=>tx_lvds_test_pattern_18, B0=>tx_ddr_data_16, C0=>n14293, 
                D0=>'X', M0=>'X', CE=>'X', CLK=>internal_64MHz, LSR=>'X', 
                OFX1=>open, F1=>tx_ddr_data_31_N_175_19, Q1=>tx_ddr_data_19, 
                OFX0=>open, F0=>tx_ddr_data_31_N_175_18, Q0=>tx_ddr_data_18);
    SLICE_349I: SLOGICB
      generic map (CLKMUX=>"SIG", CEMUX=>"VHI", SRMODE=>"ASYNC", 
                   LUT0_INITVAL=>X"CACA", LUT1_INITVAL=>X"CACA", 
                   REG1_SD=>"VHI", REG0_SD=>"VHI", CHECK_DI1=>TRUE, 
                   CHECK_DI0=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>tx_lvds_test_pattern_21, 
                B1=>tx_ddr_data_19, C1=>n14293, D1=>'X', 
                DI1=>tx_ddr_data_31_N_175_21, DI0=>tx_ddr_data_31_N_175_20, 
                A0=>tx_lvds_test_pattern_20, B0=>tx_ddr_data_18, C0=>n14293, 
                D0=>'X', M0=>'X', CE=>'X', CLK=>internal_64MHz, LSR=>'X', 
                OFX1=>open, F1=>tx_ddr_data_31_N_175_21, Q1=>tx_ddr_data_21, 
                OFX0=>open, F0=>tx_ddr_data_31_N_175_20, Q0=>tx_ddr_data_20);
    SLICE_350I: SLOGICB
      generic map (CLKMUX=>"SIG", CEMUX=>"VHI", SRMODE=>"ASYNC", 
                   LUT0_INITVAL=>X"CACA", LUT1_INITVAL=>X"CACA", 
                   REG1_SD=>"VHI", REG0_SD=>"VHI", CHECK_DI1=>TRUE, 
                   CHECK_DI0=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>tx_lvds_test_pattern_23, 
                B1=>tx_ddr_data_21, C1=>n14293, D1=>'X', 
                DI1=>tx_ddr_data_31_N_175_23, DI0=>tx_ddr_data_31_N_175_22, 
                A0=>tx_lvds_test_pattern_22, B0=>tx_ddr_data_20, C0=>n14293, 
                D0=>'X', M0=>'X', CE=>'X', CLK=>internal_64MHz, LSR=>'X', 
                OFX1=>open, F1=>tx_ddr_data_31_N_175_23, Q1=>tx_ddr_data_23, 
                OFX0=>open, F0=>tx_ddr_data_31_N_175_22, Q0=>tx_ddr_data_22);
    SLICE_351I: SLOGICB
      generic map (CLKMUX=>"SIG", CEMUX=>"VHI", SRMODE=>"ASYNC", 
                   LUT0_INITVAL=>X"CACA", LUT1_INITVAL=>X"CACA", 
                   REG1_SD=>"VHI", REG0_SD=>"VHI", CHECK_DI1=>TRUE, 
                   CHECK_DI0=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>tx_lvds_test_pattern_25, 
                B1=>tx_ddr_data_23, C1=>n14293, D1=>'X', 
                DI1=>tx_ddr_data_31_N_175_25, DI0=>tx_ddr_data_31_N_175_24, 
                A0=>tx_lvds_test_pattern_24, B0=>tx_ddr_data_22, C0=>n14293, 
                D0=>'X', M0=>'X', CE=>'X', CLK=>internal_64MHz, LSR=>'X', 
                OFX1=>open, F1=>tx_ddr_data_31_N_175_25, Q1=>tx_ddr_data_25, 
                OFX0=>open, F0=>tx_ddr_data_31_N_175_24, Q0=>tx_ddr_data_24);
    SLICE_352I: SLOGICB
      generic map (CLKMUX=>"SIG", CEMUX=>"VHI", SRMODE=>"ASYNC", 
                   LUT0_INITVAL=>X"CACA", LUT1_INITVAL=>X"CACA", 
                   REG1_SD=>"VHI", REG0_SD=>"VHI", CHECK_DI1=>TRUE, 
                   CHECK_DI0=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>tx_lvds_test_pattern_27, 
                B1=>tx_ddr_data_25, C1=>n14293, D1=>'X', 
                DI1=>tx_ddr_data_31_N_175_27, DI0=>tx_ddr_data_31_N_175_26, 
                A0=>tx_lvds_test_pattern_26, B0=>tx_ddr_data_24, C0=>n14293, 
                D0=>'X', M0=>'X', CE=>'X', CLK=>internal_64MHz, LSR=>'X', 
                OFX1=>open, F1=>tx_ddr_data_31_N_175_27, Q1=>tx_ddr_data_27, 
                OFX0=>open, F0=>tx_ddr_data_31_N_175_26, Q0=>tx_ddr_data_26);
    SLICE_353I: SLOGICB
      generic map (CLKMUX=>"SIG", CEMUX=>"VHI", SRMODE=>"ASYNC", 
                   LUT0_INITVAL=>X"CACA", LUT1_INITVAL=>X"CACA", 
                   REG1_SD=>"VHI", REG0_SD=>"VHI", CHECK_DI1=>TRUE, 
                   CHECK_DI0=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>tx_lvds_test_pattern_29, 
                B1=>tx_ddr_data_27, C1=>n14293, D1=>'X', 
                DI1=>tx_ddr_data_31_N_175_29, DI0=>tx_ddr_data_31_N_175_28, 
                A0=>tx_lvds_test_pattern_28, B0=>tx_ddr_data_26, C0=>n14293, 
                D0=>'X', M0=>'X', CE=>'X', CLK=>internal_64MHz, LSR=>'X', 
                OFX1=>open, F1=>tx_ddr_data_31_N_175_29, Q1=>tx_ddr_data_29, 
                OFX0=>open, F0=>tx_ddr_data_31_N_175_28, Q0=>tx_ddr_data_28);
    SLICE_354I: SLOGICB
      generic map (CLKMUX=>"SIG", CEMUX=>"VHI", SRMODE=>"ASYNC", 
                   LUT0_INITVAL=>X"CACA", LUT1_INITVAL=>X"CACA", 
                   REG1_SD=>"VHI", REG0_SD=>"VHI", CHECK_DI1=>TRUE, 
                   CHECK_DI0=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>tx_lvds_test_pattern_31, 
                B1=>tx_ddr_data_29, C1=>n14293, D1=>'X', 
                DI1=>tx_ddr_data_31_N_175_31, DI0=>tx_ddr_data_31_N_175_30, 
                A0=>tx_lvds_test_pattern_30, B0=>tx_ddr_data_28, C0=>n14293, 
                D0=>'X', M0=>'X', CE=>'X', CLK=>internal_64MHz, LSR=>'X', 
                OFX1=>open, F1=>tx_ddr_data_31_N_175_31, Q1=>tx_ddr_data_31, 
                OFX0=>open, F0=>tx_ddr_data_31_N_175_30, Q0=>tx_ddr_data_30);
    SLICE_355I: SLOGICB
      generic map (M0MUX=>"SIG", M1MUX=>"SIG", CLKMUX=>"SIG", CEMUX=>"SIG", 
                   GSR=>"DISABLED", SRMODE=>"ASYNC", CHECK_M1=>TRUE, 
                   CHECK_M0=>TRUE, CHECK_CE=>TRUE)
      port map (M1=>tx_lvds_test_pattern_31_N_119_25, FXA=>'X', FXB=>'X', 
                A1=>'X', B1=>'X', C1=>'X', D1=>'X', DI1=>'X', DI0=>'X', 
                A0=>'X', B0=>'X', C0=>'X', D0=>'X', M0=>ufl_p7_sel_7_N_35_0, 
                CE=>int_clk_out_enable_69, CLK=>int_clk_out, LSR=>'X', 
                OFX1=>open, F1=>open, Q1=>tx_lvds_test_pattern_1, OFX0=>open, 
                F0=>open, Q0=>tx_lvds_test_pattern_0);
    SLICE_356I: SLOGICB
      generic map (M0MUX=>"SIG", M1MUX=>"SIG", CLKMUX=>"SIG", CEMUX=>"SIG", 
                   GSR=>"DISABLED", SRMODE=>"ASYNC", CHECK_M1=>TRUE, 
                   CHECK_M0=>TRUE, CHECK_CE=>TRUE)
      port map (M1=>tx_lvds_test_pattern_31_N_119_27, FXA=>'X', FXB=>'X', 
                A1=>'X', B1=>'X', C1=>'X', D1=>'X', DI1=>'X', DI0=>'X', 
                A0=>'X', B0=>'X', C0=>'X', D0=>'X', 
                M0=>tx_lvds_test_pattern_31_N_119_26, 
                CE=>int_clk_out_enable_69, CLK=>int_clk_out, LSR=>'X', 
                OFX1=>open, F1=>open, Q1=>tx_lvds_test_pattern_3, OFX0=>open, 
                F0=>open, Q0=>tx_lvds_test_pattern_2);
    SLICE_357I: SLOGICB
      generic map (M0MUX=>"SIG", M1MUX=>"SIG", CLKMUX=>"SIG", CEMUX=>"SIG", 
                   GSR=>"DISABLED", SRMODE=>"ASYNC", CHECK_M1=>TRUE, 
                   CHECK_M0=>TRUE, CHECK_CE=>TRUE)
      port map (M1=>spi3_test_pattern_15_N_83_13, FXA=>'X', FXB=>'X', A1=>'X', 
                B1=>'X', C1=>'X', D1=>'X', DI1=>'X', DI0=>'X', A0=>'X', 
                B0=>'X', C0=>'X', D0=>'X', 
                M0=>tx_lvds_test_pattern_31_N_119_28, 
                CE=>int_clk_out_enable_69, CLK=>int_clk_out, LSR=>'X', 
                OFX1=>open, F1=>open, Q1=>tx_lvds_test_pattern_5, OFX0=>open, 
                F0=>open, Q0=>tx_lvds_test_pattern_4);
    SLICE_358I: SLOGICB
      generic map (M0MUX=>"SIG", M1MUX=>"SIG", CLKMUX=>"SIG", CEMUX=>"SIG", 
                   GSR=>"DISABLED", SRMODE=>"ASYNC", CHECK_M1=>TRUE, 
                   CHECK_M0=>TRUE, CHECK_CE=>TRUE)
      port map (M1=>tx_lvds_test_pattern_31_N_119_31, FXA=>'X', FXB=>'X', 
                A1=>'X', B1=>'X', C1=>'X', D1=>'X', DI1=>'X', DI0=>'X', 
                A0=>'X', B0=>'X', C0=>'X', D0=>'X', 
                M0=>tx_lvds_test_pattern_31_N_119_6, CE=>int_clk_out_enable_69, 
                CLK=>int_clk_out, LSR=>'X', OFX1=>open, F1=>open, 
                Q1=>tx_lvds_test_pattern_7, OFX0=>open, F0=>open, 
                Q0=>tx_lvds_test_pattern_6);
    SLICE_359I: SLOGICB
      generic map (M0MUX=>"SIG", M1MUX=>"SIG", CLKMUX=>"SIG", CEMUX=>"SIG", 
                   GSR=>"DISABLED", SRMODE=>"ASYNC", CHECK_M1=>TRUE, 
                   CHECK_M0=>TRUE, CHECK_CE=>TRUE)
      port map (M1=>tx_lvds_test_pattern_31_N_119_25, FXA=>'X', FXB=>'X', 
                A1=>'X', B1=>'X', C1=>'X', D1=>'X', DI1=>'X', DI0=>'X', 
                A0=>'X', B0=>'X', C0=>'X', D0=>'X', M0=>ufl_p7_sel_7_N_35_0, 
                CE=>int_clk_out_enable_62, CLK=>int_clk_out, LSR=>'X', 
                OFX1=>open, F1=>open, Q1=>tx_lvds_test_pattern_9, OFX0=>open, 
                F0=>open, Q0=>tx_lvds_test_pattern_8);
    SLICE_360I: SLOGICB
      generic map (M0MUX=>"SIG", M1MUX=>"SIG", CLKMUX=>"SIG", CEMUX=>"SIG", 
                   GSR=>"DISABLED", SRMODE=>"ASYNC", CHECK_M1=>TRUE, 
                   CHECK_M0=>TRUE, CHECK_CE=>TRUE)
      port map (M1=>tx_lvds_test_pattern_31_N_119_27, FXA=>'X', FXB=>'X', 
                A1=>'X', B1=>'X', C1=>'X', D1=>'X', DI1=>'X', DI0=>'X', 
                A0=>'X', B0=>'X', C0=>'X', D0=>'X', 
                M0=>tx_lvds_test_pattern_31_N_119_26, 
                CE=>int_clk_out_enable_62, CLK=>int_clk_out, LSR=>'X', 
                OFX1=>open, F1=>open, Q1=>tx_lvds_test_pattern_11, OFX0=>open, 
                F0=>open, Q0=>tx_lvds_test_pattern_10);
    SLICE_361I: SLOGICB
      generic map (M0MUX=>"SIG", M1MUX=>"SIG", CLKMUX=>"SIG", CEMUX=>"SIG", 
                   GSR=>"DISABLED", SRMODE=>"ASYNC", CHECK_M1=>TRUE, 
                   CHECK_M0=>TRUE, CHECK_CE=>TRUE)
      port map (M1=>spi3_test_pattern_15_N_83_13, FXA=>'X', FXB=>'X', A1=>'X', 
                B1=>'X', C1=>'X', D1=>'X', DI1=>'X', DI0=>'X', A0=>'X', 
                B0=>'X', C0=>'X', D0=>'X', 
                M0=>tx_lvds_test_pattern_31_N_119_28, 
                CE=>int_clk_out_enable_62, CLK=>int_clk_out, LSR=>'X', 
                OFX1=>open, F1=>open, Q1=>tx_lvds_test_pattern_13, OFX0=>open, 
                F0=>open, Q0=>tx_lvds_test_pattern_12);
    SLICE_362I: SLOGICB
      generic map (M0MUX=>"SIG", CLKMUX=>"SIG", CEMUX=>"SIG", GSR=>"DISABLED", 
                   SRMODE=>"ASYNC", CHECK_M0=>TRUE, CHECK_CE=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>'X', B0=>'X', C0=>'X', 
                D0=>'X', M0=>tx_lvds_test_pattern_31_N_119_6, 
                CE=>int_clk_out_enable_62, CLK=>int_clk_out, LSR=>'X', 
                OFX1=>open, F1=>open, Q1=>open, OFX0=>open, F0=>open, 
                Q0=>tx_lvds_test_pattern_14);
    SLICE_363I: SLOGICB
      generic map (M0MUX=>"SIG", CLKMUX=>"SIG", CEMUX=>"SIG", LSRMUX=>"INV", 
                   GSR=>"DISABLED", CHECK_M0=>TRUE, CHECK_CE=>TRUE, 
                   CHECK_LSR=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>'X', B0=>'X', C0=>'X', 
                D0=>'X', M0=>wb_dat_o_7, CE=>int_clk_out_enable_55, 
                CLK=>int_clk_out, LSR=>stm_fpga_spare5_c, OFX1=>open, F1=>open, 
                Q1=>open, OFX0=>open, F0=>open, Q0=>tx_lvds_test_pattern_15);
    SLICE_364I: SLOGICB
      generic map (M0MUX=>"SIG", CLKMUX=>"SIG", CEMUX=>"SIG", LSRMUX=>"INV", 
                   GSR=>"DISABLED", CHECK_M0=>TRUE, CHECK_CE=>TRUE, 
                   CHECK_LSR=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>'X', B0=>'X', C0=>'X', 
                D0=>'X', M0=>wb_dat_o_0, CE=>int_clk_out_enable_54, 
                CLK=>int_clk_out, LSR=>stm_fpga_spare5_c, OFX1=>open, F1=>open, 
                Q1=>open, OFX0=>open, F0=>open, Q0=>tx_lvds_test_pattern_16);
    SLICE_365I: SLOGICB
      generic map (M0MUX=>"SIG", M1MUX=>"SIG", CLKMUX=>"SIG", CEMUX=>"SIG", 
                   GSR=>"DISABLED", SRMODE=>"ASYNC", CHECK_M1=>TRUE, 
                   CHECK_M0=>TRUE, CHECK_CE=>TRUE)
      port map (M1=>tx_lvds_test_pattern_31_N_119_26, FXA=>'X', FXB=>'X', 
                A1=>'X', B1=>'X', C1=>'X', D1=>'X', DI1=>'X', DI0=>'X', 
                A0=>'X', B0=>'X', C0=>'X', D0=>'X', 
                M0=>tx_lvds_test_pattern_31_N_119_25, 
                CE=>int_clk_out_enable_53, CLK=>int_clk_out, LSR=>'X', 
                OFX1=>open, F1=>open, Q1=>tx_lvds_test_pattern_18, OFX0=>open, 
                F0=>open, Q0=>tx_lvds_test_pattern_17);
    SLICE_366I: SLOGICB
      generic map (M0MUX=>"SIG", M1MUX=>"SIG", CLKMUX=>"SIG", CEMUX=>"SIG", 
                   GSR=>"DISABLED", SRMODE=>"ASYNC", CHECK_M1=>TRUE, 
                   CHECK_M0=>TRUE, CHECK_CE=>TRUE)
      port map (M1=>tx_lvds_test_pattern_31_N_119_28, FXA=>'X', FXB=>'X', 
                A1=>'X', B1=>'X', C1=>'X', D1=>'X', DI1=>'X', DI0=>'X', 
                A0=>'X', B0=>'X', C0=>'X', D0=>'X', 
                M0=>tx_lvds_test_pattern_31_N_119_27, 
                CE=>int_clk_out_enable_53, CLK=>int_clk_out, LSR=>'X', 
                OFX1=>open, F1=>open, Q1=>tx_lvds_test_pattern_20, OFX0=>open, 
                F0=>open, Q0=>tx_lvds_test_pattern_19);
    SLICE_367I: SLOGICB
      generic map (M0MUX=>"SIG", M1MUX=>"SIG", CLKMUX=>"SIG", CEMUX=>"SIG", 
                   GSR=>"DISABLED", SRMODE=>"ASYNC", CHECK_M1=>TRUE, 
                   CHECK_M0=>TRUE, CHECK_CE=>TRUE)
      port map (M1=>tx_lvds_test_pattern_31_N_119_6, FXA=>'X', FXB=>'X', 
                A1=>'X', B1=>'X', C1=>'X', D1=>'X', DI1=>'X', DI0=>'X', 
                A0=>'X', B0=>'X', C0=>'X', D0=>'X', 
                M0=>spi3_test_pattern_15_N_83_13, CE=>int_clk_out_enable_53, 
                CLK=>int_clk_out, LSR=>'X', OFX1=>open, F1=>open, 
                Q1=>tx_lvds_test_pattern_22, OFX0=>open, F0=>open, 
                Q0=>tx_lvds_test_pattern_21);
    SLICE_368I: SLOGICB
      generic map (M0MUX=>"SIG", CLKMUX=>"SIG", CEMUX=>"SIG", GSR=>"DISABLED", 
                   SRMODE=>"ASYNC", CHECK_M0=>TRUE, CHECK_CE=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>'X', B0=>'X', C0=>'X', 
                D0=>'X', M0=>tx_lvds_test_pattern_31_N_119_31, 
                CE=>int_clk_out_enable_53, CLK=>int_clk_out, LSR=>'X', 
                OFX1=>open, F1=>open, Q1=>open, OFX0=>open, F0=>open, 
                Q0=>tx_lvds_test_pattern_23);
    SLICE_369I: SLOGICB
      generic map (M0MUX=>"SIG", M1MUX=>"SIG", CLKMUX=>"SIG", CEMUX=>"SIG", 
                   GSR=>"DISABLED", SRMODE=>"ASYNC", CHECK_M1=>TRUE, 
                   CHECK_M0=>TRUE, CHECK_CE=>TRUE)
      port map (M1=>tx_lvds_test_pattern_31_N_119_25, FXA=>'X', FXB=>'X', 
                A1=>'X', B1=>'X', C1=>'X', D1=>'X', DI1=>'X', DI0=>'X', 
                A0=>'X', B0=>'X', C0=>'X', D0=>'X', M0=>ufl_p7_sel_7_N_35_0, 
                CE=>int_clk_out_enable_46, CLK=>int_clk_out, LSR=>'X', 
                OFX1=>open, F1=>open, Q1=>tx_lvds_test_pattern_25, OFX0=>open, 
                F0=>open, Q0=>tx_lvds_test_pattern_24);
    SLICE_370I: SLOGICB
      generic map (M0MUX=>"SIG", M1MUX=>"SIG", CLKMUX=>"SIG", CEMUX=>"SIG", 
                   GSR=>"DISABLED", SRMODE=>"ASYNC", CHECK_M1=>TRUE, 
                   CHECK_M0=>TRUE, CHECK_CE=>TRUE)
      port map (M1=>tx_lvds_test_pattern_31_N_119_27, FXA=>'X', FXB=>'X', 
                A1=>'X', B1=>'X', C1=>'X', D1=>'X', DI1=>'X', DI0=>'X', 
                A0=>'X', B0=>'X', C0=>'X', D0=>'X', 
                M0=>tx_lvds_test_pattern_31_N_119_26, 
                CE=>int_clk_out_enable_46, CLK=>int_clk_out, LSR=>'X', 
                OFX1=>open, F1=>open, Q1=>tx_lvds_test_pattern_27, OFX0=>open, 
                F0=>open, Q0=>tx_lvds_test_pattern_26);
    SLICE_371I: SLOGICB
      generic map (M0MUX=>"SIG", M1MUX=>"SIG", CLKMUX=>"SIG", CEMUX=>"SIG", 
                   GSR=>"DISABLED", SRMODE=>"ASYNC", CHECK_M1=>TRUE, 
                   CHECK_M0=>TRUE, CHECK_CE=>TRUE)
      port map (M1=>spi3_test_pattern_15_N_83_13, FXA=>'X', FXB=>'X', A1=>'X', 
                B1=>'X', C1=>'X', D1=>'X', DI1=>'X', DI0=>'X', A0=>'X', 
                B0=>'X', C0=>'X', D0=>'X', 
                M0=>tx_lvds_test_pattern_31_N_119_28, 
                CE=>int_clk_out_enable_46, CLK=>int_clk_out, LSR=>'X', 
                OFX1=>open, F1=>open, Q1=>tx_lvds_test_pattern_29, OFX0=>open, 
                F0=>open, Q0=>tx_lvds_test_pattern_28);
    SLICE_372I: SLOGICB
      generic map (M0MUX=>"SIG", CLKMUX=>"SIG", CEMUX=>"SIG", LSRMUX=>"INV", 
                   GSR=>"DISABLED", CHECK_M0=>TRUE, CHECK_CE=>TRUE, 
                   CHECK_LSR=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>'X', B0=>'X', C0=>'X', 
                D0=>'X', M0=>wb_dat_o_6, CE=>int_clk_out_enable_39, 
                CLK=>int_clk_out, LSR=>stm_fpga_spare5_c, OFX1=>open, F1=>open, 
                Q1=>open, OFX0=>open, F0=>open, Q0=>tx_lvds_test_pattern_30);
    SLICE_373I: SLOGICB
      generic map (M0MUX=>"SIG", CLKMUX=>"SIG", CEMUX=>"SIG", GSR=>"DISABLED", 
                   SRMODE=>"ASYNC", CHECK_M0=>TRUE, CHECK_CE=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>'X', B0=>'X', C0=>'X', 
                D0=>'X', M0=>tx_lvds_test_pattern_31_N_119_31, 
                CE=>int_clk_out_enable_46, CLK=>int_clk_out, LSR=>'X', 
                OFX1=>open, F1=>open, Q1=>open, OFX0=>open, F0=>open, 
                Q0=>tx_lvds_test_pattern_31);
    SLICE_375I: SLOGICB
      generic map (M0MUX=>"SIG", M1MUX=>"SIG", CLKMUX=>"SIG", CEMUX=>"SIG", 
                   GSR=>"DISABLED", SRMODE=>"ASYNC", CHECK_M1=>TRUE, 
                   CHECK_M0=>TRUE, CHECK_CE=>TRUE)
      port map (M1=>tx_lvds_test_pattern_31_N_119_25, FXA=>'X', FXB=>'X', 
                A1=>'X', B1=>'X', C1=>'X', D1=>'X', DI1=>'X', DI0=>'X', 
                A0=>'X', B0=>'X', C0=>'X', D0=>'X', M0=>ufl_p7_sel_7_N_35_0, 
                CE=>int_clk_out_enable_143, CLK=>int_clk_out, LSR=>'X', 
                OFX1=>open, F1=>open, Q1=>ufl_p7_sel_1, OFX0=>open, F0=>open, 
                Q0=>ufl_p7_sel_0);
    SLICE_376I: SLOGICB
      generic map (M0MUX=>"SIG", CLKMUX=>"SIG", CEMUX=>"SIG", GSR=>"DISABLED", 
                   SRMODE=>"ASYNC", CHECK_M0=>TRUE, CHECK_CE=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>'X', B0=>'X', C0=>'X', 
                D0=>'X', M0=>tx_lvds_test_pattern_31_N_119_26, 
                CE=>int_clk_out_enable_143, CLK=>int_clk_out, LSR=>'X', 
                OFX1=>open, F1=>open, Q1=>open, OFX0=>open, F0=>open, 
                Q0=>ufl_p7_sel_2);
    SLICE_377I: SLOGICB
      generic map (M0MUX=>"SIG", M1MUX=>"SIG", CLKMUX=>"SIG", CEMUX=>"SIG", 
                   LSRMUX=>"INV", GSR=>"DISABLED", CHECK_M1=>TRUE, 
                   CHECK_M0=>TRUE, CHECK_CE=>TRUE, CHECK_LSR=>TRUE)
      port map (M1=>wb_dat_o_4, FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>'X', B0=>'X', C0=>'X', 
                D0=>'X', M0=>wb_dat_o_3, CE=>int_clk_out_enable_141, 
                CLK=>int_clk_out, LSR=>stm_fpga_spare5_c, OFX1=>open, F1=>open, 
                Q1=>ufl_p7_sel_4, OFX0=>open, F0=>open, Q0=>ufl_p7_sel_3);
    SLICE_378I: SLOGICB
      generic map (M0MUX=>"SIG", M1MUX=>"SIG", CLKMUX=>"SIG", CEMUX=>"SIG", 
                   LSRMUX=>"INV", GSR=>"DISABLED", CHECK_M1=>TRUE, 
                   CHECK_M0=>TRUE, CHECK_CE=>TRUE, CHECK_LSR=>TRUE)
      port map (M1=>wb_dat_o_6, FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>'X', B0=>'X', C0=>'X', 
                D0=>'X', M0=>wb_dat_o_5, CE=>int_clk_out_enable_141, 
                CLK=>int_clk_out, LSR=>stm_fpga_spare5_c, OFX1=>open, F1=>open, 
                Q1=>ufl_p7_sel_6, OFX0=>open, F0=>open, Q0=>ufl_p7_sel_5);
    SLICE_379I: SLOGICB
      generic map (M0MUX=>"SIG", CLKMUX=>"SIG", CEMUX=>"SIG", LSRMUX=>"INV", 
                   GSR=>"DISABLED", CHECK_M0=>TRUE, CHECK_CE=>TRUE, 
                   CHECK_LSR=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>'X', B0=>'X', C0=>'X', 
                D0=>'X', M0=>wb_dat_o_7, CE=>int_clk_out_enable_141, 
                CLK=>int_clk_out, LSR=>stm_fpga_spare5_c, OFX1=>open, F1=>open, 
                Q1=>open, OFX0=>open, F0=>open, Q0=>ufl_p7_sel_7);
    SLICE_380I: SLOGICB
      generic map (M0MUX=>"SIG", M1MUX=>"SIG", CLKMUX=>"SIG", CEMUX=>"SIG", 
                   LSRMUX=>"INV", GSR=>"DISABLED", CHECK_M1=>TRUE, 
                   CHECK_M0=>TRUE, CHECK_CE=>TRUE, CHECK_LSR=>TRUE)
      port map (M1=>wb_dat_o_1, FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>'X', B0=>'X', C0=>'X', 
                D0=>'X', M0=>wb_dat_o_0, CE=>int_clk_out_enable_136, 
                CLK=>int_clk_out, LSR=>stm_fpga_spare5_c, OFX1=>open, F1=>open, 
                Q1=>ufl_p8_sel_1, OFX0=>open, F0=>open, Q0=>ufl_p8_sel_0);
    SLICE_381I: SLOGICB
      generic map (M0MUX=>"SIG", CLKMUX=>"SIG", CEMUX=>"SIG", LSRMUX=>"INV", 
                   GSR=>"DISABLED", CHECK_M0=>TRUE, CHECK_CE=>TRUE, 
                   CHECK_LSR=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>'X', B0=>'X', C0=>'X', 
                D0=>'X', M0=>wb_dat_o_2, CE=>int_clk_out_enable_136, 
                CLK=>int_clk_out, LSR=>stm_fpga_spare5_c, OFX1=>open, F1=>open, 
                Q1=>open, OFX0=>open, F0=>open, Q0=>ufl_p8_sel_2);
    SLICE_382I: SLOGICB
      generic map (M0MUX=>"SIG", CLKMUX=>"SIG", CEMUX=>"SIG", GSR=>"DISABLED", 
                   SRMODE=>"ASYNC", CHECK_M0=>TRUE, CHECK_CE=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>'X', B0=>'X', C0=>'X', 
                D0=>'X', M0=>tx_lvds_test_pattern_31_N_119_27, 
                CE=>int_clk_out_enable_134, CLK=>int_clk_out, LSR=>'X', 
                OFX1=>open, F1=>open, Q1=>open, OFX0=>open, F0=>open, 
                Q0=>ufl_p8_sel_3);
    SLICE_383I: SLOGICB
      generic map (M0MUX=>"SIG", M1MUX=>"SIG", CLKMUX=>"SIG", CEMUX=>"SIG", 
                   LSRMUX=>"INV", GSR=>"DISABLED", CHECK_M1=>TRUE, 
                   CHECK_M0=>TRUE, CHECK_CE=>TRUE, CHECK_LSR=>TRUE)
      port map (M1=>wb_dat_o_5, FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>'X', B0=>'X', C0=>'X', 
                D0=>'X', M0=>wb_dat_o_4, CE=>int_clk_out_enable_136, 
                CLK=>int_clk_out, LSR=>stm_fpga_spare5_c, OFX1=>open, F1=>open, 
                Q1=>ufl_p8_sel_5, OFX0=>open, F0=>open, Q0=>ufl_p8_sel_4);
    SLICE_384I: SLOGICB
      generic map (M0MUX=>"SIG", M1MUX=>"SIG", CLKMUX=>"SIG", CEMUX=>"SIG", 
                   LSRMUX=>"INV", GSR=>"DISABLED", CHECK_M1=>TRUE, 
                   CHECK_M0=>TRUE, CHECK_CE=>TRUE, CHECK_LSR=>TRUE)
      port map (M1=>wb_dat_o_7, FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>'X', B0=>'X', C0=>'X', 
                D0=>'X', M0=>wb_dat_o_6, CE=>int_clk_out_enable_136, 
                CLK=>int_clk_out, LSR=>stm_fpga_spare5_c, OFX1=>open, F1=>open, 
                Q1=>ufl_p8_sel_7, OFX0=>open, F0=>open, Q0=>ufl_p8_sel_6);
    lvds_rx_09_inst_SLICE_385I: SLOGICB
      generic map (CLKMUX=>"SIG", CEMUX=>"SIG", SRMODE=>"ASYNC", 
                   LUT0_INITVAL=>X"CACA", LUT1_INITVAL=>X"CACA", 
                   REG1_SD=>"VHI", REG0_SD=>"VHI", CHECK_DI1=>TRUE, 
                   CHECK_DI0=>TRUE, CHECK_CE=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>lvds_rx_09_inst_sr_2, 
                B1=>lvds_rx_09_inst_sr_1, C1=>r_candidate_offset, D1=>'X', 
                DI1=>lvds_rx_09_inst_candidate_sr_1, 
                DI0=>lvds_rx_09_inst_n14364, A0=>lvds_rx_09_inst_sr_1, 
                B0=>lvds_rx_09_inst_sr_0, C0=>r_candidate_offset, D0=>'X', 
                M0=>'X', CE=>lvds_rx_09_inst_sdr_rxclk_c_enable_40, 
                CLK=>sdr_rxclk_c, LSR=>'X', OFX1=>open, 
                F1=>lvds_rx_09_inst_candidate_sr_1, Q1=>w_rx_09_fifo_data_1, 
                OFX0=>open, F0=>lvds_rx_09_inst_n14364, 
                Q0=>w_rx_09_fifo_data_0);
    lvds_rx_09_inst_SLICE_386I: SLOGICB
      generic map (CLKMUX=>"SIG", CEMUX=>"SIG", SRMODE=>"ASYNC", 
                   LUT0_INITVAL=>X"CACA", LUT1_INITVAL=>X"CACA", 
                   REG1_SD=>"VHI", REG0_SD=>"VHI", CHECK_DI1=>TRUE, 
                   CHECK_DI0=>TRUE, CHECK_CE=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>lvds_rx_09_inst_sr_4, 
                B1=>lvds_rx_09_inst_sr_3, C1=>r_candidate_offset, D1=>'X', 
                DI1=>lvds_rx_09_inst_candidate_sr_3, 
                DI0=>lvds_rx_09_inst_candidate_sr_2, A0=>lvds_rx_09_inst_sr_3, 
                B0=>lvds_rx_09_inst_sr_2, C0=>r_candidate_offset, D0=>'X', 
                M0=>'X', CE=>lvds_rx_09_inst_sdr_rxclk_c_enable_40, 
                CLK=>sdr_rxclk_c, LSR=>'X', OFX1=>open, 
                F1=>lvds_rx_09_inst_candidate_sr_3, Q1=>w_rx_09_fifo_data_3, 
                OFX0=>open, F0=>lvds_rx_09_inst_candidate_sr_2, 
                Q0=>w_rx_09_fifo_data_2);
    lvds_rx_09_inst_SLICE_387I: SLOGICB
      generic map (CLKMUX=>"SIG", CEMUX=>"SIG", SRMODE=>"ASYNC", 
                   LUT0_INITVAL=>X"CACA", LUT1_INITVAL=>X"CACA", 
                   REG1_SD=>"VHI", REG0_SD=>"VHI", CHECK_DI1=>TRUE, 
                   CHECK_DI0=>TRUE, CHECK_CE=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>lvds_rx_09_inst_sr_6, 
                B1=>lvds_rx_09_inst_sr_5, C1=>r_candidate_offset, D1=>'X', 
                DI1=>lvds_rx_09_inst_candidate_sr_5, 
                DI0=>lvds_rx_09_inst_candidate_sr_4, A0=>lvds_rx_09_inst_sr_5, 
                B0=>lvds_rx_09_inst_sr_4, C0=>r_candidate_offset, D0=>'X', 
                M0=>'X', CE=>lvds_rx_09_inst_sdr_rxclk_c_enable_40, 
                CLK=>sdr_rxclk_c, LSR=>'X', OFX1=>open, 
                F1=>lvds_rx_09_inst_candidate_sr_5, Q1=>w_rx_09_fifo_data_5, 
                OFX0=>open, F0=>lvds_rx_09_inst_candidate_sr_4, 
                Q0=>w_rx_09_fifo_data_4);
    lvds_rx_09_inst_SLICE_388I: SLOGICB
      generic map (CLKMUX=>"SIG", CEMUX=>"SIG", SRMODE=>"ASYNC", 
                   LUT0_INITVAL=>X"CACA", LUT1_INITVAL=>X"CACA", 
                   REG1_SD=>"VHI", REG0_SD=>"VHI", CHECK_DI1=>TRUE, 
                   CHECK_DI0=>TRUE, CHECK_CE=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>lvds_rx_09_inst_sr_8, 
                B1=>lvds_rx_09_inst_sr_7, C1=>r_candidate_offset, D1=>'X', 
                DI1=>lvds_rx_09_inst_candidate_sr_7, 
                DI0=>lvds_rx_09_inst_candidate_sr_6, A0=>lvds_rx_09_inst_sr_7, 
                B0=>lvds_rx_09_inst_sr_6, C0=>r_candidate_offset, D0=>'X', 
                M0=>'X', CE=>lvds_rx_09_inst_sdr_rxclk_c_enable_40, 
                CLK=>sdr_rxclk_c, LSR=>'X', OFX1=>open, 
                F1=>lvds_rx_09_inst_candidate_sr_7, Q1=>w_rx_09_fifo_data_7, 
                OFX0=>open, F0=>lvds_rx_09_inst_candidate_sr_6, 
                Q0=>w_rx_09_fifo_data_6);
    lvds_rx_09_inst_SLICE_389I: SLOGICB
      generic map (CLKMUX=>"SIG", CEMUX=>"SIG", SRMODE=>"ASYNC", 
                   LUT0_INITVAL=>X"CACA", LUT1_INITVAL=>X"CACA", 
                   REG1_SD=>"VHI", REG0_SD=>"VHI", CHECK_DI1=>TRUE, 
                   CHECK_DI0=>TRUE, CHECK_CE=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>lvds_rx_09_inst_sr_10, 
                B1=>lvds_rx_09_inst_sr_9, C1=>r_candidate_offset, D1=>'X', 
                DI1=>lvds_rx_09_inst_candidate_sr_9, 
                DI0=>lvds_rx_09_inst_candidate_sr_8, A0=>lvds_rx_09_inst_sr_9, 
                B0=>lvds_rx_09_inst_sr_8, C0=>r_candidate_offset, D0=>'X', 
                M0=>'X', CE=>lvds_rx_09_inst_sdr_rxclk_c_enable_40, 
                CLK=>sdr_rxclk_c, LSR=>'X', OFX1=>open, 
                F1=>lvds_rx_09_inst_candidate_sr_9, Q1=>w_rx_09_fifo_data_9, 
                OFX0=>open, F0=>lvds_rx_09_inst_candidate_sr_8, 
                Q0=>w_rx_09_fifo_data_8);
    lvds_rx_09_inst_SLICE_390I: SLOGICB
      generic map (CLKMUX=>"SIG", CEMUX=>"SIG", SRMODE=>"ASYNC", 
                   LUT0_INITVAL=>X"CACA", LUT1_INITVAL=>X"CACA", 
                   REG1_SD=>"VHI", REG0_SD=>"VHI", CHECK_DI1=>TRUE, 
                   CHECK_DI0=>TRUE, CHECK_CE=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>lvds_rx_09_inst_sr_12, 
                B1=>lvds_rx_09_inst_sr_11, C1=>r_candidate_offset, D1=>'X', 
                DI1=>lvds_rx_09_inst_candidate_sr_11, 
                DI0=>lvds_rx_09_inst_candidate_sr_10, 
                A0=>lvds_rx_09_inst_sr_11, B0=>lvds_rx_09_inst_sr_10, 
                C0=>r_candidate_offset, D0=>'X', M0=>'X', 
                CE=>lvds_rx_09_inst_sdr_rxclk_c_enable_40, CLK=>sdr_rxclk_c, 
                LSR=>'X', OFX1=>open, F1=>lvds_rx_09_inst_candidate_sr_11, 
                Q1=>w_rx_09_fifo_data_11, OFX0=>open, 
                F0=>lvds_rx_09_inst_candidate_sr_10, Q0=>w_rx_09_fifo_data_10);
    lvds_rx_09_inst_SLICE_391I: SLOGICB
      generic map (CLKMUX=>"SIG", CEMUX=>"SIG", SRMODE=>"ASYNC", 
                   LUT0_INITVAL=>X"CACA", LUT1_INITVAL=>X"CACA", 
                   REG1_SD=>"VHI", REG0_SD=>"VHI", CHECK_DI1=>TRUE, 
                   CHECK_DI0=>TRUE, CHECK_CE=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>lvds_rx_09_inst_sr_14, 
                B1=>lvds_rx_09_inst_sr_13, C1=>r_candidate_offset, D1=>'X', 
                DI1=>lvds_rx_09_inst_candidate_sr_13, 
                DI0=>lvds_rx_09_inst_candidate_sr_12, 
                A0=>lvds_rx_09_inst_sr_13, B0=>lvds_rx_09_inst_sr_12, 
                C0=>r_candidate_offset, D0=>'X', M0=>'X', 
                CE=>lvds_rx_09_inst_sdr_rxclk_c_enable_40, CLK=>sdr_rxclk_c, 
                LSR=>'X', OFX1=>open, F1=>lvds_rx_09_inst_candidate_sr_13, 
                Q1=>w_rx_09_fifo_data_13, OFX0=>open, 
                F0=>lvds_rx_09_inst_candidate_sr_12, Q0=>w_rx_09_fifo_data_12);
    lvds_rx_09_inst_SLICE_392I: SLOGICB
      generic map (CLKMUX=>"SIG", CEMUX=>"SIG", SRMODE=>"ASYNC", 
                   LUT0_INITVAL=>X"CACA", LUT1_INITVAL=>X"CACA", 
                   REG1_SD=>"VHI", REG0_SD=>"VHI", CHECK_DI1=>TRUE, 
                   CHECK_DI0=>TRUE, CHECK_CE=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>sr_16, 
                B1=>lvds_rx_09_inst_sr_15, C1=>r_candidate_offset, D1=>'X', 
                DI1=>lvds_rx_09_inst_candidate_sr_15, 
                DI0=>lvds_rx_09_inst_candidate_sr_14, 
                A0=>lvds_rx_09_inst_sr_15, B0=>lvds_rx_09_inst_sr_14, 
                C0=>r_candidate_offset, D0=>'X', M0=>'X', 
                CE=>lvds_rx_09_inst_sdr_rxclk_c_enable_40, CLK=>sdr_rxclk_c, 
                LSR=>'X', OFX1=>open, F1=>lvds_rx_09_inst_candidate_sr_15, 
                Q1=>w_rx_09_fifo_data_15, OFX0=>open, 
                F0=>lvds_rx_09_inst_candidate_sr_14, Q0=>w_rx_09_fifo_data_14);
    lvds_rx_09_inst_SLICE_393I: SLOGICB
      generic map (CLKMUX=>"SIG", CEMUX=>"SIG", SRMODE=>"ASYNC", 
                   LUT0_INITVAL=>X"CACA", LUT1_INITVAL=>X"CACA", 
                   REG1_SD=>"VHI", REG0_SD=>"VHI", CHECK_DI1=>TRUE, 
                   CHECK_DI0=>TRUE, CHECK_CE=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>lvds_rx_09_inst_sr_18, 
                B1=>lvds_rx_09_inst_sr_17, C1=>r_candidate_offset, D1=>'X', 
                DI1=>lvds_rx_09_inst_candidate_sr_17, 
                DI0=>lvds_rx_09_inst_candidate_sr_16, 
                A0=>lvds_rx_09_inst_sr_17, B0=>sr_16, C0=>r_candidate_offset, 
                D0=>'X', M0=>'X', CE=>lvds_rx_09_inst_sdr_rxclk_c_enable_40, 
                CLK=>sdr_rxclk_c, LSR=>'X', OFX1=>open, 
                F1=>lvds_rx_09_inst_candidate_sr_17, Q1=>w_rx_09_fifo_data_17, 
                OFX0=>open, F0=>lvds_rx_09_inst_candidate_sr_16, 
                Q0=>w_rx_09_fifo_data_16);
    lvds_rx_09_inst_SLICE_394I: SLOGICB
      generic map (CLKMUX=>"SIG", CEMUX=>"SIG", SRMODE=>"ASYNC", 
                   LUT0_INITVAL=>X"CACA", LUT1_INITVAL=>X"CACA", 
                   REG1_SD=>"VHI", REG0_SD=>"VHI", CHECK_DI1=>TRUE, 
                   CHECK_DI0=>TRUE, CHECK_CE=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>lvds_rx_09_inst_sr_20, 
                B1=>lvds_rx_09_inst_sr_19, C1=>r_candidate_offset, D1=>'X', 
                DI1=>lvds_rx_09_inst_candidate_sr_19, 
                DI0=>lvds_rx_09_inst_candidate_sr_18, 
                A0=>lvds_rx_09_inst_sr_19, B0=>lvds_rx_09_inst_sr_18, 
                C0=>r_candidate_offset, D0=>'X', M0=>'X', 
                CE=>lvds_rx_09_inst_sdr_rxclk_c_enable_40, CLK=>sdr_rxclk_c, 
                LSR=>'X', OFX1=>open, F1=>lvds_rx_09_inst_candidate_sr_19, 
                Q1=>w_rx_09_fifo_data_19, OFX0=>open, 
                F0=>lvds_rx_09_inst_candidate_sr_18, Q0=>w_rx_09_fifo_data_18);
    lvds_rx_09_inst_SLICE_395I: SLOGICB
      generic map (CLKMUX=>"SIG", CEMUX=>"SIG", SRMODE=>"ASYNC", 
                   LUT0_INITVAL=>X"CACA", LUT1_INITVAL=>X"CACA", 
                   REG1_SD=>"VHI", REG0_SD=>"VHI", CHECK_DI1=>TRUE, 
                   CHECK_DI0=>TRUE, CHECK_CE=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>lvds_rx_09_inst_sr_22, 
                B1=>lvds_rx_09_inst_sr_21, C1=>r_candidate_offset, D1=>'X', 
                DI1=>lvds_rx_09_inst_candidate_sr_21, 
                DI0=>lvds_rx_09_inst_candidate_sr_20, 
                A0=>lvds_rx_09_inst_sr_21, B0=>lvds_rx_09_inst_sr_20, 
                C0=>r_candidate_offset, D0=>'X', M0=>'X', 
                CE=>lvds_rx_09_inst_sdr_rxclk_c_enable_40, CLK=>sdr_rxclk_c, 
                LSR=>'X', OFX1=>open, F1=>lvds_rx_09_inst_candidate_sr_21, 
                Q1=>w_rx_09_fifo_data_21, OFX0=>open, 
                F0=>lvds_rx_09_inst_candidate_sr_20, Q0=>w_rx_09_fifo_data_20);
    lvds_rx_09_inst_SLICE_396I: SLOGICB
      generic map (CLKMUX=>"SIG", CEMUX=>"SIG", SRMODE=>"ASYNC", 
                   LUT0_INITVAL=>X"CACA", LUT1_INITVAL=>X"CACA", 
                   REG1_SD=>"VHI", REG0_SD=>"VHI", CHECK_DI1=>TRUE, 
                   CHECK_DI0=>TRUE, CHECK_CE=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>lvds_rx_09_inst_sr_24, 
                B1=>lvds_rx_09_inst_sr_23, C1=>r_candidate_offset, D1=>'X', 
                DI1=>lvds_rx_09_inst_candidate_sr_23, 
                DI0=>lvds_rx_09_inst_candidate_sr_22, 
                A0=>lvds_rx_09_inst_sr_23, B0=>lvds_rx_09_inst_sr_22, 
                C0=>r_candidate_offset, D0=>'X', M0=>'X', 
                CE=>lvds_rx_09_inst_sdr_rxclk_c_enable_40, CLK=>sdr_rxclk_c, 
                LSR=>'X', OFX1=>open, F1=>lvds_rx_09_inst_candidate_sr_23, 
                Q1=>w_rx_09_fifo_data_23, OFX0=>open, 
                F0=>lvds_rx_09_inst_candidate_sr_22, Q0=>w_rx_09_fifo_data_22);
    lvds_rx_09_inst_SLICE_397I: SLOGICB
      generic map (CLKMUX=>"SIG", CEMUX=>"SIG", SRMODE=>"ASYNC", 
                   LUT0_INITVAL=>X"CACA", LUT1_INITVAL=>X"CACA", 
                   REG1_SD=>"VHI", REG0_SD=>"VHI", CHECK_DI1=>TRUE, 
                   CHECK_DI0=>TRUE, CHECK_CE=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>lvds_rx_09_inst_sr_26, 
                B1=>lvds_rx_09_inst_sr_25, C1=>r_candidate_offset, D1=>'X', 
                DI1=>lvds_rx_09_inst_candidate_sr_25, 
                DI0=>lvds_rx_09_inst_candidate_sr_24, 
                A0=>lvds_rx_09_inst_sr_25, B0=>lvds_rx_09_inst_sr_24, 
                C0=>r_candidate_offset, D0=>'X', M0=>'X', 
                CE=>lvds_rx_09_inst_sdr_rxclk_c_enable_40, CLK=>sdr_rxclk_c, 
                LSR=>'X', OFX1=>open, F1=>lvds_rx_09_inst_candidate_sr_25, 
                Q1=>w_rx_09_fifo_data_25, OFX0=>open, 
                F0=>lvds_rx_09_inst_candidate_sr_24, Q0=>w_rx_09_fifo_data_24);
    lvds_rx_09_inst_SLICE_398I: SLOGICB
      generic map (CLKMUX=>"SIG", CEMUX=>"SIG", SRMODE=>"ASYNC", 
                   LUT0_INITVAL=>X"CACA", LUT1_INITVAL=>X"CACA", 
                   REG1_SD=>"VHI", REG0_SD=>"VHI", CHECK_DI1=>TRUE, 
                   CHECK_DI0=>TRUE, CHECK_CE=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>lvds_rx_09_inst_sr_28, 
                B1=>lvds_rx_09_inst_sr_27, C1=>r_candidate_offset, D1=>'X', 
                DI1=>lvds_rx_09_inst_candidate_sr_27, 
                DI0=>lvds_rx_09_inst_candidate_sr_26, 
                A0=>lvds_rx_09_inst_sr_27, B0=>lvds_rx_09_inst_sr_26, 
                C0=>r_candidate_offset, D0=>'X', M0=>'X', 
                CE=>lvds_rx_09_inst_sdr_rxclk_c_enable_40, CLK=>sdr_rxclk_c, 
                LSR=>'X', OFX1=>open, F1=>lvds_rx_09_inst_candidate_sr_27, 
                Q1=>w_rx_09_fifo_data_27, OFX0=>open, 
                F0=>lvds_rx_09_inst_candidate_sr_26, Q0=>w_rx_09_fifo_data_26);
    lvds_rx_09_inst_SLICE_399I: SLOGICB
      generic map (CLKMUX=>"SIG", CEMUX=>"SIG", SRMODE=>"ASYNC", 
                   LUT0_INITVAL=>X"CACA", LUT1_INITVAL=>X"CACA", 
                   REG1_SD=>"VHI", REG0_SD=>"VHI", CHECK_DI1=>TRUE, 
                   CHECK_DI0=>TRUE, CHECK_CE=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>lvds_rx_09_inst_sr_30, 
                B1=>lvds_rx_09_inst_sr_29, C1=>r_candidate_offset, D1=>'X', 
                DI1=>lvds_rx_09_inst_candidate_sr_29, 
                DI0=>lvds_rx_09_inst_candidate_sr_28, 
                A0=>lvds_rx_09_inst_sr_29, B0=>lvds_rx_09_inst_sr_28, 
                C0=>r_candidate_offset, D0=>'X', M0=>'X', 
                CE=>lvds_rx_09_inst_sdr_rxclk_c_enable_40, CLK=>sdr_rxclk_c, 
                LSR=>'X', OFX1=>open, F1=>lvds_rx_09_inst_candidate_sr_29, 
                Q1=>w_rx_09_fifo_data_29, OFX0=>open, 
                F0=>lvds_rx_09_inst_candidate_sr_28, Q0=>w_rx_09_fifo_data_28);
    lvds_rx_09_inst_SLICE_400I: SLOGICB
      generic map (CLKMUX=>"SIG", CEMUX=>"SIG", SRMODE=>"ASYNC", 
                   LUT0_INITVAL=>X"CACA", LUT1_INITVAL=>X"CACA", 
                   REG1_SD=>"VHI", REG0_SD=>"VHI", CHECK_DI1=>TRUE, 
                   CHECK_DI0=>TRUE, CHECK_CE=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>lvds_rx_09_inst_sr_32, 
                B1=>lvds_rx_09_inst_sr_31, C1=>r_candidate_offset, D1=>'X', 
                DI1=>lvds_rx_09_inst_n14362, DI0=>candidate_sr_30, 
                A0=>lvds_rx_09_inst_sr_31, B0=>lvds_rx_09_inst_sr_30, 
                C0=>r_candidate_offset, D0=>'X', M0=>'X', 
                CE=>lvds_rx_09_inst_sdr_rxclk_c_enable_40, CLK=>sdr_rxclk_c, 
                LSR=>'X', OFX1=>open, F1=>lvds_rx_09_inst_n14362, 
                Q1=>w_rx_09_fifo_data_31, OFX0=>open, F0=>candidate_sr_30, 
                Q0=>w_rx_09_fifo_data_30);
    lvds_rx_09_inst_SLICE_401I: SLOGICB
      generic map (CLKMUX=>"SIG", CEMUX=>"VHI", LSRMUX=>"SIG", 
                   LUT0_INITVAL=>X"0002", LUT1_INITVAL=>X"FFFE", 
                   REG0_SD=>"VHI", CHECK_DI0=>TRUE, CHECK_LSR=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>real_candidate, 
                B1=>lvds_rx_09_inst_n12490, C1=>lvds_rx_09_inst_n12492, 
                D1=>lvds_rx_09_inst_n12488, DI1=>'X', DI0=>real_candidate, 
                A0=>lvds_rx_09_inst_n12404, B0=>lvds_rx_09_inst_n14364, 
                C0=>candidate_sr_30, D0=>lvds_rx_09_inst_n14361, M0=>'X', 
                CE=>'X', CLK=>sdr_rxclk_c, LSR=>n11591, OFX1=>open, 
                F1=>lvds_rx_09_inst_n11728, Q1=>open, OFX0=>open, 
                F0=>real_candidate, Q0=>w_rx_09_fifo_push);
    lvds_rx_24_inst_SLICE_402I: SLOGICB
      generic map (CLKMUX=>"SIG", CEMUX=>"SIG", SRMODE=>"ASYNC", 
                   LUT0_INITVAL=>X"CACA", LUT1_INITVAL=>X"D8D8", 
                   REG1_SD=>"VHI", REG0_SD=>"VHI", CHECK_DI1=>TRUE, 
                   CHECK_DI0=>TRUE, CHECK_CE=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', 
                A1=>lvds_rx_24_inst_r_candidate_offset, 
                B1=>lvds_rx_24_inst_sr_1, C1=>lvds_rx_24_inst_sr_2, D1=>'X', 
                DI1=>lvds_rx_24_inst_candidate_sr_1, 
                DI0=>lvds_rx_24_inst_candidate_sr_0, A0=>lvds_rx_24_inst_sr_1, 
                B0=>lvds_rx_24_inst_sr_0, 
                C0=>lvds_rx_24_inst_r_candidate_offset, D0=>'X', M0=>'X', 
                CE=>lvds_rx_24_inst_sdr_rxclk_c_enable_73, CLK=>sdr_rxclk_c, 
                LSR=>'X', OFX1=>open, F1=>lvds_rx_24_inst_candidate_sr_1, 
                Q1=>w_rx_24_fifo_data_1, OFX0=>open, 
                F0=>lvds_rx_24_inst_candidate_sr_0, Q0=>w_rx_24_fifo_data_0);
    lvds_rx_24_inst_SLICE_403I: SLOGICB
      generic map (CLKMUX=>"SIG", CEMUX=>"SIG", SRMODE=>"ASYNC", 
                   LUT0_INITVAL=>X"CACA", LUT1_INITVAL=>X"CACA", 
                   REG1_SD=>"VHI", REG0_SD=>"VHI", CHECK_DI1=>TRUE, 
                   CHECK_DI0=>TRUE, CHECK_CE=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>lvds_rx_24_inst_sr_4, 
                B1=>lvds_rx_24_inst_sr_3, 
                C1=>lvds_rx_24_inst_r_candidate_offset, D1=>'X', 
                DI1=>lvds_rx_24_inst_candidate_sr_3, 
                DI0=>lvds_rx_24_inst_candidate_sr_2, A0=>lvds_rx_24_inst_sr_3, 
                B0=>lvds_rx_24_inst_sr_2, 
                C0=>lvds_rx_24_inst_r_candidate_offset, D0=>'X', M0=>'X', 
                CE=>lvds_rx_24_inst_sdr_rxclk_c_enable_73, CLK=>sdr_rxclk_c, 
                LSR=>'X', OFX1=>open, F1=>lvds_rx_24_inst_candidate_sr_3, 
                Q1=>w_rx_24_fifo_data_3, OFX0=>open, 
                F0=>lvds_rx_24_inst_candidate_sr_2, Q0=>w_rx_24_fifo_data_2);
    lvds_rx_24_inst_SLICE_404I: SLOGICB
      generic map (CLKMUX=>"SIG", CEMUX=>"SIG", SRMODE=>"ASYNC", 
                   LUT0_INITVAL=>X"CACA", LUT1_INITVAL=>X"CACA", 
                   REG1_SD=>"VHI", REG0_SD=>"VHI", CHECK_DI1=>TRUE, 
                   CHECK_DI0=>TRUE, CHECK_CE=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>lvds_rx_24_inst_sr_6, 
                B1=>lvds_rx_24_inst_sr_5, 
                C1=>lvds_rx_24_inst_r_candidate_offset, D1=>'X', 
                DI1=>lvds_rx_24_inst_candidate_sr_5, 
                DI0=>lvds_rx_24_inst_candidate_sr_4, A0=>lvds_rx_24_inst_sr_5, 
                B0=>lvds_rx_24_inst_sr_4, 
                C0=>lvds_rx_24_inst_r_candidate_offset, D0=>'X', M0=>'X', 
                CE=>lvds_rx_24_inst_sdr_rxclk_c_enable_73, CLK=>sdr_rxclk_c, 
                LSR=>'X', OFX1=>open, F1=>lvds_rx_24_inst_candidate_sr_5, 
                Q1=>w_rx_24_fifo_data_5, OFX0=>open, 
                F0=>lvds_rx_24_inst_candidate_sr_4, Q0=>w_rx_24_fifo_data_4);
    lvds_rx_24_inst_SLICE_405I: SLOGICB
      generic map (CLKMUX=>"SIG", CEMUX=>"SIG", SRMODE=>"ASYNC", 
                   LUT0_INITVAL=>X"CACA", LUT1_INITVAL=>X"CACA", 
                   REG1_SD=>"VHI", REG0_SD=>"VHI", CHECK_DI1=>TRUE, 
                   CHECK_DI0=>TRUE, CHECK_CE=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>lvds_rx_24_inst_sr_8, 
                B1=>lvds_rx_24_inst_sr_7, 
                C1=>lvds_rx_24_inst_r_candidate_offset, D1=>'X', 
                DI1=>lvds_rx_24_inst_candidate_sr_7, 
                DI0=>lvds_rx_24_inst_candidate_sr_6, A0=>lvds_rx_24_inst_sr_7, 
                B0=>lvds_rx_24_inst_sr_6, 
                C0=>lvds_rx_24_inst_r_candidate_offset, D0=>'X', M0=>'X', 
                CE=>lvds_rx_24_inst_sdr_rxclk_c_enable_73, CLK=>sdr_rxclk_c, 
                LSR=>'X', OFX1=>open, F1=>lvds_rx_24_inst_candidate_sr_7, 
                Q1=>w_rx_24_fifo_data_7, OFX0=>open, 
                F0=>lvds_rx_24_inst_candidate_sr_6, Q0=>w_rx_24_fifo_data_6);
    lvds_rx_24_inst_SLICE_406I: SLOGICB
      generic map (CLKMUX=>"SIG", CEMUX=>"SIG", SRMODE=>"ASYNC", 
                   LUT0_INITVAL=>X"CACA", LUT1_INITVAL=>X"CACA", 
                   REG1_SD=>"VHI", REG0_SD=>"VHI", CHECK_DI1=>TRUE, 
                   CHECK_DI0=>TRUE, CHECK_CE=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>lvds_rx_24_inst_sr_10, 
                B1=>lvds_rx_24_inst_sr_9, 
                C1=>lvds_rx_24_inst_r_candidate_offset, D1=>'X', 
                DI1=>lvds_rx_24_inst_candidate_sr_9, 
                DI0=>lvds_rx_24_inst_candidate_sr_8, A0=>lvds_rx_24_inst_sr_9, 
                B0=>lvds_rx_24_inst_sr_8, 
                C0=>lvds_rx_24_inst_r_candidate_offset, D0=>'X', M0=>'X', 
                CE=>lvds_rx_24_inst_sdr_rxclk_c_enable_73, CLK=>sdr_rxclk_c, 
                LSR=>'X', OFX1=>open, F1=>lvds_rx_24_inst_candidate_sr_9, 
                Q1=>w_rx_24_fifo_data_9, OFX0=>open, 
                F0=>lvds_rx_24_inst_candidate_sr_8, Q0=>w_rx_24_fifo_data_8);
    lvds_rx_24_inst_SLICE_407I: SLOGICB
      generic map (CLKMUX=>"SIG", CEMUX=>"SIG", SRMODE=>"ASYNC", 
                   LUT0_INITVAL=>X"D8D8", LUT1_INITVAL=>X"CACA", 
                   REG1_SD=>"VHI", REG0_SD=>"VHI", CHECK_DI1=>TRUE, 
                   CHECK_DI0=>TRUE, CHECK_CE=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>lvds_rx_24_inst_sr_12, 
                B1=>lvds_rx_24_inst_sr_11, 
                C1=>lvds_rx_24_inst_r_candidate_offset, D1=>'X', 
                DI1=>lvds_rx_24_inst_candidate_sr_11, 
                DI0=>lvds_rx_24_inst_candidate_sr_10, 
                A0=>lvds_rx_24_inst_r_candidate_offset, 
                B0=>lvds_rx_24_inst_sr_10, C0=>lvds_rx_24_inst_sr_11, D0=>'X', 
                M0=>'X', CE=>lvds_rx_24_inst_sdr_rxclk_c_enable_73, 
                CLK=>sdr_rxclk_c, LSR=>'X', OFX1=>open, 
                F1=>lvds_rx_24_inst_candidate_sr_11, Q1=>w_rx_24_fifo_data_11, 
                OFX0=>open, F0=>lvds_rx_24_inst_candidate_sr_10, 
                Q0=>w_rx_24_fifo_data_10);
    lvds_rx_24_inst_SLICE_408I: SLOGICB
      generic map (CLKMUX=>"SIG", CEMUX=>"SIG", SRMODE=>"ASYNC", 
                   LUT0_INITVAL=>X"CACA", LUT1_INITVAL=>X"CACA", 
                   REG1_SD=>"VHI", REG0_SD=>"VHI", CHECK_DI1=>TRUE, 
                   CHECK_DI0=>TRUE, CHECK_CE=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>lvds_rx_24_inst_sr_14, 
                B1=>lvds_rx_24_inst_sr_13, 
                C1=>lvds_rx_24_inst_r_candidate_offset, D1=>'X', 
                DI1=>lvds_rx_24_inst_candidate_sr_13, 
                DI0=>lvds_rx_24_inst_candidate_sr_12, 
                A0=>lvds_rx_24_inst_sr_13, B0=>lvds_rx_24_inst_sr_12, 
                C0=>lvds_rx_24_inst_r_candidate_offset, D0=>'X', M0=>'X', 
                CE=>lvds_rx_24_inst_sdr_rxclk_c_enable_73, CLK=>sdr_rxclk_c, 
                LSR=>'X', OFX1=>open, F1=>lvds_rx_24_inst_candidate_sr_13, 
                Q1=>w_rx_24_fifo_data_13, OFX0=>open, 
                F0=>lvds_rx_24_inst_candidate_sr_12, Q0=>w_rx_24_fifo_data_12);
    lvds_rx_24_inst_SLICE_409I: SLOGICB
      generic map (CLKMUX=>"SIG", CEMUX=>"SIG", SRMODE=>"ASYNC", 
                   LUT0_INITVAL=>X"D8D8", LUT1_INITVAL=>X"CACA", 
                   REG1_SD=>"VHI", REG0_SD=>"VHI", CHECK_DI1=>TRUE, 
                   CHECK_DI0=>TRUE, CHECK_CE=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>lvds_rx_24_inst_sr_16, 
                B1=>lvds_rx_24_inst_sr_15, 
                C1=>lvds_rx_24_inst_r_candidate_offset, D1=>'X', 
                DI1=>lvds_rx_24_inst_candidate_sr_15, 
                DI0=>lvds_rx_24_inst_candidate_sr_14, 
                A0=>lvds_rx_24_inst_r_candidate_offset, 
                B0=>lvds_rx_24_inst_sr_14, C0=>lvds_rx_24_inst_sr_15, D0=>'X', 
                M0=>'X', CE=>lvds_rx_24_inst_sdr_rxclk_c_enable_73, 
                CLK=>sdr_rxclk_c, LSR=>'X', OFX1=>open, 
                F1=>lvds_rx_24_inst_candidate_sr_15, Q1=>w_rx_24_fifo_data_15, 
                OFX0=>open, F0=>lvds_rx_24_inst_candidate_sr_14, 
                Q0=>w_rx_24_fifo_data_14);
    lvds_rx_24_inst_SLICE_410I: SLOGICB
      generic map (CLKMUX=>"SIG", CEMUX=>"SIG", SRMODE=>"ASYNC", 
                   LUT0_INITVAL=>X"CACA", LUT1_INITVAL=>X"CACA", 
                   REG1_SD=>"VHI", REG0_SD=>"VHI", CHECK_DI1=>TRUE, 
                   CHECK_DI0=>TRUE, CHECK_CE=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>lvds_rx_24_inst_sr_18, 
                B1=>lvds_rx_24_inst_sr_17, 
                C1=>lvds_rx_24_inst_r_candidate_offset, D1=>'X', 
                DI1=>lvds_rx_24_inst_candidate_sr_17, 
                DI0=>lvds_rx_24_inst_candidate_sr_16, 
                A0=>lvds_rx_24_inst_sr_17, B0=>lvds_rx_24_inst_sr_16, 
                C0=>lvds_rx_24_inst_r_candidate_offset, D0=>'X', M0=>'X', 
                CE=>lvds_rx_24_inst_sdr_rxclk_c_enable_73, CLK=>sdr_rxclk_c, 
                LSR=>'X', OFX1=>open, F1=>lvds_rx_24_inst_candidate_sr_17, 
                Q1=>w_rx_24_fifo_data_17, OFX0=>open, 
                F0=>lvds_rx_24_inst_candidate_sr_16, Q0=>w_rx_24_fifo_data_16);
    lvds_rx_24_inst_SLICE_411I: SLOGICB
      generic map (CLKMUX=>"SIG", CEMUX=>"SIG", SRMODE=>"ASYNC", 
                   LUT0_INITVAL=>X"CACA", LUT1_INITVAL=>X"CACA", 
                   REG1_SD=>"VHI", REG0_SD=>"VHI", CHECK_DI1=>TRUE, 
                   CHECK_DI0=>TRUE, CHECK_CE=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>lvds_rx_24_inst_sr_20, 
                B1=>lvds_rx_24_inst_sr_19, 
                C1=>lvds_rx_24_inst_r_candidate_offset, D1=>'X', 
                DI1=>lvds_rx_24_inst_candidate_sr_19, 
                DI0=>lvds_rx_24_inst_candidate_sr_18, 
                A0=>lvds_rx_24_inst_sr_19, B0=>lvds_rx_24_inst_sr_18, 
                C0=>lvds_rx_24_inst_r_candidate_offset, D0=>'X', M0=>'X', 
                CE=>lvds_rx_24_inst_sdr_rxclk_c_enable_73, CLK=>sdr_rxclk_c, 
                LSR=>'X', OFX1=>open, F1=>lvds_rx_24_inst_candidate_sr_19, 
                Q1=>w_rx_24_fifo_data_19, OFX0=>open, 
                F0=>lvds_rx_24_inst_candidate_sr_18, Q0=>w_rx_24_fifo_data_18);
    lvds_rx_24_inst_SLICE_412I: SLOGICB
      generic map (CLKMUX=>"SIG", CEMUX=>"SIG", SRMODE=>"ASYNC", 
                   LUT0_INITVAL=>X"CACA", LUT1_INITVAL=>X"CACA", 
                   REG1_SD=>"VHI", REG0_SD=>"VHI", CHECK_DI1=>TRUE, 
                   CHECK_DI0=>TRUE, CHECK_CE=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>lvds_rx_24_inst_sr_22, 
                B1=>lvds_rx_24_inst_sr_21, 
                C1=>lvds_rx_24_inst_r_candidate_offset, D1=>'X', 
                DI1=>lvds_rx_24_inst_candidate_sr_21, 
                DI0=>lvds_rx_24_inst_candidate_sr_20, 
                A0=>lvds_rx_24_inst_sr_21, B0=>lvds_rx_24_inst_sr_20, 
                C0=>lvds_rx_24_inst_r_candidate_offset, D0=>'X', M0=>'X', 
                CE=>lvds_rx_24_inst_sdr_rxclk_c_enable_73, CLK=>sdr_rxclk_c, 
                LSR=>'X', OFX1=>open, F1=>lvds_rx_24_inst_candidate_sr_21, 
                Q1=>w_rx_24_fifo_data_21, OFX0=>open, 
                F0=>lvds_rx_24_inst_candidate_sr_20, Q0=>w_rx_24_fifo_data_20);
    lvds_rx_24_inst_SLICE_413I: SLOGICB
      generic map (CLKMUX=>"SIG", CEMUX=>"SIG", SRMODE=>"ASYNC", 
                   LUT0_INITVAL=>X"CACA", LUT1_INITVAL=>X"CACA", 
                   REG1_SD=>"VHI", REG0_SD=>"VHI", CHECK_DI1=>TRUE, 
                   CHECK_DI0=>TRUE, CHECK_CE=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>lvds_rx_24_inst_sr_24, 
                B1=>lvds_rx_24_inst_sr_23, 
                C1=>lvds_rx_24_inst_r_candidate_offset, D1=>'X', 
                DI1=>lvds_rx_24_inst_candidate_sr_23, 
                DI0=>lvds_rx_24_inst_candidate_sr_22, 
                A0=>lvds_rx_24_inst_sr_23, B0=>lvds_rx_24_inst_sr_22, 
                C0=>lvds_rx_24_inst_r_candidate_offset, D0=>'X', M0=>'X', 
                CE=>lvds_rx_24_inst_sdr_rxclk_c_enable_73, CLK=>sdr_rxclk_c, 
                LSR=>'X', OFX1=>open, F1=>lvds_rx_24_inst_candidate_sr_23, 
                Q1=>w_rx_24_fifo_data_23, OFX0=>open, 
                F0=>lvds_rx_24_inst_candidate_sr_22, Q0=>w_rx_24_fifo_data_22);
    lvds_rx_24_inst_SLICE_414I: SLOGICB
      generic map (CLKMUX=>"SIG", CEMUX=>"SIG", SRMODE=>"ASYNC", 
                   LUT0_INITVAL=>X"CACA", LUT1_INITVAL=>X"CACA", 
                   REG1_SD=>"VHI", REG0_SD=>"VHI", CHECK_DI1=>TRUE, 
                   CHECK_DI0=>TRUE, CHECK_CE=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>lvds_rx_24_inst_sr_26, 
                B1=>lvds_rx_24_inst_sr_25, 
                C1=>lvds_rx_24_inst_r_candidate_offset, D1=>'X', 
                DI1=>lvds_rx_24_inst_candidate_sr_25, 
                DI0=>lvds_rx_24_inst_candidate_sr_24, 
                A0=>lvds_rx_24_inst_sr_25, B0=>lvds_rx_24_inst_sr_24, 
                C0=>lvds_rx_24_inst_r_candidate_offset, D0=>'X', M0=>'X', 
                CE=>lvds_rx_24_inst_sdr_rxclk_c_enable_73, CLK=>sdr_rxclk_c, 
                LSR=>'X', OFX1=>open, F1=>lvds_rx_24_inst_candidate_sr_25, 
                Q1=>w_rx_24_fifo_data_25, OFX0=>open, 
                F0=>lvds_rx_24_inst_candidate_sr_24, Q0=>w_rx_24_fifo_data_24);
    lvds_rx_24_inst_SLICE_415I: SLOGICB
      generic map (CLKMUX=>"SIG", CEMUX=>"SIG", SRMODE=>"ASYNC", 
                   LUT0_INITVAL=>X"CACA", LUT1_INITVAL=>X"CACA", 
                   REG1_SD=>"VHI", REG0_SD=>"VHI", CHECK_DI1=>TRUE, 
                   CHECK_DI0=>TRUE, CHECK_CE=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>lvds_rx_24_inst_sr_28, 
                B1=>lvds_rx_24_inst_sr_27, 
                C1=>lvds_rx_24_inst_r_candidate_offset, D1=>'X', 
                DI1=>lvds_rx_24_inst_candidate_sr_27, 
                DI0=>lvds_rx_24_inst_candidate_sr_26, 
                A0=>lvds_rx_24_inst_sr_27, B0=>lvds_rx_24_inst_sr_26, 
                C0=>lvds_rx_24_inst_r_candidate_offset, D0=>'X', M0=>'X', 
                CE=>lvds_rx_24_inst_sdr_rxclk_c_enable_73, CLK=>sdr_rxclk_c, 
                LSR=>'X', OFX1=>open, F1=>lvds_rx_24_inst_candidate_sr_27, 
                Q1=>w_rx_24_fifo_data_27, OFX0=>open, 
                F0=>lvds_rx_24_inst_candidate_sr_26, Q0=>w_rx_24_fifo_data_26);
    lvds_rx_24_inst_SLICE_416I: SLOGICB
      generic map (CLKMUX=>"SIG", CEMUX=>"SIG", SRMODE=>"ASYNC", 
                   LUT0_INITVAL=>X"CACA", LUT1_INITVAL=>X"E4E4", 
                   REG1_SD=>"VHI", REG0_SD=>"VHI", CHECK_DI1=>TRUE, 
                   CHECK_DI0=>TRUE, CHECK_CE=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', 
                A1=>lvds_rx_24_inst_r_candidate_offset, 
                B1=>lvds_rx_24_inst_sr_30, C1=>lvds_rx_24_inst_sr_29, D1=>'X', 
                DI1=>lvds_rx_24_inst_candidate_sr_29, 
                DI0=>lvds_rx_24_inst_candidate_sr_28, 
                A0=>lvds_rx_24_inst_sr_29, B0=>lvds_rx_24_inst_sr_28, 
                C0=>lvds_rx_24_inst_r_candidate_offset, D0=>'X', M0=>'X', 
                CE=>lvds_rx_24_inst_sdr_rxclk_c_enable_73, CLK=>sdr_rxclk_c, 
                LSR=>'X', OFX1=>open, F1=>lvds_rx_24_inst_candidate_sr_29, 
                Q1=>w_rx_24_fifo_data_29, OFX0=>open, 
                F0=>lvds_rx_24_inst_candidate_sr_28, Q0=>w_rx_24_fifo_data_28);
    lvds_rx_24_inst_SLICE_417I: SLOGICB
      generic map (CLKMUX=>"SIG", CEMUX=>"SIG", SRMODE=>"ASYNC", 
                   LUT0_INITVAL=>X"CACA", LUT1_INITVAL=>X"E4E4", 
                   REG1_SD=>"VHI", REG0_SD=>"VHI", CHECK_DI1=>TRUE, 
                   CHECK_DI0=>TRUE, CHECK_CE=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', 
                A1=>lvds_rx_24_inst_r_candidate_offset, 
                B1=>lvds_rx_24_inst_sr_32, C1=>lvds_rx_24_inst_sr_31, D1=>'X', 
                DI1=>lvds_rx_24_inst_candidate_sr_31, 
                DI0=>lvds_rx_24_inst_candidate_sr_30, 
                A0=>lvds_rx_24_inst_sr_31, B0=>lvds_rx_24_inst_sr_30, 
                C0=>lvds_rx_24_inst_r_candidate_offset, D0=>'X', M0=>'X', 
                CE=>lvds_rx_24_inst_sdr_rxclk_c_enable_73, CLK=>sdr_rxclk_c, 
                LSR=>'X', OFX1=>open, F1=>lvds_rx_24_inst_candidate_sr_31, 
                Q1=>w_rx_24_fifo_data_31, OFX0=>open, 
                F0=>lvds_rx_24_inst_candidate_sr_30, Q0=>w_rx_24_fifo_data_30);
    lvds_rx_24_inst_SLICE_418I: SLOGICB
      generic map (CLKMUX=>"SIG", CEMUX=>"VHI", LSRMUX=>"SIG", 
                   LUT0_INITVAL=>X"4444", REG0_SD=>"VHI", CHECK_DI0=>TRUE, 
                   CHECK_LSR=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>lvds_rx_24_inst_real_candidate, 
                A0=>lvds_rx_24_inst_sr_16, B0=>lvds_rx_24_inst_n11, C0=>'X', 
                D0=>'X', M0=>'X', CE=>'X', CLK=>sdr_rxclk_c, 
                LSR=>lvds_rx_24_inst_n12244, OFX1=>open, F1=>open, Q1=>open, 
                OFX0=>open, F0=>lvds_rx_24_inst_real_candidate, 
                Q0=>w_rx_24_fifo_push);
    SLICE_420I: SLOGICB
      generic map (CLKMUX=>"SIG", CEMUX=>"VHI", LSRMUX=>"INV", GSR=>"DISABLED", 
                   LUT0_INITVAL=>X"FBFB", LUT1_INITVAL=>X"FBFB", 
                   REG1_SD=>"VHI", REG0_SD=>"VHI", CHECK_DI1=>TRUE, 
                   CHECK_DI0=>TRUE, CHECK_LSR=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>n12153, B1=>n12156, C1=>n3019, 
                D1=>'X', DI1=>data_mux_1, DI0=>data_mux_0, A0=>n12153, 
                B0=>n12156, C0=>n3020, D0=>'X', M0=>'X', CE=>'X', 
                CLK=>int_clk_out, LSR=>stm_fpga_spare5_c, OFX1=>open, 
                F1=>data_mux_1, Q1=>wb_dat_i_1, OFX0=>open, F0=>data_mux_0, 
                Q0=>wb_dat_i_0);
    SLICE_421I: SLOGICB
      generic map (CLKMUX=>"SIG", CEMUX=>"VHI", LSRMUX=>"INV", GSR=>"DISABLED", 
                   LUT0_INITVAL=>X"FBFB", LUT1_INITVAL=>X"FBFB", 
                   REG1_SD=>"VHI", REG0_SD=>"VHI", CHECK_DI1=>TRUE, 
                   CHECK_DI0=>TRUE, CHECK_LSR=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>n14915, B1=>n12156, 
                C1=>n12153, D1=>'X', DI1=>data_mux_3, DI0=>data_mux_2, 
                A0=>n12153, B0=>n12156, C0=>n3018, D0=>'X', M0=>'X', CE=>'X', 
                CLK=>int_clk_out, LSR=>stm_fpga_spare5_c, OFX1=>open, 
                F1=>data_mux_3, Q1=>wb_dat_i_3, OFX0=>open, F0=>data_mux_2, 
                Q0=>wb_dat_i_2);
    SLICE_422I: SLOGICB
      generic map (CLKMUX=>"SIG", CEMUX=>"VHI", LSRMUX=>"INV", GSR=>"DISABLED", 
                   LUT0_INITVAL=>X"FBFB", LUT1_INITVAL=>X"FBFB", 
                   REG1_SD=>"VHI", REG0_SD=>"VHI", CHECK_DI1=>TRUE, 
                   CHECK_DI0=>TRUE, CHECK_LSR=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>n3015, B1=>n12156, C1=>n12153, 
                D1=>'X', DI1=>data_mux_5, DI0=>data_mux_4, A0=>n3016, 
                B0=>n12156, C0=>n12153, D0=>'X', M0=>'X', CE=>'X', 
                CLK=>int_clk_out, LSR=>stm_fpga_spare5_c, OFX1=>open, 
                F1=>data_mux_5, Q1=>wb_dat_i_5, OFX0=>open, F0=>data_mux_4, 
                Q0=>wb_dat_i_4);
    SLICE_423I: SLOGICB
      generic map (CLKMUX=>"SIG", CEMUX=>"VHI", LSRMUX=>"INV", GSR=>"DISABLED", 
                   LUT0_INITVAL=>X"FBFB", LUT1_INITVAL=>X"FBFB", 
                   REG1_SD=>"VHI", REG0_SD=>"VHI", CHECK_DI1=>TRUE, 
                   CHECK_DI0=>TRUE, CHECK_LSR=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>n3013, B1=>n12156, C1=>n12153, 
                D1=>'X', DI1=>data_mux_7, DI0=>data_mux_6, A0=>n3014, 
                B0=>n12156, C0=>n12153, D0=>'X', M0=>'X', CE=>'X', 
                CLK=>int_clk_out, LSR=>stm_fpga_spare5_c, OFX1=>open, 
                F1=>data_mux_7, Q1=>wb_dat_i_7, OFX0=>open, F0=>data_mux_6, 
                Q0=>wb_dat_i_6);
    i2c_slave_SLICE_424I: SLOGICB
      generic map (CLKMUX=>"SIG", CEMUX=>"SIG", GSR=>"DISABLED", 
                   SRMODE=>"ASYNC", LUT0_INITVAL=>X"ECA0", 
                   LUT1_INITVAL=>X"ECA0", REG1_SD=>"VHI", REG0_SD=>"VHI", 
                   CHECK_DI1=>TRUE, CHECK_DI0=>TRUE, CHECK_CE=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>wb_dat_i_1, 
                B1=>i2c_slave_data_next_7_N_737_1, C1=>i2c_slave_n1527, 
                D1=>i2c_slave_n1525, DI1=>i2c_slave_n3913, 
                DI0=>i2c_slave_n3914, A0=>wb_dat_i_0, 
                B0=>i2c_slave_data_next_7_N_737_0, C0=>i2c_slave_n1527, 
                D0=>i2c_slave_n1525, M0=>'X', 
                CE=>i2c_slave_int_clk_out_enable_178, CLK=>int_clk_out, 
                LSR=>'X', OFX1=>open, F1=>i2c_slave_n3913, Q1=>wb_dat_o_1, 
                OFX0=>open, F0=>i2c_slave_n3914, Q0=>wb_dat_o_0);
    i2c_slave_SLICE_425I: SLOGICB
      generic map (CLKMUX=>"SIG", CEMUX=>"SIG", GSR=>"DISABLED", 
                   SRMODE=>"ASYNC", LUT0_INITVAL=>X"ECA0", 
                   LUT1_INITVAL=>X"ECA0", REG1_SD=>"VHI", REG0_SD=>"VHI", 
                   CHECK_DI1=>TRUE, CHECK_DI0=>TRUE, CHECK_CE=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>wb_dat_i_3, 
                B1=>i2c_slave_data_next_7_N_737_3, C1=>i2c_slave_n1527, 
                D1=>i2c_slave_n1525, DI1=>i2c_slave_n3911, 
                DI0=>i2c_slave_n3912, A0=>wb_dat_i_2, 
                B0=>i2c_slave_data_next_7_N_737_2, C0=>i2c_slave_n1527, 
                D0=>i2c_slave_n1525, M0=>'X', 
                CE=>i2c_slave_int_clk_out_enable_178, CLK=>int_clk_out, 
                LSR=>'X', OFX1=>open, F1=>i2c_slave_n3911, Q1=>wb_dat_o_3, 
                OFX0=>open, F0=>i2c_slave_n3912, Q0=>wb_dat_o_2);
    i2c_slave_SLICE_426I: SLOGICB
      generic map (CLKMUX=>"SIG", CEMUX=>"SIG", GSR=>"DISABLED", 
                   SRMODE=>"ASYNC", LUT0_INITVAL=>X"ECA0", 
                   LUT1_INITVAL=>X"ECA0", REG1_SD=>"VHI", REG0_SD=>"VHI", 
                   CHECK_DI1=>TRUE, CHECK_DI0=>TRUE, CHECK_CE=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>wb_dat_i_5, 
                B1=>i2c_slave_data_next_7_N_737_5, C1=>i2c_slave_n1527, 
                D1=>i2c_slave_n1525, DI1=>i2c_slave_n3909, 
                DI0=>i2c_slave_n3910, A0=>wb_dat_i_4, 
                B0=>i2c_slave_data_next_7_N_737_4, C0=>i2c_slave_n1527, 
                D0=>i2c_slave_n1525, M0=>'X', 
                CE=>i2c_slave_int_clk_out_enable_178, CLK=>int_clk_out, 
                LSR=>'X', OFX1=>open, F1=>i2c_slave_n3909, Q1=>wb_dat_o_5, 
                OFX0=>open, F0=>i2c_slave_n3910, Q0=>wb_dat_o_4);
    i2c_slave_SLICE_427I: SLOGICB
      generic map (CLKMUX=>"SIG", CEMUX=>"SIG", GSR=>"DISABLED", 
                   SRMODE=>"ASYNC", LUT0_INITVAL=>X"ECA0", 
                   LUT1_INITVAL=>X"ECA0", REG1_SD=>"VHI", REG0_SD=>"VHI", 
                   CHECK_DI1=>TRUE, CHECK_DI0=>TRUE, CHECK_CE=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>wb_dat_i_7, 
                B1=>i2c_slave_data_next_7_N_737_7, C1=>i2c_slave_n1527, 
                D1=>i2c_slave_n1525, DI1=>i2c_slave_n3907, 
                DI0=>i2c_slave_n3908, A0=>wb_dat_i_6, 
                B0=>i2c_slave_data_next_7_N_737_6, C0=>i2c_slave_n1527, 
                D0=>i2c_slave_n1525, M0=>'X', 
                CE=>i2c_slave_int_clk_out_enable_178, CLK=>int_clk_out, 
                LSR=>'X', OFX1=>open, F1=>i2c_slave_n3907, Q1=>wb_dat_o_7, 
                OFX0=>open, F0=>i2c_slave_n3908, Q0=>wb_dat_o_6);
    i2c_slave_SLICE_428I: SLOGICB
      generic map (CLKMUX=>"SIG", CEMUX=>"VHI", LSRMUX=>"INV", GSR=>"DISABLED", 
                   LUT0_INITVAL=>X"8F80", LUT1_INITVAL=>X"08F8", 
                   REG0_SD=>"VHI", CHECK_DI0=>TRUE, CHECK_LSR=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>i2c_slave_n14344, 
                B1=>i2c_slave_n14339, C1=>i2c_slave_n14342, D1=>wb_ack_i, 
                DI1=>'X', DI0=>i2c_slave_wb_stb_o_next, A0=>i2c_slave_n14278, 
                B0=>i2c_slave_int_clk_out_enable_12, C0=>i2c_slave_n1525, 
                D0=>i2c_slave_n4964, M0=>'X', CE=>'X', CLK=>int_clk_out, 
                LSR=>stm_fpga_spare5_c, OFX1=>open, F1=>i2c_slave_n4964, 
                Q1=>open, OFX0=>open, F0=>i2c_slave_wb_stb_o_next, 
                Q0=>wb_stb_o);
    i2c_slave_SLICE_429I: SLOGICB
      generic map (CLKMUX=>"SIG", CEMUX=>"SIG", GSR=>"DISABLED", 
                   SRMODE=>"ASYNC", LUT0_INITVAL=>X"B000", 
                   LUT1_INITVAL=>X"1511", REG0_SD=>"VHI", CHECK_DI0=>TRUE, 
                   CHECK_CE=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>i2c_slave_n12456, 
                B1=>i2c_slave_n1528, C1=>i2c_slave_n14300, 
                D1=>i2c_slave_int_clk_out_enable_12, DI1=>'X', 
                DI0=>i2c_slave_n4894, A0=>i2c_slave_data_out_last, 
                B0=>i2c_slave_n14300, C0=>i2c_slave_n1525, 
                D0=>i2c_slave_int_clk_out_enable_12, M0=>'X', 
                CE=>i2c_slave_int_clk_out_enable_38, CLK=>int_clk_out, 
                LSR=>'X', OFX1=>open, F1=>i2c_slave_int_clk_out_enable_178, 
                Q1=>open, OFX0=>open, F0=>i2c_slave_n4894, Q0=>wb_we_o);
    wifi_i_fifo_dc_SLICE_430I: SLOGICB
      generic map (CLKMUX=>"SIG", CEMUX=>"INV", LSRMUX=>"SIG", SRMODE=>"ASYNC", 
                   LUT0_INITVAL=>X"6666", LUT1_INITVAL=>X"6666", 
                   REG1_SD=>"VHI", REG0_SD=>"VHI", CHECK_DI1=>TRUE, 
                   CHECK_DI0=>TRUE, CHECK_CE=>TRUE, CHECK_LSR=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>wifi_i_fifo_dc_rcount_1, 
                B1=>wifi_i_fifo_dc_rcount_2, C1=>'X', D1=>'X', 
                DI1=>wifi_i_fifo_dc_r_gdata_1, DI0=>wifi_i_fifo_dc_r_gdata_0, 
                A0=>wifi_i_fifo_dc_rcount_0, B0=>wifi_i_fifo_dc_rcount_1, 
                C0=>'X', D0=>'X', M0=>'X', CE=>wifi_i_empty, 
                CLK=>internal_80MHz, LSR=>main_reset_n_N_208, OFX1=>open, 
                F1=>wifi_i_fifo_dc_r_gdata_1, Q1=>wifi_i_fifo_dc_r_gcount_1, 
                OFX0=>open, F0=>wifi_i_fifo_dc_r_gdata_0, 
                Q0=>wifi_i_fifo_dc_r_gcount_0);
    wifi_i_fifo_dc_SLICE_431I: SLOGICB
      generic map (M0MUX=>"SIG", CLKMUX=>"SIG", CEMUX=>"INV", LSRMUX=>"SIG", 
                   SRMODE=>"ASYNC", CHECK_M0=>TRUE, CHECK_CE=>TRUE, 
                   CHECK_LSR=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>'X', B0=>'X', C0=>'X', 
                D0=>'X', M0=>wifi_i_fifo_dc_rcount_2, CE=>wifi_i_empty, 
                CLK=>internal_80MHz, LSR=>main_reset_n_N_208, OFX1=>open, 
                F1=>open, Q1=>open, OFX0=>open, F0=>open, 
                Q0=>wifi_i_fifo_dc_r_gcount_2);
    wifi_i_fifo_dc_SLICE_432I: SLOGICB
      generic map (M0MUX=>"SIG", M1MUX=>"SIG", CLKMUX=>"SIG", CEMUX=>"VHI", 
                   LSRMUX=>"SIG", SRMODE=>"ASYNC", CHECK_M1=>TRUE, 
                   CHECK_M0=>TRUE, CHECK_LSR=>TRUE)
      port map (M1=>wifi_i_fifo_dc_r_gcount_1, FXA=>'X', FXB=>'X', A1=>'X', 
                B1=>'X', C1=>'X', D1=>'X', DI1=>'X', DI0=>'X', A0=>'X', 
                B0=>'X', C0=>'X', D0=>'X', M0=>wifi_i_fifo_dc_r_gcount_0, 
                CE=>'X', CLK=>sdr_rxclk_c, LSR=>main_reset_n_N_208, OFX1=>open, 
                F1=>open, Q1=>wifi_i_fifo_dc_r_gcount_w1, OFX0=>open, F0=>open, 
                Q0=>wifi_i_fifo_dc_r_gcount_w0);
    wifi_i_fifo_dc_SLICE_433I: SLOGICB
      generic map (M0MUX=>"SIG", M1MUX=>"SIG", CLKMUX=>"SIG", CEMUX=>"VHI", 
                   LSRMUX=>"SIG", SRMODE=>"ASYNC", CHECK_M1=>TRUE, 
                   CHECK_M0=>TRUE, CHECK_LSR=>TRUE)
      port map (M1=>wifi_i_fifo_dc_r_gcount_w0, FXA=>'X', FXB=>'X', A1=>'X', 
                B1=>'X', C1=>'X', D1=>'X', DI1=>'X', DI0=>'X', A0=>'X', 
                B0=>'X', C0=>'X', D0=>'X', M0=>wifi_i_fifo_dc_r_gcount_2, 
                CE=>'X', CLK=>sdr_rxclk_c, LSR=>main_reset_n_N_208, OFX1=>open, 
                F1=>open, Q1=>wifi_i_fifo_dc_r_gcount_w20, OFX0=>open, 
                F0=>open, Q0=>wifi_i_fifo_dc_r_gcount_w2);
    wifi_i_fifo_dc_SLICE_434I: SLOGICB
      generic map (M0MUX=>"SIG", M1MUX=>"SIG", CLKMUX=>"SIG", CEMUX=>"VHI", 
                   LSRMUX=>"SIG", SRMODE=>"ASYNC", CHECK_M1=>TRUE, 
                   CHECK_M0=>TRUE, CHECK_LSR=>TRUE)
      port map (M1=>wifi_i_fifo_dc_r_gcount_w2, FXA=>'X', FXB=>'X', A1=>'X', 
                B1=>'X', C1=>'X', D1=>'X', DI1=>'X', DI0=>'X', A0=>'X', 
                B0=>'X', C0=>'X', D0=>'X', M0=>wifi_i_fifo_dc_r_gcount_w1, 
                CE=>'X', CLK=>sdr_rxclk_c, LSR=>main_reset_n_N_208, OFX1=>open, 
                F1=>open, Q1=>wifi_i_fifo_dc_r_gcount_w22, OFX0=>open, 
                F0=>open, Q0=>wifi_i_fifo_dc_r_gcount_w21);
    wifi_i_fifo_dc_SLICE_435I: SLOGICB
      generic map (M0MUX=>"SIG", M1MUX=>"SIG", CLKMUX=>"SIG", CEMUX=>"INV", 
                   LSRMUX=>"SIG", SRMODE=>"ASYNC", CHECK_M1=>TRUE, 
                   CHECK_M0=>TRUE, CHECK_CE=>TRUE, CHECK_LSR=>TRUE)
      port map (M1=>wifi_i_fifo_dc_rcount_1, FXA=>'X', FXB=>'X', A1=>'X', 
                B1=>'X', C1=>'X', D1=>'X', DI1=>'X', DI0=>'X', A0=>'X', 
                B0=>'X', C0=>'X', D0=>'X', M0=>wifi_i_fifo_dc_rcount_0, 
                CE=>wifi_i_empty, CLK=>internal_80MHz, LSR=>main_reset_n_N_208, 
                OFX1=>open, F1=>open, Q1=>wifi_i_fifo_dc_rptr_1, OFX0=>open, 
                F0=>open, Q0=>wifi_i_fifo_dc_rptr_0);
    wifi_i_fifo_dc_SLICE_437I: SLOGICB
      generic map (CLKMUX=>"SIG", CEMUX=>"SIG", SRMODE=>"ASYNC", 
                   LUT0_INITVAL=>X"6666", LUT1_INITVAL=>X"6666", 
                   REG1_SD=>"VHI", REG0_SD=>"VHI", CHECK_DI1=>TRUE, 
                   CHECK_DI0=>TRUE, CHECK_CE=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>wifi_i_fifo_dc_wcount_1, 
                B1=>wifi_i_fifo_dc_wcount_2, C1=>'X', D1=>'X', 
                DI1=>wifi_i_fifo_dc_w_gdata_1, DI0=>wifi_i_fifo_dc_w_gdata_0, 
                A0=>wifi_i_fifo_dc_wcount_0, B0=>wifi_i_fifo_dc_wcount_1, 
                C0=>'X', D0=>'X', M0=>'X', CE=>wifi_i_fifo_dc_wren_i, 
                CLK=>sdr_rxclk_c, LSR=>'X', OFX1=>open, 
                F1=>wifi_i_fifo_dc_w_gdata_1, Q1=>wifi_i_fifo_dc_w_gcount_1, 
                OFX0=>open, F0=>wifi_i_fifo_dc_w_gdata_0, 
                Q0=>wifi_i_fifo_dc_w_gcount_0);
    wifi_i_fifo_dc_SLICE_438I: SLOGICB
      generic map (M0MUX=>"SIG", CLKMUX=>"SIG", CEMUX=>"SIG", SRMODE=>"ASYNC", 
                   CHECK_M0=>TRUE, CHECK_CE=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>'X', B0=>'X', C0=>'X', 
                D0=>'X', M0=>wifi_i_fifo_dc_wcount_2, 
                CE=>wifi_i_fifo_dc_wren_i, CLK=>sdr_rxclk_c, LSR=>'X', 
                OFX1=>open, F1=>open, Q1=>open, OFX0=>open, F0=>open, 
                Q0=>wifi_i_fifo_dc_w_gcount_2);
    wifi_i_fifo_dc_SLICE_439I: SLOGICB
      generic map (M0MUX=>"SIG", M1MUX=>"SIG", CLKMUX=>"SIG", CEMUX=>"VHI", 
                   SRMODE=>"ASYNC", CHECK_M1=>TRUE, CHECK_M0=>TRUE)
      port map (M1=>wifi_i_fifo_dc_w_gcount_1, FXA=>'X', FXB=>'X', A1=>'X', 
                B1=>'X', C1=>'X', D1=>'X', DI1=>'X', DI0=>'X', A0=>'X', 
                B0=>'X', C0=>'X', D0=>'X', M0=>wifi_i_fifo_dc_w_gcount_0, 
                CE=>'X', CLK=>internal_80MHz, LSR=>'X', OFX1=>open, F1=>open, 
                Q1=>wifi_i_fifo_dc_w_gcount_r1, OFX0=>open, F0=>open, 
                Q0=>wifi_i_fifo_dc_w_gcount_r0);
    wifi_i_fifo_dc_SLICE_440I: SLOGICB
      generic map (M0MUX=>"SIG", M1MUX=>"SIG", CLKMUX=>"SIG", CEMUX=>"VHI", 
                   SRMODE=>"ASYNC", CHECK_M1=>TRUE, CHECK_M0=>TRUE)
      port map (M1=>wifi_i_fifo_dc_w_gcount_r0, FXA=>'X', FXB=>'X', A1=>'X', 
                B1=>'X', C1=>'X', D1=>'X', DI1=>'X', DI0=>'X', A0=>'X', 
                B0=>'X', C0=>'X', D0=>'X', M0=>wifi_i_fifo_dc_w_gcount_2, 
                CE=>'X', CLK=>internal_80MHz, LSR=>'X', OFX1=>open, F1=>open, 
                Q1=>wifi_i_fifo_dc_w_gcount_r20, OFX0=>open, F0=>open, 
                Q0=>wifi_i_fifo_dc_w_gcount_r2);
    wifi_i_fifo_dc_SLICE_441I: SLOGICB
      generic map (M0MUX=>"SIG", M1MUX=>"SIG", CLKMUX=>"SIG", CEMUX=>"VHI", 
                   SRMODE=>"ASYNC", CHECK_M1=>TRUE, CHECK_M0=>TRUE)
      port map (M1=>wifi_i_fifo_dc_w_gcount_r2, FXA=>'X', FXB=>'X', A1=>'X', 
                B1=>'X', C1=>'X', D1=>'X', DI1=>'X', DI0=>'X', A0=>'X', 
                B0=>'X', C0=>'X', D0=>'X', M0=>wifi_i_fifo_dc_w_gcount_r1, 
                CE=>'X', CLK=>internal_80MHz, LSR=>'X', OFX1=>open, F1=>open, 
                Q1=>wifi_i_fifo_dc_w_gcount_r22, OFX0=>open, F0=>open, 
                Q0=>wifi_i_fifo_dc_w_gcount_r21);
    wifi_i_fifo_dc_SLICE_442I: SLOGICB
      generic map (M0MUX=>"SIG", M1MUX=>"SIG", CLKMUX=>"SIG", CEMUX=>"SIG", 
                   SRMODE=>"ASYNC", CHECK_M1=>TRUE, CHECK_M0=>TRUE, 
                   CHECK_CE=>TRUE)
      port map (M1=>wifi_i_fifo_dc_wcount_1, FXA=>'X', FXB=>'X', A1=>'X', 
                B1=>'X', C1=>'X', D1=>'X', DI1=>'X', DI0=>'X', A0=>'X', 
                B0=>'X', C0=>'X', D0=>'X', M0=>wifi_i_fifo_dc_wcount_0, 
                CE=>wifi_i_fifo_dc_wren_i, CLK=>sdr_rxclk_c, LSR=>'X', 
                OFX1=>open, F1=>open, Q1=>wifi_i_fifo_dc_wptr_1, OFX0=>open, 
                F0=>open, Q0=>wifi_i_fifo_dc_wptr_0);
    wifi_i_spi_SLICE_444I: SLOGICB
      generic map (CLKMUX=>"SIG", CEMUX=>"VHI", LSRMUX=>"SIG", 
                   LUT0_INITVAL=>X"6666", LUT1_INITVAL=>X"EEEE", 
                   REG0_SD=>"VHI", CHECK_DI0=>TRUE, CHECK_LSR=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>wifi_i_spi_bit_counter_2, 
                B1=>wifi_i_spi_bit_counter_1, C1=>'X', D1=>'X', DI1=>'X', 
                DI0=>wifi_i_spi_bit_counter_5_N_1168_0, 
                A0=>wifi_i_spi_bit_counter_0, B0=>shift_reg_15_N_1175_adj_1194, 
                C0=>'X', D0=>'X', M0=>'X', CE=>'X', CLK=>internal_80MHz, 
                LSR=>n14287, OFX1=>open, F1=>wifi_i_spi_n13146, Q1=>open, 
                OFX0=>open, F0=>wifi_i_spi_bit_counter_5_N_1168_0, 
                Q0=>wifi_i_spi_bit_counter_0);
    wifi_i_spi_SLICE_445I: SLOGICB
      generic map (CLKMUX=>"SIG", CEMUX=>"SIG", LSRMUX=>"SIG", 
                   LUT0_INITVAL=>X"9999", LUT1_INITVAL=>X"E1E1", 
                   REG1_SD=>"VHI", REG0_SD=>"VHI", CHECK_DI1=>TRUE, 
                   CHECK_DI0=>TRUE, CHECK_CE=>TRUE, CHECK_LSR=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>wifi_i_spi_bit_counter_1, 
                B1=>wifi_i_spi_bit_counter_0, C1=>wifi_i_spi_bit_counter_2, 
                D1=>'X', DI1=>wifi_i_spi_n6364, DI0=>wifi_i_spi_n6362, 
                A0=>wifi_i_spi_bit_counter_1, B0=>wifi_i_spi_bit_counter_0, 
                C0=>'X', D0=>'X', M0=>'X', CE=>shift_reg_15_N_1175_adj_1194, 
                CLK=>internal_80MHz, LSR=>n14287, OFX1=>open, 
                F1=>wifi_i_spi_n6364, Q1=>wifi_i_spi_bit_counter_2, OFX0=>open, 
                F0=>wifi_i_spi_n6362, Q0=>wifi_i_spi_bit_counter_1);
    wifi_i_spi_SLICE_446I: SLOGICB
      generic map (CLKMUX=>"SIG", CEMUX=>"SIG", LSRMUX=>"SIG", 
                   LUT0_INITVAL=>X"F0E1", LUT1_INITVAL=>X"FFFE", 
                   REG0_SD=>"VHI", CHECK_DI0=>TRUE, CHECK_CE=>TRUE, 
                   CHECK_LSR=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>wifi_i_spi_bit_counter_1, 
                B1=>wifi_i_spi_bit_counter_0, C1=>wifi_i_spi_bit_counter_3, 
                D1=>wifi_i_spi_bit_counter_2, DI1=>'X', DI0=>wifi_i_spi_n6360, 
                A0=>wifi_i_spi_bit_counter_1, B0=>wifi_i_spi_bit_counter_0, 
                C0=>wifi_i_spi_bit_counter_3, D0=>wifi_i_spi_bit_counter_2, 
                M0=>'X', CE=>shift_reg_15_N_1175_adj_1194, CLK=>internal_80MHz, 
                LSR=>n14287, OFX1=>open, F1=>wifi_i_spi_n14289, Q1=>open, 
                OFX0=>open, F0=>wifi_i_spi_n6360, Q0=>wifi_i_spi_bit_counter_3);
    wifi_i_spi_SLICE_447I: SLOGICB
      generic map (CLKMUX=>"SIG", CEMUX=>"SIG", SRMODE=>"ASYNC", 
                   LUT0_INITVAL=>X"F22F", LUT1_INITVAL=>X"FFFE", 
                   REG0_SD=>"VHI", CHECK_DI0=>TRUE, CHECK_CE=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>wifi_i_spi_bit_counter_4, 
                B1=>wifi_i_spi_n13148, C1=>wifi_i_spi_n13146, 
                D1=>wifi_i_spi_bit_counter_5, DI1=>'X', 
                DI0=>wifi_i_spi_bit_counter_5_N_1144_4, 
                A0=>internal_80MHz_enable_52, B0=>shift_reg_15_N_1175_adj_1194, 
                C0=>wifi_i_spi_n14289, D0=>wifi_i_spi_bit_counter_4, M0=>'X', 
                CE=>internal_80MHz_enable_51, CLK=>internal_80MHz, LSR=>'X', 
                OFX1=>open, F1=>shift_reg_15_N_1175_adj_1194, Q1=>open, 
                OFX0=>open, F0=>wifi_i_spi_bit_counter_5_N_1144_4, 
                Q0=>wifi_i_spi_bit_counter_4);
    wifi_i_spi_SLICE_448I: SLOGICB
      generic map (CLKMUX=>"SIG", CEMUX=>"SIG", LSRMUX=>"SIG", 
                   LUT0_INITVAL=>X"FE01", LUT1_INITVAL=>X"FEFE", 
                   REG0_SD=>"VHI", CHECK_DI0=>TRUE, CHECK_CE=>TRUE, 
                   CHECK_LSR=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>wifi_i_spi_bit_counter_1, 
                B1=>wifi_i_spi_bit_counter_0, C1=>wifi_i_spi_bit_counter_2, 
                D1=>'X', DI1=>'X', DI0=>wifi_i_spi_n6356, 
                A0=>wifi_i_spi_bit_counter_3, B0=>wifi_i_spi_n14312, 
                C0=>wifi_i_spi_bit_counter_4, D0=>wifi_i_spi_bit_counter_5, 
                M0=>'X', CE=>shift_reg_15_N_1175_adj_1194, CLK=>internal_80MHz, 
                LSR=>n14287, OFX1=>open, F1=>wifi_i_spi_n14312, Q1=>open, 
                OFX0=>open, F0=>wifi_i_spi_n6356, Q0=>wifi_i_spi_bit_counter_5);
    wifi_i_spi_SLICE_449I: SLOGICB
      generic map (CLKMUX=>"SIG", CEMUX=>"SIG", SRMODE=>"ASYNC", 
                   LUT0_INITVAL=>X"CACA", LUT1_INITVAL=>X"CACA", 
                   REG1_SD=>"VHI", REG0_SD=>"VHI", CHECK_DI1=>TRUE, 
                   CHECK_DI0=>TRUE, CHECK_CE=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>spi3_sck_N_426_1, 
                B1=>wifi_i_spi_shift_reg_2, C1=>shift_reg_15_N_1175_adj_1194, 
                D1=>'X', DI1=>wifi_i_spi_shift_reg_15_N_1126_1, 
                DI0=>wifi_i_spi_shift_reg_15_N_1126_0, A0=>spi3_sck_N_426_0, 
                B0=>wifi_i_spi_shift_reg_1, C0=>shift_reg_15_N_1175_adj_1194, 
                D0=>'X', M0=>'X', CE=>internal_80MHz_enable_51, 
                CLK=>internal_80MHz, LSR=>'X', OFX1=>open, 
                F1=>wifi_i_spi_shift_reg_15_N_1126_1, 
                Q1=>wifi_i_spi_shift_reg_1, OFX0=>open, 
                F0=>wifi_i_spi_shift_reg_15_N_1126_0, 
                Q0=>wifi_i_spi_shift_reg_0);
    wifi_i_spi_SLICE_450I: SLOGICB
      generic map (CLKMUX=>"SIG", CEMUX=>"SIG", SRMODE=>"ASYNC", 
                   LUT0_INITVAL=>X"CACA", LUT1_INITVAL=>X"CACA", 
                   REG1_SD=>"VHI", REG0_SD=>"VHI", CHECK_DI1=>TRUE, 
                   CHECK_DI0=>TRUE, CHECK_CE=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>spi3_sck_N_426_3, 
                B1=>wifi_i_spi_shift_reg_4, C1=>shift_reg_15_N_1175_adj_1194, 
                D1=>'X', DI1=>wifi_i_spi_shift_reg_15_N_1126_3, 
                DI0=>wifi_i_spi_shift_reg_15_N_1126_2, A0=>spi3_sck_N_426_2, 
                B0=>wifi_i_spi_shift_reg_3, C0=>shift_reg_15_N_1175_adj_1194, 
                D0=>'X', M0=>'X', CE=>internal_80MHz_enable_51, 
                CLK=>internal_80MHz, LSR=>'X', OFX1=>open, 
                F1=>wifi_i_spi_shift_reg_15_N_1126_3, 
                Q1=>wifi_i_spi_shift_reg_3, OFX0=>open, 
                F0=>wifi_i_spi_shift_reg_15_N_1126_2, 
                Q0=>wifi_i_spi_shift_reg_2);
    wifi_i_spi_SLICE_451I: SLOGICB
      generic map (CLKMUX=>"SIG", CEMUX=>"SIG", SRMODE=>"ASYNC", 
                   LUT0_INITVAL=>X"CACA", LUT1_INITVAL=>X"CACA", 
                   REG1_SD=>"VHI", REG0_SD=>"VHI", CHECK_DI1=>TRUE, 
                   CHECK_DI0=>TRUE, CHECK_CE=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>spi3_sck_N_426_5, 
                B1=>wifi_i_spi_shift_reg_6, C1=>shift_reg_15_N_1175_adj_1194, 
                D1=>'X', DI1=>wifi_i_spi_shift_reg_15_N_1126_5, 
                DI0=>wifi_i_spi_shift_reg_15_N_1126_4, A0=>spi3_sck_N_426_4, 
                B0=>wifi_i_spi_shift_reg_5, C0=>shift_reg_15_N_1175_adj_1194, 
                D0=>'X', M0=>'X', CE=>internal_80MHz_enable_51, 
                CLK=>internal_80MHz, LSR=>'X', OFX1=>open, 
                F1=>wifi_i_spi_shift_reg_15_N_1126_5, 
                Q1=>wifi_i_spi_shift_reg_5, OFX0=>open, 
                F0=>wifi_i_spi_shift_reg_15_N_1126_4, 
                Q0=>wifi_i_spi_shift_reg_4);
    wifi_i_spi_SLICE_452I: SLOGICB
      generic map (CLKMUX=>"SIG", CEMUX=>"SIG", SRMODE=>"ASYNC", 
                   LUT0_INITVAL=>X"CACA", LUT1_INITVAL=>X"CACA", 
                   REG1_SD=>"VHI", REG0_SD=>"VHI", CHECK_DI1=>TRUE, 
                   CHECK_DI0=>TRUE, CHECK_CE=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>spi3_sck_N_426_7, 
                B1=>wifi_i_spi_shift_reg_8, C1=>shift_reg_15_N_1175_adj_1194, 
                D1=>'X', DI1=>wifi_i_spi_shift_reg_15_N_1126_7, 
                DI0=>wifi_i_spi_shift_reg_15_N_1126_6, A0=>spi3_sck_N_426_6, 
                B0=>wifi_i_spi_shift_reg_7, C0=>shift_reg_15_N_1175_adj_1194, 
                D0=>'X', M0=>'X', CE=>internal_80MHz_enable_51, 
                CLK=>internal_80MHz, LSR=>'X', OFX1=>open, 
                F1=>wifi_i_spi_shift_reg_15_N_1126_7, 
                Q1=>wifi_i_spi_shift_reg_7, OFX0=>open, 
                F0=>wifi_i_spi_shift_reg_15_N_1126_6, 
                Q0=>wifi_i_spi_shift_reg_6);
    wifi_i_spi_SLICE_453I: SLOGICB
      generic map (CLKMUX=>"SIG", CEMUX=>"SIG", SRMODE=>"ASYNC", 
                   LUT0_INITVAL=>X"CACA", LUT1_INITVAL=>X"CACA", 
                   REG1_SD=>"VHI", REG0_SD=>"VHI", CHECK_DI1=>TRUE, 
                   CHECK_DI0=>TRUE, CHECK_CE=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>spi3_sck_N_426_9, 
                B1=>wifi_i_spi_shift_reg_10, C1=>shift_reg_15_N_1175_adj_1194, 
                D1=>'X', DI1=>wifi_i_spi_shift_reg_15_N_1126_9, 
                DI0=>wifi_i_spi_shift_reg_15_N_1126_8, A0=>spi3_sck_N_426_8, 
                B0=>wifi_i_spi_shift_reg_9, C0=>shift_reg_15_N_1175_adj_1194, 
                D0=>'X', M0=>'X', CE=>internal_80MHz_enable_51, 
                CLK=>internal_80MHz, LSR=>'X', OFX1=>open, 
                F1=>wifi_i_spi_shift_reg_15_N_1126_9, 
                Q1=>wifi_i_spi_shift_reg_9, OFX0=>open, 
                F0=>wifi_i_spi_shift_reg_15_N_1126_8, 
                Q0=>wifi_i_spi_shift_reg_8);
    wifi_i_spi_SLICE_454I: SLOGICB
      generic map (CLKMUX=>"SIG", CEMUX=>"SIG", SRMODE=>"ASYNC", 
                   LUT0_INITVAL=>X"CACA", LUT1_INITVAL=>X"CACA", 
                   REG1_SD=>"VHI", REG0_SD=>"VHI", CHECK_DI1=>TRUE, 
                   CHECK_DI0=>TRUE, CHECK_CE=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>spi3_sck_N_426_11, 
                B1=>wifi_i_spi_shift_reg_12, C1=>shift_reg_15_N_1175_adj_1194, 
                D1=>'X', DI1=>wifi_i_spi_shift_reg_15_N_1126_11, 
                DI0=>wifi_i_spi_shift_reg_15_N_1126_10, A0=>spi3_sck_N_426_10, 
                B0=>wifi_i_spi_shift_reg_11, C0=>shift_reg_15_N_1175_adj_1194, 
                D0=>'X', M0=>'X', CE=>internal_80MHz_enable_51, 
                CLK=>internal_80MHz, LSR=>'X', OFX1=>open, 
                F1=>wifi_i_spi_shift_reg_15_N_1126_11, 
                Q1=>wifi_i_spi_shift_reg_11, OFX0=>open, 
                F0=>wifi_i_spi_shift_reg_15_N_1126_10, 
                Q0=>wifi_i_spi_shift_reg_10);
    wifi_i_spi_SLICE_455I: SLOGICB
      generic map (CLKMUX=>"SIG", CEMUX=>"SIG", SRMODE=>"ASYNC", 
                   LUT0_INITVAL=>X"CACA", LUT1_INITVAL=>X"CACA", 
                   REG1_SD=>"VHI", REG0_SD=>"VHI", CHECK_DI1=>TRUE, 
                   CHECK_DI0=>TRUE, CHECK_CE=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>spi3_sck_N_426_13, 
                B1=>wifi_i_spi_shift_reg_14, C1=>shift_reg_15_N_1175_adj_1194, 
                D1=>'X', DI1=>wifi_i_spi_shift_reg_15_N_1126_13, 
                DI0=>wifi_i_spi_shift_reg_15_N_1126_12, A0=>spi3_sck_N_426_12, 
                B0=>wifi_i_spi_shift_reg_13, C0=>shift_reg_15_N_1175_adj_1194, 
                D0=>'X', M0=>'X', CE=>internal_80MHz_enable_51, 
                CLK=>internal_80MHz, LSR=>'X', OFX1=>open, 
                F1=>wifi_i_spi_shift_reg_15_N_1126_13, 
                Q1=>wifi_i_spi_shift_reg_13, OFX0=>open, 
                F0=>wifi_i_spi_shift_reg_15_N_1126_12, 
                Q0=>wifi_i_spi_shift_reg_12);
    SLICE_456I: SLOGICB
      generic map (CLKMUX=>"SIG", CEMUX=>"SIG", SRMODE=>"ASYNC", 
                   LUT0_INITVAL=>X"CACA", LUT1_INITVAL=>X"CACA", 
                   REG0_SD=>"VHI", CHECK_DI0=>TRUE, CHECK_CE=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>wifi_i_fifo_data_out_14, 
                B1=>spi3_test_pattern_14, C1=>spi_test_pattern_enable_2, 
                D1=>'X', DI1=>'X', DI0=>wifi_i_spi_shift_reg_15_N_1126_14, 
                A0=>spi3_sck_N_426_14, B0=>wifi_i_spi_shift_reg_15, 
                C0=>shift_reg_15_N_1175_adj_1194, D0=>'X', M0=>'X', 
                CE=>internal_80MHz_enable_51, CLK=>internal_80MHz, LSR=>'X', 
                OFX1=>open, F1=>spi3_sck_N_426_14, Q1=>open, OFX0=>open, 
                F0=>wifi_i_spi_shift_reg_15_N_1126_14, 
                Q0=>wifi_i_spi_shift_reg_14);
    SLICE_457I: SLOGICB
      generic map (CLKMUX=>"SIG", CEMUX=>"SIG", LSRMUX=>"SIG", 
                   LUT0_INITVAL=>X"CACA", REG0_SD=>"VHI", CHECK_DI0=>TRUE, 
                   CHECK_CE=>TRUE, CHECK_LSR=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>spi3_sck_N_426_15, 
                A0=>wifi_i_fifo_data_out_15, B0=>spi3_test_pattern_15, 
                C0=>spi_test_pattern_enable_2, D0=>'X', M0=>'X', 
                CE=>internal_80MHz_enable_52, CLK=>internal_80MHz, 
                LSR=>shift_reg_15_N_1175_adj_1194, OFX1=>open, F1=>open, 
                Q1=>open, OFX0=>open, F0=>spi3_sck_N_426_15, 
                Q0=>wifi_i_spi_shift_reg_15);
    wifi_q_fifo_dc_SLICE_458I: SLOGICB
      generic map (CLKMUX=>"SIG", CEMUX=>"INV", LSRMUX=>"SIG", SRMODE=>"ASYNC", 
                   LUT0_INITVAL=>X"6666", LUT1_INITVAL=>X"6666", 
                   REG1_SD=>"VHI", REG0_SD=>"VHI", CHECK_DI1=>TRUE, 
                   CHECK_DI0=>TRUE, CHECK_CE=>TRUE, CHECK_LSR=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>wifi_q_fifo_dc_rcount_1, 
                B1=>wifi_q_fifo_dc_rcount_2, C1=>'X', D1=>'X', 
                DI1=>wifi_q_fifo_dc_r_gdata_1, DI0=>wifi_q_fifo_dc_r_gdata_0, 
                A0=>wifi_q_fifo_dc_rcount_0, B0=>wifi_q_fifo_dc_rcount_1, 
                C0=>'X', D0=>'X', M0=>'X', CE=>wifi_q_empty, 
                CLK=>internal_80MHz, LSR=>main_reset_n_N_208, OFX1=>open, 
                F1=>wifi_q_fifo_dc_r_gdata_1, Q1=>wifi_q_fifo_dc_r_gcount_1, 
                OFX0=>open, F0=>wifi_q_fifo_dc_r_gdata_0, 
                Q0=>wifi_q_fifo_dc_r_gcount_0);
    wifi_q_fifo_dc_SLICE_459I: SLOGICB
      generic map (M0MUX=>"SIG", CLKMUX=>"SIG", CEMUX=>"INV", LSRMUX=>"SIG", 
                   SRMODE=>"ASYNC", CHECK_M0=>TRUE, CHECK_CE=>TRUE, 
                   CHECK_LSR=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>'X', B0=>'X', C0=>'X', 
                D0=>'X', M0=>wifi_q_fifo_dc_rcount_2, CE=>wifi_q_empty, 
                CLK=>internal_80MHz, LSR=>main_reset_n_N_208, OFX1=>open, 
                F1=>open, Q1=>open, OFX0=>open, F0=>open, 
                Q0=>wifi_q_fifo_dc_r_gcount_2);
    wifi_q_fifo_dc_SLICE_460I: SLOGICB
      generic map (M0MUX=>"SIG", M1MUX=>"SIG", CLKMUX=>"SIG", CEMUX=>"VHI", 
                   LSRMUX=>"SIG", SRMODE=>"ASYNC", CHECK_M1=>TRUE, 
                   CHECK_M0=>TRUE, CHECK_LSR=>TRUE)
      port map (M1=>wifi_q_fifo_dc_r_gcount_1, FXA=>'X', FXB=>'X', A1=>'X', 
                B1=>'X', C1=>'X', D1=>'X', DI1=>'X', DI0=>'X', A0=>'X', 
                B0=>'X', C0=>'X', D0=>'X', M0=>wifi_q_fifo_dc_r_gcount_0, 
                CE=>'X', CLK=>sdr_rxclk_c, LSR=>main_reset_n_N_208, OFX1=>open, 
                F1=>open, Q1=>wifi_q_fifo_dc_r_gcount_w1, OFX0=>open, F0=>open, 
                Q0=>wifi_q_fifo_dc_r_gcount_w0);
    wifi_q_fifo_dc_SLICE_461I: SLOGICB
      generic map (M0MUX=>"SIG", M1MUX=>"SIG", CLKMUX=>"SIG", CEMUX=>"VHI", 
                   LSRMUX=>"SIG", SRMODE=>"ASYNC", CHECK_M1=>TRUE, 
                   CHECK_M0=>TRUE, CHECK_LSR=>TRUE)
      port map (M1=>wifi_q_fifo_dc_r_gcount_w0, FXA=>'X', FXB=>'X', A1=>'X', 
                B1=>'X', C1=>'X', D1=>'X', DI1=>'X', DI0=>'X', A0=>'X', 
                B0=>'X', C0=>'X', D0=>'X', M0=>wifi_q_fifo_dc_r_gcount_2, 
                CE=>'X', CLK=>sdr_rxclk_c, LSR=>main_reset_n_N_208, OFX1=>open, 
                F1=>open, Q1=>wifi_q_fifo_dc_r_gcount_w20, OFX0=>open, 
                F0=>open, Q0=>wifi_q_fifo_dc_r_gcount_w2);
    wifi_q_fifo_dc_SLICE_462I: SLOGICB
      generic map (M0MUX=>"SIG", M1MUX=>"SIG", CLKMUX=>"SIG", CEMUX=>"VHI", 
                   LSRMUX=>"SIG", SRMODE=>"ASYNC", CHECK_M1=>TRUE, 
                   CHECK_M0=>TRUE, CHECK_LSR=>TRUE)
      port map (M1=>wifi_q_fifo_dc_r_gcount_w2, FXA=>'X', FXB=>'X', A1=>'X', 
                B1=>'X', C1=>'X', D1=>'X', DI1=>'X', DI0=>'X', A0=>'X', 
                B0=>'X', C0=>'X', D0=>'X', M0=>wifi_q_fifo_dc_r_gcount_w1, 
                CE=>'X', CLK=>sdr_rxclk_c, LSR=>main_reset_n_N_208, OFX1=>open, 
                F1=>open, Q1=>wifi_q_fifo_dc_r_gcount_w22, OFX0=>open, 
                F0=>open, Q0=>wifi_q_fifo_dc_r_gcount_w21);
    wifi_q_fifo_dc_SLICE_463I: SLOGICB
      generic map (M0MUX=>"SIG", M1MUX=>"SIG", CLKMUX=>"SIG", CEMUX=>"INV", 
                   LSRMUX=>"SIG", SRMODE=>"ASYNC", CHECK_M1=>TRUE, 
                   CHECK_M0=>TRUE, CHECK_CE=>TRUE, CHECK_LSR=>TRUE)
      port map (M1=>wifi_q_fifo_dc_rcount_1, FXA=>'X', FXB=>'X', A1=>'X', 
                B1=>'X', C1=>'X', D1=>'X', DI1=>'X', DI0=>'X', A0=>'X', 
                B0=>'X', C0=>'X', D0=>'X', M0=>wifi_q_fifo_dc_rcount_0, 
                CE=>wifi_q_empty, CLK=>internal_80MHz, LSR=>main_reset_n_N_208, 
                OFX1=>open, F1=>open, Q1=>wifi_q_fifo_dc_rptr_1, OFX0=>open, 
                F0=>open, Q0=>wifi_q_fifo_dc_rptr_0);
    wifi_q_fifo_dc_SLICE_465I: SLOGICB
      generic map (CLKMUX=>"SIG", CEMUX=>"SIG", SRMODE=>"ASYNC", 
                   LUT0_INITVAL=>X"6666", LUT1_INITVAL=>X"6666", 
                   REG1_SD=>"VHI", REG0_SD=>"VHI", CHECK_DI1=>TRUE, 
                   CHECK_DI0=>TRUE, CHECK_CE=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>wifi_q_fifo_dc_wcount_1, 
                B1=>wifi_q_fifo_dc_wcount_2, C1=>'X', D1=>'X', 
                DI1=>wifi_q_fifo_dc_w_gdata_1, DI0=>wifi_q_fifo_dc_w_gdata_0, 
                A0=>wifi_q_fifo_dc_wcount_0, B0=>wifi_q_fifo_dc_wcount_1, 
                C0=>'X', D0=>'X', M0=>'X', CE=>wifi_q_fifo_dc_wren_i, 
                CLK=>sdr_rxclk_c, LSR=>'X', OFX1=>open, 
                F1=>wifi_q_fifo_dc_w_gdata_1, Q1=>wifi_q_fifo_dc_w_gcount_1, 
                OFX0=>open, F0=>wifi_q_fifo_dc_w_gdata_0, 
                Q0=>wifi_q_fifo_dc_w_gcount_0);
    wifi_q_fifo_dc_SLICE_466I: SLOGICB
      generic map (M0MUX=>"SIG", CLKMUX=>"SIG", CEMUX=>"SIG", SRMODE=>"ASYNC", 
                   CHECK_M0=>TRUE, CHECK_CE=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>'X', B0=>'X', C0=>'X', 
                D0=>'X', M0=>wifi_q_fifo_dc_wcount_2, 
                CE=>wifi_q_fifo_dc_wren_i, CLK=>sdr_rxclk_c, LSR=>'X', 
                OFX1=>open, F1=>open, Q1=>open, OFX0=>open, F0=>open, 
                Q0=>wifi_q_fifo_dc_w_gcount_2);
    wifi_q_fifo_dc_SLICE_467I: SLOGICB
      generic map (M0MUX=>"SIG", M1MUX=>"SIG", CLKMUX=>"SIG", CEMUX=>"VHI", 
                   SRMODE=>"ASYNC", CHECK_M1=>TRUE, CHECK_M0=>TRUE)
      port map (M1=>wifi_q_fifo_dc_w_gcount_1, FXA=>'X', FXB=>'X', A1=>'X', 
                B1=>'X', C1=>'X', D1=>'X', DI1=>'X', DI0=>'X', A0=>'X', 
                B0=>'X', C0=>'X', D0=>'X', M0=>wifi_q_fifo_dc_w_gcount_0, 
                CE=>'X', CLK=>internal_80MHz, LSR=>'X', OFX1=>open, F1=>open, 
                Q1=>wifi_q_fifo_dc_w_gcount_r1, OFX0=>open, F0=>open, 
                Q0=>wifi_q_fifo_dc_w_gcount_r0);
    wifi_q_fifo_dc_SLICE_468I: SLOGICB
      generic map (M0MUX=>"SIG", M1MUX=>"SIG", CLKMUX=>"SIG", CEMUX=>"VHI", 
                   SRMODE=>"ASYNC", CHECK_M1=>TRUE, CHECK_M0=>TRUE)
      port map (M1=>wifi_q_fifo_dc_w_gcount_r0, FXA=>'X', FXB=>'X', A1=>'X', 
                B1=>'X', C1=>'X', D1=>'X', DI1=>'X', DI0=>'X', A0=>'X', 
                B0=>'X', C0=>'X', D0=>'X', M0=>wifi_q_fifo_dc_w_gcount_2, 
                CE=>'X', CLK=>internal_80MHz, LSR=>'X', OFX1=>open, F1=>open, 
                Q1=>wifi_q_fifo_dc_w_gcount_r20, OFX0=>open, F0=>open, 
                Q0=>wifi_q_fifo_dc_w_gcount_r2);
    wifi_q_fifo_dc_SLICE_469I: SLOGICB
      generic map (M0MUX=>"SIG", M1MUX=>"SIG", CLKMUX=>"SIG", CEMUX=>"VHI", 
                   SRMODE=>"ASYNC", CHECK_M1=>TRUE, CHECK_M0=>TRUE)
      port map (M1=>wifi_q_fifo_dc_w_gcount_r2, FXA=>'X', FXB=>'X', A1=>'X', 
                B1=>'X', C1=>'X', D1=>'X', DI1=>'X', DI0=>'X', A0=>'X', 
                B0=>'X', C0=>'X', D0=>'X', M0=>wifi_q_fifo_dc_w_gcount_r1, 
                CE=>'X', CLK=>internal_80MHz, LSR=>'X', OFX1=>open, F1=>open, 
                Q1=>wifi_q_fifo_dc_w_gcount_r22, OFX0=>open, F0=>open, 
                Q0=>wifi_q_fifo_dc_w_gcount_r21);
    wifi_q_fifo_dc_SLICE_470I: SLOGICB
      generic map (M0MUX=>"SIG", M1MUX=>"SIG", CLKMUX=>"SIG", CEMUX=>"SIG", 
                   SRMODE=>"ASYNC", CHECK_M1=>TRUE, CHECK_M0=>TRUE, 
                   CHECK_CE=>TRUE)
      port map (M1=>wifi_q_fifo_dc_wcount_1, FXA=>'X', FXB=>'X', A1=>'X', 
                B1=>'X', C1=>'X', D1=>'X', DI1=>'X', DI0=>'X', A0=>'X', 
                B0=>'X', C0=>'X', D0=>'X', M0=>wifi_q_fifo_dc_wcount_0, 
                CE=>wifi_q_fifo_dc_wren_i, CLK=>sdr_rxclk_c, LSR=>'X', 
                OFX1=>open, F1=>open, Q1=>wifi_q_fifo_dc_wptr_1, OFX0=>open, 
                F0=>open, Q0=>wifi_q_fifo_dc_wptr_0);
    wifi_q_spi_SLICE_472I: SLOGICB
      generic map (CLKMUX=>"SIG", CEMUX=>"VHI", LSRMUX=>"SIG", 
                   LUT0_INITVAL=>X"6666", LUT1_INITVAL=>X"EEEE", 
                   REG0_SD=>"VHI", CHECK_DI0=>TRUE, CHECK_LSR=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>wifi_q_spi_bit_counter_0, 
                B1=>wifi_q_spi_bit_counter_3, C1=>'X', D1=>'X', DI1=>'X', 
                DI0=>wifi_q_spi_bit_counter_5_N_1168_0, 
                A0=>wifi_q_spi_bit_counter_0, B0=>shift_reg_15_N_1175_adj_1195, 
                C0=>'X', D0=>'X', M0=>'X', CE=>'X', CLK=>internal_80MHz, 
                LSR=>n14285, OFX1=>open, F1=>wifi_q_spi_n13140, Q1=>open, 
                OFX0=>open, F0=>wifi_q_spi_bit_counter_5_N_1168_0, 
                Q0=>wifi_q_spi_bit_counter_0);
    wifi_q_spi_SLICE_473I: SLOGICB
      generic map (CLKMUX=>"SIG", CEMUX=>"SIG", LSRMUX=>"SIG", 
                   LUT0_INITVAL=>X"9999", LUT1_INITVAL=>X"E1E1", 
                   REG1_SD=>"VHI", REG0_SD=>"VHI", CHECK_DI1=>TRUE, 
                   CHECK_DI0=>TRUE, CHECK_CE=>TRUE, CHECK_LSR=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>wifi_q_spi_bit_counter_1, 
                B1=>wifi_q_spi_bit_counter_0, C1=>wifi_q_spi_bit_counter_2, 
                D1=>'X', DI1=>wifi_q_spi_n6354, DI0=>wifi_q_spi_n6352, 
                A0=>wifi_q_spi_bit_counter_1, B0=>wifi_q_spi_bit_counter_0, 
                C0=>'X', D0=>'X', M0=>'X', CE=>shift_reg_15_N_1175_adj_1195, 
                CLK=>internal_80MHz, LSR=>n14285, OFX1=>open, 
                F1=>wifi_q_spi_n6354, Q1=>wifi_q_spi_bit_counter_2, OFX0=>open, 
                F0=>wifi_q_spi_n6352, Q0=>wifi_q_spi_bit_counter_1);
    wifi_q_spi_SLICE_474I: SLOGICB
      generic map (CLKMUX=>"SIG", CEMUX=>"SIG", LSRMUX=>"SIG", 
                   LUT0_INITVAL=>X"F0E1", LUT1_INITVAL=>X"FFFE", 
                   REG0_SD=>"VHI", CHECK_DI0=>TRUE, CHECK_CE=>TRUE, 
                   CHECK_LSR=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>wifi_q_spi_bit_counter_1, 
                B1=>wifi_q_spi_bit_counter_0, C1=>wifi_q_spi_bit_counter_3, 
                D1=>wifi_q_spi_bit_counter_2, DI1=>'X', DI0=>wifi_q_spi_n6350, 
                A0=>wifi_q_spi_bit_counter_1, B0=>wifi_q_spi_bit_counter_0, 
                C0=>wifi_q_spi_bit_counter_3, D0=>wifi_q_spi_bit_counter_2, 
                M0=>'X', CE=>shift_reg_15_N_1175_adj_1195, CLK=>internal_80MHz, 
                LSR=>n14285, OFX1=>open, F1=>wifi_q_spi_n14286, Q1=>open, 
                OFX0=>open, F0=>wifi_q_spi_n6350, Q0=>wifi_q_spi_bit_counter_3);
    wifi_q_spi_SLICE_475I: SLOGICB
      generic map (CLKMUX=>"SIG", CEMUX=>"SIG", SRMODE=>"ASYNC", 
                   LUT0_INITVAL=>X"F22F", LUT1_INITVAL=>X"FFFE", 
                   REG0_SD=>"VHI", CHECK_DI0=>TRUE, CHECK_CE=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>wifi_q_spi_bit_counter_4, 
                B1=>wifi_q_spi_n13140, C1=>wifi_q_spi_n13138, 
                D1=>wifi_q_spi_bit_counter_5, DI1=>'X', 
                DI0=>wifi_q_spi_bit_counter_5_N_1144_4, 
                A0=>internal_80MHz_enable_68, B0=>shift_reg_15_N_1175_adj_1195, 
                C0=>wifi_q_spi_n14286, D0=>wifi_q_spi_bit_counter_4, M0=>'X', 
                CE=>internal_80MHz_enable_67, CLK=>internal_80MHz, LSR=>'X', 
                OFX1=>open, F1=>shift_reg_15_N_1175_adj_1195, Q1=>open, 
                OFX0=>open, F0=>wifi_q_spi_bit_counter_5_N_1144_4, 
                Q0=>wifi_q_spi_bit_counter_4);
    wifi_q_spi_SLICE_476I: SLOGICB
      generic map (CLKMUX=>"SIG", CEMUX=>"SIG", LSRMUX=>"SIG", 
                   LUT0_INITVAL=>X"FE01", LUT1_INITVAL=>X"FEFE", 
                   REG0_SD=>"VHI", CHECK_DI0=>TRUE, CHECK_CE=>TRUE, 
                   CHECK_LSR=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>wifi_q_spi_bit_counter_1, 
                B1=>wifi_q_spi_bit_counter_0, C1=>wifi_q_spi_bit_counter_2, 
                D1=>'X', DI1=>'X', DI0=>wifi_q_spi_n6346, 
                A0=>wifi_q_spi_bit_counter_3, B0=>wifi_q_spi_n14309, 
                C0=>wifi_q_spi_bit_counter_4, D0=>wifi_q_spi_bit_counter_5, 
                M0=>'X', CE=>shift_reg_15_N_1175_adj_1195, CLK=>internal_80MHz, 
                LSR=>n14285, OFX1=>open, F1=>wifi_q_spi_n14309, Q1=>open, 
                OFX0=>open, F0=>wifi_q_spi_n6346, Q0=>wifi_q_spi_bit_counter_5);
    wifi_q_spi_SLICE_477I: SLOGICB
      generic map (CLKMUX=>"SIG", CEMUX=>"SIG", SRMODE=>"ASYNC", 
                   LUT0_INITVAL=>X"CACA", LUT1_INITVAL=>X"CACA", 
                   REG1_SD=>"VHI", REG0_SD=>"VHI", CHECK_DI1=>TRUE, 
                   CHECK_DI0=>TRUE, CHECK_CE=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>spi4_sck_N_442_1, 
                B1=>wifi_q_spi_shift_reg_2, C1=>shift_reg_15_N_1175_adj_1195, 
                D1=>'X', DI1=>wifi_q_spi_shift_reg_15_N_1126_1, 
                DI0=>wifi_q_spi_shift_reg_15_N_1126_0, A0=>spi4_sck_N_442_0, 
                B0=>wifi_q_spi_shift_reg_1, C0=>shift_reg_15_N_1175_adj_1195, 
                D0=>'X', M0=>'X', CE=>internal_80MHz_enable_67, 
                CLK=>internal_80MHz, LSR=>'X', OFX1=>open, 
                F1=>wifi_q_spi_shift_reg_15_N_1126_1, 
                Q1=>wifi_q_spi_shift_reg_1, OFX0=>open, 
                F0=>wifi_q_spi_shift_reg_15_N_1126_0, 
                Q0=>wifi_q_spi_shift_reg_0);
    wifi_q_spi_SLICE_478I: SLOGICB
      generic map (CLKMUX=>"SIG", CEMUX=>"SIG", SRMODE=>"ASYNC", 
                   LUT0_INITVAL=>X"CACA", LUT1_INITVAL=>X"CACA", 
                   REG1_SD=>"VHI", REG0_SD=>"VHI", CHECK_DI1=>TRUE, 
                   CHECK_DI0=>TRUE, CHECK_CE=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>spi4_sck_N_442_3, 
                B1=>wifi_q_spi_shift_reg_4, C1=>shift_reg_15_N_1175_adj_1195, 
                D1=>'X', DI1=>wifi_q_spi_shift_reg_15_N_1126_3, 
                DI0=>wifi_q_spi_shift_reg_15_N_1126_2, A0=>spi4_sck_N_442_2, 
                B0=>wifi_q_spi_shift_reg_3, C0=>shift_reg_15_N_1175_adj_1195, 
                D0=>'X', M0=>'X', CE=>internal_80MHz_enable_67, 
                CLK=>internal_80MHz, LSR=>'X', OFX1=>open, 
                F1=>wifi_q_spi_shift_reg_15_N_1126_3, 
                Q1=>wifi_q_spi_shift_reg_3, OFX0=>open, 
                F0=>wifi_q_spi_shift_reg_15_N_1126_2, 
                Q0=>wifi_q_spi_shift_reg_2);
    wifi_q_spi_SLICE_479I: SLOGICB
      generic map (CLKMUX=>"SIG", CEMUX=>"SIG", SRMODE=>"ASYNC", 
                   LUT0_INITVAL=>X"CACA", LUT1_INITVAL=>X"CACA", 
                   REG1_SD=>"VHI", REG0_SD=>"VHI", CHECK_DI1=>TRUE, 
                   CHECK_DI0=>TRUE, CHECK_CE=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>spi4_sck_N_442_5, 
                B1=>wifi_q_spi_shift_reg_6, C1=>shift_reg_15_N_1175_adj_1195, 
                D1=>'X', DI1=>wifi_q_spi_shift_reg_15_N_1126_5, 
                DI0=>wifi_q_spi_shift_reg_15_N_1126_4, A0=>spi4_sck_N_442_4, 
                B0=>wifi_q_spi_shift_reg_5, C0=>shift_reg_15_N_1175_adj_1195, 
                D0=>'X', M0=>'X', CE=>internal_80MHz_enable_67, 
                CLK=>internal_80MHz, LSR=>'X', OFX1=>open, 
                F1=>wifi_q_spi_shift_reg_15_N_1126_5, 
                Q1=>wifi_q_spi_shift_reg_5, OFX0=>open, 
                F0=>wifi_q_spi_shift_reg_15_N_1126_4, 
                Q0=>wifi_q_spi_shift_reg_4);
    wifi_q_spi_SLICE_480I: SLOGICB
      generic map (CLKMUX=>"SIG", CEMUX=>"SIG", SRMODE=>"ASYNC", 
                   LUT0_INITVAL=>X"CACA", LUT1_INITVAL=>X"CACA", 
                   REG1_SD=>"VHI", REG0_SD=>"VHI", CHECK_DI1=>TRUE, 
                   CHECK_DI0=>TRUE, CHECK_CE=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>spi4_sck_N_442_7, 
                B1=>wifi_q_spi_shift_reg_8, C1=>shift_reg_15_N_1175_adj_1195, 
                D1=>'X', DI1=>wifi_q_spi_shift_reg_15_N_1126_7, 
                DI0=>wifi_q_spi_shift_reg_15_N_1126_6, A0=>spi4_sck_N_442_6, 
                B0=>wifi_q_spi_shift_reg_7, C0=>shift_reg_15_N_1175_adj_1195, 
                D0=>'X', M0=>'X', CE=>internal_80MHz_enable_67, 
                CLK=>internal_80MHz, LSR=>'X', OFX1=>open, 
                F1=>wifi_q_spi_shift_reg_15_N_1126_7, 
                Q1=>wifi_q_spi_shift_reg_7, OFX0=>open, 
                F0=>wifi_q_spi_shift_reg_15_N_1126_6, 
                Q0=>wifi_q_spi_shift_reg_6);
    wifi_q_spi_SLICE_481I: SLOGICB
      generic map (CLKMUX=>"SIG", CEMUX=>"SIG", SRMODE=>"ASYNC", 
                   LUT0_INITVAL=>X"CACA", LUT1_INITVAL=>X"CACA", 
                   REG1_SD=>"VHI", REG0_SD=>"VHI", CHECK_DI1=>TRUE, 
                   CHECK_DI0=>TRUE, CHECK_CE=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>spi4_sck_N_442_9, 
                B1=>wifi_q_spi_shift_reg_10, C1=>shift_reg_15_N_1175_adj_1195, 
                D1=>'X', DI1=>wifi_q_spi_shift_reg_15_N_1126_9, 
                DI0=>wifi_q_spi_shift_reg_15_N_1126_8, A0=>spi4_sck_N_442_8, 
                B0=>wifi_q_spi_shift_reg_9, C0=>shift_reg_15_N_1175_adj_1195, 
                D0=>'X', M0=>'X', CE=>internal_80MHz_enable_67, 
                CLK=>internal_80MHz, LSR=>'X', OFX1=>open, 
                F1=>wifi_q_spi_shift_reg_15_N_1126_9, 
                Q1=>wifi_q_spi_shift_reg_9, OFX0=>open, 
                F0=>wifi_q_spi_shift_reg_15_N_1126_8, 
                Q0=>wifi_q_spi_shift_reg_8);
    wifi_q_spi_SLICE_482I: SLOGICB
      generic map (CLKMUX=>"SIG", CEMUX=>"SIG", SRMODE=>"ASYNC", 
                   LUT0_INITVAL=>X"CACA", LUT1_INITVAL=>X"CACA", 
                   REG1_SD=>"VHI", REG0_SD=>"VHI", CHECK_DI1=>TRUE, 
                   CHECK_DI0=>TRUE, CHECK_CE=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>spi4_sck_N_442_11, 
                B1=>wifi_q_spi_shift_reg_12, C1=>shift_reg_15_N_1175_adj_1195, 
                D1=>'X', DI1=>wifi_q_spi_shift_reg_15_N_1126_11, 
                DI0=>wifi_q_spi_shift_reg_15_N_1126_10, A0=>spi4_sck_N_442_10, 
                B0=>wifi_q_spi_shift_reg_11, C0=>shift_reg_15_N_1175_adj_1195, 
                D0=>'X', M0=>'X', CE=>internal_80MHz_enable_67, 
                CLK=>internal_80MHz, LSR=>'X', OFX1=>open, 
                F1=>wifi_q_spi_shift_reg_15_N_1126_11, 
                Q1=>wifi_q_spi_shift_reg_11, OFX0=>open, 
                F0=>wifi_q_spi_shift_reg_15_N_1126_10, 
                Q0=>wifi_q_spi_shift_reg_10);
    wifi_q_spi_SLICE_483I: SLOGICB
      generic map (CLKMUX=>"SIG", CEMUX=>"SIG", SRMODE=>"ASYNC", 
                   LUT0_INITVAL=>X"CACA", LUT1_INITVAL=>X"CACA", 
                   REG1_SD=>"VHI", REG0_SD=>"VHI", CHECK_DI1=>TRUE, 
                   CHECK_DI0=>TRUE, CHECK_CE=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>spi4_sck_N_442_13, 
                B1=>wifi_q_spi_shift_reg_14, C1=>shift_reg_15_N_1175_adj_1195, 
                D1=>'X', DI1=>wifi_q_spi_shift_reg_15_N_1126_13, 
                DI0=>wifi_q_spi_shift_reg_15_N_1126_12, A0=>spi4_sck_N_442_12, 
                B0=>wifi_q_spi_shift_reg_13, C0=>shift_reg_15_N_1175_adj_1195, 
                D0=>'X', M0=>'X', CE=>internal_80MHz_enable_67, 
                CLK=>internal_80MHz, LSR=>'X', OFX1=>open, 
                F1=>wifi_q_spi_shift_reg_15_N_1126_13, 
                Q1=>wifi_q_spi_shift_reg_13, OFX0=>open, 
                F0=>wifi_q_spi_shift_reg_15_N_1126_12, 
                Q0=>wifi_q_spi_shift_reg_12);
    SLICE_484I: SLOGICB
      generic map (CLKMUX=>"SIG", CEMUX=>"SIG", SRMODE=>"ASYNC", 
                   LUT0_INITVAL=>X"CACA", LUT1_INITVAL=>X"CACA", 
                   REG0_SD=>"VHI", CHECK_DI0=>TRUE, CHECK_CE=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>wifi_q_fifo_data_out_14, 
                B1=>spi4_test_pattern_14, C1=>spi_test_pattern_enable_3, 
                D1=>'X', DI1=>'X', DI0=>wifi_q_spi_shift_reg_15_N_1126_14, 
                A0=>spi4_sck_N_442_14, B0=>wifi_q_spi_shift_reg_15, 
                C0=>shift_reg_15_N_1175_adj_1195, D0=>'X', M0=>'X', 
                CE=>internal_80MHz_enable_67, CLK=>internal_80MHz, LSR=>'X', 
                OFX1=>open, F1=>spi4_sck_N_442_14, Q1=>open, OFX0=>open, 
                F0=>wifi_q_spi_shift_reg_15_N_1126_14, 
                Q0=>wifi_q_spi_shift_reg_14);
    SLICE_485I: SLOGICB
      generic map (CLKMUX=>"SIG", CEMUX=>"SIG", LSRMUX=>"SIG", 
                   LUT0_INITVAL=>X"CACA", REG0_SD=>"VHI", CHECK_DI0=>TRUE, 
                   CHECK_CE=>TRUE, CHECK_LSR=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>spi4_sck_N_442_15, 
                A0=>wifi_q_fifo_data_out_15, B0=>spi4_test_pattern_15, 
                C0=>spi_test_pattern_enable_3, D0=>'X', M0=>'X', 
                CE=>internal_80MHz_enable_68, CLK=>internal_80MHz, 
                LSR=>shift_reg_15_N_1175_adj_1195, OFX1=>open, F1=>open, 
                Q1=>open, OFX0=>open, F0=>spi4_sck_N_442_15, 
                Q0=>wifi_q_spi_shift_reg_15);
    SLICE_486I: SLOGICB
      generic map (M0MUX=>"SIG", CLKMUX=>"SIG", CEMUX=>"SIG", LSRMUX=>"INV", 
                   REG0_REGSET=>"SET", GSR=>"DISABLED", CHECK_M0=>TRUE, 
                   CHECK_CE=>TRUE, CHECK_LSR=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>'X', B0=>'X', C0=>'X', 
                D0=>'X', M0=>wb_dat_o_1, CE=>int_clk_out_enable_212, 
                CLK=>int_clk_out, LSR=>stm_fpga_spare5_c, OFX1=>open, F1=>open, 
                Q1=>open, OFX0=>open, F0=>open, Q0=>wifi_rx_invert);
    SLICE_487I: SLOGICB
      generic map (M0MUX=>"SIG", CLKMUX=>"SIG", CEMUX=>"SIG", LSRMUX=>"INV", 
                   REG0_REGSET=>"SET", GSR=>"DISABLED", CHECK_M0=>TRUE, 
                   CHECK_CE=>TRUE, CHECK_LSR=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>'X', B0=>'X', C0=>'X', 
                D0=>'X', M0=>wb_dat_o_3, CE=>int_clk_out_enable_212, 
                CLK=>int_clk_out, LSR=>stm_fpga_spare5_c, OFX1=>open, F1=>open, 
                Q1=>open, OFX0=>open, F0=>open, Q0=>wifi_sync_check_enable);
    mux_859_i3_SLICE_488I: SLOGICB
      generic map (M0MUX=>"SIG", LUT0_INITVAL=>X"CACA", LUT1_INITVAL=>X"E4E4")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>wb_adr_o_4, B1=>n13477, 
                C1=>n13395, D1=>'X', DI1=>'X', DI0=>'X', A0=>n2881, B0=>n2893, 
                C0=>wb_adr_o_1, D0=>'X', M0=>n13431, CE=>'X', CLK=>'X', 
                LSR=>'X', OFX1=>open, F1=>open, Q1=>open, OFX0=>n3018, 
                F0=>open, Q0=>open);
    mux_859_i2_SLICE_489I: SLOGICB
      generic map (M0MUX=>"SIG", LUT0_INITVAL=>X"CACA", LUT1_INITVAL=>X"E4E4")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>wb_adr_o_4, B1=>n13470, 
                C1=>n13392, D1=>'X', DI1=>'X', DI0=>'X', A0=>n2882, B0=>n2894, 
                C0=>wb_adr_o_1, D0=>'X', M0=>n13431, CE=>'X', CLK=>'X', 
                LSR=>'X', OFX1=>open, F1=>open, Q1=>open, OFX0=>n3019, 
                F0=>open, Q0=>open);
    i10478_SLICE_490I: SLOGICB
      generic map (M0MUX=>"SIG", M1MUX=>"SIG", LUT0_INITVAL=>X"8888", 
                   LUT1_INITVAL=>X"E4E4")
      port map (M1=>wb_adr_o_2, FXA=>n13471, FXB=>n13472, A1=>wb_adr_o_0, 
                B1=>ufl_p8_sel_2, C1=>subg_sync_check_enable, D1=>'X', 
                DI1=>'X', DI0=>'X', A0=>ufl_p7_sel_2, B0=>wb_adr_o_0, C0=>'X', 
                D0=>'X', M0=>wb_adr_o_1, CE=>'X', CLK=>'X', LSR=>'X', 
                OFX1=>n13475, F1=>open, Q1=>open, OFX0=>n13472, F0=>open, 
                Q0=>open);
    i10485_SLICE_491I: SLOGICB
      generic map (M0MUX=>"SIG", LUT0_INITVAL=>X"8888", LUT1_INITVAL=>X"E4E4")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>wb_adr_o_0, B1=>ufl_p8_sel_3, 
                C1=>wifi_sync_check_enable, D1=>'X', DI1=>'X', DI0=>'X', 
                A0=>ufl_p7_sel_3, B0=>wb_adr_o_0, C0=>'X', D0=>'X', 
                M0=>wb_adr_o_1, CE=>'X', CLK=>'X', LSR=>'X', OFX1=>open, 
                F1=>open, Q1=>open, OFX0=>n13479, F0=>open, Q0=>open);
    i10486_SLICE_492I: SLOGICB
      generic map (M0MUX=>"SIG", LUT0_INITVAL=>X"CACA", LUT1_INITVAL=>X"E4E4")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>wb_adr_o_0, 
                B1=>spi2_test_pattern_11, C1=>spi2_test_pattern_3, D1=>'X', 
                DI1=>'X', DI0=>'X', A0=>spi1_test_pattern_11, 
                B0=>spi1_test_pattern_3, C0=>wb_adr_o_0, D0=>'X', 
                M0=>wb_adr_o_1, CE=>'X', CLK=>'X', LSR=>'X', OFX1=>open, 
                F1=>open, Q1=>open, OFX0=>n13480, F0=>open, Q0=>open);
    i10479_SLICE_493I: SLOGICB
      generic map (M0MUX=>"SIG", M1MUX=>"SIG", LUT0_INITVAL=>X"CACA", 
                   LUT1_INITVAL=>X"E4E4")
      port map (M1=>wb_adr_o_3, FXA=>n13475, FXB=>n13476, A1=>wb_adr_o_0, 
                B1=>spi2_test_pattern_10, C1=>spi2_test_pattern_2, D1=>'X', 
                DI1=>'X', DI0=>'X', A0=>spi1_test_pattern_10, 
                B0=>spi1_test_pattern_2, C0=>wb_adr_o_0, D0=>'X', 
                M0=>wb_adr_o_1, CE=>'X', CLK=>'X', LSR=>'X', OFX1=>n13477, 
                F1=>open, Q1=>open, OFX0=>n13473, F0=>open, Q0=>open);
    i10907_SLICE_494I: SLOGICB
      generic map (M0MUX=>"SIG", LUT0_INITVAL=>X"CA0A", LUT1_INITVAL=>X"5140")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>wb_adr_o_0, B1=>wb_adr_o_2, 
                C1=>ufl_p8_sel_4, D1=>reg2_4, DI1=>'X', DI0=>'X', A0=>n14004, 
                B0=>wb_adr_o_0, C0=>wb_adr_o_2, D0=>ufl_p7_sel_4, 
                M0=>wb_adr_o_1, CE=>'X', CLK=>'X', LSR=>'X', OFX1=>open, 
                F1=>open, Q1=>open, OFX0=>n14120, F0=>open, Q0=>open);
    i10905_SLICE_495I: SLOGICB
      generic map (M0MUX=>"SIG", M1MUX=>"SIG", LUT0_INITVAL=>X"CACA", 
                   LUT1_INITVAL=>X"D8D8")
      port map (M1=>wb_adr_o_3, FXA=>n14120, FXB=>n14118, A1=>wb_adr_o_2, 
                B1=>n2867, C1=>n2843, D1=>'X', DI1=>'X', DI0=>'X', A0=>n2831, 
                B0=>n2855, C0=>wb_adr_o_2, D0=>'X', M0=>wb_adr_o_1, CE=>'X', 
                CLK=>'X', LSR=>'X', OFX1=>n14121, F1=>open, Q1=>open, 
                OFX0=>n14118, F0=>open, Q0=>open);
    i10487_SLICE_496I: SLOGICB
      generic map (M0MUX=>"SIG", LUT0_INITVAL=>X"CACA", LUT1_INITVAL=>X"E4E4")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>wb_adr_o_0, 
                B1=>spi4_test_pattern_11, C1=>spi4_test_pattern_3, D1=>'X', 
                DI1=>'X', DI0=>'X', A0=>spi3_test_pattern_11, 
                B0=>spi3_test_pattern_3, C0=>wb_adr_o_0, D0=>'X', 
                M0=>wb_adr_o_1, CE=>'X', CLK=>'X', LSR=>'X', OFX1=>open, 
                F1=>open, Q1=>open, OFX0=>n13481, F0=>open, Q0=>open);
    i10480_SLICE_497I: SLOGICB
      generic map (M0MUX=>"SIG", M1MUX=>"SIG", LUT0_INITVAL=>X"CACA", 
                   LUT1_INITVAL=>X"E4E4")
      port map (M1=>wb_adr_o_2, FXA=>n13473, FXB=>n13474, A1=>wb_adr_o_0, 
                B1=>spi4_test_pattern_10, C1=>spi4_test_pattern_2, D1=>'X', 
                DI1=>'X', DI0=>'X', A0=>spi3_test_pattern_10, 
                B0=>spi3_test_pattern_2, C0=>wb_adr_o_0, D0=>'X', 
                M0=>wb_adr_o_1, CE=>'X', CLK=>'X', LSR=>'X', OFX1=>n13476, 
                F1=>open, Q1=>open, OFX0=>n13474, F0=>open, Q0=>open);
    i10900_SLICE_498I: SLOGICB
      generic map (M0MUX=>"SIG", LUT0_INITVAL=>X"CA0A", LUT1_INITVAL=>X"5140")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>wb_adr_o_0, B1=>wb_adr_o_2, 
                C1=>ufl_p8_sel_5, D1=>reg2_5, DI1=>'X', DI0=>'X', A0=>n14021, 
                B0=>wb_adr_o_0, C0=>wb_adr_o_2, D0=>ufl_p7_sel_5, 
                M0=>wb_adr_o_1, CE=>'X', CLK=>'X', LSR=>'X', OFX1=>open, 
                F1=>open, Q1=>open, OFX0=>n14114, F0=>open, Q0=>open);
    i10898_SLICE_499I: SLOGICB
      generic map (M0MUX=>"SIG", M1MUX=>"SIG", LUT0_INITVAL=>X"CACA", 
                   LUT1_INITVAL=>X"D8D8")
      port map (M1=>wb_adr_o_3, FXA=>n14114, FXB=>n14112, A1=>wb_adr_o_2, 
                B1=>n2866, C1=>n2842, D1=>'X', DI1=>'X', DI0=>'X', A0=>n2830, 
                B0=>n2854, C0=>wb_adr_o_2, D0=>'X', M0=>wb_adr_o_1, CE=>'X', 
                CLK=>'X', LSR=>'X', OFX1=>n14115, F1=>open, Q1=>open, 
                OFX0=>n14112, F0=>open, Q0=>open);
    i10891_SLICE_500I: SLOGICB
      generic map (M0MUX=>"SIG", LUT0_INITVAL=>X"CA0A", LUT1_INITVAL=>X"5140")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>wb_adr_o_0, B1=>wb_adr_o_2, 
                C1=>ufl_p8_sel_6, D1=>reg2_6, DI1=>'X', DI0=>'X', A0=>n14031, 
                B0=>wb_adr_o_0, C0=>wb_adr_o_2, D0=>ufl_p7_sel_6, 
                M0=>wb_adr_o_1, CE=>'X', CLK=>'X', LSR=>'X', OFX1=>open, 
                F1=>open, Q1=>open, OFX0=>n14105, F0=>open, Q0=>open);
    i10889_SLICE_501I: SLOGICB
      generic map (M0MUX=>"SIG", M1MUX=>"SIG", LUT0_INITVAL=>X"CACA", 
                   LUT1_INITVAL=>X"D8D8")
      port map (M1=>wb_adr_o_3, FXA=>n14105, FXB=>n14103, A1=>wb_adr_o_2, 
                B1=>n2865, C1=>n2841, D1=>'X', DI1=>'X', DI0=>'X', A0=>n2829, 
                B0=>n2853, C0=>wb_adr_o_2, D0=>'X', M0=>wb_adr_o_1, CE=>'X', 
                CLK=>'X', LSR=>'X', OFX1=>n14106, F1=>open, Q1=>open, 
                OFX0=>n14103, F0=>open, Q0=>open);
    i10470_SLICE_502I: SLOGICB
      generic map (M0MUX=>"SIG", LUT0_INITVAL=>X"CACA", LUT1_INITVAL=>X"E4E4")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>wb_adr_o_0, B1=>reg2_1, 
                C1=>second_pll_lock, D1=>'X', DI1=>'X', DI0=>'X', A0=>reg0_1, 
                B0=>reg1_1, C0=>wb_adr_o_0, D0=>'X', M0=>wb_adr_o_1, CE=>'X', 
                CLK=>'X', LSR=>'X', OFX1=>open, F1=>open, Q1=>open, 
                OFX0=>n13464, F0=>open, Q0=>open);
    i10477_SLICE_503I: SLOGICB
      generic map (M0MUX=>"SIG", LUT0_INITVAL=>X"CACA", LUT1_INITVAL=>X"4444")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>wb_adr_o_0, B1=>reg2_2, 
                C1=>'X', D1=>'X', DI1=>'X', DI0=>'X', A0=>reg0_2, B0=>reg1_2, 
                C0=>wb_adr_o_0, D0=>'X', M0=>wb_adr_o_1, CE=>'X', CLK=>'X', 
                LSR=>'X', OFX1=>open, F1=>open, Q1=>open, OFX0=>n13471, 
                F0=>open, Q0=>open);
    i10881_SLICE_504I: SLOGICB
      generic map (M0MUX=>"SIG", LUT0_INITVAL=>X"CA0A", LUT1_INITVAL=>X"5140")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>wb_adr_o_0, B1=>wb_adr_o_2, 
                C1=>ufl_p8_sel_7, D1=>reg2_7, DI1=>'X', DI0=>'X', A0=>n14058, 
                B0=>wb_adr_o_0, C0=>wb_adr_o_2, D0=>ufl_p7_sel_7, 
                M0=>wb_adr_o_1, CE=>'X', CLK=>'X', LSR=>'X', OFX1=>open, 
                F1=>open, Q1=>open, OFX0=>n14092, F0=>open, Q0=>open);
    i10396_SLICE_505I: SLOGICB
      generic map (M0MUX=>"SIG", LUT0_INITVAL=>X"CACA", LUT1_INITVAL=>X"E4E4")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>wb_adr_o_0, 
                B1=>tx_lvds_test_pattern_16, C1=>tx_lvds_test_pattern_8, 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>spi_test_pattern_enable_0, 
                B0=>tx_lvds_test_pattern_24, C0=>wb_adr_o_0, D0=>'X', 
                M0=>wb_adr_o_1, CE=>'X', CLK=>'X', LSR=>'X', OFX1=>open, 
                F1=>open, Q1=>open, OFX0=>n13388, F0=>open, Q0=>open);
    i10471_SLICE_506I: SLOGICB
      generic map (M0MUX=>"SIG", M1MUX=>"SIG", LUT0_INITVAL=>X"CACA", 
                   LUT1_INITVAL=>X"E4E4")
      port map (M1=>wb_adr_o_2, FXA=>n13464, FXB=>n13465, A1=>wb_adr_o_0, 
                B1=>ufl_p8_sel_1, C1=>wifi_rx_invert, D1=>'X', DI1=>'X', 
                DI0=>'X', A0=>led_rst, B0=>ufl_p7_sel_1, C0=>wb_adr_o_0, 
                D0=>'X', M0=>wb_adr_o_1, CE=>'X', CLK=>'X', LSR=>'X', 
                OFX1=>n13468, F1=>open, Q1=>open, OFX0=>n13465, F0=>open, 
                Q0=>open);
    i10879_SLICE_507I: SLOGICB
      generic map (M0MUX=>"SIG", M1MUX=>"SIG", LUT0_INITVAL=>X"CACA", 
                   LUT1_INITVAL=>X"D8D8")
      port map (M1=>wb_adr_o_3, FXA=>n14092, FXB=>n14090, A1=>wb_adr_o_2, 
                B1=>n2864, C1=>n2840, D1=>'X', DI1=>'X', DI0=>'X', A0=>n2828, 
                B0=>n2852, C0=>wb_adr_o_2, D0=>'X', M0=>wb_adr_o_1, CE=>'X', 
                CLK=>'X', LSR=>'X', OFX1=>n14093, F1=>open, Q1=>open, 
                OFX0=>n14090, F0=>open, Q0=>open);
    i10499_SLICE_508I: SLOGICB
      generic map (M0MUX=>"SIG", LUT0_INITVAL=>X"CACA", LUT1_INITVAL=>X"E4E4")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>wb_adr_o_0, B1=>reg2_0, 
                C1=>pll_lock, D1=>'X', DI1=>'X', DI0=>'X', A0=>reg0_0, 
                B0=>reg1_0, C0=>wb_adr_o_0, D0=>'X', M0=>wb_adr_o_1, CE=>'X', 
                CLK=>'X', LSR=>'X', OFX1=>open, F1=>open, Q1=>open, 
                OFX0=>n13493, F0=>open, Q0=>open);
    i10500_SLICE_509I: SLOGICB
      generic map (M0MUX=>"SIG", M1MUX=>"SIG", LUT0_INITVAL=>X"CACA", 
                   LUT1_INITVAL=>X"E4E4")
      port map (M1=>wb_adr_o_2, FXA=>n13493, FXB=>n13494, A1=>wb_adr_o_0, 
                B1=>ufl_p8_sel_0, C1=>subg_rx_invert, D1=>'X', DI1=>'X', 
                DI0=>'X', A0=>internal_rst, B0=>ufl_p7_sel_0, C0=>wb_adr_o_0, 
                D0=>'X', M0=>wb_adr_o_1, CE=>'X', CLK=>'X', LSR=>'X', 
                OFX1=>n13497, F1=>open, Q1=>open, OFX0=>n13494, F0=>open, 
                Q0=>open);
    i10501_SLICE_510I: SLOGICB
      generic map (M0MUX=>"SIG", M1MUX=>"SIG", LUT0_INITVAL=>X"CACA", 
                   LUT1_INITVAL=>X"E4E4")
      port map (M1=>wb_adr_o_3, FXA=>n13497, FXB=>n13498, A1=>wb_adr_o_0, 
                B1=>spi2_test_pattern_8, C1=>spi2_test_pattern_0, D1=>'X', 
                DI1=>'X', DI0=>'X', A0=>spi1_test_pattern_8, 
                B0=>spi1_test_pattern_0, C0=>wb_adr_o_0, D0=>'X', 
                M0=>wb_adr_o_1, CE=>'X', CLK=>'X', LSR=>'X', OFX1=>n13499, 
                F1=>open, Q1=>open, OFX0=>n13495, F0=>open, Q0=>open);
    i10502_SLICE_511I: SLOGICB
      generic map (M0MUX=>"SIG", M1MUX=>"SIG", LUT0_INITVAL=>X"CACA", 
                   LUT1_INITVAL=>X"E4E4")
      port map (M1=>wb_adr_o_2, FXA=>n13495, FXB=>n13496, A1=>wb_adr_o_0, 
                B1=>spi4_test_pattern_8, C1=>spi4_test_pattern_0, D1=>'X', 
                DI1=>'X', DI0=>'X', A0=>spi3_test_pattern_8, 
                B0=>spi3_test_pattern_0, C0=>wb_adr_o_0, D0=>'X', 
                M0=>wb_adr_o_1, CE=>'X', CLK=>'X', LSR=>'X', OFX1=>n13498, 
                F1=>open, Q1=>open, OFX0=>n13496, F0=>open, Q0=>open);
    i11224_SLICE_512I: SLOGICB
      generic map (M0MUX=>"SIG", LUT0_INITVAL=>X"CACA", LUT1_INITVAL=>X"E4E4")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>wb_adr_o_2, B1=>n13480, 
                C1=>n13481, D1=>'X', DI1=>'X', DI0=>'X', A0=>n14912, 
                B0=>n13479, C0=>wb_adr_o_2, D0=>'X', M0=>wb_adr_o_3, CE=>'X', 
                CLK=>'X', LSR=>'X', OFX1=>open, F1=>open, Q1=>open, 
                OFX0=>n14914, F0=>open, Q0=>open);
    i10472_SLICE_513I: SLOGICB
      generic map (M0MUX=>"SIG", M1MUX=>"SIG", LUT0_INITVAL=>X"CACA", 
                   LUT1_INITVAL=>X"E4E4")
      port map (M1=>wb_adr_o_3, FXA=>n13468, FXB=>n13469, A1=>wb_adr_o_0, 
                B1=>spi2_test_pattern_9, C1=>spi2_test_pattern_1, D1=>'X', 
                DI1=>'X', DI0=>'X', A0=>spi1_test_pattern_9, 
                B0=>spi1_test_pattern_1, C0=>wb_adr_o_0, D0=>'X', 
                M0=>wb_adr_o_1, CE=>'X', CLK=>'X', LSR=>'X', OFX1=>n13470, 
                F1=>open, Q1=>open, OFX0=>n13466, F0=>open, Q0=>open);
    i11222_SLICE_514I: SLOGICB
      generic map (M0MUX=>"SIG", M1MUX=>"SIG", LUT0_INITVAL=>X"E2E2", 
                   LUT1_INITVAL=>X"1010")
      port map (M1=>wb_adr_o_4, FXA=>n14914, FXB=>n14910, A1=>wb_adr_o_1, 
                B1=>wb_adr_o_0, C1=>tx_lvds_test_pattern_3, D1=>'X', DI1=>'X', 
                DI0=>'X', A0=>n13397, B0=>wb_adr_o_1, C0=>n13398, D0=>'X', 
                M0=>wb_adr_o_2, CE=>'X', CLK=>'X', LSR=>'X', OFX1=>n14915, 
                F1=>open, Q1=>open, OFX0=>n14910, F0=>open, Q0=>open);
    i10473_SLICE_515I: SLOGICB
      generic map (M0MUX=>"SIG", M1MUX=>"SIG", LUT0_INITVAL=>X"CACA", 
                   LUT1_INITVAL=>X"E4E4")
      port map (M1=>wb_adr_o_2, FXA=>n13466, FXB=>n13467, A1=>wb_adr_o_0, 
                B1=>spi4_test_pattern_9, C1=>spi4_test_pattern_1, D1=>'X', 
                DI1=>'X', DI0=>'X', A0=>spi3_test_pattern_9, 
                B0=>spi3_test_pattern_1, C0=>wb_adr_o_0, D0=>'X', 
                M0=>wb_adr_o_1, CE=>'X', CLK=>'X', LSR=>'X', OFX1=>n13469, 
                F1=>open, Q1=>open, OFX0=>n13467, F0=>open, Q0=>open);
    i10398_SLICE_516I: SLOGICB
      generic map (M0MUX=>"SIG", M1MUX=>"SIG", LUT0_INITVAL=>X"CACA", 
                   LUT1_INITVAL=>X"E4E4")
      port map (M1=>n13431, FXA=>n13388, FXB=>n13390, A1=>wb_adr_o_4, 
                B1=>n13499, C1=>subg_delay_loadn, D1=>'X', DI1=>'X', DI0=>'X', 
                A0=>tx_lvds_test_pattern_0, B0=>tx_lvds_test_pattern_enable, 
                C0=>wb_adr_o_0, D0=>'X', M0=>n13411, CE=>'X', CLK=>'X', 
                LSR=>'X', OFX1=>n3020, F1=>open, Q1=>open, OFX0=>n13390, 
                F0=>open, Q0=>open);
    i10996_SLICE_517I: SLOGICB
      generic map (M0MUX=>"SIG", LUT0_INITVAL=>X"0808", LUT1_INITVAL=>X"0858")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>wb_adr_o_0, 
                B1=>tx_lvds_test_pattern_28, C1=>wb_adr_o_2, D1=>wb_adr_o_1, 
                DI1=>'X', DI0=>'X', A0=>wb_adr_o_0, 
                B0=>tx_lvds_test_pattern_28, C0=>wb_adr_o_2, D0=>'X', 
                M0=>tx_lvds_test_pattern_4, CE=>'X', CLK=>'X', LSR=>'X', 
                OFX1=>open, F1=>open, Q1=>open, OFX0=>n14409, F0=>open, 
                Q0=>open);
    mux_859_i8_SLICE_518I: SLOGICB
      generic map (M0MUX=>"SIG", LUT0_INITVAL=>X"CACA", LUT1_INITVAL=>X"E4E4")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>wb_adr_o_4, B1=>n14093, 
                C1=>n14400, D1=>'X', DI1=>'X', DI0=>'X', 
                A0=>tx_lvds_test_pattern_23, B0=>tx_lvds_test_pattern_15, 
                C0=>wb_adr_o_0, D0=>'X', M0=>n13453, CE=>'X', CLK=>'X', 
                LSR=>'X', OFX1=>open, F1=>open, Q1=>open, OFX0=>n3013, 
                F0=>open, Q0=>open);
    mux_859_i7_SLICE_519I: SLOGICB
      generic map (M0MUX=>"SIG", LUT0_INITVAL=>X"CACA", LUT1_INITVAL=>X"E4E4")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>wb_adr_o_4, B1=>n14106, 
                C1=>n14397, D1=>'X', DI1=>'X', DI0=>'X', 
                A0=>tx_lvds_test_pattern_22, B0=>tx_lvds_test_pattern_14, 
                C0=>wb_adr_o_0, D0=>'X', M0=>n13453, CE=>'X', CLK=>'X', 
                LSR=>'X', OFX1=>open, F1=>open, Q1=>open, OFX0=>n3014, 
                F0=>open, Q0=>open);
    i10992_SLICE_520I: SLOGICB
      generic map (M0MUX=>"SIG", LUT0_INITVAL=>X"0808", LUT1_INITVAL=>X"0858")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>wb_adr_o_0, 
                B1=>tx_lvds_test_pattern_29, C1=>wb_adr_o_2, D1=>wb_adr_o_1, 
                DI1=>'X', DI0=>'X', A0=>wb_adr_o_0, 
                B0=>tx_lvds_test_pattern_29, C0=>wb_adr_o_2, D0=>'X', 
                M0=>tx_lvds_test_pattern_5, CE=>'X', CLK=>'X', LSR=>'X', 
                OFX1=>open, F1=>open, Q1=>open, OFX0=>n14403, F0=>open, 
                Q0=>open);
    mux_859_i6_SLICE_521I: SLOGICB
      generic map (M0MUX=>"SIG", LUT0_INITVAL=>X"CACA", LUT1_INITVAL=>X"E4E4")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>wb_adr_o_4, B1=>n14115, 
                C1=>n14403, D1=>'X', DI1=>'X', DI0=>'X', 
                A0=>tx_lvds_test_pattern_21, B0=>tx_lvds_test_pattern_13, 
                C0=>wb_adr_o_0, D0=>'X', M0=>n13453, CE=>'X', CLK=>'X', 
                LSR=>'X', OFX1=>open, F1=>open, Q1=>open, OFX0=>n3015, 
                F0=>open, Q0=>open);
    i10990_SLICE_522I: SLOGICB
      generic map (M0MUX=>"SIG", LUT0_INITVAL=>X"0808", LUT1_INITVAL=>X"0858")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>wb_adr_o_0, 
                B1=>tx_lvds_test_pattern_31, C1=>wb_adr_o_2, D1=>wb_adr_o_1, 
                DI1=>'X', DI0=>'X', A0=>wb_adr_o_0, 
                B0=>tx_lvds_test_pattern_31, C0=>wb_adr_o_2, D0=>'X', 
                M0=>tx_lvds_test_pattern_7, CE=>'X', CLK=>'X', LSR=>'X', 
                OFX1=>open, F1=>open, Q1=>open, OFX0=>n14400, F0=>open, 
                Q0=>open);
    i2c_slave_i2c_slave_inst_i38_SLICE_523I: SLOGICB
      generic map (M0MUX=>"SIG", LUT0_INITVAL=>X"2000", LUT1_INITVAL=>X"EEE4")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>state_reg_0, 
                B1=>i2c_slave_i2c_slave_inst_n14374, 
                C1=>i2c_slave_i2c_slave_inst_n14368, 
                D1=>i2c_slave_i2c_slave_inst_n14292, DI1=>'X', DI0=>'X', 
                A0=>i2c_slave_i2c_slave_inst_scl_i_reg, 
                B0=>i2c_slave_i2c_slave_inst_last_scl_i_reg, C0=>state_reg_0, 
                D0=>i2c_slave_i2c_slave_inst_n14370, 
                M0=>i2c_slave_i2c_slave_inst_state_reg_2, CE=>'X', CLK=>'X', 
                LSR=>'X', OFX1=>open, F1=>open, Q1=>open, 
                OFX0=>i2c_slave_i2c_slave_inst_n22, F0=>open, Q0=>open);
    i2c_slave_i2c_slave_inst_i10815_SLICE_524I: SLOGICB
      generic map (M0MUX=>"SIG", LUT0_INITVAL=>X"4040", LUT1_INITVAL=>X"4088")
      port map (M1=>'X', FXA=>'X', FXB=>'X', 
                A1=>i2c_slave_i2c_slave_inst_state_reg_1, 
                B1=>i2c_slave_i2c_slave_inst_n14318, 
                C1=>i2c_slave_i2c_slave_inst_data_valid_reg, 
                D1=>i2c_slave_i2c_slave_inst_state_reg_2, DI1=>'X', DI0=>'X', 
                A0=>i2c_slave_i2c_slave_inst_scl_i_reg, 
                B0=>i2c_slave_i2c_slave_inst_last_scl_i_reg, 
                C0=>i2c_slave_i2c_slave_inst_state_reg_1, D0=>'X', 
                M0=>state_reg_0, CE=>'X', CLK=>'X', LSR=>'X', OFX1=>open, 
                F1=>open, Q1=>open, OFX0=>i2c_slave_i2c_slave_inst_n13967, 
                F0=>open, Q0=>open);
    i2c_slave_i2c_slave_inst_mux_865_i1_SLICE_525I: SLOGICB
      generic map (M0MUX=>"SIG", LUT0_INITVAL=>X"2000", LUT1_INITVAL=>X"7000")
      port map (M1=>'X', FXA=>'X', FXB=>'X', 
                A1=>i2c_slave_i2c_slave_inst_n14318, 
                B1=>i2c_slave_i2c_slave_inst_data_valid_reg, 
                C1=>i2c_slave_i2c_slave_inst_n14368, 
                D1=>i2c_slave_data_in_reg_0, DI1=>'X', DI0=>'X', 
                A0=>i2c_slave_i2c_slave_inst_scl_i_reg, 
                B0=>i2c_slave_i2c_slave_inst_last_scl_i_reg, C0=>sda_i_reg, 
                D0=>i2c_slave_i2c_slave_inst_n14370, 
                M0=>i2c_slave_i2c_slave_inst_state_reg_2, CE=>'X', CLK=>'X', 
                LSR=>'X', OFX1=>open, F1=>open, Q1=>open, 
                OFX0=>i2c_slave_i2c_slave_inst_n3050, F0=>open, Q0=>open);
    i2c_slave_i2c_slave_inst_mux_964_Mux_0_i6_SLICE_526I: SLOGICB
      generic map (M0MUX=>"SIG", LUT0_INITVAL=>X"0700", LUT1_INITVAL=>X"0008")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>state_reg_0, 
                B1=>i2c_slave_i2c_slave_inst_scl_i_reg, 
                C1=>i2c_slave_i2c_slave_inst_last_scl_i_reg, D1=>sda_i_reg, 
                DI1=>'X', DI0=>'X', A0=>i2c_slave_data_in_ready, 
                B0=>i2c_slave_data_in_valid_reg, 
                C0=>i2c_slave_i2c_slave_inst_data_valid_reg, D0=>state_reg_0, 
                M0=>i2c_slave_i2c_slave_inst_state_reg_1, CE=>'X', CLK=>'X', 
                LSR=>'X', OFX1=>open, F1=>open, Q1=>open, 
                OFX0=>i2c_slave_i2c_slave_inst_n6, F0=>open, Q0=>open);
    i2c_slave_i2c_slave_inst_mux_1078_i1_SLICE_527I: SLOGICB
      generic map (M0MUX=>"SIG", LUT0_INITVAL=>X"CAC0", LUT1_INITVAL=>X"7F70")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>sda_i_reg, 
                B1=>i2c_slave_i2c_slave_inst_n14374, 
                C1=>i2c_slave_i2c_slave_inst_state_reg_2, 
                D1=>i2c_slave_i2c_slave_inst_n8344, DI1=>'X', DI0=>'X', 
                A0=>i2c_slave_i2c_slave_inst_n11865, 
                B0=>i2c_slave_i2c_slave_inst_n14367, 
                C0=>i2c_slave_i2c_slave_inst_state_reg_1, D0=>state_reg_0, 
                M0=>i2c_slave_i2c_slave_inst_n6_adj_1177, CE=>'X', CLK=>'X', 
                LSR=>'X', OFX1=>open, F1=>open, Q1=>open, 
                OFX0=>i2c_slave_i2c_slave_inst_n3800, F0=>open, Q0=>open);
    i2c_slave_i2c_slave_inst_i38_adj_118_SLICE_528I: SLOGICB
      generic map (M0MUX=>"SIG", LUT0_INITVAL=>X"DCCC", LUT1_INITVAL=>X"2000")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>state_reg_0, 
                B1=>i2c_slave_i2c_slave_inst_state_reg_1, 
                C1=>i2c_slave_data_in_valid_reg, D1=>i2c_slave_data_in_ready, 
                DI1=>'X', DI0=>'X', A0=>state_reg_0, 
                B0=>i2c_slave_i2c_slave_inst_n8188, C0=>mode_read_reg, 
                D0=>i2c_slave_i2c_slave_inst_n14367, 
                M0=>i2c_slave_i2c_slave_inst_state_reg_2, CE=>'X', CLK=>'X', 
                LSR=>'X', OFX1=>open, F1=>open, Q1=>open, 
                OFX0=>i2c_slave_i2c_slave_inst_n32, F0=>open, Q0=>open);
    i2c_slave_i2c_slave_inst_i10994_SLICE_529I: SLOGICB
      generic map (M0MUX=>"SIG", LUT0_INITVAL=>X"0004", LUT1_INITVAL=>X"FDF0")
      port map (M1=>'X', FXA=>'X', FXB=>'X', 
                A1=>i2c_slave_i2c_slave_inst_last_scl_i_reg, 
                B1=>i2c_slave_i2c_slave_inst_scl_i_reg, 
                C1=>i2c_slave_i2c_slave_inst_n14372, D1=>fpga_scl_out, 
                DI1=>'X', DI0=>'X', 
                A0=>i2c_slave_i2c_slave_inst_last_scl_i_reg, 
                B0=>i2c_slave_i2c_slave_inst_scl_i_reg, 
                C0=>i2c_slave_i2c_slave_inst_n11479, 
                D0=>i2c_slave_i2c_slave_inst_n14370, 
                M0=>i2c_slave_i2c_slave_inst_state_reg_1, CE=>'X', CLK=>'X', 
                LSR=>'X', OFX1=>open, F1=>open, Q1=>open, 
                OFX0=>i2c_slave_i2c_slave_inst_n14406, F0=>open, Q0=>open);
    mux_859_i5_SLICE_530I: SLOGICB
      generic map (M0MUX=>"SIG", LUT0_INITVAL=>X"CACA", LUT1_INITVAL=>X"E4E4")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>wb_adr_o_4, B1=>n14121, 
                C1=>n14409, D1=>'X', DI1=>'X', DI0=>'X', 
                A0=>tx_lvds_test_pattern_20, B0=>tx_lvds_test_pattern_12, 
                C0=>wb_adr_o_0, D0=>'X', M0=>n13453, CE=>'X', CLK=>'X', 
                LSR=>'X', OFX1=>open, F1=>open, Q1=>open, OFX0=>n3016, 
                F0=>open, Q0=>open);
    i10988_SLICE_531I: SLOGICB
      generic map (M0MUX=>"SIG", LUT0_INITVAL=>X"0808", LUT1_INITVAL=>X"0858")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>wb_adr_o_0, 
                B1=>tx_lvds_test_pattern_30, C1=>wb_adr_o_2, D1=>wb_adr_o_1, 
                DI1=>'X', DI0=>'X', A0=>wb_adr_o_0, 
                B0=>tx_lvds_test_pattern_30, C0=>wb_adr_o_2, D0=>'X', 
                M0=>tx_lvds_test_pattern_6, CE=>'X', CLK=>'X', LSR=>'X', 
                OFX1=>open, F1=>open, Q1=>open, OFX0=>n14397, F0=>open, 
                Q0=>open);
    lvds_rx_24_inst_i10986_SLICE_532I: SLOGICB
      generic map (M0MUX=>"SIG", LUT0_INITVAL=>X"FFFE", LUT1_INITVAL=>X"FEFE")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>lvds_rx_24_inst_sr_8, 
                B1=>lvds_rx_24_inst_sr_6, C1=>lvds_rx_24_inst_sr_26, D1=>'X', 
                DI1=>'X', DI0=>'X', A0=>lvds_rx_24_inst_sr_28, 
                B0=>lvds_rx_24_inst_sr_8, C0=>lvds_rx_24_inst_sr_14, 
                D0=>lvds_rx_24_inst_sr_10, 
                M0=>lvds_rx_24_inst_r_candidate_offset, CE=>'X', CLK=>'X', 
                LSR=>'X', OFX1=>open, F1=>open, Q1=>open, 
                OFX0=>lvds_rx_24_inst_n14394, F0=>open, Q0=>open);
    lvds_rx_24_inst_i22_SLICE_533I: SLOGICB
      generic map (M0MUX=>"SIG", LUT0_INITVAL=>X"1000", LUT1_INITVAL=>X"4444")
      port map (M1=>'X', FXA=>'X', FXB=>'X', 
                A1=>lvds_rx_24_inst_r_candidate_offset, 
                B1=>lvds_rx_24_inst_n9573, C1=>'X', D1=>'X', DI1=>'X', 
                DI0=>'X', A0=>lvds_rx_24_inst_sr_0, B0=>lvds_rx_24_inst_sr_30, 
                C0=>lvds_rx_24_inst_n68, 
                D0=>lvds_rx_24_inst_r_candidate_offset, 
                M0=>lvds_rx_24_inst_sr_15, CE=>'X', CLK=>'X', LSR=>'X', 
                OFX1=>open, F1=>open, Q1=>open, OFX0=>lvds_rx_24_inst_n11, 
                F0=>open, Q0=>open);
    lvds_rx_24_inst_i10984_SLICE_534I: SLOGICB
      generic map (M0MUX=>"SIG", LUT0_INITVAL=>X"FEFE", LUT1_INITVAL=>X"FFFE")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>lvds_rx_24_inst_sr_16, 
                B1=>lvds_rx_24_inst_sr_0, C1=>lvds_rx_24_inst_sr_30, 
                D1=>lvds_rx_24_inst_sr_24, DI1=>'X', DI0=>'X', 
                A0=>lvds_rx_24_inst_sr_26, B0=>lvds_rx_24_inst_sr_22, 
                C0=>lvds_rx_24_inst_sr_16, D0=>'X', 
                M0=>lvds_rx_24_inst_r_candidate_offset, CE=>'X', CLK=>'X', 
                LSR=>'X', OFX1=>open, F1=>open, Q1=>open, 
                OFX0=>lvds_rx_24_inst_n14391, F0=>open, Q0=>open);
    SLICE_535I: SLOGICB
      generic map (LUT0_INITVAL=>X"30AA", LUT1_INITVAL=>X"CACA")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>reg0_3, B1=>reg1_3, 
                C1=>wb_adr_o_0, D1=>'X', DI1=>'X', DI0=>'X', A0=>n2769, 
                B0=>wb_adr_o_0, C0=>reg2_3, D0=>wb_adr_o_1, M0=>'X', CE=>'X', 
                CLK=>'X', LSR=>'X', OFX1=>open, F1=>n2769, Q1=>open, 
                OFX0=>open, F0=>n14912, Q0=>open);
    lvds_rx_09_inst_SLICE_536I: SLOGICB
      generic map (LUT0_INITVAL=>X"1311", LUT1_INITVAL=>X"A2A2")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>r_state_1, B1=>r_state_0, 
                C1=>real_candidate, D1=>'X', DI1=>'X', DI0=>'X', A0=>r_state_0, 
                B0=>lvds_rx_09_inst_n14, C0=>n14315, 
                D0=>lvds_rx_09_inst_n11728, M0=>'X', CE=>'X', CLK=>'X', 
                LSR=>'X', OFX1=>open, F1=>lvds_rx_09_inst_n14, Q1=>open, 
                OFX0=>open, F0=>lvds_rx_09_inst_sdr_rxclk_c_enable_86, 
                Q0=>open);
    i2c_slave_i2c_slave_inst_SLICE_537I: SLOGICB
      generic map (LUT0_INITVAL=>X"F011", LUT1_INITVAL=>X"2020")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>state_reg_0, B1=>sda_i_reg, 
                C1=>i2c_slave_i2c_slave_inst_state_reg_2, D1=>'X', DI1=>'X', 
                DI0=>'X', A0=>state_reg_0, B0=>i2c_slave_i2c_slave_inst_n14370, 
                C0=>i2c_slave_i2c_slave_inst_n11585, 
                D0=>i2c_slave_i2c_slave_inst_state_reg_1, M0=>'X', CE=>'X', 
                CLK=>'X', LSR=>'X', OFX1=>open, 
                F1=>i2c_slave_i2c_slave_inst_n11585, Q1=>open, OFX0=>open, 
                F0=>i2c_slave_i2c_slave_inst_n14916, Q0=>open);
    i2c_slave_i2c_slave_inst_SLICE_538I: SLOGICB
      generic map (LUT0_INITVAL=>X"40F0", LUT1_INITVAL=>X"F535")
      port map (M1=>'X', FXA=>'X', FXB=>'X', 
                A1=>i2c_slave_i2c_slave_inst_n14292, 
                B1=>i2c_slave_i2c_slave_inst_scl_i_reg, 
                C1=>i2c_slave_i2c_slave_inst_state_reg_1, 
                D1=>i2c_slave_i2c_slave_inst_n12470, DI1=>'X', DI0=>'X', 
                A0=>i2c_slave_i2c_slave_inst_scl_i_reg, 
                B0=>i2c_slave_i2c_slave_inst_last_scl_i_reg, 
                C0=>i2c_slave_i2c_slave_inst_data_valid_reg, D0=>fpga_scl_out, 
                M0=>'X', CE=>'X', CLK=>'X', LSR=>'X', OFX1=>open, 
                F1=>i2c_slave_i2c_slave_inst_n4085, Q1=>open, OFX0=>open, 
                F0=>i2c_slave_i2c_slave_inst_n14292, Q0=>open);
    i2c_slave_i2c_slave_inst_SLICE_539I: SLOGICB
      generic map (LUT0_INITVAL=>X"DBDB", LUT1_INITVAL=>X"CACC")
      port map (M1=>'X', FXA=>'X', FXB=>'X', 
                A1=>i2c_slave_i2c_slave_inst_n4085, 
                B1=>i2c_slave_i2c_slave_inst_n4095, 
                C1=>i2c_slave_i2c_slave_inst_n3102, D1=>state_reg_0, DI1=>'X', 
                DI0=>'X', A0=>i2c_slave_i2c_slave_inst_scl_i_reg, 
                B0=>i2c_slave_i2c_slave_inst_last_scl_i_reg, 
                C0=>i2c_slave_i2c_slave_inst_n3102, D0=>'X', M0=>'X', CE=>'X', 
                CLK=>'X', LSR=>'X', OFX1=>open, 
                F1=>i2c_slave_i2c_slave_inst_n4108, Q1=>open, OFX0=>open, 
                F0=>i2c_slave_i2c_slave_inst_n4095, Q0=>open);
    lvds_rx_24_inst_SLICE_540I: SLOGICB
      generic map (LUT0_INITVAL=>X"EFEE", LUT1_INITVAL=>X"FFEC")
      port map (M1=>'X', FXA=>'X', FXB=>'X', 
                A1=>lvds_rx_24_inst_r_candidate_offset, 
                B1=>lvds_rx_24_inst_n12360, C1=>lvds_rx_24_inst_sr_10, 
                D1=>lvds_rx_24_inst_n12358, DI1=>'X', DI0=>'X', 
                A0=>lvds_rx_24_inst_n12364, B0=>lvds_rx_24_inst_n42, 
                C0=>lvds_rx_24_inst_r_candidate_offset, 
                D0=>lvds_rx_24_inst_sr_30, M0=>'X', CE=>'X', CLK=>'X', 
                LSR=>'X', OFX1=>open, F1=>lvds_rx_24_inst_n12364, Q1=>open, 
                OFX0=>open, F0=>lvds_rx_24_inst_n12434, Q0=>open);
    lvds_rx_24_inst_SLICE_541I: SLOGICB
      generic map (LUT0_INITVAL=>X"FCEE", LUT1_INITVAL=>X"CACA")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>lvds_rx_24_inst_sr_4, 
                B1=>lvds_rx_24_inst_sr_2, 
                C1=>lvds_rx_24_inst_r_candidate_offset, D1=>'X', DI1=>'X', 
                DI0=>'X', A0=>lvds_rx_24_inst_sr_24, B0=>lvds_rx_24_inst_n5175, 
                C0=>lvds_rx_24_inst_sr_22, 
                D0=>lvds_rx_24_inst_r_candidate_offset, M0=>'X', CE=>'X', 
                CLK=>'X', LSR=>'X', OFX1=>open, F1=>lvds_rx_24_inst_n5175, 
                Q1=>open, OFX0=>open, F0=>lvds_rx_24_inst_n12446, Q0=>open);
    my_led_SLICE_542I: SLOGICB
      generic map (LUT0_INITVAL=>X"EEEE", LUT1_INITVAL=>X"FFFB")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>my_led_n12912, 
                B1=>my_led_counter_13, C1=>my_led_n12936, D1=>my_led_n12924, 
                DI1=>'X', DI0=>'X', A0=>my_led_counter_21, 
                B0=>my_led_counter_8, C0=>'X', D0=>'X', M0=>'X', CE=>'X', 
                CLK=>'X', LSR=>'X', OFX1=>open, F1=>my_led_n12946, Q1=>open, 
                OFX0=>open, F0=>my_led_n12912, Q0=>open);
    my_led_SLICE_543I: SLOGICB
      generic map (LUT0_INITVAL=>X"8888", LUT1_INITVAL=>X"FFFD")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>my_led_n13276, 
                B1=>my_led_n12928, C1=>my_led_n12920, D1=>my_led_n12918, 
                DI1=>'X', DI0=>'X', A0=>my_led_counter_9, 
                B0=>my_led_counter_12, C0=>'X', D0=>'X', M0=>'X', CE=>'X', 
                CLK=>'X', LSR=>'X', OFX1=>open, F1=>my_led_n12948, Q1=>open, 
                OFX0=>open, F0=>my_led_n13276, Q0=>open);
    my_led_SLICE_544I: SLOGICB
      generic map (LUT0_INITVAL=>X"EEEE", LUT1_INITVAL=>X"FFFD")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>my_led_counter_11, 
                B1=>my_led_counter_6, C1=>my_led_n12922, D1=>my_led_counter_3, 
                DI1=>'X', DI0=>'X', A0=>my_led_counter_24, 
                B0=>my_led_counter_20, C0=>'X', D0=>'X', M0=>'X', CE=>'X', 
                CLK=>'X', LSR=>'X', OFX1=>open, F1=>my_led_n12942, Q1=>open, 
                OFX0=>open, F0=>my_led_n12922, Q0=>open);
    SLICE_545I: SLOGICB
      generic map (M0MUX=>"SIG", CLKMUX=>"SIG", CEMUX=>"SIG", GSR=>"DISABLED", 
                   SRMODE=>"ASYNC", LUT0_INITVAL=>X"7777", 
                   LUT1_INITVAL=>X"0800", CHECK_M0=>TRUE, CHECK_CE=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>stm_fpga_spare5_c, 
                B1=>second_pll_lock, C1=>internal_rst, D1=>pll_lock, DI1=>'X', 
                DI0=>'X', A0=>n14366, B0=>tx_lvds_test_pattern_enable, C0=>'X', 
                D0=>'X', M0=>ufl_p7_sel_7_N_35_0, CE=>int_clk_out_enable_28, 
                CLK=>int_clk_out, LSR=>'X', OFX1=>open, F1=>n14366, Q1=>open, 
                OFX0=>open, F0=>sdr_txdata_N_388, 
                Q0=>tx_lvds_test_pattern_enable);
    SLICE_546I: SLOGICB
      generic map (LUT0_INITVAL=>X"8888", LUT1_INITVAL=>X"0080")
      port map (M1=>'X', FXA=>'X', FXB=>'X', 
                A1=>lvds_rx_09_inst_candidate_sr_14, 
                B1=>lvds_rx_09_inst_n14362, C1=>n14363, D1=>sr_16, DI1=>'X', 
                DI0=>'X', A0=>r_state_0, B0=>r_state_1, C0=>'X', D0=>'X', 
                M0=>'X', CE=>'X', CLK=>'X', LSR=>'X', OFX1=>open, 
                F1=>lvds_rx_09_inst_n12834, Q1=>open, OFX0=>open, F0=>n14363, 
                Q0=>open);
    SLICE_547I: SLOGICB
      generic map (LUT0_INITVAL=>X"F7F7", LUT1_INITVAL=>X"FFDF")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>lvds_rx_09_inst_n13290, 
                B1=>lvds_rx_09_inst_n10, C1=>sample_count_1, 
                D1=>lvds_rx_09_inst_sample_count_5, DI1=>'X', DI0=>'X', 
                A0=>r_state_0, B0=>r_state_1, C0=>n14315, D0=>'X', M0=>'X', 
                CE=>'X', CLK=>'X', LSR=>'X', OFX1=>open, F1=>n14315, Q1=>open, 
                OFX0=>open, F0=>n11591, Q0=>open);
    SLICE_548I: SLOGICB
      generic map (LUT0_INITVAL=>X"0004", LUT1_INITVAL=>X"5D55")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>stm_fpga_spare5_c, B1=>n12964, 
                C1=>n11958, D1=>n12966, DI1=>'X', DI0=>'X', A0=>n14354, 
                B0=>n12954, C0=>n9012, D0=>wb_adr_o_8, M0=>'X', CE=>'X', 
                CLK=>'X', LSR=>'X', OFX1=>open, F1=>int_clk_out_enable_212, 
                Q1=>open, OFX0=>open, F0=>n12966, Q0=>open);
    SLICE_549I: SLOGICB
      generic map (LUT0_INITVAL=>X"F2F2", LUT1_INITVAL=>X"FFFE")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>subg_i_spi_bit_counter_4, 
                B1=>subg_i_spi_n13132, C1=>subg_i_spi_n13130, 
                D1=>subg_i_spi_bit_counter_5, DI1=>'X', DI0=>'X', 
                A0=>stm_fpga_spare1_c, B0=>subg_i_empty, 
                C0=>shift_reg_15_N_1175, D0=>'X', M0=>'X', CE=>'X', CLK=>'X', 
                LSR=>'X', OFX1=>open, F1=>shift_reg_15_N_1175, Q1=>open, 
                OFX0=>open, F0=>internal_80MHz_enable_19, Q0=>open);
    SLICE_550I: SLOGICB
      generic map (LUT0_INITVAL=>X"BBBB", LUT1_INITVAL=>X"0040")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>n12618, B1=>n14330, 
                C1=>wb_adr_o_2, D1=>n14325, DI1=>'X', DI0=>'X', 
                A0=>int_clk_out_enable_91, B0=>stm_fpga_spare5_c, C0=>'X', 
                D0=>'X', M0=>'X', CE=>'X', CLK=>'X', LSR=>'X', OFX1=>open, 
                F1=>int_clk_out_enable_91, Q1=>open, OFX0=>open, 
                F0=>int_clk_out_enable_92, Q0=>open);
    SLICE_551I: SLOGICB
      generic map (LUT0_INITVAL=>X"8888", LUT1_INITVAL=>X"0400")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>wb_adr_o_2, 
                B1=>i2c_slave_n14386, C1=>n14354, D1=>n14351, DI1=>'X', 
                DI0=>'X', A0=>wb_stb_o, B0=>wb_we_o, C0=>'X', D0=>'X', M0=>'X', 
                CE=>'X', CLK=>'X', LSR=>'X', OFX1=>open, F1=>i2c_slave_n14301, 
                Q1=>open, OFX0=>open, F0=>n14351, Q0=>open);
    SLICE_552I: SLOGICB
      generic map (LUT0_INITVAL=>X"0008", LUT1_INITVAL=>X"10E0")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>wb_adr_o_0, B1=>wb_adr_o_1, 
                C1=>n14330, D1=>wb_adr_o_2, DI1=>'X', DI0=>'X', A0=>wb_stb_o, 
                B0=>wb_we_o, C0=>wb_adr_o_7, D0=>wb_adr_o_6, M0=>'X', CE=>'X', 
                CLK=>'X', LSR=>'X', OFX1=>open, F1=>i2c_slave_n14291, Q1=>open, 
                OFX0=>open, F0=>n14330, Q0=>open);
    SLICE_553I: SLOGICB
      generic map (LUT0_INITVAL=>X"080F", LUT1_INITVAL=>X"0020")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>n13180, B1=>n11958, 
                C1=>i2c_slave_n13182, D1=>n14354, DI1=>'X', DI0=>'X', 
                A0=>wb_stb_o, B0=>wb_we_o, C0=>n14352, D0=>stm_fpga_spare5_c, 
                M0=>'X', CE=>'X', CLK=>'X', LSR=>'X', OFX1=>open, 
                F1=>int_clk_out_enable_15, Q1=>open, OFX0=>open, F0=>n13180, 
                Q0=>open);
    SLICE_554I: SLOGICB
      generic map (LUT0_INITVAL=>X"FFFD", LUT1_INITVAL=>X"2000")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>tx_counter_2, B1=>n13234, 
                C1=>tx_counter_1, D1=>tx_counter_3, DI1=>'X', DI0=>'X', 
                A0=>tx_counter_0, B0=>tx_counter_5, C0=>n13230, 
                D0=>tx_counter_7, M0=>'X', CE=>'X', CLK=>'X', LSR=>'X', 
                OFX1=>open, F1=>n7334, Q1=>open, OFX0=>open, F0=>n13234, 
                Q0=>open);
    SLICE_555I: SLOGICB
      generic map (LUT0_INITVAL=>X"0705", LUT1_INITVAL=>X"1010")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>wb_adr_o_5, B1=>wb_adr_o_3, 
                C1=>wb_adr_o_4, D1=>'X', DI1=>'X', DI0=>'X', A0=>n11664, 
                B0=>n12168, C0=>n9012, D0=>n11601, M0=>'X', CE=>'X', CLK=>'X', 
                LSR=>'X', OFX1=>open, F1=>n11601, Q1=>open, OFX0=>open, 
                F0=>n12156, Q0=>open);
    SLICE_556I: SLOGICB
      generic map (LUT0_INITVAL=>X"EEEE", LUT1_INITVAL=>X"FFFE")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>i2c_slave_n14382, 
                B1=>i2c_slave_n14383, C1=>n14352, D1=>n11664, DI1=>'X', 
                DI0=>'X', A0=>wb_adr_o_4, B0=>wb_adr_o_5, C0=>'X', D0=>'X', 
                M0=>'X', CE=>'X', CLK=>'X', LSR=>'X', OFX1=>open, 
                F1=>i2c_slave_n13362, Q1=>open, OFX0=>open, F0=>n11664, 
                Q0=>open);
    SLICE_557I: SLOGICB
      generic map (LUT0_INITVAL=>X"1000", LUT1_INITVAL=>X"EEEE")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>i2c_slave_wb_adr_o_9, 
                B1=>i2c_slave_wb_adr_o_14, C1=>'X', D1=>'X', DI1=>'X', 
                DI0=>'X', A0=>wb_adr_o_4, B0=>n14352, C0=>wb_adr_o_1, 
                D0=>wb_adr_o_0, M0=>'X', CE=>'X', CLK=>'X', LSR=>'X', 
                OFX1=>open, F1=>n14352, Q1=>open, OFX0=>open, F0=>n12964, 
                Q0=>open);
    SLICE_558I: SLOGICB
      generic map (LUT0_INITVAL=>X"EEEE", LUT1_INITVAL=>X"1000")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>n14354, B1=>n9012, C1=>n13044, 
                D1=>n14351, DI1=>'X', DI0=>'X', A0=>wb_adr_o_7, B0=>wb_adr_o_6, 
                C0=>'X', D0=>'X', M0=>'X', CE=>'X', CLK=>'X', LSR=>'X', 
                OFX1=>open, F1=>i2c_slave_n13056, Q1=>open, OFX0=>open, 
                F0=>n9012, Q0=>open);
    SLICE_559I: SLOGICB
      generic map (LUT0_INITVAL=>X"2000", LUT1_INITVAL=>X"2222")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>wb_adr_o_1, B1=>wb_adr_o_0, 
                C1=>'X', D1=>'X', DI1=>'X', DI0=>'X', A0=>n13162, B0=>n11958, 
                C0=>n14384, D0=>n13180, M0=>'X', CE=>'X', CLK=>'X', LSR=>'X', 
                OFX1=>open, F1=>n14384, Q1=>open, OFX0=>open, 
                F0=>int_clk_out_enable_32, Q0=>open);
    SLICE_560I: SLOGICB
      generic map (LUT0_INITVAL=>X"0100", LUT1_INITVAL=>X"EEEE")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>wb_adr_o_5, B1=>wb_adr_o_3, 
                C1=>'X', D1=>'X', DI1=>'X', DI0=>'X', A0=>n14354, B0=>n14356, 
                C0=>wb_adr_o_6, D0=>n14345, M0=>'X', CE=>'X', CLK=>'X', 
                LSR=>'X', OFX1=>open, F1=>n14354, Q1=>open, OFX0=>open, 
                F0=>n13162, Q0=>open);
    SLICE_561I: SLOGICB
      generic map (LUT0_INITVAL=>X"1000", LUT1_INITVAL=>X"0008")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>n11601, B1=>n12798, 
                C1=>n13302, D1=>i2c_slave_n13354, DI1=>'X', DI0=>'X', 
                A0=>wb_adr_o_2, B0=>wb_adr_o_0, C0=>wb_adr_o_1, D0=>n14330, 
                M0=>'X', CE=>'X', CLK=>'X', LSR=>'X', OFX1=>open, 
                F1=>int_clk_out_enable_54, Q1=>open, OFX0=>open, F0=>n12798, 
                Q0=>open);
    SLICE_562I: SLOGICB
      generic map (LUT0_INITVAL=>X"0004", LUT1_INITVAL=>X"FFFE")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>i2c_slave_wb_adr_o_15, 
                B1=>i2c_slave_wb_adr_o_11, C1=>i2c_slave_wb_adr_o_14, 
                D1=>i2c_slave_wb_adr_o_9, DI1=>'X', DI0=>'X', A0=>wb_adr_o_2, 
                B0=>wb_adr_o_0, C0=>wb_adr_o_1, D0=>n13302, M0=>'X', CE=>'X', 
                CLK=>'X', LSR=>'X', OFX1=>open, F1=>n13302, Q1=>open, 
                OFX0=>open, F0=>n12812, Q0=>open);
    SLICE_563I: SLOGICB
      generic map (LUT0_INITVAL=>X"FFFE", LUT1_INITVAL=>X"EEEE")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>lvds_rx_09_inst_match_count_2, 
                B1=>match_count_1, C1=>'X', D1=>'X', DI1=>'X', DI0=>'X', 
                A0=>n102, B0=>sr_16, C0=>r_state_1, D0=>match_count_0, M0=>'X', 
                CE=>'X', CLK=>'X', LSR=>'X', OFX1=>open, F1=>n102, Q1=>open, 
                OFX0=>open, F0=>n12896, Q0=>open);
    lvds_rx_09_inst_SLICE_564I: SLOGICB
      generic map (LUT0_INITVAL=>X"8888", LUT1_INITVAL=>X"8000")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>sample_count_2, B1=>n14337, 
                C1=>lvds_rx_09_inst_sample_count_4, D1=>sample_count_3, 
                DI1=>'X', DI0=>'X', A0=>sample_count_1, B0=>sample_count_0, 
                C0=>'X', D0=>'X', M0=>'X', CE=>'X', CLK=>'X', LSR=>'X', 
                OFX1=>open, F1=>lvds_rx_09_inst_n14273, Q1=>open, OFX0=>open, 
                F0=>n14337, Q0=>open);
    lvds_rx_09_inst_SLICE_565I: SLOGICB
      generic map (LUT0_INITVAL=>X"FDFD", LUT1_INITVAL=>X"CACA")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>lvds_rx_09_inst_sr_17, 
                B1=>lvds_rx_09_inst_sr_15, C1=>r_candidate_offset, D1=>'X', 
                DI1=>'X', DI0=>'X', A0=>r_state_0, B0=>lvds_rx_09_inst_n14364, 
                C0=>lvds_rx_09_inst_n14361, D0=>'X', M0=>'X', CE=>'X', 
                CLK=>'X', LSR=>'X', OFX1=>open, F1=>lvds_rx_09_inst_n14361, 
                Q1=>open, OFX0=>open, F0=>n12902, Q0=>open);
    lvds_rx_09_inst_SLICE_566I: SLOGICB
      generic map (LUT0_INITVAL=>X"5044", LUT1_INITVAL=>X"0100")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>lvds_rx_09_inst_sr_17, 
                B1=>lvds_rx_09_inst_sr_1, C1=>lvds_rx_09_inst_sr_31, 
                D1=>lvds_rx_09_inst_sr_32, DI1=>'X', DI0=>'X', A0=>sr_16, 
                B0=>lvds_rx_09_inst_n12314, C0=>n11488, 
                D0=>lvds_rx_09_inst_sr_15, M0=>'X', CE=>'X', CLK=>'X', 
                LSR=>'X', OFX1=>open, F1=>n11488, Q1=>open, OFX0=>open, 
                F0=>lvds_rx_09_inst_sdr_rxclk_c_enable_2, Q0=>open);
    lvds_rx_09_inst_SLICE_567I: SLOGICB
      generic map (LUT0_INITVAL=>X"0035", LUT1_INITVAL=>X"0020")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>lvds_rx_09_inst_n12834, 
                B1=>n14315, C1=>lvds_rx_09_inst_n13296, 
                D1=>lvds_rx_09_inst_n14364, DI1=>'X', DI0=>'X', 
                A0=>lvds_rx_09_inst_sr_17, B0=>lvds_rx_09_inst_sr_15, 
                C0=>r_candidate_offset, D0=>candidate_sr_30, M0=>'X', CE=>'X', 
                CLK=>'X', LSR=>'X', OFX1=>open, 
                F1=>lvds_rx_09_inst_sdr_rxclk_c_enable_40, Q1=>open, 
                OFX0=>open, F0=>lvds_rx_09_inst_n13296, Q0=>open);
    lvds_rx_09_inst_SLICE_568I: SLOGICB
      generic map (LUT0_INITVAL=>X"8000", LUT1_INITVAL=>X"8080")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>sample_count_1, 
                B1=>sample_count_0, C1=>sample_count_2, D1=>'X', DI1=>'X', 
                DI0=>'X', A0=>sample_count_3, B0=>n14304, 
                C0=>lvds_rx_09_inst_sample_count_5, 
                D0=>lvds_rx_09_inst_sample_count_4, M0=>'X', CE=>'X', CLK=>'X', 
                LSR=>'X', OFX1=>open, F1=>n14304, Q1=>open, OFX0=>open, 
                F0=>n14268, Q0=>open);
    lvds_rx_09_inst_SLICE_569I: SLOGICB
      generic map (LUT0_INITVAL=>X"FFFE", LUT1_INITVAL=>X"EEEE")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>lvds_rx_09_inst_sr_28, 
                B1=>lvds_rx_09_inst_sr_8, C1=>'X', D1=>'X', DI1=>'X', DI0=>'X', 
                A0=>lvds_rx_09_inst_n39, B0=>lvds_rx_09_inst_n12476, 
                C0=>lvds_rx_09_inst_n12478, D0=>lvds_rx_09_inst_sr_21, M0=>'X', 
                CE=>'X', CLK=>'X', LSR=>'X', OFX1=>open, 
                F1=>lvds_rx_09_inst_n12476, Q1=>open, OFX0=>open, 
                F0=>lvds_rx_09_inst_n12490, Q0=>open);
    lvds_rx_09_inst_SLICE_570I: SLOGICB
      generic map (LUT0_INITVAL=>X"CACA", LUT1_INITVAL=>X"0001")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>lvds_rx_09_inst_n39, 
                B1=>lvds_rx_09_inst_n12492, C1=>lvds_rx_09_inst_n12488, 
                D1=>lvds_rx_09_inst_n12682, DI1=>'X', DI0=>'X', 
                A0=>lvds_rx_09_inst_sr_32, B0=>lvds_rx_09_inst_sr_0, 
                C0=>r_candidate_offset, D0=>'X', M0=>'X', CE=>'X', CLK=>'X', 
                LSR=>'X', OFX1=>open, 
                F1=>lvds_rx_09_inst_valid_candidate_N_1125, Q1=>open, 
                OFX0=>open, F0=>lvds_rx_09_inst_n39, Q0=>open);
    lvds_rx_09_inst_SLICE_571I: SLOGICB
      generic map (LUT0_INITVAL=>X"FFFE", LUT1_INITVAL=>X"EEEE")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>lvds_rx_09_inst_sr_26, 
                B1=>lvds_rx_09_inst_sr_18, C1=>'X', D1=>'X', DI1=>'X', 
                DI0=>'X', A0=>lvds_rx_09_inst_n12486, B0=>lvds_rx_09_inst_sr_3, 
                C0=>lvds_rx_09_inst_n11628, D0=>lvds_rx_09_inst_sr_31, M0=>'X', 
                CE=>'X', CLK=>'X', LSR=>'X', OFX1=>open, 
                F1=>lvds_rx_09_inst_n11628, Q1=>open, OFX0=>open, 
                F0=>lvds_rx_09_inst_n12492, Q0=>open);
    lvds_rx_09_inst_SLICE_572I: SLOGICB
      generic map (LUT0_INITVAL=>X"FFFE", LUT1_INITVAL=>X"EEEE")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>lvds_rx_09_inst_sr_23, 
                B1=>lvds_rx_09_inst_sr_29, C1=>'X', D1=>'X', DI1=>'X', 
                DI0=>'X', A0=>lvds_rx_09_inst_sr_15, 
                B0=>lvds_rx_09_inst_n11658, C0=>lvds_rx_09_inst_n12520, 
                D0=>lvds_rx_09_inst_sr_13, M0=>'X', CE=>'X', CLK=>'X', 
                LSR=>'X', OFX1=>open, F1=>lvds_rx_09_inst_n12520, Q1=>open, 
                OFX0=>open, F0=>lvds_rx_09_inst_n12486, Q0=>open);
    lvds_rx_09_inst_SLICE_573I: SLOGICB
      generic map (LUT0_INITVAL=>X"FFFE", LUT1_INITVAL=>X"EEEE")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>lvds_rx_09_inst_sr_27, 
                B1=>lvds_rx_09_inst_sr_9, C1=>'X', D1=>'X', DI1=>'X', DI0=>'X', 
                A0=>lvds_rx_09_inst_n12502, B0=>lvds_rx_09_inst_n11716, 
                C0=>lvds_rx_09_inst_n12504, D0=>lvds_rx_09_inst_n12496, 
                M0=>'X', CE=>'X', CLK=>'X', LSR=>'X', OFX1=>open, 
                F1=>lvds_rx_09_inst_n12496, Q1=>open, OFX0=>open, 
                F0=>lvds_rx_09_inst_n12488, Q0=>open);
    lvds_rx_09_inst_SLICE_574I: SLOGICB
      generic map (LUT0_INITVAL=>X"FFFE", LUT1_INITVAL=>X"EEEE")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>lvds_rx_09_inst_sr_4, 
                B1=>lvds_rx_09_inst_sr_24, C1=>'X', D1=>'X', DI1=>'X', 
                DI0=>'X', A0=>lvds_rx_09_inst_sr_14, 
                B0=>lvds_rx_09_inst_n12516, C0=>lvds_rx_09_inst_n12508, 
                D0=>lvds_rx_09_inst_sr_22, M0=>'X', CE=>'X', CLK=>'X', 
                LSR=>'X', OFX1=>open, F1=>lvds_rx_09_inst_n12508, Q1=>open, 
                OFX0=>open, F0=>lvds_rx_09_inst_n11716, Q0=>open);
    i2c_slave_SLICE_575I: SLOGICB
      generic map (LUT0_INITVAL=>X"0400", LUT1_INITVAL=>X"DDDD")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>stm_fpga_spare5_c, 
                B1=>int_clk_out_enable_99, C1=>'X', D1=>'X', DI1=>'X', 
                DI0=>'X', A0=>n13302, B0=>i2c_slave_n12984, 
                C0=>i2c_slave_n14383, D0=>i2c_slave_n13014, M0=>'X', CE=>'X', 
                CLK=>'X', LSR=>'X', OFX1=>open, F1=>int_clk_out_enable_98, 
                Q1=>open, OFX0=>open, F0=>int_clk_out_enable_99, Q0=>open);
    i2c_slave_SLICE_576I: SLOGICB
      generic map (LUT0_INITVAL=>X"0100", LUT1_INITVAL=>X"8080")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>wb_adr_o_2, B1=>wb_adr_o_0, 
                C1=>wb_adr_o_3, D1=>'X', DI1=>'X', DI0=>'X', A0=>wb_adr_o_1, 
                B0=>wb_adr_o_8, C0=>i2c_slave_wb_adr_o_13, 
                D0=>i2c_slave_n13008, M0=>'X', CE=>'X', CLK=>'X', LSR=>'X', 
                OFX1=>open, F1=>i2c_slave_n13008, Q1=>open, OFX0=>open, 
                F0=>i2c_slave_n13014, Q0=>open);
    i2c_slave_SLICE_577I: SLOGICB
      generic map (LUT0_INITVAL=>X"0010", LUT1_INITVAL=>X"0004")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>wb_adr_o_1, 
                B1=>i2c_slave_n13176, C1=>wb_adr_o_0, D1=>wb_adr_o_4, DI1=>'X', 
                DI0=>'X', A0=>wb_adr_o_8, B0=>wb_adr_o_7, C0=>wb_adr_o_2, 
                D0=>wb_adr_o_6, M0=>'X', CE=>'X', CLK=>'X', LSR=>'X', 
                OFX1=>open, F1=>i2c_slave_n13182, Q1=>open, OFX0=>open, 
                F0=>i2c_slave_n13176, Q0=>open);
    i2c_slave_SLICE_578I: SLOGICB
      generic map (LUT0_INITVAL=>X"EEEE", LUT1_INITVAL=>X"0020")
      port map (M1=>'X', FXA=>'X', FXB=>'X', 
                A1=>i2c_slave_int_clk_out_enable_12, B1=>i2c_slave_n3, 
                C1=>i2c_slave_n13188, D1=>i2c_slave_count_reg_3, DI1=>'X', 
                DI0=>'X', A0=>i2c_slave_count_reg_0, B0=>i2c_slave_count_reg_1, 
                C0=>'X', D0=>'X', M0=>'X', CE=>'X', CLK=>'X', LSR=>'X', 
                OFX1=>open, F1=>i2c_slave_n13196, Q1=>open, OFX0=>open, 
                F0=>i2c_slave_n3, Q0=>open);
    i2c_slave_SLICE_579I: SLOGICB
      generic map (LUT0_INITVAL=>X"FEFA", LUT1_INITVAL=>X"2022")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>i2c_slave_n1529, 
                B1=>i2c_slave_data_out_valid, C1=>i2c_slave_data_in_valid_reg, 
                D1=>i2c_slave_data_in_ready, DI1=>'X', DI0=>'X', 
                A0=>i2c_slave_n6551, B0=>i2c_slave_n13246, 
                C0=>i2c_slave_n11558, D0=>i2c_slave_int_clk_out_enable_12, 
                M0=>'X', CE=>'X', CLK=>'X', LSR=>'X', OFX1=>open, 
                F1=>i2c_slave_n6551, Q1=>open, OFX0=>open, 
                F0=>i2c_slave_n12648, Q0=>open);
    i2c_slave_SLICE_580I: SLOGICB
      generic map (LUT0_INITVAL=>X"4000", LUT1_INITVAL=>X"DDDD")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>stm_fpga_spare5_c, 
                B1=>int_clk_out_enable_55, C1=>'X', D1=>'X', DI1=>'X', 
                DI0=>'X', A0=>n13302, B0=>n11601, C0=>i2c_slave_n14291, 
                D0=>i2c_slave_n12822, M0=>'X', CE=>'X', CLK=>'X', LSR=>'X', 
                OFX1=>open, F1=>int_clk_out_enable_62, Q1=>open, OFX0=>open, 
                F0=>int_clk_out_enable_55, Q0=>open);
    i2c_slave_SLICE_581I: SLOGICB
      generic map (LUT0_INITVAL=>X"0100", LUT1_INITVAL=>X"EEEE")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>i2c_slave_wb_adr_o_10, 
                B1=>i2c_slave_wb_adr_o_12, C1=>'X', D1=>'X', DI1=>'X', 
                DI0=>'X', A0=>i2c_slave_n14383, B0=>i2c_slave_wb_adr_o_13, 
                C0=>wb_adr_o_8, D0=>i2c_slave_n14350, M0=>'X', CE=>'X', 
                CLK=>'X', LSR=>'X', OFX1=>open, F1=>i2c_slave_n14383, Q1=>open, 
                OFX0=>open, F0=>i2c_slave_n12822, Q0=>open);
    i2c_slave_SLICE_582I: SLOGICB
      generic map (LUT0_INITVAL=>X"0040", LUT1_INITVAL=>X"DDDD")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>stm_fpga_spare5_c, 
                B1=>int_clk_out_enable_77, C1=>'X', D1=>'X', DI1=>'X', 
                DI0=>'X', A0=>i2c_slave_n13362, B0=>n14330, 
                C0=>i2c_slave_n12994, D0=>wb_adr_o_0, M0=>'X', CE=>'X', 
                CLK=>'X', LSR=>'X', OFX1=>open, F1=>int_clk_out_enable_76, 
                Q1=>open, OFX0=>open, F0=>int_clk_out_enable_77, Q0=>open);
    i2c_slave_SLICE_583I: SLOGICB
      generic map (LUT0_INITVAL=>X"1000", LUT1_INITVAL=>X"8888")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>wb_adr_o_1, B1=>wb_adr_o_3, 
                C1=>'X', D1=>'X', DI1=>'X', DI0=>'X', A0=>wb_adr_o_8, 
                B0=>i2c_slave_wb_adr_o_13, C0=>i2c_slave_n14377, 
                D0=>wb_adr_o_2, M0=>'X', CE=>'X', CLK=>'X', LSR=>'X', 
                OFX1=>open, F1=>i2c_slave_n14377, Q1=>open, OFX0=>open, 
                F0=>i2c_slave_n12994, Q0=>open);
    i2c_slave_SLICE_584I: SLOGICB
      generic map (LUT0_INITVAL=>X"FFFE", LUT1_INITVAL=>X"EFEF")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>i2c_slave_wb_adr_o_9, 
                B1=>i2c_slave_wb_adr_o_14, C1=>wb_adr_o_3, D1=>'X', DI1=>'X', 
                DI0=>'X', A0=>n11664, B0=>i2c_slave_n12612, 
                C0=>i2c_slave_n12606, D0=>wb_adr_o_0, M0=>'X', CE=>'X', 
                CLK=>'X', LSR=>'X', OFX1=>open, F1=>i2c_slave_n12612, Q1=>open, 
                OFX0=>open, F0=>n12618, Q0=>open);
    i2c_slave_SLICE_585I: SLOGICB
      generic map (LUT0_INITVAL=>X"0040", LUT1_INITVAL=>X"DDDD")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>stm_fpga_spare5_c, 
                B1=>int_clk_out_enable_107, C1=>'X', D1=>'X', DI1=>'X', 
                DI0=>'X', A0=>i2c_slave_n13362, B0=>i2c_slave_n13030, 
                C0=>n14330, D0=>i2c_slave_n13300, M0=>'X', CE=>'X', CLK=>'X', 
                LSR=>'X', OFX1=>open, F1=>int_clk_out_enable_106, Q1=>open, 
                OFX0=>open, F0=>int_clk_out_enable_107, Q0=>open);
    i2c_slave_SLICE_586I: SLOGICB
      generic map (LUT0_INITVAL=>X"0400", LUT1_INITVAL=>X"DDDD")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>stm_fpga_spare5_c, 
                B1=>int_clk_out_enable_83, C1=>'X', D1=>'X', DI1=>'X', 
                DI0=>'X', A0=>i2c_slave_n14319, B0=>i2c_slave_n12984, 
                C0=>i2c_slave_n14382, D0=>i2c_slave_n12978, M0=>'X', CE=>'X', 
                CLK=>'X', LSR=>'X', OFX1=>open, F1=>int_clk_out_enable_84, 
                Q1=>open, OFX0=>open, F0=>int_clk_out_enable_83, Q0=>open);
    i2c_slave_SLICE_587I: SLOGICB
      generic map (LUT0_INITVAL=>X"1000", LUT1_INITVAL=>X"8888")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>wb_adr_o_0, B1=>wb_adr_o_2, 
                C1=>'X', D1=>'X', DI1=>'X', DI0=>'X', 
                A0=>i2c_slave_wb_adr_o_13, B0=>wb_adr_o_8, 
                C0=>i2c_slave_n12972, D0=>i2c_slave_n14377, M0=>'X', CE=>'X', 
                CLK=>'X', LSR=>'X', OFX1=>open, F1=>i2c_slave_n12972, Q1=>open, 
                OFX0=>open, F0=>i2c_slave_n12978, Q0=>open);
    i2c_slave_SLICE_588I: SLOGICB
      generic map (LUT0_INITVAL=>X"FFEF", LUT1_INITVAL=>X"55D5")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>stm_fpga_spare5_c, 
                B1=>i2c_slave_n12886, C1=>n11601, D1=>i2c_slave_n13286, 
                DI1=>'X', DI0=>'X', A0=>i2c_slave_wb_adr_o_9, 
                B0=>i2c_slave_wb_adr_o_14, C0=>i2c_slave_n14386, 
                D0=>i2c_slave_n14383, M0=>'X', CE=>'X', CLK=>'X', LSR=>'X', 
                OFX1=>open, F1=>int_clk_out_enable_69, Q1=>open, OFX0=>open, 
                F0=>i2c_slave_n13286, Q0=>open);
    i2c_slave_SLICE_589I: SLOGICB
      generic map (LUT0_INITVAL=>X"FFFE", LUT1_INITVAL=>X"FFFE")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>i2c_slave_wb_adr_o_10, 
                B1=>i2c_slave_n14353, C1=>i2c_slave_wb_adr_o_15, 
                D1=>i2c_slave_wb_adr_o_13, DI1=>'X', DI0=>'X', 
                A0=>i2c_slave_wb_adr_o_9, B0=>i2c_slave_wb_adr_o_14, 
                C0=>wb_adr_o_8, D0=>n11958, M0=>'X', CE=>'X', CLK=>'X', 
                LSR=>'X', OFX1=>open, F1=>n11958, Q1=>open, OFX0=>open, 
                F0=>n12153, Q0=>open);
    i2c_slave_SLICE_590I: SLOGICB
      generic map (LUT0_INITVAL=>X"FFFE", LUT1_INITVAL=>X"7555")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>stm_fpga_spare5_c, 
                B1=>i2c_slave_n12212, C1=>i2c_slave_n12874, 
                D1=>i2c_slave_n14332, DI1=>'X', DI0=>'X', 
                A0=>i2c_slave_wb_adr_o_9, B0=>i2c_slave_wb_adr_o_14, 
                C0=>wb_adr_o_8, D0=>wb_adr_o_6, M0=>'X', CE=>'X', CLK=>'X', 
                LSR=>'X', OFX1=>open, F1=>int_clk_out_enable_171, Q1=>open, 
                OFX0=>open, F0=>i2c_slave_n12212, Q0=>open);
    i2c_slave_SLICE_591I: SLOGICB
      generic map (LUT0_INITVAL=>X"7500", LUT1_INITVAL=>X"8888")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>i2c_slave_data_out_ready_reg, 
                B1=>i2c_slave_data_out_valid, C1=>'X', D1=>'X', DI1=>'X', 
                DI0=>'X', A0=>i2c_slave_int_clk_out_enable_12, 
                B0=>i2c_slave_data_out_last, C0=>i2c_slave_n14298, 
                D0=>i2c_slave_n1525, M0=>'X', CE=>'X', CLK=>'X', LSR=>'X', 
                OFX1=>open, F1=>i2c_slave_int_clk_out_enable_12, Q1=>open, 
                OFX0=>open, F0=>i2c_slave_n5080, Q0=>open);
    i2c_slave_SLICE_592I: SLOGICB
      generic map (LUT0_INITVAL=>X"0040", LUT1_INITVAL=>X"EEEE")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>i2c_slave_wb_adr_o_15, 
                B1=>i2c_slave_wb_adr_o_11, C1=>'X', D1=>'X', DI1=>'X', 
                DI0=>'X', A0=>i2c_slave_n14382, B0=>n14330, 
                C0=>i2c_slave_n12878, D0=>wb_adr_o_8, M0=>'X', CE=>'X', 
                CLK=>'X', LSR=>'X', OFX1=>open, F1=>i2c_slave_n14382, Q1=>open, 
                OFX0=>open, F0=>i2c_slave_n12886, Q0=>open);
    i2c_slave_SLICE_593I: SLOGICB
      generic map (LUT0_INITVAL=>X"FFFE", LUT1_INITVAL=>X"5755")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>stm_fpga_spare5_c, 
                B1=>i2c_slave_n13358, C1=>n11958, D1=>i2c_slave_n13056, 
                DI1=>'X', DI0=>'X', A0=>i2c_slave_wb_adr_o_9, 
                B0=>i2c_slave_wb_adr_o_14, C0=>wb_adr_o_8, D0=>wb_adr_o_1, 
                M0=>'X', CE=>'X', CLK=>'X', LSR=>'X', OFX1=>open, 
                F1=>int_clk_out_enable_28, Q1=>open, OFX0=>open, 
                F0=>i2c_slave_n13358, Q0=>open);
    i2c_slave_SLICE_594I: SLOGICB
      generic map (LUT0_INITVAL=>X"0800", LUT1_INITVAL=>X"DDDD")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>stm_fpga_spare5_c, 
                B1=>int_clk_out_enable_39, C1=>'X', D1=>'X', DI1=>'X', 
                DI0=>'X', A0=>n11601, B0=>n12812, C0=>i2c_slave_n13354, 
                D0=>n14330, M0=>'X', CE=>'X', CLK=>'X', LSR=>'X', OFX1=>open, 
                F1=>int_clk_out_enable_46, Q1=>open, OFX0=>open, 
                F0=>int_clk_out_enable_39, Q0=>open);
    i2c_slave_SLICE_595I: SLOGICB
      generic map (LUT0_INITVAL=>X"EEEE", LUT1_INITVAL=>X"0040")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>i2c_slave_n12212, 
                B1=>i2c_slave_n14332, C1=>i2c_slave_n12632, 
                D1=>i2c_slave_n14353, DI1=>'X', DI0=>'X', 
                A0=>i2c_slave_wb_adr_o_11, B0=>i2c_slave_wb_adr_o_12, C0=>'X', 
                D0=>'X', M0=>'X', CE=>'X', CLK=>'X', LSR=>'X', OFX1=>open, 
                F1=>i2c_slave_n11604, Q1=>open, OFX0=>open, 
                F0=>i2c_slave_n14353, Q0=>open);
    i2c_slave_SLICE_596I: SLOGICB
      generic map (LUT0_INITVAL=>X"FFFE", LUT1_INITVAL=>X"0004")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>i2c_slave_n13350, B1=>n14384, 
                C1=>i2c_slave_n13310, D1=>i2c_slave_n14387, DI1=>'X', DI0=>'X', 
                A0=>i2c_slave_wb_adr_o_11, B0=>i2c_slave_wb_adr_o_12, 
                C0=>wb_adr_o_4, D0=>wb_adr_o_2, M0=>'X', CE=>'X', CLK=>'X', 
                LSR=>'X', OFX1=>open, F1=>i2c_slave_n12874, Q1=>open, 
                OFX0=>open, F0=>i2c_slave_n13350, Q0=>open);
    i2c_slave_SLICE_597I: SLOGICB
      generic map (LUT0_INITVAL=>X"1000", LUT1_INITVAL=>X"5D55")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>stm_fpga_spare5_c, 
                B1=>i2c_slave_n14332, C1=>i2c_slave_n13382, 
                D1=>i2c_slave_n14331, DI1=>'X', DI0=>'X', A0=>wb_adr_o_5, 
                B0=>wb_adr_o_3, C0=>wb_we_o, D0=>wb_stb_o, M0=>'X', CE=>'X', 
                CLK=>'X', LSR=>'X', OFX1=>open, F1=>int_clk_out_enable_164, 
                Q1=>open, OFX0=>open, F0=>i2c_slave_n14332, Q0=>open);
    i2c_slave_SLICE_598I: SLOGICB
      generic map (LUT0_INITVAL=>X"F0F8", LUT1_INITVAL=>X"EEEE")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>i2c_slave_n1527, 
                B1=>i2c_slave_n1524, C1=>'X', D1=>'X', DI1=>'X', DI0=>'X', 
                A0=>i2c_slave_int_clk_out_enable_12, B0=>i2c_slave_n1528, 
                C0=>i2c_slave_n14342, D0=>i2c_slave_n3, M0=>'X', CE=>'X', 
                CLK=>'X', LSR=>'X', OFX1=>open, F1=>i2c_slave_n14342, Q1=>open, 
                OFX0=>open, F0=>i2c_slave_int_clk_out_enable_202, Q0=>open);
    i2c_slave_SLICE_599I: SLOGICB
      generic map (LUT0_INITVAL=>X"2A2A", LUT1_INITVAL=>X"FFFE")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>i2c_slave_n14378, 
                B1=>i2c_slave_count_reg_0, C1=>i2c_slave_n11, 
                D1=>i2c_slave_n14376, DI1=>'X', DI0=>'X', A0=>i2c_slave_n14298, 
                B0=>i2c_slave_n1525, C0=>i2c_slave_data_out_last, D0=>'X', 
                M0=>'X', CE=>'X', CLK=>'X', LSR=>'X', OFX1=>open, 
                F1=>i2c_slave_n14298, Q1=>open, OFX0=>open, 
                F0=>i2c_slave_n14277, Q0=>open);
    i2c_slave_SLICE_600I: SLOGICB
      generic map (LUT0_INITVAL=>X"EEEE", LUT1_INITVAL=>X"FFFE")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>i2c_slave_n11, 
                B1=>i2c_slave_n14376, C1=>i2c_slave_count_reg_0, 
                D1=>i2c_slave_n14378, DI1=>'X', DI0=>'X', 
                A0=>i2c_slave_count_reg_5, B0=>i2c_slave_count_reg_6, C0=>'X', 
                D0=>'X', M0=>'X', CE=>'X', CLK=>'X', LSR=>'X', OFX1=>open, 
                F1=>i2c_slave_n14300, Q1=>open, OFX0=>open, 
                F0=>i2c_slave_n14376, Q0=>open);
    i2c_slave_SLICE_601I: SLOGICB
      generic map (LUT0_INITVAL=>X"FEFE", LUT1_INITVAL=>X"FEFE")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>i2c_slave_count_reg_4, 
                B1=>i2c_slave_count_reg_2, C1=>i2c_slave_count_reg_7, D1=>'X', 
                DI1=>'X', DI0=>'X', A0=>i2c_slave_count_reg_5, 
                B0=>i2c_slave_count_reg_6, C0=>i2c_slave_n11, D0=>'X', M0=>'X', 
                CE=>'X', CLK=>'X', LSR=>'X', OFX1=>open, F1=>i2c_slave_n11, 
                Q1=>open, OFX0=>open, F0=>i2c_slave_n14328, Q0=>open);
    i2c_slave_SLICE_602I: SLOGICB
      generic map (LUT0_INITVAL=>X"EEEE", LUT1_INITVAL=>X"F0F1")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>i2c_slave_n14378, 
                B1=>i2c_slave_count_reg_0, C1=>i2c_slave_data_out_last, 
                D1=>i2c_slave_n14328, DI1=>'X', DI0=>'X', 
                A0=>i2c_slave_count_reg_1, B0=>i2c_slave_count_reg_3, C0=>'X', 
                D0=>'X', M0=>'X', CE=>'X', CLK=>'X', LSR=>'X', OFX1=>open, 
                F1=>i2c_slave_n14278, Q1=>open, OFX0=>open, 
                F0=>i2c_slave_n14378, Q0=>open);
    i2c_slave_SLICE_603I: SLOGICB
      generic map (LUT0_INITVAL=>X"FEFE", LUT1_INITVAL=>X"0100")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>i2c_slave_n14376, 
                B1=>i2c_slave_n11, C1=>i2c_slave_n14327, D1=>i2c_slave_n14307, 
                DI1=>'X', DI0=>'X', A0=>i2c_slave_count_reg_1, 
                B0=>i2c_slave_count_reg_3, C0=>i2c_slave_count_reg_0, D0=>'X', 
                M0=>'X', CE=>'X', CLK=>'X', LSR=>'X', OFX1=>open, 
                F1=>i2c_slave_n12071, Q1=>open, OFX0=>open, 
                F0=>i2c_slave_n14327, Q0=>open);
    i2c_slave_SLICE_604I: SLOGICB
      generic map (LUT0_INITVAL=>X"FFFE", LUT1_INITVAL=>X"0400")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>n14352, B1=>i2c_slave_n12984, 
                C1=>n14325, D1=>i2c_slave_n13068, DI1=>'X', DI0=>'X', 
                A0=>i2c_slave_wb_adr_o_10, B0=>i2c_slave_wb_adr_o_12, 
                C0=>i2c_slave_wb_adr_o_11, D0=>i2c_slave_wb_adr_o_15, M0=>'X', 
                CE=>'X', CLK=>'X', LSR=>'X', OFX1=>open, 
                F1=>int_clk_out_enable_111, Q1=>open, OFX0=>open, F0=>n14325, 
                Q0=>open);
    i2c_slave_SLICE_605I: SLOGICB
      generic map (LUT0_INITVAL=>X"4444", LUT1_INITVAL=>X"55D5")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>stm_fpga_spare5_c, 
                B1=>i2c_slave_n6568, C1=>i2c_slave_n14385, D1=>wb_adr_o_2, 
                DI1=>'X', DI0=>'X', A0=>wb_adr_o_1, B0=>wb_adr_o_0, C0=>'X', 
                D0=>'X', M0=>'X', CE=>'X', CLK=>'X', LSR=>'X', OFX1=>open, 
                F1=>int_clk_out_enable_128, Q1=>open, OFX0=>open, 
                F0=>i2c_slave_n14385, Q0=>open);
    i2c_slave_SLICE_606I: SLOGICB
      generic map (LUT0_INITVAL=>X"0040", LUT1_INITVAL=>X"0400")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>n13302, B1=>i2c_slave_n12984, 
                C1=>i2c_slave_n14383, D1=>i2c_slave_n12728, DI1=>'X', DI0=>'X', 
                A0=>wb_adr_o_1, B0=>wb_adr_o_0, C0=>i2c_slave_n6568, 
                D0=>wb_adr_o_2, M0=>'X', CE=>'X', CLK=>'X', LSR=>'X', 
                OFX1=>open, F1=>i2c_slave_n6568, Q1=>open, OFX0=>open, 
                F0=>int_clk_out_enable_129, Q0=>open);
    i2c_slave_SLICE_607I: SLOGICB
      generic map (LUT0_INITVAL=>X"1111", LUT1_INITVAL=>X"55D5")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>stm_fpga_spare5_c, 
                B1=>i2c_slave_n6568, C1=>i2c_slave_n14386, D1=>wb_adr_o_2, 
                DI1=>'X', DI0=>'X', A0=>wb_adr_o_0, B0=>wb_adr_o_1, C0=>'X', 
                D0=>'X', M0=>'X', CE=>'X', CLK=>'X', LSR=>'X', OFX1=>open, 
                F1=>int_clk_out_enable_121, Q1=>open, OFX0=>open, 
                F0=>i2c_slave_n14386, Q0=>open);
    i2c_slave_SLICE_608I: SLOGICB
      generic map (LUT0_INITVAL=>X"FEFE", LUT1_INITVAL=>X"5575")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>stm_fpga_spare5_c, 
                B1=>i2c_slave_n13382, C1=>i2c_slave_n14332, 
                D1=>i2c_slave_n14333, DI1=>'X', DI0=>'X', A0=>wb_adr_o_0, 
                B0=>wb_adr_o_1, C0=>wb_adr_o_2, D0=>'X', M0=>'X', CE=>'X', 
                CLK=>'X', LSR=>'X', OFX1=>open, F1=>int_clk_out_enable_150, 
                Q1=>open, OFX0=>open, F0=>i2c_slave_n14333, Q0=>open);
    i2c_slave_SLICE_609I: SLOGICB
      generic map (LUT0_INITVAL=>X"FEFE", LUT1_INITVAL=>X"FFFE")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>i2c_slave_n12212, 
                B1=>i2c_slave_n13360, C1=>i2c_slave_n14353, 
                D1=>i2c_slave_n13310, DI1=>'X', DI0=>'X', 
                A0=>i2c_slave_wb_adr_o_10, B0=>i2c_slave_wb_adr_o_15, 
                C0=>wb_adr_o_4, D0=>'X', M0=>'X', CE=>'X', CLK=>'X', LSR=>'X', 
                OFX1=>open, F1=>i2c_slave_n13382, Q1=>open, OFX0=>open, 
                F0=>i2c_slave_n13360, Q0=>open);
    i2c_slave_SLICE_610I: SLOGICB
      generic map (LUT0_INITVAL=>X"0002", LUT1_INITVAL=>X"5D55")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>stm_fpga_spare5_c, 
                B1=>i2c_slave_n12850, C1=>i2c_slave_n12212, 
                D1=>i2c_slave_n14301, DI1=>'X', DI0=>'X', A0=>i2c_slave_n12842, 
                B0=>i2c_slave_n14353, C0=>i2c_slave_n13294, 
                D0=>i2c_slave_wb_adr_o_13, M0=>'X', CE=>'X', CLK=>'X', 
                LSR=>'X', OFX1=>open, F1=>int_clk_out_enable_27, Q1=>open, 
                OFX0=>open, F0=>i2c_slave_n12850, Q0=>open);
    i2c_slave_SLICE_611I: SLOGICB
      generic map (LUT0_INITVAL=>X"0001", LUT1_INITVAL=>X"FFF2")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>i2c_slave_n1529, 
                B1=>i2c_slave_data_out_valid, C1=>i2c_slave_n1524, 
                D1=>i2c_slave_n1527, DI1=>'X', DI0=>'X', A0=>i2c_slave_n3863, 
                B0=>i2c_slave_n3866, C0=>i2c_slave_n3893, D0=>i2c_slave_n12588, 
                M0=>'X', CE=>'X', CLK=>'X', LSR=>'X', OFX1=>open, 
                F1=>i2c_slave_n12588, Q1=>open, OFX0=>open, 
                F0=>i2c_slave_int_clk_out_enable_157, Q0=>open);
    i2c_slave_SLICE_612I: SLOGICB
      generic map (LUT0_INITVAL=>X"D0F0", LUT1_INITVAL=>X"4444")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>i2c_slave_data_out_valid, 
                B1=>bus_addressed, C1=>'X', D1=>'X', DI1=>'X', DI0=>'X', 
                A0=>i2c_slave_data_in_ready, B0=>i2c_slave_data_in_valid_reg, 
                C0=>i2c_slave_n1526, D0=>i2c_slave_n14340, M0=>'X', CE=>'X', 
                CLK=>'X', LSR=>'X', OFX1=>open, F1=>i2c_slave_n14340, Q1=>open, 
                OFX0=>open, F0=>i2c_slave_n3866, Q0=>open);
    i2c_slave_SLICE_613I: SLOGICB
      generic map (LUT0_INITVAL=>X"8080", LUT1_INITVAL=>X"CCEC")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>i2c_slave_count_reg_0, 
                B1=>i2c_slave_n14342, C1=>i2c_slave_n14317, 
                D1=>i2c_slave_count_reg_1, DI1=>'X', DI0=>'X', 
                A0=>i2c_slave_data_out_ready_reg, B0=>i2c_slave_data_out_valid, 
                C0=>i2c_slave_n1528, D0=>'X', M0=>'X', CE=>'X', CLK=>'X', 
                LSR=>'X', OFX1=>open, F1=>i2c_slave_int_clk_out_enable_210, 
                Q1=>open, OFX0=>open, F0=>i2c_slave_n14317, Q0=>open);
    i2c_slave_SLICE_614I: SLOGICB
      generic map (LUT0_INITVAL=>X"7070", LUT1_INITVAL=>X"FFFE")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>i2c_slave_n3893, 
                B1=>i2c_slave_n14334, C1=>i2c_slave_n5052, 
                D1=>i2c_slave_n12450, DI1=>'X', DI0=>'X', 
                A0=>i2c_slave_data_out_ready_reg, B0=>i2c_slave_data_out_valid, 
                C0=>i2c_slave_n1525, D0=>'X', M0=>'X', CE=>'X', CLK=>'X', 
                LSR=>'X', OFX1=>open, F1=>i2c_slave_n12456, Q1=>open, 
                OFX0=>open, F0=>i2c_slave_n3893, Q0=>open);
    i2c_slave_SLICE_615I: SLOGICB
      generic map (LUT0_INITVAL=>X"0100", LUT1_INITVAL=>X"EEEE")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>wb_adr_o_7, 
                B1=>i2c_slave_wb_adr_o_10, C1=>'X', D1=>'X', DI1=>'X', 
                DI0=>'X', A0=>i2c_slave_n13294, B0=>i2c_slave_n13334, 
                C0=>i2c_slave_wb_adr_o_15, D0=>wb_adr_o_2, M0=>'X', CE=>'X', 
                CLK=>'X', LSR=>'X', OFX1=>open, F1=>i2c_slave_n13294, Q1=>open, 
                OFX0=>open, F0=>i2c_slave_n12632, Q0=>open);
    i2c_slave_SLICE_616I: SLOGICB
      generic map (LUT0_INITVAL=>X"8888", LUT1_INITVAL=>X"8000")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>i2c_slave_count_reg_2, 
                B1=>i2c_slave_n14335, C1=>i2c_slave_count_reg_4, 
                D1=>i2c_slave_count_reg_3, DI1=>'X', DI0=>'X', 
                A0=>i2c_slave_count_reg_1, B0=>i2c_slave_count_reg_0, C0=>'X', 
                D0=>'X', M0=>'X', CE=>'X', CLK=>'X', LSR=>'X', OFX1=>open, 
                F1=>i2c_slave_n14272, Q1=>open, OFX0=>open, 
                F0=>i2c_slave_n14335, Q0=>open);
    i2c_slave_SLICE_617I: SLOGICB
      generic map (LUT0_INITVAL=>X"8000", LUT1_INITVAL=>X"8080")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>i2c_slave_count_reg_1, 
                B1=>i2c_slave_count_reg_0, C1=>i2c_slave_count_reg_2, D1=>'X', 
                DI1=>'X', DI0=>'X', A0=>i2c_slave_count_reg_3, 
                B0=>i2c_slave_n14303, C0=>i2c_slave_count_reg_5, 
                D0=>i2c_slave_count_reg_4, M0=>'X', CE=>'X', CLK=>'X', 
                LSR=>'X', OFX1=>open, F1=>i2c_slave_n14303, Q1=>open, 
                OFX0=>open, F0=>i2c_slave_n14267, Q0=>open);
    i2c_slave_SLICE_618I: SLOGICB
      generic map (LUT0_INITVAL=>X"1000", LUT1_INITVAL=>X"EEEE")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>wb_adr_o_2, 
                B1=>i2c_slave_wb_adr_o_13, C1=>'X', D1=>'X', DI1=>'X', 
                DI0=>'X', A0=>i2c_slave_n13300, B0=>wb_adr_o_8, 
                C0=>i2c_slave_n14377, D0=>wb_adr_o_0, M0=>'X', CE=>'X', 
                CLK=>'X', LSR=>'X', OFX1=>open, F1=>i2c_slave_n13300, Q1=>open, 
                OFX0=>open, F0=>i2c_slave_n13068, Q0=>open);
    i2c_slave_i2c_slave_inst_SLICE_619I: SLOGICB
      generic map (LUT0_INITVAL=>X"EEEE", LUT1_INITVAL=>X"FFFB")
      port map (M1=>'X', FXA=>'X', FXB=>'X', 
                A1=>i2c_slave_i2c_slave_inst_n12524, 
                B1=>i2c_slave_i2c_slave_inst_data_reg_4, 
                C1=>i2c_slave_i2c_slave_inst_n12528, 
                D1=>i2c_slave_i2c_slave_inst_n12526, DI1=>'X', DI0=>'X', 
                A0=>i2c_slave_i2c_slave_inst_data_reg_1, 
                B0=>i2c_slave_i2c_slave_inst_data_reg_6, C0=>'X', D0=>'X', 
                M0=>'X', CE=>'X', CLK=>'X', LSR=>'X', OFX1=>open, 
                F1=>i2c_slave_i2c_slave_inst_n11479, Q1=>open, OFX0=>open, 
                F0=>i2c_slave_i2c_slave_inst_n12526, Q0=>open);
    i2c_slave_i2c_slave_inst_SLICE_620I: SLOGICB
      generic map (LUT0_INITVAL=>X"BAFE", LUT1_INITVAL=>X"400F")
      port map (M1=>'X', FXA=>'X', FXB=>'X', 
                A1=>i2c_slave_i2c_slave_inst_n14372, 
                B1=>i2c_slave_i2c_slave_inst_n14318, 
                C1=>i2c_slave_i2c_slave_inst_state_reg_1, D1=>state_reg_0, 
                DI1=>'X', DI0=>'X', A0=>n14324, 
                B0=>i2c_slave_i2c_slave_inst_state_reg_2, 
                C0=>i2c_slave_i2c_slave_inst_n8188, 
                D0=>i2c_slave_i2c_slave_inst_n14297, M0=>'X', CE=>'X', 
                CLK=>'X', LSR=>'X', OFX1=>open, 
                F1=>i2c_slave_i2c_slave_inst_n8188, Q1=>open, OFX0=>open, 
                F0=>i2c_slave_i2c_slave_inst_int_clk_out_enable_25, Q0=>open);
    i2c_slave_i2c_slave_inst_SLICE_621I: SLOGICB
      generic map (LUT0_INITVAL=>X"555D", LUT1_INITVAL=>X"8888")
      port map (M1=>'X', FXA=>'X', FXB=>'X', 
                A1=>i2c_slave_i2c_slave_inst_state_reg_1, 
                B1=>i2c_slave_i2c_slave_inst_scl_i_reg, C1=>'X', D1=>'X', 
                DI1=>'X', DI0=>'X', A0=>state_reg_0, 
                B0=>i2c_slave_i2c_slave_inst_n12748, C0=>sda_i_reg, 
                D0=>i2c_slave_i2c_slave_inst_last_scl_i_reg, M0=>'X', CE=>'X', 
                CLK=>'X', LSR=>'X', OFX1=>open, 
                F1=>i2c_slave_i2c_slave_inst_n12748, Q1=>open, OFX0=>open, 
                F0=>i2c_slave_i2c_slave_inst_n12342, Q0=>open);
    i2c_slave_i2c_slave_inst_SLICE_622I: SLOGICB
      generic map (LUT0_INITVAL=>X"4848", LUT1_INITVAL=>X"5D55")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>stm_fpga_spare5_c, 
                B1=>i2c_slave_i2c_slave_inst_n12562, C1=>n14324, 
                D1=>i2c_slave_i2c_slave_inst_n14318, DI1=>'X', DI0=>'X', 
                A0=>i2c_slave_i2c_slave_inst_state_reg_2, B0=>state_reg_0, 
                C0=>i2c_slave_i2c_slave_inst_state_reg_1, D0=>'X', M0=>'X', 
                CE=>'X', CLK=>'X', LSR=>'X', OFX1=>open, 
                F1=>i2c_slave_i2c_slave_inst_int_clk_out_enable_34, Q1=>open, 
                OFX0=>open, F0=>i2c_slave_i2c_slave_inst_n12562, Q0=>open);
    i2c_slave_i2c_slave_inst_SLICE_623I: SLOGICB
      generic map (LUT0_INITVAL=>X"4444", LUT1_INITVAL=>X"F4FF")
      port map (M1=>'X', FXA=>'X', FXB=>'X', 
                A1=>i2c_slave_i2c_slave_inst_n14367, B1=>fpga_scl_out, 
                C1=>i2c_slave_i2c_slave_inst_n14370, 
                D1=>i2c_slave_i2c_slave_inst_data_valid_reg, DI1=>'X', 
                DI0=>'X', A0=>i2c_slave_i2c_slave_inst_scl_i_reg, 
                B0=>i2c_slave_i2c_slave_inst_last_scl_i_reg, C0=>'X', D0=>'X', 
                M0=>'X', CE=>'X', CLK=>'X', LSR=>'X', OFX1=>open, 
                F1=>i2c_slave_i2c_slave_inst_n11865, Q1=>open, OFX0=>open, 
                F0=>i2c_slave_i2c_slave_inst_n14367, Q0=>open);
    i2c_slave_i2c_slave_inst_SLICE_624I: SLOGICB
      generic map (LUT0_INITVAL=>X"FEFC", LUT1_INITVAL=>X"6060")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>sda_i_reg, 
                B1=>i2c_slave_i2c_slave_inst_last_sda_i_reg, 
                C1=>i2c_slave_i2c_slave_inst_scl_i_reg, D1=>'X', DI1=>'X', 
                DI0=>'X', A0=>i2c_slave_i2c_slave_inst_n14374, 
                B0=>i2c_slave_i2c_slave_inst_n32, C0=>n14324, 
                D0=>i2c_slave_i2c_slave_inst_n14916, M0=>'X', CE=>'X', 
                CLK=>'X', LSR=>'X', OFX1=>open, F1=>n14324, Q1=>open, 
                OFX0=>open, F0=>i2c_slave_i2c_slave_inst_int_clk_out_enable_36, 
                Q0=>open);
    i2c_slave_i2c_slave_inst_SLICE_625I: SLOGICB
      generic map (LUT0_INITVAL=>X"FFFE", LUT1_INITVAL=>X"1F0F")
      port map (M1=>'X', FXA=>'X', FXB=>'X', 
                A1=>i2c_slave_i2c_slave_inst_n14370, 
                B1=>i2c_slave_i2c_slave_inst_n11479, C1=>state_reg_0, 
                D1=>i2c_slave_i2c_slave_inst_n14374, DI1=>'X', DI0=>'X', 
                A0=>i2c_slave_i2c_slave_inst_bit_count_reg_2, 
                B0=>i2c_slave_i2c_slave_inst_bit_count_reg_1, 
                C0=>i2c_slave_i2c_slave_inst_bit_count_reg_0, 
                D0=>i2c_slave_i2c_slave_inst_bit_count_reg_3, M0=>'X', CE=>'X', 
                CLK=>'X', LSR=>'X', OFX1=>open, 
                F1=>i2c_slave_i2c_slave_inst_int_clk_out_enable_1, Q1=>open, 
                OFX0=>open, F0=>i2c_slave_i2c_slave_inst_n14370, Q0=>open);
    i2c_slave_i2c_slave_inst_SLICE_626I: SLOGICB
      generic map (LUT0_INITVAL=>X"B6B6", LUT1_INITVAL=>X"0700")
      port map (M1=>'X', FXA=>'X', FXB=>'X', 
                A1=>i2c_slave_i2c_slave_inst_n14379, 
                B1=>i2c_slave_i2c_slave_inst_scl_i_reg, 
                C1=>i2c_slave_i2c_slave_inst_n4108, 
                D1=>i2c_slave_i2c_slave_inst_n14, DI1=>'X', DI0=>'X', 
                A0=>i2c_slave_i2c_slave_inst_state_reg_2, 
                B0=>i2c_slave_i2c_slave_inst_state_reg_1, C0=>state_reg_0, 
                D0=>'X', M0=>'X', CE=>'X', CLK=>'X', LSR=>'X', OFX1=>open, 
                F1=>i2c_slave_i2c_slave_inst_int_clk_out_enable_181, Q1=>open, 
                OFX0=>open, F0=>i2c_slave_i2c_slave_inst_n14, Q0=>open);
    i2c_slave_i2c_slave_inst_SLICE_627I: SLOGICB
      generic map (LUT0_INITVAL=>X"EEEE", LUT1_INITVAL=>X"FF1F")
      port map (M1=>'X', FXA=>'X', FXB=>'X', 
                A1=>i2c_slave_i2c_slave_inst_state_reg_2, 
                B1=>i2c_slave_i2c_slave_inst_n14381, C1=>stm_fpga_spare5_c, 
                D1=>n14324, DI1=>'X', DI0=>'X', A0=>state_reg_0, 
                B0=>i2c_slave_i2c_slave_inst_state_reg_1, C0=>'X', D0=>'X', 
                M0=>'X', CE=>'X', CLK=>'X', LSR=>'X', OFX1=>open, 
                F1=>i2c_slave_i2c_slave_inst_n12184, Q1=>open, OFX0=>open, 
                F0=>i2c_slave_i2c_slave_inst_n14381, Q0=>open);
    i2c_slave_i2c_slave_inst_SLICE_628I: SLOGICB
      generic map (LUT0_INITVAL=>X"FFEF", LUT1_INITVAL=>X"FBFB")
      port map (M1=>'X', FXA=>'X', FXB=>'X', 
                A1=>i2c_slave_i2c_slave_inst_n14370, 
                B1=>i2c_slave_i2c_slave_inst_scl_i_reg, 
                C1=>i2c_slave_i2c_slave_inst_last_scl_i_reg, D1=>'X', DI1=>'X', 
                DI0=>'X', A0=>state_reg_0, 
                B0=>i2c_slave_i2c_slave_inst_state_reg_1, 
                C0=>i2c_slave_i2c_slave_inst_state_reg_2, 
                D0=>i2c_slave_i2c_slave_inst_n14323, M0=>'X', CE=>'X', 
                CLK=>'X', LSR=>'X', OFX1=>open, 
                F1=>i2c_slave_i2c_slave_inst_n14323, Q1=>open, OFX0=>open, 
                F0=>i2c_slave_i2c_slave_inst_n6480, Q0=>open);
    i2c_slave_i2c_slave_inst_SLICE_629I: SLOGICB
      generic map (LUT0_INITVAL=>X"E4EE", LUT1_INITVAL=>X"C505")
      port map (M1=>'X', FXA=>'X', FXB=>'X', 
                A1=>i2c_slave_i2c_slave_inst_n14323, 
                B1=>i2c_slave_i2c_slave_inst_n12346, C1=>state_reg_0, 
                D1=>i2c_slave_i2c_slave_inst_n14318, DI1=>'X', DI0=>'X', 
                A0=>i2c_slave_i2c_slave_inst_state_reg_1, 
                B0=>i2c_slave_i2c_slave_inst_n3787, 
                C0=>i2c_slave_i2c_slave_inst_last_scl_i_reg, 
                D0=>i2c_slave_i2c_slave_inst_scl_i_reg, M0=>'X', CE=>'X', 
                CLK=>'X', LSR=>'X', OFX1=>open, 
                F1=>i2c_slave_i2c_slave_inst_n3787, Q1=>open, OFX0=>open, 
                F0=>i2c_slave_i2c_slave_inst_n13386, Q0=>open);
    i2c_slave_i2c_slave_inst_SLICE_630I: SLOGICB
      generic map (LUT0_INITVAL=>X"32FA", LUT1_INITVAL=>X"1414")
      port map (M1=>'X', FXA=>'X', FXB=>'X', 
                A1=>i2c_slave_i2c_slave_inst_state_reg_1, B1=>state_reg_0, 
                C1=>i2c_slave_i2c_slave_inst_state_reg_2, D1=>'X', DI1=>'X', 
                DI0=>'X', A0=>i2c_slave_i2c_slave_inst_n12342, 
                B0=>i2c_slave_i2c_slave_inst_n3102, 
                C0=>i2c_slave_i2c_slave_inst_n4085, 
                D0=>i2c_slave_i2c_slave_inst_n14374, M0=>'X', CE=>'X', 
                CLK=>'X', LSR=>'X', OFX1=>open, 
                F1=>i2c_slave_i2c_slave_inst_n3102, Q1=>open, OFX0=>open, 
                F0=>i2c_slave_i2c_slave_inst_n4111, Q0=>open);
    lvds_rx_24_inst_SLICE_631I: SLOGICB
      generic map (LUT0_INITVAL=>X"8888", LUT1_INITVAL=>X"0200")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>lvds_rx_24_inst_n11, B1=>n15, 
                C1=>lvds_rx_24_inst_sr_16, D1=>lvds_rx_24_inst_n14359, 
                DI1=>'X', DI0=>'X', A0=>r_state_0_adj_1181, 
                B0=>r_state_1_adj_1180, C0=>'X', D0=>'X', M0=>'X', CE=>'X', 
                CLK=>'X', LSR=>'X', OFX1=>open, 
                F1=>lvds_rx_24_inst_sdr_rxclk_c_enable_73, Q1=>open, 
                OFX0=>open, F0=>lvds_rx_24_inst_n14359, Q0=>open);
    lvds_rx_24_inst_SLICE_632I: SLOGICB
      generic map (LUT0_INITVAL=>X"8000", LUT1_INITVAL=>X"8080")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>sample_count_1_adj_1186, 
                B1=>sample_count_0_adj_1187, C1=>sample_count_2_adj_1185, 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>sample_count_3_adj_1184, 
                B0=>n14305, C0=>lvds_rx_24_inst_sample_count_5, 
                D0=>lvds_rx_24_inst_sample_count_4, M0=>'X', CE=>'X', CLK=>'X', 
                LSR=>'X', OFX1=>open, F1=>n14305, Q1=>open, OFX0=>open, 
                F0=>n14269, Q0=>open);
    lvds_rx_24_inst_SLICE_633I: SLOGICB
      generic map (LUT0_INITVAL=>X"4444", LUT1_INITVAL=>X"FFFE")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>lvds_rx_24_inst_n12390, 
                B1=>lvds_rx_24_inst_n14355, C1=>lvds_rx_24_inst_n12382, 
                D1=>lvds_rx_24_inst_sr_15, DI1=>'X', DI0=>'X', 
                A0=>lvds_rx_24_inst_r_candidate_offset, 
                B0=>lvds_rx_24_inst_sr_32, C0=>'X', D0=>'X', M0=>'X', CE=>'X', 
                CLK=>'X', LSR=>'X', OFX1=>open, F1=>lvds_rx_24_inst_n42, 
                Q1=>open, OFX0=>open, F0=>lvds_rx_24_inst_n14355, Q0=>open);
    lvds_rx_24_inst_SLICE_634I: SLOGICB
      generic map (LUT0_INITVAL=>X"FFFE", LUT1_INITVAL=>X"FF4F")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>lvds_rx_24_inst_sr_16, 
                B1=>lvds_rx_24_inst_n11, C1=>lvds_rx_24_inst_n12436, D1=>n15, 
                DI1=>'X', DI0=>'X', A0=>lvds_rx_24_inst_n12434, 
                B0=>lvds_rx_24_inst_n12428, C0=>lvds_rx_24_inst_n36, 
                D0=>lvds_rx_24_inst_n14394, M0=>'X', CE=>'X', CLK=>'X', 
                LSR=>'X', OFX1=>open, F1=>lvds_rx_24_inst_n9592, Q1=>open, 
                OFX0=>open, F0=>lvds_rx_24_inst_n12436, Q0=>open);
    lvds_rx_24_inst_SLICE_635I: SLOGICB
      generic map (LUT0_INITVAL=>X"FFFE", LUT1_INITVAL=>X"FCAA")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>lvds_rx_24_inst_sr_6, 
                B1=>lvds_rx_24_inst_sr_28, C1=>lvds_rx_24_inst_sr_4, 
                D1=>lvds_rx_24_inst_r_candidate_offset, DI1=>'X', DI0=>'X', 
                A0=>lvds_rx_24_inst_n14391, B0=>lvds_rx_24_inst_n12446, 
                C0=>lvds_rx_24_inst_n24, D0=>lvds_rx_24_inst_n12444, M0=>'X', 
                CE=>'X', CLK=>'X', LSR=>'X', OFX1=>open, 
                F1=>lvds_rx_24_inst_n12444, Q1=>open, OFX0=>open, 
                F0=>lvds_rx_24_inst_n12428, Q0=>open);
    lvds_rx_24_inst_SLICE_636I: SLOGICB
      generic map (LUT0_INITVAL=>X"FBFA", LUT1_INITVAL=>X"EEEE")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>lvds_rx_24_inst_sr_3, 
                B1=>lvds_rx_24_inst_sr_5, C1=>'X', D1=>'X', DI1=>'X', DI0=>'X', 
                A0=>lvds_rx_24_inst_n12400, 
                B0=>lvds_rx_24_inst_r_candidate_offset, 
                C0=>lvds_rx_24_inst_sr_19, D0=>lvds_rx_24_inst_sr_2, M0=>'X', 
                CE=>'X', CLK=>'X', LSR=>'X', OFX1=>open, 
                F1=>lvds_rx_24_inst_n12400, Q1=>open, OFX0=>open, 
                F0=>lvds_rx_24_inst_n36, Q0=>open);
    lvds_rx_24_inst_SLICE_637I: SLOGICB
      generic map (LUT0_INITVAL=>X"45E5", LUT1_INITVAL=>X"4544")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>n15, 
                B1=>lvds_rx_24_inst_n12436, C1=>lvds_rx_24_inst_sr_16, 
                D1=>lvds_rx_24_inst_n11, DI1=>'X', DI0=>'X', 
                A0=>r_state_1_adj_1180, B0=>lvds_rx_24_inst_n25, 
                C0=>r_state_0_adj_1181, D0=>lvds_rx_24_inst_n9592, M0=>'X', 
                CE=>'X', CLK=>'X', LSR=>'X', OFX1=>open, 
                F1=>lvds_rx_24_inst_n25, Q1=>open, OFX0=>open, 
                F0=>lvds_rx_24_inst_sdr_rxclk_c_enable_82, Q0=>open);
    lvds_rx_24_inst_SLICE_638I: SLOGICB
      generic map (LUT0_INITVAL=>X"4444", LUT1_INITVAL=>X"00CA")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>lvds_rx_24_inst_n14238, 
                B1=>lvds_rx_24_inst_n14236, C1=>lvds_rx_24_inst_sr_31, 
                D1=>n14360, DI1=>'X', DI0=>'X', A0=>lvds_rx_24_inst_n40, 
                B0=>lvds_rx_24_inst_sr_14, C0=>'X', D0=>'X', M0=>'X', CE=>'X', 
                CLK=>'X', LSR=>'X', OFX1=>open, 
                F1=>lvds_rx_24_inst_sdr_rxclk_c_enable_5, Q1=>open, OFX0=>open, 
                F0=>lvds_rx_24_inst_n14236, Q0=>open);
    lvds_rx_24_inst_SLICE_639I: SLOGICB
      generic map (M0MUX=>"SIG", CLKMUX=>"SIG", CEMUX=>"VHI", SRMODE=>"ASYNC", 
                   LUT0_INITVAL=>X"0008", LUT1_INITVAL=>X"2222", 
                   CHECK_M0=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>lvds_rx_24_inst_n14237, 
                B1=>lvds_rx_24_inst_sr_16, C1=>'X', D1=>'X', DI1=>'X', 
                DI0=>'X', A0=>lvds_rx_24_inst_sr_15, B0=>lvds_rx_24_inst_sr_32, 
                C0=>lvds_rx_24_inst_sr_1, D0=>lvds_rx_24_inst_sr_17, 
                M0=>lvds_rx_24_inst_sr_30, CE=>'X', CLK=>sdr_rxclk_c, LSR=>'X', 
                OFX1=>open, F1=>lvds_rx_24_inst_n14238, Q1=>open, OFX0=>open, 
                F0=>lvds_rx_24_inst_n14237, Q0=>lvds_rx_24_inst_sr_32);
    i2c_slave_SLICE_640I: SLOGICB
      generic map (LUT0_INITVAL=>X"20FF", LUT1_INITVAL=>X"40FF")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>wb_adr_o_1, B1=>wb_adr_o_0, 
                C1=>i2c_slave_n11604, D1=>stm_fpga_spare5_c, DI1=>'X', 
                DI0=>'X', A0=>wb_adr_o_1, B0=>wb_adr_o_0, C0=>i2c_slave_n11604, 
                D0=>stm_fpga_spare5_c, M0=>'X', CE=>'X', CLK=>'X', LSR=>'X', 
                OFX1=>open, F1=>int_clk_out_enable_143, Q1=>open, OFX0=>open, 
                F0=>int_clk_out_enable_134, Q0=>open);
    SLICE_641I: SLOGICB
      generic map (LUT0_INITVAL=>X"DCDC", LUT1_INITVAL=>X"1010")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>wifi_i_empty, 
                B1=>shift_reg_15_N_1175_adj_1194, C1=>stm_fpga_spare2_c, 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>wifi_i_empty, 
                B0=>shift_reg_15_N_1175_adj_1194, C0=>stm_fpga_spare2_c, 
                D0=>'X', M0=>'X', CE=>'X', CLK=>'X', LSR=>'X', OFX1=>open, 
                F1=>n14287, Q1=>open, OFX0=>open, F0=>internal_80MHz_enable_51, 
                Q0=>open);
    SLICE_642I: SLOGICB
      generic map (LUT0_INITVAL=>X"1010", LUT1_INITVAL=>X"DCDC")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>subg_q_empty, 
                B1=>shift_reg_15_N_1175_adj_1193, C1=>stm_fpga_spare1_c, 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>subg_q_empty, 
                B0=>shift_reg_15_N_1175_adj_1193, C0=>stm_fpga_spare1_c, 
                D0=>'X', M0=>'X', CE=>'X', CLK=>'X', LSR=>'X', OFX1=>open, 
                F1=>internal_80MHz_enable_35, Q1=>open, OFX0=>open, F0=>n14288, 
                Q0=>open);
    subg_i_fifo_dc_SLICE_643I: SLOGICB
      generic map (M0MUX=>"SIG", CLKMUX=>"SIG", CEMUX=>"INV", LSRMUX=>"SIG", 
                   SRMODE=>"ASYNC", LUT0_INITVAL=>X"2424", 
                   LUT1_INITVAL=>X"4242", CHECK_M0=>TRUE, CHECK_CE=>TRUE, 
                   CHECK_LSR=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>subg_i_fifo_dc_w_gcount_r22, 
                B1=>subg_i_fifo_dc_rcount_2, C1=>subg_i_fifo_dc_rptr_2, 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>subg_i_fifo_dc_w_gcount_r22, 
                B0=>subg_i_fifo_dc_rcount_2, C0=>subg_i_fifo_dc_rptr_2, 
                D0=>'X', M0=>subg_i_fifo_dc_rcount_2, CE=>subg_i_empty, 
                CLK=>internal_80MHz, LSR=>main_reset_n_N_208, OFX1=>open, 
                F1=>subg_i_fifo_dc_empty_cmp_clr, Q1=>open, OFX0=>open, 
                F0=>subg_i_fifo_dc_empty_cmp_set, Q0=>subg_i_fifo_dc_rptr_2);
    subg_i_fifo_dc_SLICE_644I: SLOGICB
      generic map (M0MUX=>"SIG", CLKMUX=>"SIG", CEMUX=>"SIG", SRMODE=>"ASYNC", 
                   LUT0_INITVAL=>X"1818", LUT1_INITVAL=>X"8181", 
                   CHECK_M0=>TRUE, CHECK_CE=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>subg_i_fifo_dc_r_gcount_w22, 
                B1=>subg_i_fifo_dc_wcount_2, C1=>subg_i_fifo_dc_wptr_2, 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>subg_i_fifo_dc_r_gcount_w22, 
                B0=>subg_i_fifo_dc_wcount_2, C0=>subg_i_fifo_dc_wptr_2, 
                D0=>'X', M0=>subg_i_fifo_dc_wcount_2, 
                CE=>subg_i_fifo_dc_wren_i, CLK=>sdr_rxclk_c, LSR=>'X', 
                OFX1=>open, F1=>subg_i_fifo_dc_full_cmp_clr, Q1=>open, 
                OFX0=>open, F0=>subg_i_fifo_dc_full_cmp_set, 
                Q0=>subg_i_fifo_dc_wptr_2);
    lvds_rx_09_inst_SLICE_645I: SLOGICB
      generic map (M0MUX=>"SIG", CLKMUX=>"SIG", CEMUX=>"VHI", SRMODE=>"ASYNC", 
                   LUT0_INITVAL=>X"0808", LUT1_INITVAL=>X"0080", 
                   CHECK_M0=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', 
                A1=>lvds_rx_09_inst_candidate_sr_14, 
                B1=>lvds_rx_09_inst_n14362, C1=>n102, D1=>sr_16, DI1=>'X', 
                DI0=>'X', A0=>lvds_rx_09_inst_candidate_sr_14, 
                B0=>lvds_rx_09_inst_n14362, C0=>sr_16, D0=>'X', 
                M0=>lvds_rx_09_inst_sr_14, CE=>'X', CLK=>sdr_rxclk_c, LSR=>'X', 
                OFX1=>open, F1=>lvds_rx_09_inst_n12718, Q1=>open, OFX0=>open, 
                F0=>lvds_rx_09_inst_n12404, Q0=>sr_16);
    wifi_i_fifo_dc_SLICE_646I: SLOGICB
      generic map (M0MUX=>"SIG", CLKMUX=>"SIG", CEMUX=>"INV", LSRMUX=>"SIG", 
                   SRMODE=>"ASYNC", LUT0_INITVAL=>X"2424", 
                   LUT1_INITVAL=>X"4242", CHECK_M0=>TRUE, CHECK_CE=>TRUE, 
                   CHECK_LSR=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>wifi_i_fifo_dc_w_gcount_r22, 
                B1=>wifi_i_fifo_dc_rcount_2, C1=>wifi_i_fifo_dc_rptr_2, 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>wifi_i_fifo_dc_w_gcount_r22, 
                B0=>wifi_i_fifo_dc_rcount_2, C0=>wifi_i_fifo_dc_rptr_2, 
                D0=>'X', M0=>wifi_i_fifo_dc_rcount_2, CE=>wifi_i_empty, 
                CLK=>internal_80MHz, LSR=>main_reset_n_N_208, OFX1=>open, 
                F1=>wifi_i_fifo_dc_empty_cmp_clr, Q1=>open, OFX0=>open, 
                F0=>wifi_i_fifo_dc_empty_cmp_set, Q0=>wifi_i_fifo_dc_rptr_2);
    wifi_i_fifo_dc_SLICE_647I: SLOGICB
      generic map (M0MUX=>"SIG", CLKMUX=>"SIG", CEMUX=>"SIG", SRMODE=>"ASYNC", 
                   LUT0_INITVAL=>X"1818", LUT1_INITVAL=>X"8181", 
                   CHECK_M0=>TRUE, CHECK_CE=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>wifi_i_fifo_dc_r_gcount_w22, 
                B1=>wifi_i_fifo_dc_wcount_2, C1=>wifi_i_fifo_dc_wptr_2, 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>wifi_i_fifo_dc_r_gcount_w22, 
                B0=>wifi_i_fifo_dc_wcount_2, C0=>wifi_i_fifo_dc_wptr_2, 
                D0=>'X', M0=>wifi_i_fifo_dc_wcount_2, 
                CE=>wifi_i_fifo_dc_wren_i, CLK=>sdr_rxclk_c, LSR=>'X', 
                OFX1=>open, F1=>wifi_i_fifo_dc_full_cmp_clr, Q1=>open, 
                OFX0=>open, F0=>wifi_i_fifo_dc_full_cmp_set, 
                Q0=>wifi_i_fifo_dc_wptr_2);
    subg_q_fifo_dc_SLICE_648I: SLOGICB
      generic map (M0MUX=>"SIG", CLKMUX=>"SIG", CEMUX=>"INV", LSRMUX=>"SIG", 
                   SRMODE=>"ASYNC", LUT0_INITVAL=>X"2424", 
                   LUT1_INITVAL=>X"4242", CHECK_M0=>TRUE, CHECK_CE=>TRUE, 
                   CHECK_LSR=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>subg_q_fifo_dc_w_gcount_r22, 
                B1=>subg_q_fifo_dc_rcount_2, C1=>subg_q_fifo_dc_rptr_2, 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>subg_q_fifo_dc_w_gcount_r22, 
                B0=>subg_q_fifo_dc_rcount_2, C0=>subg_q_fifo_dc_rptr_2, 
                D0=>'X', M0=>subg_q_fifo_dc_rcount_2, CE=>subg_q_empty, 
                CLK=>internal_80MHz, LSR=>main_reset_n_N_208, OFX1=>open, 
                F1=>subg_q_fifo_dc_empty_cmp_clr, Q1=>open, OFX0=>open, 
                F0=>subg_q_fifo_dc_empty_cmp_set, Q0=>subg_q_fifo_dc_rptr_2);
    subg_q_fifo_dc_SLICE_649I: SLOGICB
      generic map (M0MUX=>"SIG", CLKMUX=>"SIG", CEMUX=>"SIG", SRMODE=>"ASYNC", 
                   LUT0_INITVAL=>X"1818", LUT1_INITVAL=>X"8181", 
                   CHECK_M0=>TRUE, CHECK_CE=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>subg_q_fifo_dc_r_gcount_w22, 
                B1=>subg_q_fifo_dc_wcount_2, C1=>subg_q_fifo_dc_wptr_2, 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>subg_q_fifo_dc_r_gcount_w22, 
                B0=>subg_q_fifo_dc_wcount_2, C0=>subg_q_fifo_dc_wptr_2, 
                D0=>'X', M0=>subg_q_fifo_dc_wcount_2, 
                CE=>subg_q_fifo_dc_wren_i, CLK=>sdr_rxclk_c, LSR=>'X', 
                OFX1=>open, F1=>subg_q_fifo_dc_full_cmp_clr, Q1=>open, 
                OFX0=>open, F0=>subg_q_fifo_dc_full_cmp_set, 
                Q0=>subg_q_fifo_dc_wptr_2);
    SLICE_650I: SLOGICB
      generic map (LUT0_INITVAL=>X"1010", LUT1_INITVAL=>X"DCDC")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>wifi_q_empty, 
                B1=>shift_reg_15_N_1175_adj_1195, C1=>stm_fpga_spare2_c, 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>wifi_q_empty, 
                B0=>shift_reg_15_N_1175_adj_1195, C0=>stm_fpga_spare2_c, 
                D0=>'X', M0=>'X', CE=>'X', CLK=>'X', LSR=>'X', OFX1=>open, 
                F1=>internal_80MHz_enable_67, Q1=>open, OFX0=>open, F0=>n14285, 
                Q0=>open);
    i2c_slave_SLICE_651I: SLOGICB
      generic map (LUT0_INITVAL=>X"8080", LUT1_INITVAL=>X"0010")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>wb_adr_o_0, B1=>wb_adr_o_1, 
                C1=>i2c_slave_n6568, D1=>wb_adr_o_2, DI1=>'X', DI0=>'X', 
                A0=>wb_adr_o_0, B0=>wb_adr_o_1, C0=>wb_adr_o_2, D0=>'X', 
                M0=>'X', CE=>'X', CLK=>'X', LSR=>'X', OFX1=>open, 
                F1=>int_clk_out_enable_122, Q1=>open, OFX0=>open, F0=>n12168, 
                Q0=>open);
    i2c_slave_SLICE_652I: SLOGICB
      generic map (LUT0_INITVAL=>X"BFFF", LUT1_INITVAL=>X"4040")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>i2c_slave_data_out_valid, 
                B1=>bus_addressed, C1=>i2c_slave_n1526, D1=>'X', DI1=>'X', 
                DI0=>'X', A0=>i2c_slave_data_out_valid, B0=>bus_addressed, 
                C0=>stm_fpga_spare5_c, D0=>i2c_slave_n1526, M0=>'X', CE=>'X', 
                CLK=>'X', LSR=>'X', OFX1=>open, F1=>i2c_slave_n12856, Q1=>open, 
                OFX0=>open, F0=>i2c_slave_n12324, Q0=>open);
    i2c_slave_SLICE_653I: SLOGICB
      generic map (M0MUX=>"SIG", CLKMUX=>"SIG", CEMUX=>"SIG", GSR=>"DISABLED", 
                   SRMODE=>"ASYNC", LUT0_INITVAL=>X"8080", 
                   LUT1_INITVAL=>X"0808", CHECK_M0=>TRUE, CHECK_CE=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>i2c_slave_n1524, B1=>wb_ack_i, 
                C1=>i2c_slave_last_cycle_reg, D1=>'X', DI1=>'X', DI0=>'X', 
                A0=>i2c_slave_n1524, B0=>wb_ack_i, 
                C0=>i2c_slave_last_cycle_reg, D0=>'X', 
                M0=>i2c_slave_data_out_last, 
                CE=>i2c_slave_int_clk_out_enable_12, CLK=>int_clk_out, 
                LSR=>'X', OFX1=>open, F1=>i2c_slave_n11557, Q1=>open, 
                OFX0=>open, F0=>i2c_slave_n11558, Q0=>i2c_slave_last_cycle_reg);
    i2c_slave_SLICE_654I: SLOGICB
      generic map (LUT0_INITVAL=>X"FFFE", LUT1_INITVAL=>X"8000")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>i2c_slave_count_reg_1, 
                B1=>i2c_slave_count_reg_0, C1=>i2c_slave_count_reg_3, 
                D1=>i2c_slave_count_reg_2, DI1=>'X', DI0=>'X', 
                A0=>i2c_slave_count_reg_1, B0=>i2c_slave_count_reg_2, 
                C0=>i2c_slave_count_reg_4, D0=>i2c_slave_count_reg_3, M0=>'X', 
                CE=>'X', CLK=>'X', LSR=>'X', OFX1=>open, F1=>i2c_slave_n14281, 
                Q1=>open, OFX0=>open, F0=>i2c_slave_n13214, Q0=>open);
    i2c_slave_SLICE_655I: SLOGICB
      generic map (LUT0_INITVAL=>X"2020", LUT1_INITVAL=>X"4040")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>wb_adr_o_1, B1=>wb_adr_o_0, 
                C1=>i2c_slave_n11604, D1=>'X', DI1=>'X', DI0=>'X', 
                A0=>wb_adr_o_1, B0=>wb_adr_o_0, C0=>i2c_slave_n11604, D0=>'X', 
                M0=>'X', CE=>'X', CLK=>'X', LSR=>'X', OFX1=>open, 
                F1=>int_clk_out_enable_141, Q1=>open, OFX0=>open, 
                F0=>int_clk_out_enable_136, Q0=>open);
    i2c_slave_i2c_slave_inst_SLICE_656I: SLOGICB
      generic map (LUT0_INITVAL=>X"4040", LUT1_INITVAL=>X"0008")
      port map (M1=>'X', FXA=>'X', FXB=>'X', 
                A1=>i2c_slave_i2c_slave_inst_last_scl_i_reg, B1=>mode_read_reg, 
                C1=>i2c_slave_i2c_slave_inst_state_reg_2, 
                D1=>i2c_slave_i2c_slave_inst_scl_i_reg, DI1=>'X', DI0=>'X', 
                A0=>i2c_slave_i2c_slave_inst_scl_i_reg, 
                B0=>i2c_slave_i2c_slave_inst_last_scl_i_reg, C0=>mode_read_reg, 
                D0=>'X', M0=>'X', CE=>'X', CLK=>'X', LSR=>'X', OFX1=>open, 
                F1=>i2c_slave_i2c_slave_inst_n14178, Q1=>open, OFX0=>open, 
                F0=>i2c_slave_i2c_slave_inst_n14320, Q0=>open);
    i2c_slave_i2c_slave_inst_SLICE_657I: SLOGICB
      generic map (LUT0_INITVAL=>X"2000", LUT1_INITVAL=>X"FEFE")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>state_reg_0, 
                B1=>i2c_slave_i2c_slave_inst_state_reg_1, 
                C1=>i2c_slave_i2c_slave_inst_state_reg_2, D1=>'X', DI1=>'X', 
                DI0=>'X', A0=>state_reg_0, 
                B0=>i2c_slave_i2c_slave_inst_state_reg_2, 
                C0=>i2c_slave_i2c_slave_inst_data_valid_reg, 
                D0=>i2c_slave_i2c_slave_inst_state_reg_1, M0=>'X', CE=>'X', 
                CLK=>'X', LSR=>'X', OFX1=>open, 
                F1=>i2c_slave_i2c_slave_inst_n14326, Q1=>open, OFX0=>open, 
                F0=>i2c_slave_i2c_slave_inst_n12668, Q0=>open);
    i2c_slave_i2c_slave_inst_SLICE_658I: SLOGICB
      generic map (LUT0_INITVAL=>X"FDFD", LUT1_INITVAL=>X"FFFB")
      port map (M1=>'X', FXA=>'X', FXB=>'X', 
                A1=>i2c_slave_i2c_slave_inst_n14370, 
                B1=>i2c_slave_i2c_slave_inst_scl_i_reg, 
                C1=>i2c_slave_i2c_slave_inst_last_scl_i_reg, 
                D1=>i2c_slave_i2c_slave_inst_n14381, DI1=>'X', DI0=>'X', 
                A0=>i2c_slave_i2c_slave_inst_scl_i_reg, 
                B0=>i2c_slave_i2c_slave_inst_last_scl_i_reg, 
                C0=>i2c_slave_i2c_slave_inst_n14370, D0=>'X', M0=>'X', CE=>'X', 
                CLK=>'X', LSR=>'X', OFX1=>open, 
                F1=>i2c_slave_i2c_slave_inst_n14297, Q1=>open, OFX0=>open, 
                F0=>i2c_slave_i2c_slave_inst_n14321, Q0=>open);
    i2c_slave_i2c_slave_inst_SLICE_659I: SLOGICB
      generic map (M0MUX=>"SIG", CLKMUX=>"SIG", CEMUX=>"VHI", 
                   REG0_REGSET=>"SET", GSR=>"DISABLED", SRMODE=>"ASYNC", 
                   LUT0_INITVAL=>X"00D7", LUT1_INITVAL=>X"7D55", 
                   CHECK_M0=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>stm_fpga_spare5_c, 
                B1=>sda_i_reg, C1=>i2c_slave_i2c_slave_inst_last_sda_i_reg, 
                D1=>i2c_slave_i2c_slave_inst_scl_i_reg, DI1=>'X', DI0=>'X', 
                A0=>i2c_slave_i2c_slave_inst_scl_i_reg, B0=>sda_i_reg, 
                C0=>i2c_slave_i2c_slave_inst_last_sda_i_reg, 
                D0=>i2c_slave_i2c_slave_inst_state_reg_1, M0=>sda_i_reg, 
                CE=>'X', CLK=>int_clk_out, LSR=>'X', OFX1=>open, 
                F1=>i2c_slave_i2c_slave_inst_n6297, Q1=>open, OFX0=>open, 
                F0=>i2c_slave_i2c_slave_inst_int_clk_out_enable_29, 
                Q0=>i2c_slave_i2c_slave_inst_last_sda_i_reg);
    lvds_rx_24_inst_SLICE_660I: SLOGICB
      generic map (LUT0_INITVAL=>X"1040", LUT1_INITVAL=>X"1010")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>r_state_1_adj_1180, 
                B1=>lvds_rx_24_inst_match_count_0, C1=>r_state_0_adj_1181, 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>r_state_1_adj_1180, 
                B0=>lvds_rx_24_inst_match_count_1, C0=>r_state_0_adj_1181, 
                D0=>lvds_rx_24_inst_match_count_0, M0=>'X', CE=>'X', CLK=>'X', 
                LSR=>'X', OFX1=>open, F1=>lvds_rx_24_inst_n13114, Q1=>open, 
                OFX0=>open, F0=>lvds_rx_24_inst_n13106, Q0=>open);
    wifi_q_fifo_dc_SLICE_661I: SLOGICB
      generic map (M0MUX=>"SIG", CLKMUX=>"SIG", CEMUX=>"INV", LSRMUX=>"SIG", 
                   SRMODE=>"ASYNC", LUT0_INITVAL=>X"2424", 
                   LUT1_INITVAL=>X"4242", CHECK_M0=>TRUE, CHECK_CE=>TRUE, 
                   CHECK_LSR=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>wifi_q_fifo_dc_w_gcount_r22, 
                B1=>wifi_q_fifo_dc_rcount_2, C1=>wifi_q_fifo_dc_rptr_2, 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>wifi_q_fifo_dc_w_gcount_r22, 
                B0=>wifi_q_fifo_dc_rcount_2, C0=>wifi_q_fifo_dc_rptr_2, 
                D0=>'X', M0=>wifi_q_fifo_dc_rcount_2, CE=>wifi_q_empty, 
                CLK=>internal_80MHz, LSR=>main_reset_n_N_208, OFX1=>open, 
                F1=>wifi_q_fifo_dc_empty_cmp_clr, Q1=>open, OFX0=>open, 
                F0=>wifi_q_fifo_dc_empty_cmp_set, Q0=>wifi_q_fifo_dc_rptr_2);
    wifi_q_fifo_dc_SLICE_662I: SLOGICB
      generic map (M0MUX=>"SIG", CLKMUX=>"SIG", CEMUX=>"SIG", SRMODE=>"ASYNC", 
                   LUT0_INITVAL=>X"1818", LUT1_INITVAL=>X"8181", 
                   CHECK_M0=>TRUE, CHECK_CE=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>wifi_q_fifo_dc_r_gcount_w22, 
                B1=>wifi_q_fifo_dc_wcount_2, C1=>wifi_q_fifo_dc_wptr_2, 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>wifi_q_fifo_dc_r_gcount_w22, 
                B0=>wifi_q_fifo_dc_wcount_2, C0=>wifi_q_fifo_dc_wptr_2, 
                D0=>'X', M0=>wifi_q_fifo_dc_wcount_2, 
                CE=>wifi_q_fifo_dc_wren_i, CLK=>sdr_rxclk_c, LSR=>'X', 
                OFX1=>open, F1=>wifi_q_fifo_dc_full_cmp_clr, Q1=>open, 
                OFX0=>open, F0=>wifi_q_fifo_dc_full_cmp_set, 
                Q0=>wifi_q_fifo_dc_wptr_2);
    lvds_rx_24_inst_SLICE_663I: SLOGICB
      generic map (LUT0_INITVAL=>X"EEEE", LUT1_INITVAL=>X"FFFE")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>lvds_rx_24_inst_sr_11, 
                B1=>lvds_rx_24_inst_sr_21, C1=>lvds_rx_24_inst_sr_18, 
                D1=>lvds_rx_24_inst_sr_25, DI1=>'X', DI0=>'X', 
                A0=>lvds_rx_24_inst_sr_12, B0=>lvds_rx_24_inst_sr_13, C0=>'X', 
                D0=>'X', M0=>'X', CE=>'X', CLK=>'X', LSR=>'X', OFX1=>open, 
                F1=>lvds_rx_24_inst_n12390, Q1=>open, OFX0=>open, 
                F0=>lvds_rx_24_inst_n12382, Q0=>open);
    lvds_rx_24_inst_SLICE_664I: SLOGICB
      generic map (LUT0_INITVAL=>X"FFFE", LUT1_INITVAL=>X"FFFE")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>lvds_rx_24_inst_sr_31, 
                B1=>lvds_rx_24_inst_sr_1, C1=>lvds_rx_24_inst_sr_17, 
                D1=>lvds_rx_24_inst_sr_29, DI1=>'X', DI0=>'X', 
                A0=>lvds_rx_24_inst_sr_7, B0=>lvds_rx_24_inst_sr_27, 
                C0=>lvds_rx_24_inst_sr_23, D0=>lvds_rx_24_inst_sr_20, M0=>'X', 
                CE=>'X', CLK=>'X', LSR=>'X', OFX1=>open, 
                F1=>lvds_rx_24_inst_n12360, Q1=>open, OFX0=>open, 
                F0=>lvds_rx_24_inst_n12358, Q0=>open);
    i2c_slave_i2c_slave_inst_SLICE_665I: SLOGICB
      generic map (LUT0_INITVAL=>X"EEEE", LUT1_INITVAL=>X"EEEE")
      port map (M1=>'X', FXA=>'X', FXB=>'X', 
                A1=>i2c_slave_i2c_slave_inst_n14370, 
                B1=>i2c_slave_i2c_slave_inst_n11479, C1=>'X', D1=>'X', 
                DI1=>'X', DI0=>'X', A0=>i2c_slave_i2c_slave_inst_data_reg_0, 
                B0=>i2c_slave_i2c_slave_inst_data_reg_3, C0=>'X', D0=>'X', 
                M0=>'X', CE=>'X', CLK=>'X', LSR=>'X', OFX1=>open, F1=>n14299, 
                Q1=>open, OFX0=>open, F0=>i2c_slave_i2c_slave_inst_n12528, 
                Q0=>open);
    lvds_rx_09_inst_SLICE_666I: SLOGICB
      generic map (LUT0_INITVAL=>X"FFFE", LUT1_INITVAL=>X"1000")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>lvds_rx_09_inst_sr_0, 
                B1=>lvds_rx_09_inst_sr_30, C1=>lvds_rx_09_inst_sr_31, 
                D1=>lvds_rx_09_inst_sr_14, DI1=>'X', DI0=>'X', 
                A0=>lvds_rx_09_inst_sr_2, B0=>lvds_rx_09_inst_sr_6, 
                C0=>lvds_rx_09_inst_sr_10, D0=>lvds_rx_09_inst_sr_20, M0=>'X', 
                CE=>'X', CLK=>'X', LSR=>'X', OFX1=>open, 
                F1=>lvds_rx_09_inst_n12314, Q1=>open, OFX0=>open, 
                F0=>lvds_rx_09_inst_n12516, Q0=>open);
    lvds_rx_09_inst_SLICE_667I: SLOGICB
      generic map (LUT0_INITVAL=>X"FFFE", LUT1_INITVAL=>X"EEEE")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>lvds_rx_09_inst_sr_17, 
                B1=>lvds_rx_09_inst_sr_1, C1=>'X', D1=>'X', DI1=>'X', DI0=>'X', 
                A0=>lvds_rx_09_inst_sr_7, B0=>lvds_rx_09_inst_sr_5, 
                C0=>lvds_rx_09_inst_sr_19, D0=>lvds_rx_09_inst_sr_12, M0=>'X', 
                CE=>'X', CLK=>'X', LSR=>'X', OFX1=>open, 
                F1=>lvds_rx_09_inst_n12502, Q1=>open, OFX0=>open, 
                F0=>lvds_rx_09_inst_n12504, Q0=>open);
    SLICE_668I: SLOGICB
      generic map (LUT0_INITVAL=>X"EEEE", LUT1_INITVAL=>X"DFFF")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>tx_counter_2, B1=>n13234, 
                C1=>tx_counter_1, D1=>tx_counter_3, DI1=>'X', DI0=>'X', 
                A0=>tx_counter_4, B0=>tx_counter_6, C0=>'X', D0=>'X', M0=>'X', 
                CE=>'X', CLK=>'X', LSR=>'X', OFX1=>open, F1=>n14293, Q1=>open, 
                OFX0=>open, F0=>n13230, Q0=>open);
    my_led_SLICE_669I: SLOGICB
      generic map (LUT0_INITVAL=>X"EEEE", LUT1_INITVAL=>X"EEEE")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>my_led_counter_18, 
                B1=>my_led_counter_15, C1=>'X', D1=>'X', DI1=>'X', DI0=>'X', 
                A0=>my_led_counter_17, B0=>my_led_counter_2, C0=>'X', D0=>'X', 
                M0=>'X', CE=>'X', CLK=>'X', LSR=>'X', OFX1=>open, 
                F1=>my_led_n12920, Q1=>open, OFX0=>open, F0=>my_led_n12918, 
                Q0=>open);
    my_led_SLICE_670I: SLOGICB
      generic map (LUT0_INITVAL=>X"EEEE", LUT1_INITVAL=>X"FFFE")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>my_led_counter_5, 
                B1=>my_led_counter_23, C1=>my_led_counter_0, 
                D1=>my_led_counter_14, DI1=>'X', DI0=>'X', 
                A0=>my_led_counter_25, B0=>my_led_counter_4, C0=>'X', D0=>'X', 
                M0=>'X', CE=>'X', CLK=>'X', LSR=>'X', OFX1=>open, 
                F1=>my_led_n12936, Q1=>open, OFX0=>open, F0=>my_led_n12924, 
                Q0=>open);
    i2c_slave_i2c_slave_inst_SLICE_671I: SLOGICB
      generic map (LUT0_INITVAL=>X"FF02", LUT1_INITVAL=>X"2222")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>sda_i_reg, 
                B1=>i2c_slave_i2c_slave_inst_last_sda_i_reg, C1=>'X', D1=>'X', 
                DI1=>'X', DI0=>'X', A0=>i2c_slave_i2c_slave_inst_n14, 
                B0=>i2c_slave_i2c_slave_inst_n4108, 
                C0=>i2c_slave_i2c_slave_inst_n14329, 
                D0=>i2c_slave_i2c_slave_inst_start_bit, M0=>'X', CE=>'X', 
                CLK=>'X', LSR=>'X', OFX1=>open, 
                F1=>i2c_slave_i2c_slave_inst_n14379, Q1=>open, OFX0=>open, 
                F0=>i2c_slave_i2c_slave_inst_int_clk_out_enable_180, Q0=>open);
    lvds_rx_09_inst_SLICE_672I: SLOGICB
      generic map (LUT0_INITVAL=>X"FFFE", LUT1_INITVAL=>X"EEEE")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>lvds_rx_09_inst_sr_11, 
                B1=>lvds_rx_09_inst_sr_25, C1=>'X', D1=>'X', DI1=>'X', 
                DI0=>'X', A0=>lvds_rx_09_inst_sr_21, 
                B0=>lvds_rx_09_inst_n12476, C0=>lvds_rx_09_inst_sr_11, 
                D0=>lvds_rx_09_inst_sr_25, M0=>'X', CE=>'X', CLK=>'X', 
                LSR=>'X', OFX1=>open, F1=>lvds_rx_09_inst_n12478, Q1=>open, 
                OFX0=>open, F0=>lvds_rx_09_inst_n12682, Q0=>open);
    i2c_slave_SLICE_673I: SLOGICB
      generic map (LUT0_INITVAL=>X"0010", LUT1_INITVAL=>X"FFFE")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>i2c_slave_wb_adr_o_10, 
                B1=>i2c_slave_wb_adr_o_12, C1=>i2c_slave_wb_adr_o_14, 
                D1=>i2c_slave_wb_adr_o_9, DI1=>'X', DI0=>'X', A0=>wb_adr_o_6, 
                B0=>wb_adr_o_7, C0=>n14351, D0=>n11664, M0=>'X', CE=>'X', 
                CLK=>'X', LSR=>'X', OFX1=>open, F1=>i2c_slave_n14319, Q1=>open, 
                OFX0=>open, F0=>i2c_slave_n12984, Q0=>open);
    wifi_q_spi_SLICE_674I: SLOGICB
      generic map (LUT0_INITVAL=>X"EEEE", LUT1_INITVAL=>X"8888")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>wifi_q_spi_shift_reg_0, 
                B1=>shift_reg_15_N_1175_adj_1195, C1=>'X', D1=>'X', DI1=>'X', 
                DI0=>'X', A0=>wifi_q_spi_bit_counter_2, 
                B0=>wifi_q_spi_bit_counter_1, C0=>'X', D0=>'X', M0=>'X', 
                CE=>'X', CLK=>'X', LSR=>'X', OFX1=>open, 
                F1=>wifi_q_spi_o_mosi_N_1176, Q1=>open, OFX0=>open, 
                F0=>wifi_q_spi_n13138, Q0=>open);
    subg_q_spi_SLICE_675I: SLOGICB
      generic map (LUT0_INITVAL=>X"EEEE", LUT1_INITVAL=>X"8888")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>subg_q_spi_shift_reg_0, 
                B1=>shift_reg_15_N_1175_adj_1193, C1=>'X', D1=>'X', DI1=>'X', 
                DI0=>'X', A0=>subg_q_spi_bit_counter_2, 
                B0=>subg_q_spi_bit_counter_1, C0=>'X', D0=>'X', M0=>'X', 
                CE=>'X', CLK=>'X', LSR=>'X', OFX1=>open, 
                F1=>subg_q_spi_o_mosi_N_1176, Q1=>open, OFX0=>open, 
                F0=>subg_q_spi_n13122, Q0=>open);
    i2c_slave_SLICE_676I: SLOGICB
      generic map (LUT0_INITVAL=>X"FE00", LUT1_INITVAL=>X"FEFE")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>i2c_slave_count_reg_5, 
                B1=>i2c_slave_count_reg_6, C1=>i2c_slave_count_reg_0, D1=>'X', 
                DI1=>'X', DI0=>'X', A0=>i2c_slave_n14376, B0=>i2c_slave_n11, 
                C0=>i2c_slave_n14327, D0=>i2c_slave_n1528, M0=>'X', CE=>'X', 
                CLK=>'X', LSR=>'X', OFX1=>open, F1=>i2c_slave_n13212, Q1=>open, 
                OFX0=>open, F0=>i2c_slave_n14276, Q0=>open);
    lvds_rx_09_inst_SLICE_677I: SLOGICB
      generic map (LUT0_INITVAL=>X"8888", LUT1_INITVAL=>X"FFFB")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>sample_count_6, 
                B1=>sample_count_0, C1=>lvds_rx_09_inst_sample_count_4, 
                D1=>sample_count_7, DI1=>'X', DI0=>'X', A0=>sample_count_2, 
                B0=>sample_count_3, C0=>'X', D0=>'X', M0=>'X', CE=>'X', 
                CLK=>'X', LSR=>'X', OFX1=>open, F1=>lvds_rx_09_inst_n10, 
                Q1=>open, OFX0=>open, F0=>lvds_rx_09_inst_n13290, Q0=>open);
    lvds_rx_24_inst_SLICE_678I: SLOGICB
      generic map (LUT0_INITVAL=>X"8888", LUT1_INITVAL=>X"F7F7")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>r_state_0_adj_1181, 
                B1=>r_state_1_adj_1180, C1=>n15, D1=>'X', DI1=>'X', DI0=>'X', 
                A0=>sample_count_3_adj_1184, B0=>sample_count_2_adj_1185, 
                C0=>'X', D0=>'X', M0=>'X', CE=>'X', CLK=>'X', LSR=>'X', 
                OFX1=>open, F1=>lvds_rx_24_inst_n12244, Q1=>open, OFX0=>open, 
                F0=>lvds_rx_24_inst_n13280, Q0=>open);
    i2c_slave_i2c_slave_inst_SLICE_679I: SLOGICB
      generic map (LUT0_INITVAL=>X"000B", LUT1_INITVAL=>X"5D5D")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>stm_fpga_spare5_c, 
                B1=>i2c_slave_i2c_slave_inst_n13967, C1=>n14324, D1=>'X', 
                DI1=>'X', DI0=>'X', A0=>i2c_slave_i2c_slave_inst_n14367, 
                B0=>fpga_scl_out, C0=>i2c_slave_i2c_slave_inst_n12664, 
                D0=>n14324, M0=>'X', CE=>'X', CLK=>'X', LSR=>'X', OFX1=>open, 
                F1=>i2c_slave_i2c_slave_inst_int_clk_out_enable_35, Q1=>open, 
                OFX0=>open, 
                F0=>i2c_slave_i2c_slave_inst_int_clk_out_enable_195, Q0=>open);
    i2c_slave_i2c_slave_inst_SLICE_680I: SLOGICB
      generic map (LUT0_INITVAL=>X"F0F1", LUT1_INITVAL=>X"4444")
      port map (M1=>'X', FXA=>'X', FXB=>'X', 
                A1=>i2c_slave_i2c_slave_inst_n14370, 
                B1=>i2c_slave_i2c_slave_inst_data_valid_reg, C1=>'X', D1=>'X', 
                DI1=>'X', DI0=>'X', 
                A0=>i2c_slave_i2c_slave_inst_bit_count_reg_2, 
                B0=>i2c_slave_i2c_slave_inst_bit_count_reg_1, 
                C0=>i2c_slave_i2c_slave_inst_bit_count_reg_0, 
                D0=>i2c_slave_i2c_slave_inst_bit_count_reg_3, M0=>'X', CE=>'X', 
                CLK=>'X', LSR=>'X', OFX1=>open, 
                F1=>i2c_slave_i2c_slave_inst_n12346, Q1=>open, OFX0=>open, 
                F0=>i2c_slave_i2c_slave_inst_n14308, Q0=>open);
    SLICE_681I: SLOGICB
      generic map (LUT0_INITVAL=>X"4444", LUT1_INITVAL=>X"8888")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>wifi_i_spi_shift_reg_0, 
                B1=>shift_reg_15_N_1175_adj_1194, C1=>'X', D1=>'X', DI1=>'X', 
                DI0=>'X', A0=>wifi_i_empty, B0=>stm_fpga_spare2_c, C0=>'X', 
                D0=>'X', M0=>'X', CE=>'X', CLK=>'X', LSR=>'X', OFX1=>open, 
                F1=>wifi_i_spi_o_mosi_N_1176, Q1=>open, OFX0=>open, 
                F0=>internal_80MHz_enable_52, Q0=>open);
    SLICE_682I: SLOGICB
      generic map (LUT0_INITVAL=>X"4444", LUT1_INITVAL=>X"5555")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>wifi_q_empty, B1=>'X', 
                C1=>'X', D1=>'X', DI1=>'X', DI0=>'X', A0=>wifi_q_empty, 
                B0=>stm_fpga_spare2_c, C0=>'X', D0=>'X', M0=>'X', CE=>'X', 
                CLK=>'X', LSR=>'X', OFX1=>open, F1=>wifi_q_fifo_dc_rden_i, 
                Q1=>open, OFX0=>open, F0=>internal_80MHz_enable_68, Q0=>open);
    subg_i_spi_SLICE_683I: SLOGICB
      generic map (LUT0_INITVAL=>X"8888", LUT1_INITVAL=>X"EEEE")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>subg_i_spi_bit_counter_0, 
                B1=>subg_i_spi_bit_counter_3, C1=>'X', D1=>'X', DI1=>'X', 
                DI0=>'X', A0=>subg_i_spi_shift_reg_0, B0=>shift_reg_15_N_1175, 
                C0=>'X', D0=>'X', M0=>'X', CE=>'X', CLK=>'X', LSR=>'X', 
                OFX1=>open, F1=>subg_i_spi_n13132, Q1=>open, OFX0=>open, 
                F0=>subg_i_spi_o_mosi_N_1176, Q0=>open);
    SLICE_684I: SLOGICB
      generic map (LUT0_INITVAL=>X"4444", LUT1_INITVAL=>X"5555")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>subg_q_empty, B1=>'X', 
                C1=>'X', D1=>'X', DI1=>'X', DI0=>'X', A0=>subg_q_empty, 
                B0=>stm_fpga_spare1_c, C0=>'X', D0=>'X', M0=>'X', CE=>'X', 
                CLK=>'X', LSR=>'X', OFX1=>open, F1=>subg_q_fifo_dc_rden_i, 
                Q1=>open, OFX0=>open, F0=>internal_80MHz_enable_36, Q0=>open);
    my_led_SLICE_685I: SLOGICB
      generic map (LUT0_INITVAL=>X"EEEE")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>my_led_counter_7, 
                B0=>my_led_counter_1, C0=>'X', D0=>'X', M0=>'X', CE=>'X', 
                CLK=>'X', LSR=>'X', OFX1=>open, F1=>open, Q1=>open, OFX0=>open, 
                F0=>my_led_n12928, Q0=>open);
    my_led_SLICE_686I: SLOGICB
      generic map (LUT0_INITVAL=>X"8000")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>my_led_counter_10, 
                B0=>my_led_counter_22, C0=>my_led_counter_16, 
                D0=>my_led_counter_19, M0=>'X', CE=>'X', CLK=>'X', LSR=>'X', 
                OFX1=>open, F1=>open, Q1=>open, OFX0=>open, F0=>my_led_n13348, 
                Q0=>open);
    SLICE_687I: SLOGICB
      generic map (LUT0_INITVAL=>X"5555")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>tx_ddr_data_31, B0=>'X', 
                C0=>'X', D0=>'X', M0=>'X', CE=>'X', CLK=>'X', LSR=>'X', 
                OFX1=>open, F1=>open, Q1=>open, OFX0=>open, 
                F0=>tx_ddr_data_31_N_385, Q0=>open);
    SLICE_688I: SLOGICB
      generic map (LUT0_INITVAL=>X"CACA")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>spi1_test_pattern_12, 
                B0=>spi1_test_pattern_4, C0=>wb_adr_o_0, D0=>'X', M0=>'X', 
                CE=>'X', CLK=>'X', LSR=>'X', OFX1=>open, F1=>open, Q1=>open, 
                OFX0=>open, F0=>n2831, Q0=>open);
    SLICE_689I: SLOGICB
      generic map (LUT0_INITVAL=>X"5555")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>tx_ddr_data_30, B0=>'X', 
                C0=>'X', D0=>'X', M0=>'X', CE=>'X', CLK=>'X', LSR=>'X', 
                OFX1=>open, F1=>open, Q1=>open, OFX0=>open, 
                F0=>tx_ddr_data_30_N_387, Q0=>open);
    SLICE_690I: SLOGICB
      generic map (LUT0_INITVAL=>X"BBBB")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>r_state_0, B0=>r_state_1, 
                C0=>'X', D0=>'X', M0=>'X', CE=>'X', CLK=>'X', LSR=>'X', 
                OFX1=>open, F1=>open, Q1=>open, OFX0=>open, 
                F0=>sdr_rxclk_c_enable_88, Q0=>open);
    SLICE_691I: SLOGICB
      generic map (LUT0_INITVAL=>X"2222")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>stm_fpga_spare1_c, 
                B0=>subg_i_empty, C0=>'X', D0=>'X', M0=>'X', CE=>'X', CLK=>'X', 
                LSR=>'X', OFX1=>open, F1=>open, Q1=>open, OFX0=>open, 
                F0=>internal_80MHz_enable_20, Q0=>open);
    wifi_i_spi_SLICE_692I: SLOGICB
      generic map (LUT0_INITVAL=>X"EEEE")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>wifi_i_spi_bit_counter_0, 
                B0=>wifi_i_spi_bit_counter_3, C0=>'X', D0=>'X', M0=>'X', 
                CE=>'X', CLK=>'X', LSR=>'X', OFX1=>open, F1=>open, Q1=>open, 
                OFX0=>open, F0=>wifi_i_spi_n13148, Q0=>open);
    SLICE_693I: SLOGICB
      generic map (LUT0_INITVAL=>X"E0E0")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>r_state_1, B0=>r_state_0, 
                C0=>n14315, D0=>'X', M0=>'X', CE=>'X', CLK=>'X', LSR=>'X', 
                OFX1=>open, F1=>open, Q1=>open, OFX0=>open, F0=>n14294, 
                Q0=>open);
    SLICE_694I: SLOGICB
      generic map (LUT0_INITVAL=>X"8080")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>wb_stb_o, B0=>wb_we_o, 
                C0=>wb_adr_o_2, D0=>'X', M0=>'X', CE=>'X', CLK=>'X', LSR=>'X', 
                OFX1=>open, F1=>open, Q1=>open, OFX0=>open, F0=>n12954, 
                Q0=>open);
    SLICE_695I: SLOGICB
      generic map (M0MUX=>"SIG", CLKMUX=>"SIG", CEMUX=>"SIG", LSRMUX=>"INV", 
                   GSR=>"DISABLED", LUT0_INITVAL=>X"F7FF", CHECK_M0=>TRUE, 
                   CHECK_CE=>TRUE, CHECK_LSR=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>stm_fpga_spare5_c, 
                B0=>second_pll_lock, C0=>internal_rst, D0=>pll_lock, 
                M0=>wb_dat_o_0, CE=>int_clk_out_enable_15, CLK=>int_clk_out, 
                LSR=>stm_fpga_spare5_c, OFX1=>open, F1=>open, Q1=>open, 
                OFX0=>open, F0=>main_reset_n_N_208, Q0=>internal_rst);
    SLICE_696I: SLOGICB
      generic map (LUT0_INITVAL=>X"4848")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>match_count_1, B0=>r_state_0, 
                C0=>match_count_0, D0=>'X', M0=>'X', CE=>'X', CLK=>'X', 
                LSR=>'X', OFX1=>open, F1=>open, Q1=>open, OFX0=>open, 
                F0=>n13080, Q0=>open);
    SLICE_697I: SLOGICB
      generic map (LUT0_INITVAL=>X"CACA")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>tx_lvds_test_pattern_19, 
                B0=>tx_lvds_test_pattern_11, C0=>wb_adr_o_0, D0=>'X', M0=>'X', 
                CE=>'X', CLK=>'X', LSR=>'X', OFX1=>open, F1=>open, Q1=>open, 
                OFX0=>open, F0=>n13398, Q0=>open);
    SLICE_698I: SLOGICB
      generic map (LUT0_INITVAL=>X"CACA")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>tx_lvds_test_pattern_17, 
                B0=>tx_lvds_test_pattern_9, C0=>wb_adr_o_0, D0=>'X', M0=>'X', 
                CE=>'X', CLK=>'X', LSR=>'X', OFX1=>open, F1=>open, Q1=>open, 
                OFX0=>open, F0=>n2894, Q0=>open);
    SLICE_699I: SLOGICB
      generic map (LUT0_INITVAL=>X"CACA")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>spi_test_pattern_enable_1, 
                B0=>tx_lvds_test_pattern_25, C0=>wb_adr_o_0, D0=>'X', M0=>'X', 
                CE=>'X', CLK=>'X', LSR=>'X', OFX1=>open, F1=>open, Q1=>open, 
                OFX0=>open, F0=>n2882, Q0=>open);
    SLICE_700I: SLOGICB
      generic map (LUT0_INITVAL=>X"CACA")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>tx_lvds_test_pattern_18, 
                B0=>tx_lvds_test_pattern_10, C0=>wb_adr_o_0, D0=>'X', M0=>'X', 
                CE=>'X', CLK=>'X', LSR=>'X', OFX1=>open, F1=>open, Q1=>open, 
                OFX0=>open, F0=>n2893, Q0=>open);
    SLICE_701I: SLOGICB
      generic map (LUT0_INITVAL=>X"CACA")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>spi_test_pattern_enable_2, 
                B0=>tx_lvds_test_pattern_26, C0=>wb_adr_o_0, D0=>'X', M0=>'X', 
                CE=>'X', CLK=>'X', LSR=>'X', OFX1=>open, F1=>open, Q1=>open, 
                OFX0=>open, F0=>n2881, Q0=>open);
    SLICE_702I: SLOGICB
      generic map (LUT0_INITVAL=>X"CACA")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>wifi_i_fifo_data_out_4, 
                B0=>spi3_test_pattern_4, C0=>spi_test_pattern_enable_2, 
                D0=>'X', M0=>'X', CE=>'X', CLK=>'X', LSR=>'X', OFX1=>open, 
                F1=>open, Q1=>open, OFX0=>open, F0=>spi3_sck_N_426_4, Q0=>open);
    SLICE_703I: SLOGICB
      generic map (LUT0_INITVAL=>X"CACA")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>wifi_i_fifo_data_out_5, 
                B0=>spi3_test_pattern_5, C0=>spi_test_pattern_enable_2, 
                D0=>'X', M0=>'X', CE=>'X', CLK=>'X', LSR=>'X', OFX1=>open, 
                F1=>open, Q1=>open, OFX0=>open, F0=>spi3_sck_N_426_5, Q0=>open);
    SLICE_704I: SLOGICB
      generic map (LUT0_INITVAL=>X"CACA")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>subg_q_fifo_data_out_0, 
                B0=>spi2_test_pattern_0, C0=>spi_test_pattern_enable_1, 
                D0=>'X', M0=>'X', CE=>'X', CLK=>'X', LSR=>'X', OFX1=>open, 
                F1=>open, Q1=>open, OFX0=>open, F0=>spi2_sck_N_410_0, Q0=>open);
    SLICE_705I: SLOGICB
      generic map (LUT0_INITVAL=>X"CACA")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>wifi_i_fifo_data_out_6, 
                B0=>spi3_test_pattern_6, C0=>spi_test_pattern_enable_2, 
                D0=>'X', M0=>'X', CE=>'X', CLK=>'X', LSR=>'X', OFX1=>open, 
                F1=>open, Q1=>open, OFX0=>open, F0=>spi3_sck_N_426_6, Q0=>open);
    SLICE_706I: SLOGICB
      generic map (LUT0_INITVAL=>X"CACA")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>wifi_i_fifo_data_out_7, 
                B0=>spi3_test_pattern_7, C0=>spi_test_pattern_enable_2, 
                D0=>'X', M0=>'X', CE=>'X', CLK=>'X', LSR=>'X', OFX1=>open, 
                F1=>open, Q1=>open, OFX0=>open, F0=>spi3_sck_N_426_7, Q0=>open);
    SLICE_707I: SLOGICB
      generic map (M0MUX=>"SIG", CLKMUX=>"SIG", CEMUX=>"SIG", LSRMUX=>"INV", 
                   GSR=>"DISABLED", LUT0_INITVAL=>X"CACA", CHECK_M0=>TRUE, 
                   CHECK_CE=>TRUE, CHECK_LSR=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>subg_i_fifo_data_out_1, 
                B0=>spi1_test_pattern_1, C0=>spi_test_pattern_enable_0, 
                D0=>'X', M0=>wb_dat_o_1, CE=>int_clk_out_enable_129, 
                CLK=>int_clk_out, LSR=>stm_fpga_spare5_c, OFX1=>open, F1=>open, 
                Q1=>open, OFX0=>open, F0=>spi1_sck_N_394_1, 
                Q0=>spi1_test_pattern_1);
    SLICE_708I: SLOGICB
      generic map (LUT0_INITVAL=>X"CACA")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>subg_i_fifo_data_out_2, 
                B0=>spi1_test_pattern_2, C0=>spi_test_pattern_enable_0, 
                D0=>'X', M0=>'X', CE=>'X', CLK=>'X', LSR=>'X', OFX1=>open, 
                F1=>open, Q1=>open, OFX0=>open, F0=>spi1_sck_N_394_2, Q0=>open);
    SLICE_709I: SLOGICB
      generic map (LUT0_INITVAL=>X"CACA")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>subg_i_fifo_data_out_3, 
                B0=>spi1_test_pattern_3, C0=>spi_test_pattern_enable_0, 
                D0=>'X', M0=>'X', CE=>'X', CLK=>'X', LSR=>'X', OFX1=>open, 
                F1=>open, Q1=>open, OFX0=>open, F0=>spi1_sck_N_394_3, Q0=>open);
    SLICE_710I: SLOGICB
      generic map (M0MUX=>"SIG", CLKMUX=>"SIG", CEMUX=>"SIG", LSRMUX=>"INV", 
                   GSR=>"DISABLED", LUT0_INITVAL=>X"CACA", CHECK_M0=>TRUE, 
                   CHECK_CE=>TRUE, CHECK_LSR=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>subg_i_fifo_data_out_4, 
                B0=>spi1_test_pattern_4, C0=>spi_test_pattern_enable_0, 
                D0=>'X', M0=>wb_dat_o_4, CE=>int_clk_out_enable_129, 
                CLK=>int_clk_out, LSR=>stm_fpga_spare5_c, OFX1=>open, F1=>open, 
                Q1=>open, OFX0=>open, F0=>spi1_sck_N_394_4, 
                Q0=>spi1_test_pattern_4);
    SLICE_711I: SLOGICB
      generic map (LUT0_INITVAL=>X"CACA")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>subg_i_fifo_data_out_5, 
                B0=>spi1_test_pattern_5, C0=>spi_test_pattern_enable_0, 
                D0=>'X', M0=>'X', CE=>'X', CLK=>'X', LSR=>'X', OFX1=>open, 
                F1=>open, Q1=>open, OFX0=>open, F0=>spi1_sck_N_394_5, Q0=>open);
    SLICE_712I: SLOGICB
      generic map (LUT0_INITVAL=>X"CACA")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>subg_i_fifo_data_out_6, 
                B0=>spi1_test_pattern_6, C0=>spi_test_pattern_enable_0, 
                D0=>'X', M0=>'X', CE=>'X', CLK=>'X', LSR=>'X', OFX1=>open, 
                F1=>open, Q1=>open, OFX0=>open, F0=>spi1_sck_N_394_6, Q0=>open);
    SLICE_713I: SLOGICB
      generic map (LUT0_INITVAL=>X"CACA")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>subg_i_fifo_data_out_7, 
                B0=>spi1_test_pattern_7, C0=>spi_test_pattern_enable_0, 
                D0=>'X', M0=>'X', CE=>'X', CLK=>'X', LSR=>'X', OFX1=>open, 
                F1=>open, Q1=>open, OFX0=>open, F0=>spi1_sck_N_394_7, Q0=>open);
    SLICE_714I: SLOGICB
      generic map (M0MUX=>"SIG", CLKMUX=>"SIG", CEMUX=>"SIG", LSRMUX=>"INV", 
                   GSR=>"DISABLED", LUT0_INITVAL=>X"CACA", CHECK_M0=>TRUE, 
                   CHECK_CE=>TRUE, CHECK_LSR=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>subg_i_fifo_data_out_8, 
                B0=>spi1_test_pattern_8, C0=>spi_test_pattern_enable_0, 
                D0=>'X', M0=>wb_dat_o_0, CE=>int_clk_out_enable_122, 
                CLK=>int_clk_out, LSR=>stm_fpga_spare5_c, OFX1=>open, F1=>open, 
                Q1=>open, OFX0=>open, F0=>spi1_sck_N_394_8, 
                Q0=>spi1_test_pattern_8);
    SLICE_715I: SLOGICB
      generic map (LUT0_INITVAL=>X"CACA")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>subg_i_fifo_data_out_9, 
                B0=>spi1_test_pattern_9, C0=>spi_test_pattern_enable_0, 
                D0=>'X', M0=>'X', CE=>'X', CLK=>'X', LSR=>'X', OFX1=>open, 
                F1=>open, Q1=>open, OFX0=>open, F0=>spi1_sck_N_394_9, Q0=>open);
    SLICE_716I: SLOGICB
      generic map (LUT0_INITVAL=>X"CACA")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>subg_i_fifo_data_out_10, 
                B0=>spi1_test_pattern_10, C0=>spi_test_pattern_enable_0, 
                D0=>'X', M0=>'X', CE=>'X', CLK=>'X', LSR=>'X', OFX1=>open, 
                F1=>open, Q1=>open, OFX0=>open, F0=>spi1_sck_N_394_10, 
                Q0=>open);
    SLICE_717I: SLOGICB
      generic map (M0MUX=>"SIG", CLKMUX=>"SIG", CEMUX=>"SIG", GSR=>"DISABLED", 
                   SRMODE=>"ASYNC", LUT0_INITVAL=>X"CACA", CHECK_M0=>TRUE, 
                   CHECK_CE=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>subg_i_fifo_data_out_11, 
                B0=>spi1_test_pattern_11, C0=>spi_test_pattern_enable_0, 
                D0=>'X', M0=>tx_lvds_test_pattern_31_N_119_27, 
                CE=>int_clk_out_enable_121, CLK=>int_clk_out, LSR=>'X', 
                OFX1=>open, F1=>open, Q1=>open, OFX0=>open, 
                F0=>spi1_sck_N_394_11, Q0=>spi1_test_pattern_11);
    SLICE_718I: SLOGICB
      generic map (LUT0_INITVAL=>X"CACA")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>subg_i_fifo_data_out_12, 
                B0=>spi1_test_pattern_12, C0=>spi_test_pattern_enable_0, 
                D0=>'X', M0=>'X', CE=>'X', CLK=>'X', LSR=>'X', OFX1=>open, 
                F1=>open, Q1=>open, OFX0=>open, F0=>spi1_sck_N_394_12, 
                Q0=>open);
    SLICE_719I: SLOGICB
      generic map (LUT0_INITVAL=>X"CACA")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>subg_i_fifo_data_out_13, 
                B0=>spi1_test_pattern_13, C0=>spi_test_pattern_enable_0, 
                D0=>'X', M0=>'X', CE=>'X', CLK=>'X', LSR=>'X', OFX1=>open, 
                F1=>open, Q1=>open, OFX0=>open, F0=>spi1_sck_N_394_13, 
                Q0=>open);
    SLICE_720I: SLOGICB
      generic map (LUT0_INITVAL=>X"CACA")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>subg_q_fifo_data_out_1, 
                B0=>spi2_test_pattern_1, C0=>spi_test_pattern_enable_1, 
                D0=>'X', M0=>'X', CE=>'X', CLK=>'X', LSR=>'X', OFX1=>open, 
                F1=>open, Q1=>open, OFX0=>open, F0=>spi2_sck_N_410_1, Q0=>open);
    SLICE_721I: SLOGICB
      generic map (LUT0_INITVAL=>X"CACA")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>subg_q_fifo_data_out_2, 
                B0=>spi2_test_pattern_2, C0=>spi_test_pattern_enable_1, 
                D0=>'X', M0=>'X', CE=>'X', CLK=>'X', LSR=>'X', OFX1=>open, 
                F1=>open, Q1=>open, OFX0=>open, F0=>spi2_sck_N_410_2, Q0=>open);
    SLICE_722I: SLOGICB
      generic map (LUT0_INITVAL=>X"CACA")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>subg_q_fifo_data_out_3, 
                B0=>spi2_test_pattern_3, C0=>spi_test_pattern_enable_1, 
                D0=>'X', M0=>'X', CE=>'X', CLK=>'X', LSR=>'X', OFX1=>open, 
                F1=>open, Q1=>open, OFX0=>open, F0=>spi2_sck_N_410_3, Q0=>open);
    SLICE_723I: SLOGICB
      generic map (LUT0_INITVAL=>X"CACA")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>subg_q_fifo_data_out_4, 
                B0=>spi2_test_pattern_4, C0=>spi_test_pattern_enable_1, 
                D0=>'X', M0=>'X', CE=>'X', CLK=>'X', LSR=>'X', OFX1=>open, 
                F1=>open, Q1=>open, OFX0=>open, F0=>spi2_sck_N_410_4, Q0=>open);
    SLICE_724I: SLOGICB
      generic map (LUT0_INITVAL=>X"CACA")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>subg_q_fifo_data_out_5, 
                B0=>spi2_test_pattern_5, C0=>spi_test_pattern_enable_1, 
                D0=>'X', M0=>'X', CE=>'X', CLK=>'X', LSR=>'X', OFX1=>open, 
                F1=>open, Q1=>open, OFX0=>open, F0=>spi2_sck_N_410_5, Q0=>open);
    SLICE_725I: SLOGICB
      generic map (LUT0_INITVAL=>X"CACA")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>subg_q_fifo_data_out_6, 
                B0=>spi2_test_pattern_6, C0=>spi_test_pattern_enable_1, 
                D0=>'X', M0=>'X', CE=>'X', CLK=>'X', LSR=>'X', OFX1=>open, 
                F1=>open, Q1=>open, OFX0=>open, F0=>spi2_sck_N_410_6, Q0=>open);
    SLICE_726I: SLOGICB
      generic map (LUT0_INITVAL=>X"CACA")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>subg_q_fifo_data_out_7, 
                B0=>spi2_test_pattern_7, C0=>spi_test_pattern_enable_1, 
                D0=>'X', M0=>'X', CE=>'X', CLK=>'X', LSR=>'X', OFX1=>open, 
                F1=>open, Q1=>open, OFX0=>open, F0=>spi2_sck_N_410_7, Q0=>open);
    SLICE_727I: SLOGICB
      generic map (M0MUX=>"SIG", CLKMUX=>"SIG", CEMUX=>"SIG", LSRMUX=>"INV", 
                   GSR=>"DISABLED", LUT0_INITVAL=>X"CACA", CHECK_M0=>TRUE, 
                   CHECK_CE=>TRUE, CHECK_LSR=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>subg_q_fifo_data_out_8, 
                B0=>spi2_test_pattern_8, C0=>spi_test_pattern_enable_1, 
                D0=>'X', M0=>wb_dat_o_0, CE=>int_clk_out_enable_107, 
                CLK=>int_clk_out, LSR=>stm_fpga_spare5_c, OFX1=>open, F1=>open, 
                Q1=>open, OFX0=>open, F0=>spi2_sck_N_410_8, 
                Q0=>spi2_test_pattern_8);
    SLICE_728I: SLOGICB
      generic map (M0MUX=>"SIG", CLKMUX=>"SIG", CEMUX=>"SIG", LSRMUX=>"INV", 
                   GSR=>"DISABLED", LUT0_INITVAL=>X"C0CA", CHECK_M0=>TRUE, 
                   CHECK_CE=>TRUE, CHECK_LSR=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>tx_lvds_test_pattern_1, 
                B0=>subg_delay_move, C0=>wb_adr_o_1, D0=>wb_adr_o_0, 
                M0=>wb_dat_o_1, CE=>int_clk_out_enable_32, CLK=>int_clk_out, 
                LSR=>stm_fpga_spare5_c, OFX1=>open, F1=>open, Q1=>open, 
                OFX0=>open, F0=>n13392, Q0=>subg_delay_move);
    SLICE_729I: SLOGICB
      generic map (LUT0_INITVAL=>X"CACA")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>subg_q_fifo_data_out_9, 
                B0=>spi2_test_pattern_9, C0=>spi_test_pattern_enable_1, 
                D0=>'X', M0=>'X', CE=>'X', CLK=>'X', LSR=>'X', OFX1=>open, 
                F1=>open, Q1=>open, OFX0=>open, F0=>spi2_sck_N_410_9, Q0=>open);
    SLICE_730I: SLOGICB
      generic map (LUT0_INITVAL=>X"CACA")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>subg_q_fifo_data_out_10, 
                B0=>spi2_test_pattern_10, C0=>spi_test_pattern_enable_1, 
                D0=>'X', M0=>'X', CE=>'X', CLK=>'X', LSR=>'X', OFX1=>open, 
                F1=>open, Q1=>open, OFX0=>open, F0=>spi2_sck_N_410_10, 
                Q0=>open);
    SLICE_731I: SLOGICB
      generic map (LUT0_INITVAL=>X"CACA")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>subg_i_fifo_data_out_0, 
                B0=>spi1_test_pattern_0, C0=>spi_test_pattern_enable_0, 
                D0=>'X', M0=>'X', CE=>'X', CLK=>'X', LSR=>'X', OFX1=>open, 
                F1=>open, Q1=>open, OFX0=>open, F0=>spi1_sck_N_394_0, Q0=>open);
    SLICE_732I: SLOGICB
      generic map (LUT0_INITVAL=>X"CACA")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>subg_q_fifo_data_out_11, 
                B0=>spi2_test_pattern_11, C0=>spi_test_pattern_enable_1, 
                D0=>'X', M0=>'X', CE=>'X', CLK=>'X', LSR=>'X', OFX1=>open, 
                F1=>open, Q1=>open, OFX0=>open, F0=>spi2_sck_N_410_11, 
                Q0=>open);
    SLICE_733I: SLOGICB
      generic map (LUT0_INITVAL=>X"CACA")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>subg_q_fifo_data_out_12, 
                B0=>spi2_test_pattern_12, C0=>spi_test_pattern_enable_1, 
                D0=>'X', M0=>'X', CE=>'X', CLK=>'X', LSR=>'X', OFX1=>open, 
                F1=>open, Q1=>open, OFX0=>open, F0=>spi2_sck_N_410_12, 
                Q0=>open);
    SLICE_734I: SLOGICB
      generic map (LUT0_INITVAL=>X"CACA")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>subg_q_fifo_data_out_13, 
                B0=>spi2_test_pattern_13, C0=>spi_test_pattern_enable_1, 
                D0=>'X', M0=>'X', CE=>'X', CLK=>'X', LSR=>'X', OFX1=>open, 
                F1=>open, Q1=>open, OFX0=>open, F0=>spi2_sck_N_410_13, 
                Q0=>open);
    SLICE_735I: SLOGICB
      generic map (M0MUX=>"SIG", CLKMUX=>"SIG", CEMUX=>"SIG", LSRMUX=>"INV", 
                   GSR=>"DISABLED", LUT0_INITVAL=>X"CACA", CHECK_M0=>TRUE, 
                   CHECK_CE=>TRUE, CHECK_LSR=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>wifi_i_fifo_data_out_1, 
                B0=>spi3_test_pattern_1, C0=>spi_test_pattern_enable_2, 
                D0=>'X', M0=>wb_dat_o_1, CE=>int_clk_out_enable_99, 
                CLK=>int_clk_out, LSR=>stm_fpga_spare5_c, OFX1=>open, F1=>open, 
                Q1=>open, OFX0=>open, F0=>spi3_sck_N_426_1, 
                Q0=>spi3_test_pattern_1);
    SLICE_736I: SLOGICB
      generic map (M0MUX=>"SIG", CLKMUX=>"SIG", CEMUX=>"SIG", GSR=>"DISABLED", 
                   SRMODE=>"ASYNC", LUT0_INITVAL=>X"CACA", CHECK_M0=>TRUE, 
                   CHECK_CE=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>wifi_i_fifo_data_out_2, 
                B0=>spi3_test_pattern_2, C0=>spi_test_pattern_enable_2, 
                D0=>'X', M0=>tx_lvds_test_pattern_31_N_119_26, 
                CE=>int_clk_out_enable_98, CLK=>int_clk_out, LSR=>'X', 
                OFX1=>open, F1=>open, Q1=>open, OFX0=>open, 
                F0=>spi3_sck_N_426_2, Q0=>spi3_test_pattern_2);
    SLICE_737I: SLOGICB
      generic map (LUT0_INITVAL=>X"CACA")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>wifi_i_fifo_data_out_3, 
                B0=>spi3_test_pattern_3, C0=>spi_test_pattern_enable_2, 
                D0=>'X', M0=>'X', CE=>'X', CLK=>'X', LSR=>'X', OFX1=>open, 
                F1=>open, Q1=>open, OFX0=>open, F0=>spi3_sck_N_426_3, Q0=>open);
    SLICE_738I: SLOGICB
      generic map (M0MUX=>"SIG", CLKMUX=>"SIG", CEMUX=>"SIG", GSR=>"DISABLED", 
                   SRMODE=>"ASYNC", LUT0_INITVAL=>X"CACA", CHECK_M0=>TRUE, 
                   CHECK_CE=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>wifi_i_fifo_data_out_8, 
                B0=>spi3_test_pattern_8, C0=>spi_test_pattern_enable_2, 
                D0=>'X', M0=>ufl_p7_sel_7_N_35_0, CE=>int_clk_out_enable_92, 
                CLK=>int_clk_out, LSR=>'X', OFX1=>open, F1=>open, Q1=>open, 
                OFX0=>open, F0=>spi3_sck_N_426_8, Q0=>spi3_test_pattern_8);
    SLICE_739I: SLOGICB
      generic map (M0MUX=>"SIG", CLKMUX=>"SIG", CEMUX=>"SIG", LSRMUX=>"INV", 
                   GSR=>"DISABLED", LUT0_INITVAL=>X"C0CA", CHECK_M0=>TRUE, 
                   CHECK_CE=>TRUE, CHECK_LSR=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>tx_lvds_test_pattern_2, 
                B0=>subg_delay_direction, C0=>wb_adr_o_1, D0=>wb_adr_o_0, 
                M0=>wb_dat_o_2, CE=>int_clk_out_enable_32, CLK=>int_clk_out, 
                LSR=>stm_fpga_spare5_c, OFX1=>open, F1=>open, Q1=>open, 
                OFX0=>open, F0=>n13395, Q0=>subg_delay_direction);
    SLICE_740I: SLOGICB
      generic map (LUT0_INITVAL=>X"DDDD")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>wb_adr_o_4, B0=>wb_adr_o_1, 
                C0=>'X', D0=>'X', M0=>'X', CE=>'X', CLK=>'X', LSR=>'X', 
                OFX1=>open, F1=>open, Q1=>open, OFX0=>open, F0=>n13411, 
                Q0=>open);
    subg_i_fifo_dc_SLICE_741I: SLOGICB
      generic map (LUT0_INITVAL=>X"6666")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>subg_i_fifo_dc_w_gcount_r22, 
                B0=>subg_i_fifo_dc_w_gcount_r21, C0=>'X', D0=>'X', M0=>'X', 
                CE=>'X', CLK=>'X', LSR=>'X', OFX1=>open, F1=>open, Q1=>open, 
                OFX0=>open, F0=>subg_i_fifo_dc_wcount_r1, Q0=>open);
    subg_i_fifo_dc_SLICE_742I: SLOGICB
      generic map (LUT0_INITVAL=>X"9696")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>subg_i_fifo_dc_w_gcount_r22, 
                B0=>subg_i_fifo_dc_w_gcount_r21, 
                C0=>subg_i_fifo_dc_w_gcount_r20, D0=>'X', M0=>'X', CE=>'X', 
                CLK=>'X', LSR=>'X', OFX1=>open, F1=>open, Q1=>open, OFX0=>open, 
                F0=>subg_i_fifo_dc_wcount_r0, Q0=>open);
    subg_i_fifo_dc_SLICE_743I: SLOGICB
      generic map (LUT0_INITVAL=>X"6666")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>subg_i_fifo_dc_r_gcount_w22, 
                B0=>subg_i_fifo_dc_r_gcount_w21, C0=>'X', D0=>'X', M0=>'X', 
                CE=>'X', CLK=>'X', LSR=>'X', OFX1=>open, F1=>open, Q1=>open, 
                OFX0=>open, F0=>subg_i_fifo_dc_rcount_w1, Q0=>open);
    subg_i_fifo_dc_SLICE_744I: SLOGICB
      generic map (LUT0_INITVAL=>X"9696")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>subg_i_fifo_dc_r_gcount_w22, 
                B0=>subg_i_fifo_dc_r_gcount_w21, 
                C0=>subg_i_fifo_dc_r_gcount_w20, D0=>'X', M0=>'X', CE=>'X', 
                CLK=>'X', LSR=>'X', OFX1=>open, F1=>open, Q1=>open, OFX0=>open, 
                F0=>subg_i_fifo_dc_rcount_w0, Q0=>open);
    subg_i_fifo_dc_SLICE_745I: SLOGICB
      generic map (LUT0_INITVAL=>X"2222")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>w_rx_09_fifo_push, 
                B0=>subg_i_fifo_dc_Full, C0=>'X', D0=>'X', M0=>'X', CE=>'X', 
                CLK=>'X', LSR=>'X', OFX1=>open, F1=>open, Q1=>open, OFX0=>open, 
                F0=>subg_i_fifo_dc_wren_i, Q0=>open);
    subg_i_fifo_dc_SLICE_746I: SLOGICB
      generic map (LUT0_INITVAL=>X"5555")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>subg_i_empty, B0=>'X', 
                C0=>'X', D0=>'X', M0=>'X', CE=>'X', CLK=>'X', LSR=>'X', 
                OFX1=>open, F1=>open, Q1=>open, OFX0=>open, 
                F0=>subg_i_fifo_dc_rden_i, Q0=>open);
    SLICE_747I: SLOGICB
      generic map (M0MUX=>"SIG", CLKMUX=>"SIG", CEMUX=>"SIG", LSRMUX=>"INV", 
                   GSR=>"DISABLED", LUT0_INITVAL=>X"CACA", CHECK_M0=>TRUE, 
                   CHECK_CE=>TRUE, CHECK_LSR=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>wifi_i_fifo_data_out_9, 
                B0=>spi3_test_pattern_9, C0=>spi_test_pattern_enable_2, 
                D0=>'X', M0=>wb_dat_o_1, CE=>int_clk_out_enable_91, 
                CLK=>int_clk_out, LSR=>stm_fpga_spare5_c, OFX1=>open, F1=>open, 
                Q1=>open, OFX0=>open, F0=>spi3_sck_N_426_9, 
                Q0=>spi3_test_pattern_9);
    SLICE_748I: SLOGICB
      generic map (M0MUX=>"SIG", CLKMUX=>"SIG", CEMUX=>"SIG", GSR=>"DISABLED", 
                   SRMODE=>"ASYNC", LUT0_INITVAL=>X"CACA", CHECK_M0=>TRUE, 
                   CHECK_CE=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>wifi_i_fifo_data_out_10, 
                B0=>spi3_test_pattern_10, C0=>spi_test_pattern_enable_2, 
                D0=>'X', M0=>tx_lvds_test_pattern_31_N_119_26, 
                CE=>int_clk_out_enable_92, CLK=>int_clk_out, LSR=>'X', 
                OFX1=>open, F1=>open, Q1=>open, OFX0=>open, 
                F0=>spi3_sck_N_426_10, Q0=>spi3_test_pattern_10);
    SLICE_749I: SLOGICB
      generic map (LUT0_INITVAL=>X"CACA")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>wifi_i_fifo_data_out_11, 
                B0=>spi3_test_pattern_11, C0=>spi_test_pattern_enable_2, 
                D0=>'X', M0=>'X', CE=>'X', CLK=>'X', LSR=>'X', OFX1=>open, 
                F1=>open, Q1=>open, OFX0=>open, F0=>spi3_sck_N_426_11, 
                Q0=>open);
    SLICE_750I: SLOGICB
      generic map (LUT0_INITVAL=>X"CACA")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>wifi_i_fifo_data_out_12, 
                B0=>spi3_test_pattern_12, C0=>spi_test_pattern_enable_2, 
                D0=>'X', M0=>'X', CE=>'X', CLK=>'X', LSR=>'X', OFX1=>open, 
                F1=>open, Q1=>open, OFX0=>open, F0=>spi3_sck_N_426_12, 
                Q0=>open);
    SLICE_751I: SLOGICB
      generic map (LUT0_INITVAL=>X"DFDF")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>wb_adr_o_4, B0=>wb_adr_o_2, 
                C0=>wb_adr_o_1, D0=>'X', M0=>'X', CE=>'X', CLK=>'X', LSR=>'X', 
                OFX1=>open, F1=>open, Q1=>open, OFX0=>open, F0=>n13453, 
                Q0=>open);
    SLICE_752I: SLOGICB
      generic map (M0MUX=>"SIG", CLKMUX=>"SIG", CEMUX=>"SIG", GSR=>"DISABLED", 
                   SRMODE=>"ASYNC", LUT0_INITVAL=>X"CACA", CHECK_M0=>TRUE, 
                   CHECK_CE=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>wifi_i_fifo_data_out_13, 
                B0=>spi3_test_pattern_13, C0=>spi_test_pattern_enable_2, 
                D0=>'X', M0=>spi3_test_pattern_15_N_83_13, 
                CE=>int_clk_out_enable_92, CLK=>int_clk_out, LSR=>'X', 
                OFX1=>open, F1=>open, Q1=>open, OFX0=>open, 
                F0=>spi3_sck_N_426_13, Q0=>spi3_test_pattern_13);
    SLICE_753I: SLOGICB
      generic map (LUT0_INITVAL=>X"E2E2")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>reg0_4, B0=>wb_adr_o_0, 
                C0=>reg1_4, D0=>'X', M0=>'X', CE=>'X', CLK=>'X', LSR=>'X', 
                OFX1=>open, F1=>open, Q1=>open, OFX0=>open, F0=>n14004, 
                Q0=>open);
    SLICE_754I: SLOGICB
      generic map (M0MUX=>"SIG", CLKMUX=>"SIG", CEMUX=>"SIG", LSRMUX=>"INV", 
                   GSR=>"DISABLED", LUT0_INITVAL=>X"CACA", CHECK_M0=>TRUE, 
                   CHECK_CE=>TRUE, CHECK_LSR=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>wifi_q_fifo_data_out_0, 
                B0=>spi4_test_pattern_0, C0=>spi_test_pattern_enable_3, 
                D0=>'X', M0=>wb_dat_o_0, CE=>int_clk_out_enable_83, 
                CLK=>int_clk_out, LSR=>stm_fpga_spare5_c, OFX1=>open, F1=>open, 
                Q1=>open, OFX0=>open, F0=>spi4_sck_N_442_0, 
                Q0=>spi4_test_pattern_0);
    SLICE_755I: SLOGICB
      generic map (M0MUX=>"SIG", CLKMUX=>"SIG", CEMUX=>"SIG", GSR=>"DISABLED", 
                   SRMODE=>"ASYNC", LUT0_INITVAL=>X"CACA", CHECK_M0=>TRUE, 
                   CHECK_CE=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>wifi_q_fifo_data_out_1, 
                B0=>spi4_test_pattern_1, C0=>spi_test_pattern_enable_3, 
                D0=>'X', M0=>tx_lvds_test_pattern_31_N_119_25, 
                CE=>int_clk_out_enable_84, CLK=>int_clk_out, LSR=>'X', 
                OFX1=>open, F1=>open, Q1=>open, OFX0=>open, 
                F0=>spi4_sck_N_442_1, Q0=>spi4_test_pattern_1);
    SLICE_756I: SLOGICB
      generic map (M0MUX=>"SIG", CLKMUX=>"SIG", CEMUX=>"SIG", LSRMUX=>"INV", 
                   GSR=>"DISABLED", LUT0_INITVAL=>X"CACA", CHECK_M0=>TRUE, 
                   CHECK_CE=>TRUE, CHECK_LSR=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>wifi_q_fifo_data_out_2, 
                B0=>spi4_test_pattern_2, C0=>spi_test_pattern_enable_3, 
                D0=>'X', M0=>wb_dat_o_2, CE=>int_clk_out_enable_83, 
                CLK=>int_clk_out, LSR=>stm_fpga_spare5_c, OFX1=>open, F1=>open, 
                Q1=>open, OFX0=>open, F0=>spi4_sck_N_442_2, 
                Q0=>spi4_test_pattern_2);
    SLICE_757I: SLOGICB
      generic map (LUT0_INITVAL=>X"CACA")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>wifi_q_fifo_data_out_3, 
                B0=>spi4_test_pattern_3, C0=>spi_test_pattern_enable_3, 
                D0=>'X', M0=>'X', CE=>'X', CLK=>'X', LSR=>'X', OFX1=>open, 
                F1=>open, Q1=>open, OFX0=>open, F0=>spi4_sck_N_442_3, Q0=>open);
    SLICE_758I: SLOGICB
      generic map (LUT0_INITVAL=>X"CACA")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>wifi_q_fifo_data_out_4, 
                B0=>spi4_test_pattern_4, C0=>spi_test_pattern_enable_3, 
                D0=>'X', M0=>'X', CE=>'X', CLK=>'X', LSR=>'X', OFX1=>open, 
                F1=>open, Q1=>open, OFX0=>open, F0=>spi4_sck_N_442_4, Q0=>open);
    SLICE_759I: SLOGICB
      generic map (M0MUX=>"SIG", CLKMUX=>"SIG", CEMUX=>"SIG", GSR=>"DISABLED", 
                   SRMODE=>"ASYNC", LUT0_INITVAL=>X"CACA", CHECK_M0=>TRUE, 
                   CHECK_CE=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>wifi_i_fifo_data_out_0, 
                B0=>spi3_test_pattern_0, C0=>spi_test_pattern_enable_2, 
                D0=>'X', M0=>ufl_p7_sel_7_N_35_0, CE=>int_clk_out_enable_98, 
                CLK=>int_clk_out, LSR=>'X', OFX1=>open, F1=>open, Q1=>open, 
                OFX0=>open, F0=>spi3_sck_N_426_0, Q0=>spi3_test_pattern_0);
    SLICE_760I: SLOGICB
      generic map (LUT0_INITVAL=>X"CACA")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>wifi_q_fifo_data_out_5, 
                B0=>spi4_test_pattern_5, C0=>spi_test_pattern_enable_3, 
                D0=>'X', M0=>'X', CE=>'X', CLK=>'X', LSR=>'X', OFX1=>open, 
                F1=>open, Q1=>open, OFX0=>open, F0=>spi4_sck_N_442_5, Q0=>open);
    SLICE_761I: SLOGICB
      generic map (LUT0_INITVAL=>X"DDDD")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>wb_adr_o_4, B0=>wb_adr_o_2, 
                C0=>'X', D0=>'X', M0=>'X', CE=>'X', CLK=>'X', LSR=>'X', 
                OFX1=>open, F1=>open, Q1=>open, OFX0=>open, F0=>n13431, 
                Q0=>open);
    SLICE_762I: SLOGICB
      generic map (LUT0_INITVAL=>X"CACA")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>wifi_q_fifo_data_out_6, 
                B0=>spi4_test_pattern_6, C0=>spi_test_pattern_enable_3, 
                D0=>'X', M0=>'X', CE=>'X', CLK=>'X', LSR=>'X', OFX1=>open, 
                F1=>open, Q1=>open, OFX0=>open, F0=>spi4_sck_N_442_6, Q0=>open);
    SLICE_763I: SLOGICB
      generic map (LUT0_INITVAL=>X"CACA")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>wifi_q_fifo_data_out_7, 
                B0=>spi4_test_pattern_7, C0=>spi_test_pattern_enable_3, 
                D0=>'X', M0=>'X', CE=>'X', CLK=>'X', LSR=>'X', OFX1=>open, 
                F1=>open, Q1=>open, OFX0=>open, F0=>spi4_sck_N_442_7, Q0=>open);
    SLICE_764I: SLOGICB
      generic map (M0MUX=>"SIG", CLKMUX=>"SIG", CEMUX=>"SIG", LSRMUX=>"INV", 
                   GSR=>"DISABLED", LUT0_INITVAL=>X"CACA", CHECK_M0=>TRUE, 
                   CHECK_CE=>TRUE, CHECK_LSR=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>wifi_q_fifo_data_out_8, 
                B0=>spi4_test_pattern_8, C0=>spi_test_pattern_enable_3, 
                D0=>'X', M0=>wb_dat_o_0, CE=>int_clk_out_enable_77, 
                CLK=>int_clk_out, LSR=>stm_fpga_spare5_c, OFX1=>open, F1=>open, 
                Q1=>open, OFX0=>open, F0=>spi4_sck_N_442_8, 
                Q0=>spi4_test_pattern_8);
    SLICE_765I: SLOGICB
      generic map (M0MUX=>"SIG", CLKMUX=>"SIG", CEMUX=>"SIG", GSR=>"DISABLED", 
                   SRMODE=>"ASYNC", LUT0_INITVAL=>X"CACA", CHECK_M0=>TRUE, 
                   CHECK_CE=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>wifi_q_fifo_data_out_9, 
                B0=>spi4_test_pattern_9, C0=>spi_test_pattern_enable_3, 
                D0=>'X', M0=>tx_lvds_test_pattern_31_N_119_25, 
                CE=>int_clk_out_enable_76, CLK=>int_clk_out, LSR=>'X', 
                OFX1=>open, F1=>open, Q1=>open, OFX0=>open, 
                F0=>spi4_sck_N_442_9, Q0=>spi4_test_pattern_9);
    SLICE_766I: SLOGICB
      generic map (M0MUX=>"SIG", CLKMUX=>"SIG", CEMUX=>"SIG", LSRMUX=>"INV", 
                   GSR=>"DISABLED", LUT0_INITVAL=>X"CACA", CHECK_M0=>TRUE, 
                   CHECK_CE=>TRUE, CHECK_LSR=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>wifi_q_fifo_data_out_10, 
                B0=>spi4_test_pattern_10, C0=>spi_test_pattern_enable_3, 
                D0=>'X', M0=>wb_dat_o_2, CE=>int_clk_out_enable_77, 
                CLK=>int_clk_out, LSR=>stm_fpga_spare5_c, OFX1=>open, F1=>open, 
                Q1=>open, OFX0=>open, F0=>spi4_sck_N_442_10, 
                Q0=>spi4_test_pattern_10);
    SLICE_767I: SLOGICB
      generic map (LUT0_INITVAL=>X"CACA")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>wifi_q_fifo_data_out_11, 
                B0=>spi4_test_pattern_11, C0=>spi_test_pattern_enable_3, 
                D0=>'X', M0=>'X', CE=>'X', CLK=>'X', LSR=>'X', OFX1=>open, 
                F1=>open, Q1=>open, OFX0=>open, F0=>spi4_sck_N_442_11, 
                Q0=>open);
    SLICE_768I: SLOGICB
      generic map (LUT0_INITVAL=>X"CACA")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>wifi_q_fifo_data_out_12, 
                B0=>spi4_test_pattern_12, C0=>spi_test_pattern_enable_3, 
                D0=>'X', M0=>'X', CE=>'X', CLK=>'X', LSR=>'X', OFX1=>open, 
                F1=>open, Q1=>open, OFX0=>open, F0=>spi4_sck_N_442_12, 
                Q0=>open);
    SLICE_769I: SLOGICB
      generic map (M0MUX=>"SIG", CLKMUX=>"SIG", CEMUX=>"SIG", LSRMUX=>"INV", 
                   GSR=>"DISABLED", LUT0_INITVAL=>X"CACA", CHECK_M0=>TRUE, 
                   CHECK_CE=>TRUE, CHECK_LSR=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>wifi_q_fifo_data_out_13, 
                B0=>spi4_test_pattern_13, C0=>spi_test_pattern_enable_3, 
                D0=>'X', M0=>wb_dat_o_5, CE=>int_clk_out_enable_77, 
                CLK=>int_clk_out, LSR=>stm_fpga_spare5_c, OFX1=>open, F1=>open, 
                Q1=>open, OFX0=>open, F0=>spi4_sck_N_442_13, 
                Q0=>spi4_test_pattern_13);
    SLICE_770I: SLOGICB
      generic map (M0MUX=>"SIG", CLKMUX=>"SIG", CEMUX=>"SIG", GSR=>"DISABLED", 
                   SRMODE=>"ASYNC", LUT0_INITVAL=>X"CACA", CHECK_M0=>TRUE, 
                   CHECK_CE=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>spi2_test_pattern_15, 
                B0=>spi2_test_pattern_7, C0=>wb_adr_o_0, D0=>'X', 
                M0=>tx_lvds_test_pattern_31_N_119_31, 
                CE=>int_clk_out_enable_114, CLK=>int_clk_out, LSR=>'X', 
                OFX1=>open, F1=>open, Q1=>open, OFX0=>open, F0=>n2840, 
                Q0=>spi2_test_pattern_7);
    SLICE_771I: SLOGICB
      generic map (LUT0_INITVAL=>X"CACA")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>spi1_test_pattern_15, 
                B0=>spi1_test_pattern_7, C0=>wb_adr_o_0, D0=>'X', M0=>'X', 
                CE=>'X', CLK=>'X', LSR=>'X', OFX1=>open, F1=>open, Q1=>open, 
                OFX0=>open, F0=>n2828, Q0=>open);
    SLICE_772I: SLOGICB
      generic map (M0MUX=>"SIG", CLKMUX=>"SIG", CEMUX=>"SIG", LSRMUX=>"INV", 
                   GSR=>"DISABLED", LUT0_INITVAL=>X"CACA", CHECK_M0=>TRUE, 
                   CHECK_CE=>TRUE, CHECK_LSR=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>spi4_test_pattern_15, 
                B0=>spi4_test_pattern_7, C0=>wb_adr_o_0, D0=>'X', 
                M0=>wb_dat_o_7, CE=>int_clk_out_enable_83, CLK=>int_clk_out, 
                LSR=>stm_fpga_spare5_c, OFX1=>open, F1=>open, Q1=>open, 
                OFX0=>open, F0=>n2864, Q0=>spi4_test_pattern_7);
    SLICE_773I: SLOGICB
      generic map (M0MUX=>"SIG", CLKMUX=>"SIG", CEMUX=>"SIG", GSR=>"DISABLED", 
                   SRMODE=>"ASYNC", LUT0_INITVAL=>X"CACA", CHECK_M0=>TRUE, 
                   CHECK_CE=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>spi4_test_pattern_14, 
                B0=>spi4_test_pattern_6, C0=>wb_adr_o_0, D0=>'X', 
                M0=>tx_lvds_test_pattern_31_N_119_6, CE=>int_clk_out_enable_84, 
                CLK=>int_clk_out, LSR=>'X', OFX1=>open, F1=>open, Q1=>open, 
                OFX0=>open, F0=>n2865, Q0=>spi4_test_pattern_6);
    SLICE_774I: SLOGICB
      generic map (M0MUX=>"SIG", CLKMUX=>"SIG", CEMUX=>"SIG", LSRMUX=>"INV", 
                   GSR=>"DISABLED", LUT0_INITVAL=>X"CACA", CHECK_M0=>TRUE, 
                   CHECK_CE=>TRUE, CHECK_LSR=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>spi3_test_pattern_14, 
                B0=>spi3_test_pattern_6, C0=>wb_adr_o_0, D0=>'X', 
                M0=>wb_dat_o_6, CE=>int_clk_out_enable_99, CLK=>int_clk_out, 
                LSR=>stm_fpga_spare5_c, OFX1=>open, F1=>open, Q1=>open, 
                OFX0=>open, F0=>n2853, Q0=>spi3_test_pattern_6);
    SLICE_775I: SLOGICB
      generic map (M0MUX=>"SIG", CLKMUX=>"SIG", CEMUX=>"SIG", LSRMUX=>"INV", 
                   GSR=>"DISABLED", LUT0_INITVAL=>X"CACA", CHECK_M0=>TRUE, 
                   CHECK_CE=>TRUE, CHECK_LSR=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>spi2_test_pattern_14, 
                B0=>spi2_test_pattern_6, C0=>wb_adr_o_0, D0=>'X', 
                M0=>wb_dat_o_6, CE=>int_clk_out_enable_107, CLK=>int_clk_out, 
                LSR=>stm_fpga_spare5_c, OFX1=>open, F1=>open, Q1=>open, 
                OFX0=>open, F0=>n2841, Q0=>spi2_test_pattern_14);
    SLICE_776I: SLOGICB
      generic map (M0MUX=>"SIG", CLKMUX=>"SIG", CEMUX=>"SIG", LSRMUX=>"INV", 
                   GSR=>"DISABLED", LUT0_INITVAL=>X"CACA", CHECK_M0=>TRUE, 
                   CHECK_CE=>TRUE, CHECK_LSR=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>spi1_test_pattern_14, 
                B0=>spi1_test_pattern_6, C0=>wb_adr_o_0, D0=>'X', 
                M0=>wb_dat_o_6, CE=>int_clk_out_enable_129, CLK=>int_clk_out, 
                LSR=>stm_fpga_spare5_c, OFX1=>open, F1=>open, Q1=>open, 
                OFX0=>open, F0=>n2829, Q0=>spi1_test_pattern_6);
    SLICE_777I: SLOGICB
      generic map (M0MUX=>"SIG", CLKMUX=>"SIG", CEMUX=>"SIG", LSRMUX=>"INV", 
                   GSR=>"DISABLED", LUT0_INITVAL=>X"CACA", CHECK_M0=>TRUE, 
                   CHECK_CE=>TRUE, CHECK_LSR=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>spi4_test_pattern_13, 
                B0=>spi4_test_pattern_5, C0=>wb_adr_o_0, D0=>'X', 
                M0=>wb_dat_o_5, CE=>int_clk_out_enable_83, CLK=>int_clk_out, 
                LSR=>stm_fpga_spare5_c, OFX1=>open, F1=>open, Q1=>open, 
                OFX0=>open, F0=>n2866, Q0=>spi4_test_pattern_5);
    SLICE_778I: SLOGICB
      generic map (LUT0_INITVAL=>X"E2E2")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>reg0_5, B0=>wb_adr_o_0, 
                C0=>reg1_5, D0=>'X', M0=>'X', CE=>'X', CLK=>'X', LSR=>'X', 
                OFX1=>open, F1=>open, Q1=>open, OFX0=>open, F0=>n14021, 
                Q0=>open);
    SLICE_779I: SLOGICB
      generic map (M0MUX=>"SIG", CLKMUX=>"SIG", CEMUX=>"SIG", GSR=>"DISABLED", 
                   SRMODE=>"ASYNC", LUT0_INITVAL=>X"CACA", CHECK_M0=>TRUE, 
                   CHECK_CE=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>spi3_test_pattern_13, 
                B0=>spi3_test_pattern_5, C0=>wb_adr_o_0, D0=>'X', 
                M0=>spi3_test_pattern_15_N_83_13, CE=>int_clk_out_enable_98, 
                CLK=>int_clk_out, LSR=>'X', OFX1=>open, F1=>open, Q1=>open, 
                OFX0=>open, F0=>n2854, Q0=>spi3_test_pattern_5);
    lvds_rx_09_inst_SLICE_780I: SLOGICB
      generic map (LUT0_INITVAL=>X"4444")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>sr_16, 
                B0=>lvds_rx_09_inst_sr_15, C0=>'X', D0=>'X', M0=>'X', CE=>'X', 
                CLK=>'X', LSR=>'X', OFX1=>open, F1=>open, Q1=>open, OFX0=>open, 
                F0=>n13204, Q0=>open);
    lvds_rx_09_inst_SLICE_781I: SLOGICB
      generic map (LUT0_INITVAL=>X"CA00")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>lvds_rx_09_inst_sr_32, 
                B0=>lvds_rx_09_inst_sr_31, C0=>r_candidate_offset, 
                D0=>lvds_rx_09_inst_candidate_sr_14, M0=>'X', CE=>'X', 
                CLK=>'X', LSR=>'X', OFX1=>open, F1=>open, Q1=>open, OFX0=>open, 
                F0=>n14316, Q0=>open);
    lvds_rx_09_inst_SLICE_782I: SLOGICB
      generic map (LUT0_INITVAL=>X"EEEE")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>lvds_rx_09_inst_sr_30, 
                B0=>sr_16, C0=>'X', D0=>'X', M0=>'X', CE=>'X', CLK=>'X', 
                LSR=>'X', OFX1=>open, F1=>open, Q1=>open, OFX0=>open, 
                F0=>lvds_rx_09_inst_n11658, Q0=>open);
    lvds_rx_09_inst_SLICE_783I: SLOGICB
      generic map (LUT0_INITVAL=>X"8000")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>sample_count_1, 
                B0=>sample_count_0, C0=>sample_count_3, D0=>sample_count_2, 
                M0=>'X', CE=>'X', CLK=>'X', LSR=>'X', OFX1=>open, F1=>open, 
                Q1=>open, OFX0=>open, F0=>lvds_rx_09_inst_n14282, Q0=>open);
    SLICE_784I: SLOGICB
      generic map (M0MUX=>"SIG", CLKMUX=>"SIG", CEMUX=>"SIG", GSR=>"DISABLED", 
                   SRMODE=>"ASYNC", LUT0_INITVAL=>X"CACA", CHECK_M0=>TRUE, 
                   CHECK_CE=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>spi3_test_pattern_15, 
                B0=>spi3_test_pattern_7, C0=>wb_adr_o_0, D0=>'X', 
                M0=>tx_lvds_test_pattern_31_N_119_31, 
                CE=>int_clk_out_enable_98, CLK=>int_clk_out, LSR=>'X', 
                OFX1=>open, F1=>open, Q1=>open, OFX0=>open, F0=>n2852, 
                Q0=>spi3_test_pattern_7);
    SLICE_785I: SLOGICB
      generic map (LUT0_INITVAL=>X"8888")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>wb_adr_o_2, B0=>wb_adr_o_4, 
                C0=>'X', D0=>'X', M0=>'X', CE=>'X', CLK=>'X', LSR=>'X', 
                OFX1=>open, F1=>open, Q1=>open, OFX0=>open, F0=>n14345, 
                Q0=>open);
    SLICE_786I: SLOGICB
      generic map (LUT0_INITVAL=>X"E2E2")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>reg0_6, B0=>wb_adr_o_0, 
                C0=>reg1_6, D0=>'X', M0=>'X', CE=>'X', CLK=>'X', LSR=>'X', 
                OFX1=>open, F1=>open, Q1=>open, OFX0=>open, F0=>n14031, 
                Q0=>open);
    SLICE_787I: SLOGICB
      generic map (M0MUX=>"SIG", CLKMUX=>"SIG", CEMUX=>"SIG", GSR=>"DISABLED", 
                   SRMODE=>"ASYNC", LUT0_INITVAL=>X"CACA", CHECK_M0=>TRUE, 
                   CHECK_CE=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>spi2_test_pattern_13, 
                B0=>spi2_test_pattern_5, C0=>wb_adr_o_0, D0=>'X', 
                M0=>spi3_test_pattern_15_N_83_13, CE=>int_clk_out_enable_106, 
                CLK=>int_clk_out, LSR=>'X', OFX1=>open, F1=>open, Q1=>open, 
                OFX0=>open, F0=>n2842, Q0=>spi2_test_pattern_13);
    SLICE_788I: SLOGICB
      generic map (M0MUX=>"SIG", CLKMUX=>"SIG", CEMUX=>"SIG", LSRMUX=>"INV", 
                   GSR=>"DISABLED", LUT0_INITVAL=>X"CACA", CHECK_M0=>TRUE, 
                   CHECK_CE=>TRUE, CHECK_LSR=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>spi1_test_pattern_13, 
                B0=>spi1_test_pattern_5, C0=>wb_adr_o_0, D0=>'X', 
                M0=>wb_dat_o_5, CE=>int_clk_out_enable_122, CLK=>int_clk_out, 
                LSR=>stm_fpga_spare5_c, OFX1=>open, F1=>open, Q1=>open, 
                OFX0=>open, F0=>n2830, Q0=>spi1_test_pattern_13);
    SLICE_789I: SLOGICB
      generic map (LUT0_INITVAL=>X"CACA")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>spi_test_pattern_enable_3, 
                B0=>tx_lvds_test_pattern_27, C0=>wb_adr_o_0, D0=>'X', M0=>'X', 
                CE=>'X', CLK=>'X', LSR=>'X', OFX1=>open, F1=>open, Q1=>open, 
                OFX0=>open, F0=>n13397, Q0=>open);
    SLICE_790I: SLOGICB
      generic map (LUT0_INITVAL=>X"8080")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>wb_adr_o_2, B0=>wb_adr_o_4, 
                C0=>wb_adr_o_0, D0=>'X', M0=>'X', CE=>'X', CLK=>'X', LSR=>'X', 
                OFX1=>open, F1=>open, Q1=>open, OFX0=>open, F0=>n13044, 
                Q0=>open);
    SLICE_791I: SLOGICB
      generic map (LUT0_INITVAL=>X"CACA")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>spi4_test_pattern_12, 
                B0=>spi4_test_pattern_4, C0=>wb_adr_o_0, D0=>'X', M0=>'X', 
                CE=>'X', CLK=>'X', LSR=>'X', OFX1=>open, F1=>open, Q1=>open, 
                OFX0=>open, F0=>n2867, Q0=>open);
    SLICE_792I: SLOGICB
      generic map (LUT0_INITVAL=>X"CACA")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>spi3_test_pattern_12, 
                B0=>spi3_test_pattern_4, C0=>wb_adr_o_0, D0=>'X', M0=>'X', 
                CE=>'X', CLK=>'X', LSR=>'X', OFX1=>open, F1=>open, Q1=>open, 
                OFX0=>open, F0=>n2855, Q0=>open);
    wifi_i_fifo_dc_SLICE_793I: SLOGICB
      generic map (LUT0_INITVAL=>X"6666")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>wifi_i_fifo_dc_w_gcount_r22, 
                B0=>wifi_i_fifo_dc_w_gcount_r21, C0=>'X', D0=>'X', M0=>'X', 
                CE=>'X', CLK=>'X', LSR=>'X', OFX1=>open, F1=>open, Q1=>open, 
                OFX0=>open, F0=>wifi_i_fifo_dc_wcount_r1, Q0=>open);
    wifi_i_fifo_dc_SLICE_794I: SLOGICB
      generic map (LUT0_INITVAL=>X"9696")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>wifi_i_fifo_dc_w_gcount_r22, 
                B0=>wifi_i_fifo_dc_w_gcount_r21, 
                C0=>wifi_i_fifo_dc_w_gcount_r20, D0=>'X', M0=>'X', CE=>'X', 
                CLK=>'X', LSR=>'X', OFX1=>open, F1=>open, Q1=>open, OFX0=>open, 
                F0=>wifi_i_fifo_dc_wcount_r0, Q0=>open);
    wifi_i_fifo_dc_SLICE_795I: SLOGICB
      generic map (LUT0_INITVAL=>X"6666")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>wifi_i_fifo_dc_r_gcount_w22, 
                B0=>wifi_i_fifo_dc_r_gcount_w21, C0=>'X', D0=>'X', M0=>'X', 
                CE=>'X', CLK=>'X', LSR=>'X', OFX1=>open, F1=>open, Q1=>open, 
                OFX0=>open, F0=>wifi_i_fifo_dc_rcount_w1, Q0=>open);
    wifi_i_fifo_dc_SLICE_796I: SLOGICB
      generic map (LUT0_INITVAL=>X"9696")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>wifi_i_fifo_dc_r_gcount_w22, 
                B0=>wifi_i_fifo_dc_r_gcount_w21, 
                C0=>wifi_i_fifo_dc_r_gcount_w20, D0=>'X', M0=>'X', CE=>'X', 
                CLK=>'X', LSR=>'X', OFX1=>open, F1=>open, Q1=>open, OFX0=>open, 
                F0=>wifi_i_fifo_dc_rcount_w0, Q0=>open);
    wifi_i_fifo_dc_SLICE_797I: SLOGICB
      generic map (LUT0_INITVAL=>X"2222")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>w_rx_24_fifo_push, 
                B0=>wifi_i_fifo_dc_Full, C0=>'X', D0=>'X', M0=>'X', CE=>'X', 
                CLK=>'X', LSR=>'X', OFX1=>open, F1=>open, Q1=>open, OFX0=>open, 
                F0=>wifi_i_fifo_dc_wren_i, Q0=>open);
    subg_q_fifo_dc_SLICE_798I: SLOGICB
      generic map (LUT0_INITVAL=>X"6666")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>subg_q_fifo_dc_w_gcount_r22, 
                B0=>subg_q_fifo_dc_w_gcount_r21, C0=>'X', D0=>'X', M0=>'X', 
                CE=>'X', CLK=>'X', LSR=>'X', OFX1=>open, F1=>open, Q1=>open, 
                OFX0=>open, F0=>subg_q_fifo_dc_wcount_r1, Q0=>open);
    subg_q_fifo_dc_SLICE_799I: SLOGICB
      generic map (LUT0_INITVAL=>X"9696")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>subg_q_fifo_dc_w_gcount_r22, 
                B0=>subg_q_fifo_dc_w_gcount_r21, 
                C0=>subg_q_fifo_dc_w_gcount_r20, D0=>'X', M0=>'X', CE=>'X', 
                CLK=>'X', LSR=>'X', OFX1=>open, F1=>open, Q1=>open, OFX0=>open, 
                F0=>subg_q_fifo_dc_wcount_r0, Q0=>open);
    subg_q_fifo_dc_SLICE_800I: SLOGICB
      generic map (LUT0_INITVAL=>X"6666")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>subg_q_fifo_dc_r_gcount_w22, 
                B0=>subg_q_fifo_dc_r_gcount_w21, C0=>'X', D0=>'X', M0=>'X', 
                CE=>'X', CLK=>'X', LSR=>'X', OFX1=>open, F1=>open, Q1=>open, 
                OFX0=>open, F0=>subg_q_fifo_dc_rcount_w1, Q0=>open);
    subg_q_fifo_dc_SLICE_801I: SLOGICB
      generic map (LUT0_INITVAL=>X"9696")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>subg_q_fifo_dc_r_gcount_w22, 
                B0=>subg_q_fifo_dc_r_gcount_w21, 
                C0=>subg_q_fifo_dc_r_gcount_w20, D0=>'X', M0=>'X', CE=>'X', 
                CLK=>'X', LSR=>'X', OFX1=>open, F1=>open, Q1=>open, OFX0=>open, 
                F0=>subg_q_fifo_dc_rcount_w0, Q0=>open);
    subg_q_fifo_dc_SLICE_802I: SLOGICB
      generic map (LUT0_INITVAL=>X"2222")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>w_rx_09_fifo_push, 
                B0=>subg_q_fifo_dc_Full, C0=>'X', D0=>'X', M0=>'X', CE=>'X', 
                CLK=>'X', LSR=>'X', OFX1=>open, F1=>open, Q1=>open, OFX0=>open, 
                F0=>subg_q_fifo_dc_wren_i, Q0=>open);
    SLICE_803I: SLOGICB
      generic map (LUT0_INITVAL=>X"E2E2")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>reg0_7, B0=>wb_adr_o_0, 
                C0=>reg1_7, D0=>'X', M0=>'X', CE=>'X', CLK=>'X', LSR=>'X', 
                OFX1=>open, F1=>open, Q1=>open, OFX0=>open, F0=>n14058, 
                Q0=>open);
    SLICE_804I: SLOGICB
      generic map (LUT0_INITVAL=>X"5555")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>wifi_i_empty, B0=>'X', 
                C0=>'X', D0=>'X', M0=>'X', CE=>'X', CLK=>'X', LSR=>'X', 
                OFX1=>open, F1=>open, Q1=>open, OFX0=>open, F0=>n14347, 
                Q0=>open);
    i2c_slave_SLICE_805I: SLOGICB
      generic map (LUT0_INITVAL=>X"EEEE")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>wb_adr_o_8, B0=>wb_adr_o_7, 
                C0=>'X', D0=>'X', M0=>'X', CE=>'X', CLK=>'X', LSR=>'X', 
                OFX1=>open, F1=>open, Q1=>open, OFX0=>open, F0=>n14356, 
                Q0=>open);
    i2c_slave_SLICE_806I: SLOGICB
      generic map (LUT0_INITVAL=>X"8888")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>i2c_slave_n1528, 
                B0=>i2c_slave_data_out_last, C0=>'X', D0=>'X', M0=>'X', 
                CE=>'X', CLK=>'X', LSR=>'X', OFX1=>open, F1=>open, Q1=>open, 
                OFX0=>open, F0=>i2c_slave_n13246, Q0=>open);
    i2c_slave_SLICE_807I: SLOGICB
      generic map (LUT0_INITVAL=>X"8888")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>wb_adr_o_0, B0=>wb_adr_o_1, 
                C0=>'X', D0=>'X', M0=>'X', CE=>'X', CLK=>'X', LSR=>'X', 
                OFX1=>open, F1=>open, Q1=>open, OFX0=>open, 
                F0=>i2c_slave_n14350, Q0=>open);
    i2c_slave_SLICE_808I: SLOGICB
      generic map (LUT0_INITVAL=>X"EEEE")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>i2c_slave_n1526, 
                B0=>i2c_slave_n1525, C0=>'X', D0=>'X', M0=>'X', CE=>'X', 
                CLK=>'X', LSR=>'X', OFX1=>open, F1=>open, Q1=>open, OFX0=>open, 
                F0=>i2c_slave_n3934, Q0=>open);
    i2c_slave_SLICE_809I: SLOGICB
      generic map (LUT0_INITVAL=>X"4444")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>i2c_slave_wb_adr_o_13, 
                B0=>wb_adr_o_2, C0=>'X', D0=>'X', M0=>'X', CE=>'X', CLK=>'X', 
                LSR=>'X', OFX1=>open, F1=>open, Q1=>open, OFX0=>open, 
                F0=>i2c_slave_n12878, Q0=>open);
    i2c_slave_SLICE_810I: SLOGICB
      generic map (LUT0_INITVAL=>X"FEFE")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>i2c_slave_wb_adr_o_13, 
                B0=>wb_adr_o_8, C0=>wb_adr_o_1, D0=>'X', M0=>'X', CE=>'X', 
                CLK=>'X', LSR=>'X', OFX1=>open, F1=>open, Q1=>open, OFX0=>open, 
                F0=>i2c_slave_n12606, Q0=>open);
    i2c_slave_SLICE_811I: SLOGICB
      generic map (LUT0_INITVAL=>X"BBBB")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>i2c_slave_data_out_valid, 
                B0=>bus_addressed, C0=>'X', D0=>'X', M0=>'X', CE=>'X', 
                CLK=>'X', LSR=>'X', OFX1=>open, F1=>open, Q1=>open, OFX0=>open, 
                F0=>i2c_slave_n14371, Q0=>open);
    i2c_slave_SLICE_812I: SLOGICB
      generic map (LUT0_INITVAL=>X"0008")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>wb_adr_o_1, B0=>wb_adr_o_3, 
                C0=>wb_adr_o_8, D0=>wb_adr_o_0, M0=>'X', CE=>'X', CLK=>'X', 
                LSR=>'X', OFX1=>open, F1=>open, Q1=>open, OFX0=>open, 
                F0=>i2c_slave_n13030, Q0=>open);
    i2c_slave_SLICE_813I: SLOGICB
      generic map (LUT0_INITVAL=>X"CACA")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>i2c_slave_data_out_0, 
                B0=>wb_dat_o_0, C0=>i2c_slave_count_reg_0, D0=>'X', M0=>'X', 
                CE=>'X', CLK=>'X', LSR=>'X', OFX1=>open, F1=>open, Q1=>open, 
                OFX0=>open, F0=>i2c_slave_data_next_7_N_737_0, Q0=>open);
    i2c_slave_SLICE_814I: SLOGICB
      generic map (LUT0_INITVAL=>X"FFFE")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>i2c_slave_wb_adr_o_10, 
                B0=>i2c_slave_wb_adr_o_12, C0=>wb_adr_o_8, 
                D0=>i2c_slave_wb_adr_o_13, M0=>'X', CE=>'X', CLK=>'X', 
                LSR=>'X', OFX1=>open, F1=>open, Q1=>open, OFX0=>open, 
                F0=>i2c_slave_n13354, Q0=>open);
    i2c_slave_SLICE_815I: SLOGICB
      generic map (LUT0_INITVAL=>X"0404")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>wb_adr_o_1, B0=>wb_adr_o_0, 
                C0=>wb_adr_o_2, D0=>'X', M0=>'X', CE=>'X', CLK=>'X', LSR=>'X', 
                OFX1=>open, F1=>open, Q1=>open, OFX0=>open, 
                F0=>i2c_slave_n14331, Q0=>open);
    i2c_slave_SLICE_816I: SLOGICB
      generic map (LUT0_INITVAL=>X"EEEE")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>i2c_slave_wb_adr_o_10, 
                B0=>i2c_slave_wb_adr_o_15, C0=>'X', D0=>'X', M0=>'X', CE=>'X', 
                CLK=>'X', LSR=>'X', OFX1=>open, F1=>open, Q1=>open, OFX0=>open, 
                F0=>i2c_slave_n14387, Q0=>open);
    i2c_slave_SLICE_817I: SLOGICB
      generic map (LUT0_INITVAL=>X"EEEE")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>i2c_slave_count_reg_3, 
                B0=>i2c_slave_count_reg_2, C0=>'X', D0=>'X', M0=>'X', CE=>'X', 
                CLK=>'X', LSR=>'X', OFX1=>open, F1=>open, Q1=>open, OFX0=>open, 
                F0=>i2c_slave_n14388, Q0=>open);
    i2c_slave_SLICE_818I: SLOGICB
      generic map (LUT0_INITVAL=>X"FFFE")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>i2c_slave_count_reg_3, 
                B0=>i2c_slave_count_reg_2, C0=>i2c_slave_count_reg_5, 
                D0=>i2c_slave_count_reg_4, M0=>'X', CE=>'X', CLK=>'X', 
                LSR=>'X', OFX1=>open, F1=>open, Q1=>open, OFX0=>open, 
                F0=>i2c_slave_n13098, Q0=>open);
    i2c_slave_SLICE_819I: SLOGICB
      generic map (LUT0_INITVAL=>X"4444")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>i2c_slave_wb_adr_o_15, 
                B0=>wb_adr_o_4, C0=>'X', D0=>'X', M0=>'X', CE=>'X', CLK=>'X', 
                LSR=>'X', OFX1=>open, F1=>open, Q1=>open, OFX0=>open, 
                F0=>i2c_slave_n12842, Q0=>open);
    i2c_slave_SLICE_820I: SLOGICB
      generic map (LUT0_INITVAL=>X"FEFE")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>i2c_slave_count_reg_2, 
                B0=>i2c_slave_count_reg_0, C0=>i2c_slave_count_reg_4, D0=>'X', 
                M0=>'X', CE=>'X', CLK=>'X', LSR=>'X', OFX1=>open, F1=>open, 
                Q1=>open, OFX0=>open, F0=>i2c_slave_n13090, Q0=>open);
    i2c_slave_SLICE_821I: SLOGICB
      generic map (LUT0_INITVAL=>X"0400")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>i2c_slave_data_out_valid, 
                B0=>bus_addressed, C0=>i2c_slave_data_in_valid_reg, 
                D0=>i2c_slave_data_in_ready, M0=>'X', CE=>'X', CLK=>'X', 
                LSR=>'X', OFX1=>open, F1=>open, Q1=>open, OFX0=>open, 
                F0=>i2c_slave_n14307, Q0=>open);
    i2c_slave_SLICE_822I: SLOGICB
      generic map (LUT0_INITVAL=>X"77F7")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>i2c_slave_data_out_ready_reg, 
                B0=>i2c_slave_data_out_valid, C0=>i2c_slave_n14298, 
                D0=>i2c_slave_data_out_last, M0=>'X', CE=>'X', CLK=>'X', 
                LSR=>'X', OFX1=>open, F1=>open, Q1=>open, OFX0=>open, 
                F0=>i2c_slave_n14275, Q0=>open);
    i2c_slave_SLICE_823I: SLOGICB
      generic map (LUT0_INITVAL=>X"7070")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>i2c_slave_data_out_ready_reg, 
                B0=>i2c_slave_data_out_valid, C0=>i2c_slave_n1528, D0=>'X', 
                M0=>'X', CE=>'X', CLK=>'X', LSR=>'X', OFX1=>open, F1=>open, 
                Q1=>open, OFX0=>open, F0=>i2c_slave_n3863, Q0=>open);
    i2c_slave_SLICE_824I: SLOGICB
      generic map (LUT0_INITVAL=>X"1010")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>i2c_slave_n1527, 
                B0=>i2c_slave_n1524, C0=>i2c_slave_data_out_3, D0=>'X', 
                M0=>'X', CE=>'X', CLK=>'X', LSR=>'X', OFX1=>open, F1=>open, 
                Q1=>open, OFX0=>open, F0=>i2c_slave_n10810, Q0=>open);
    i2c_slave_SLICE_825I: SLOGICB
      generic map (LUT0_INITVAL=>X"1010")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>i2c_slave_n1527, 
                B0=>i2c_slave_n1524, C0=>i2c_slave_data_out_2, D0=>'X', 
                M0=>'X', CE=>'X', CLK=>'X', LSR=>'X', OFX1=>open, F1=>open, 
                Q1=>open, OFX0=>open, F0=>i2c_slave_n10812, Q0=>open);
    i2c_slave_SLICE_826I: SLOGICB
      generic map (LUT0_INITVAL=>X"EEEE")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>i2c_slave_wb_adr_o_13, 
                B0=>wb_adr_o_7, C0=>'X', D0=>'X', M0=>'X', CE=>'X', CLK=>'X', 
                LSR=>'X', OFX1=>open, F1=>open, Q1=>open, OFX0=>open, 
                F0=>i2c_slave_n13310, Q0=>open);
    i2c_slave_SLICE_827I: SLOGICB
      generic map (LUT0_INITVAL=>X"1010")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>i2c_slave_n1527, 
                B0=>i2c_slave_n1524, C0=>i2c_slave_data_out_5, D0=>'X', 
                M0=>'X', CE=>'X', CLK=>'X', LSR=>'X', OFX1=>open, F1=>open, 
                Q1=>open, OFX0=>open, F0=>i2c_slave_n10790, Q0=>open);
    i2c_slave_SLICE_828I: SLOGICB
      generic map (LUT0_INITVAL=>X"1010")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>i2c_slave_n1527, 
                B0=>i2c_slave_n1524, C0=>i2c_slave_data_out_4, D0=>'X', 
                M0=>'X', CE=>'X', CLK=>'X', LSR=>'X', OFX1=>open, F1=>open, 
                Q1=>open, OFX0=>open, F0=>i2c_slave_n10792, Q0=>open);
    i2c_slave_SLICE_829I: SLOGICB
      generic map (LUT0_INITVAL=>X"1010")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>i2c_slave_n1527, 
                B0=>i2c_slave_n1524, C0=>i2c_slave_data_out_7, D0=>'X', 
                M0=>'X', CE=>'X', CLK=>'X', LSR=>'X', OFX1=>open, F1=>open, 
                Q1=>open, OFX0=>open, F0=>i2c_slave_n10802, Q0=>open);
    i2c_slave_SLICE_830I: SLOGICB
      generic map (LUT0_INITVAL=>X"1010")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>i2c_slave_n1527, 
                B0=>i2c_slave_n1524, C0=>i2c_slave_data_out_6, D0=>'X', 
                M0=>'X', CE=>'X', CLK=>'X', LSR=>'X', OFX1=>open, F1=>open, 
                Q1=>open, OFX0=>open, F0=>i2c_slave_n10804, Q0=>open);
    i2c_slave_SLICE_831I: SLOGICB
      generic map (LUT0_INITVAL=>X"1010")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>i2c_slave_n1527, 
                B0=>i2c_slave_n1524, C0=>i2c_slave_data_out_0, D0=>'X', 
                M0=>'X', CE=>'X', CLK=>'X', LSR=>'X', OFX1=>open, F1=>open, 
                Q1=>open, OFX0=>open, F0=>i2c_slave_n10800, Q0=>open);
    i2c_slave_SLICE_832I: SLOGICB
      generic map (LUT0_INITVAL=>X"1010")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>i2c_slave_n1527, 
                B0=>i2c_slave_n1524, C0=>i2c_slave_data_out_1, D0=>'X', 
                M0=>'X', CE=>'X', CLK=>'X', LSR=>'X', OFX1=>open, F1=>open, 
                Q1=>open, OFX0=>open, F0=>i2c_slave_n10814, Q0=>open);
    i2c_slave_SLICE_833I: SLOGICB
      generic map (LUT0_INITVAL=>X"EEEE")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>wb_adr_o_4, 
                B0=>i2c_slave_wb_adr_o_13, C0=>'X', D0=>'X', M0=>'X', CE=>'X', 
                CLK=>'X', LSR=>'X', OFX1=>open, F1=>open, Q1=>open, OFX0=>open, 
                F0=>i2c_slave_n13334, Q0=>open);
    i2c_slave_SLICE_834I: SLOGICB
      generic map (LUT0_INITVAL=>X"EEEE")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>i2c_slave_count_reg_1, 
                B0=>i2c_slave_count_reg_2, C0=>'X', D0=>'X', M0=>'X', CE=>'X', 
                CLK=>'X', LSR=>'X', OFX1=>open, F1=>open, Q1=>open, OFX0=>open, 
                F0=>i2c_slave_n14336, Q0=>open);
    i2c_slave_SLICE_835I: SLOGICB
      generic map (LUT0_INITVAL=>X"8F80")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>i2c_slave_n14278, 
                B0=>i2c_slave_int_clk_out_enable_12, C0=>i2c_slave_n1525, 
                D0=>i2c_slave_n1529, M0=>'X', CE=>'X', CLK=>'X', LSR=>'X', 
                OFX1=>open, F1=>open, Q1=>open, OFX0=>open, 
                F0=>i2c_slave_int_clk_out_enable_38, Q0=>open);
    i2c_slave_SLICE_836I: SLOGICB
      generic map (LUT0_INITVAL=>X"1010")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>wb_adr_o_8, 
                B0=>i2c_slave_wb_adr_o_13, C0=>wb_adr_o_3, D0=>'X', M0=>'X', 
                CE=>'X', CLK=>'X', LSR=>'X', OFX1=>open, F1=>open, Q1=>open, 
                OFX0=>open, F0=>i2c_slave_n12728, Q0=>open);
    i2c_slave_SLICE_837I: SLOGICB
      generic map (LUT0_INITVAL=>X"CACA")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>i2c_slave_data_out_1, 
                B0=>wb_dat_o_1, C0=>i2c_slave_count_reg_0, D0=>'X', M0=>'X', 
                CE=>'X', CLK=>'X', LSR=>'X', OFX1=>open, F1=>open, Q1=>open, 
                OFX0=>open, F0=>i2c_slave_data_next_7_N_737_1, Q0=>open);
    i2c_slave_SLICE_838I: SLOGICB
      generic map (LUT0_INITVAL=>X"CACA")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>i2c_slave_data_out_2, 
                B0=>wb_dat_o_2, C0=>i2c_slave_count_reg_0, D0=>'X', M0=>'X', 
                CE=>'X', CLK=>'X', LSR=>'X', OFX1=>open, F1=>open, Q1=>open, 
                OFX0=>open, F0=>i2c_slave_data_next_7_N_737_2, Q0=>open);
    i2c_slave_SLICE_839I: SLOGICB
      generic map (LUT0_INITVAL=>X"CACA")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>i2c_slave_data_out_3, 
                B0=>wb_dat_o_3, C0=>i2c_slave_count_reg_0, D0=>'X', M0=>'X', 
                CE=>'X', CLK=>'X', LSR=>'X', OFX1=>open, F1=>open, Q1=>open, 
                OFX0=>open, F0=>i2c_slave_data_next_7_N_737_3, Q0=>open);
    i2c_slave_SLICE_840I: SLOGICB
      generic map (LUT0_INITVAL=>X"CACA")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>i2c_slave_data_out_4, 
                B0=>wb_dat_o_4, C0=>i2c_slave_count_reg_0, D0=>'X', M0=>'X', 
                CE=>'X', CLK=>'X', LSR=>'X', OFX1=>open, F1=>open, Q1=>open, 
                OFX0=>open, F0=>i2c_slave_data_next_7_N_737_4, Q0=>open);
    i2c_slave_SLICE_841I: SLOGICB
      generic map (LUT0_INITVAL=>X"CACA")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>i2c_slave_data_out_5, 
                B0=>wb_dat_o_5, C0=>i2c_slave_count_reg_0, D0=>'X', M0=>'X', 
                CE=>'X', CLK=>'X', LSR=>'X', OFX1=>open, F1=>open, Q1=>open, 
                OFX0=>open, F0=>i2c_slave_data_next_7_N_737_5, Q0=>open);
    i2c_slave_SLICE_842I: SLOGICB
      generic map (LUT0_INITVAL=>X"CACA")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>i2c_slave_data_out_6, 
                B0=>wb_dat_o_6, C0=>i2c_slave_count_reg_0, D0=>'X', M0=>'X', 
                CE=>'X', CLK=>'X', LSR=>'X', OFX1=>open, F1=>open, Q1=>open, 
                OFX0=>open, F0=>i2c_slave_data_next_7_N_737_6, Q0=>open);
    i2c_slave_SLICE_843I: SLOGICB
      generic map (LUT0_INITVAL=>X"CACA")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>i2c_slave_data_out_7, 
                B0=>wb_dat_o_7, C0=>i2c_slave_count_reg_0, D0=>'X', M0=>'X', 
                CE=>'X', CLK=>'X', LSR=>'X', OFX1=>open, F1=>open, Q1=>open, 
                OFX0=>open, F0=>i2c_slave_data_next_7_N_737_7, Q0=>open);
    i2c_slave_SLICE_844I: SLOGICB
      generic map (LUT0_INITVAL=>X"8888")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>wb_ack_i, B0=>i2c_slave_n1527, 
                C0=>'X', D0=>'X', M0=>'X', CE=>'X', CLK=>'X', LSR=>'X', 
                OFX1=>open, F1=>open, Q1=>open, OFX0=>open, 
                F0=>i2c_slave_n1554, Q0=>open);
    i2c_slave_SLICE_845I: SLOGICB
      generic map (LUT0_INITVAL=>X"4444")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>wb_ack_i, B0=>i2c_slave_n1524, 
                C0=>'X', D0=>'X', M0=>'X', CE=>'X', CLK=>'X', LSR=>'X', 
                OFX1=>open, F1=>open, Q1=>open, OFX0=>open, 
                F0=>i2c_slave_n5052, Q0=>open);
    i2c_slave_SLICE_846I: SLOGICB
      generic map (LUT0_INITVAL=>X"2222")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>i2c_slave_n1529, 
                B0=>i2c_slave_data_out_valid, C0=>'X', D0=>'X', M0=>'X', 
                CE=>'X', CLK=>'X', LSR=>'X', OFX1=>open, F1=>open, Q1=>open, 
                OFX0=>open, F0=>i2c_slave_n14344, Q0=>open);
    i2c_slave_SLICE_847I: SLOGICB
      generic map (LUT0_INITVAL=>X"4444")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>i2c_slave_data_out_last, 
                B0=>i2c_slave_n1528, C0=>'X', D0=>'X', M0=>'X', CE=>'X', 
                CLK=>'X', LSR=>'X', OFX1=>open, F1=>open, Q1=>open, OFX0=>open, 
                F0=>i2c_slave_n13188, Q0=>open);
    i2c_slave_SLICE_848I: SLOGICB
      generic map (LUT0_INITVAL=>X"EEEE")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>i2c_slave_n1526, 
                B0=>i2c_slave_n1529, C0=>'X', D0=>'X', M0=>'X', CE=>'X', 
                CLK=>'X', LSR=>'X', OFX1=>open, F1=>open, Q1=>open, OFX0=>open, 
                F0=>i2c_slave_n12450, Q0=>open);
    SLICE_849I: SLOGICB
      generic map (M0MUX=>"SIG", CLKMUX=>"SIG", CEMUX=>"VHI", LSRMUX=>"INV", 
                   GSR=>"DISABLED", LUT0_INITVAL=>X"2222", CHECK_M0=>TRUE, 
                   CHECK_LSR=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>i2c_slave_n1527, B0=>wb_ack_i, 
                C0=>'X', D0=>'X', M0=>wb_stb_o, CE=>'X', CLK=>int_clk_out, 
                LSR=>stm_fpga_spare5_c, OFX1=>open, F1=>open, Q1=>open, 
                OFX0=>open, F0=>i2c_slave_n14334, Q0=>wb_ack_i);
    i2c_slave_i2c_slave_inst_SLICE_850I: SLOGICB
      generic map (LUT0_INITVAL=>X"7777")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>state_reg_0, 
                B0=>i2c_slave_i2c_slave_inst_state_reg_2, C0=>'X', D0=>'X', 
                M0=>'X', CE=>'X', CLK=>'X', LSR=>'X', OFX1=>open, F1=>open, 
                Q1=>open, OFX0=>open, F0=>i2c_slave_i2c_slave_inst_n13424, 
                Q0=>open);
    i2c_slave_i2c_slave_inst_SLICE_851I: SLOGICB
      generic map (LUT0_INITVAL=>X"EEEE")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', 
                A0=>i2c_slave_i2c_slave_inst_data_reg_2, 
                B0=>i2c_slave_i2c_slave_inst_data_reg_5, C0=>'X', D0=>'X', 
                M0=>'X', CE=>'X', CLK=>'X', LSR=>'X', OFX1=>open, F1=>open, 
                Q1=>open, OFX0=>open, F0=>i2c_slave_i2c_slave_inst_n12524, 
                Q0=>open);
    i2c_slave_i2c_slave_inst_SLICE_852I: SLOGICB
      generic map (LUT0_INITVAL=>X"8888")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>i2c_slave_data_in_ready, 
                B0=>i2c_slave_data_in_valid_reg, C0=>'X', D0=>'X', M0=>'X', 
                CE=>'X', CLK=>'X', LSR=>'X', OFX1=>open, F1=>open, Q1=>open, 
                OFX0=>open, F0=>i2c_slave_i2c_slave_inst_n14368, Q0=>open);
    i2c_slave_i2c_slave_inst_SLICE_853I: SLOGICB
      generic map (LUT0_INITVAL=>X"DDDD")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', 
                A0=>i2c_slave_i2c_slave_inst_scl_i_reg, 
                B0=>i2c_slave_i2c_slave_inst_last_scl_i_reg, C0=>'X', D0=>'X', 
                M0=>'X', CE=>'X', CLK=>'X', LSR=>'X', OFX1=>open, F1=>open, 
                Q1=>open, OFX0=>open, F0=>i2c_slave_i2c_slave_inst_n14373, 
                Q0=>open);
    i2c_slave_i2c_slave_inst_SLICE_854I: SLOGICB
      generic map (LUT0_INITVAL=>X"DFDF")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', 
                A0=>i2c_slave_i2c_slave_inst_scl_i_reg, 
                B0=>i2c_slave_i2c_slave_inst_last_scl_i_reg, C0=>sda_i_reg, 
                D0=>'X', M0=>'X', CE=>'X', CLK=>'X', LSR=>'X', OFX1=>open, 
                F1=>open, Q1=>open, OFX0=>open, 
                F0=>i2c_slave_i2c_slave_inst_n14322, Q0=>open);
    i2c_slave_i2c_slave_inst_SLICE_855I: SLOGICB
      generic map (LUT0_INITVAL=>X"00B0")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', 
                A0=>i2c_slave_i2c_slave_inst_n14367, B0=>fpga_scl_out, 
                C0=>i2c_slave_i2c_slave_inst_state_reg_1, 
                D0=>i2c_slave_i2c_slave_inst_n14372, M0=>'X', CE=>'X', 
                CLK=>'X', LSR=>'X', OFX1=>open, F1=>open, Q1=>open, OFX0=>open, 
                F0=>i2c_slave_i2c_slave_inst_n14296, Q0=>open);
    i2c_slave_i2c_slave_inst_SLICE_856I: SLOGICB
      generic map (LUT0_INITVAL=>X"BBBB")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', 
                A0=>i2c_slave_i2c_slave_inst_state_reg_2, 
                B0=>i2c_slave_i2c_slave_inst_state_reg_1, C0=>'X', D0=>'X', 
                M0=>'X', CE=>'X', CLK=>'X', LSR=>'X', OFX1=>open, F1=>open, 
                Q1=>open, OFX0=>open, F0=>i2c_slave_i2c_slave_inst_n14375, 
                Q0=>open);
    i2c_slave_i2c_slave_inst_SLICE_857I: SLOGICB
      generic map (LUT0_INITVAL=>X"5555")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>stm_fpga_spare5_c, B0=>'X', 
                C0=>'X', D0=>'X', M0=>'X', CE=>'X', CLK=>'X', LSR=>'X', 
                OFX1=>open, F1=>open, Q1=>open, OFX0=>open, F0=>n14343, 
                Q0=>open);
    i2c_slave_i2c_slave_inst_SLICE_858I: SLOGICB
      generic map (LUT0_INITVAL=>X"DDDD")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>stm_fpga_spare5_c, 
                B0=>int_clk_out_enable_111, C0=>'X', D0=>'X', M0=>'X', CE=>'X', 
                CLK=>'X', LSR=>'X', OFX1=>open, F1=>open, Q1=>open, OFX0=>open, 
                F0=>int_clk_out_enable_114, Q0=>open);
    SLICE_859I: SLOGICB
      generic map (M0MUX=>"SIG", CLKMUX=>"SIG", CEMUX=>"SIG", LSRMUX=>"INV", 
                   GSR=>"DISABLED", LUT0_INITVAL=>X"DDDD", CHECK_M0=>TRUE, 
                   CHECK_CE=>TRUE, CHECK_LSR=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>stm_fpga_spare5_c, 
                B0=>led_rst, C0=>'X', D0=>'X', M0=>wb_dat_o_1, 
                CE=>int_clk_out_enable_15, CLK=>int_clk_out, 
                LSR=>stm_fpga_spare5_c, OFX1=>open, F1=>open, Q1=>open, 
                OFX0=>open, F0=>fpga_led_N_383, Q0=>led_rst);
    i2c_slave_i2c_slave_inst_SLICE_860I: SLOGICB
      generic map (LUT0_INITVAL=>X"DDDD")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>stm_fpga_spare5_c, 
                B0=>int_clk_out_enable_54, C0=>'X', D0=>'X', M0=>'X', CE=>'X', 
                CLK=>'X', LSR=>'X', OFX1=>open, F1=>open, Q1=>open, OFX0=>open, 
                F0=>int_clk_out_enable_53, Q0=>open);
    i2c_slave_i2c_slave_inst_SLICE_861I: SLOGICB
      generic map (LUT0_INITVAL=>X"1010")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', 
                A0=>i2c_slave_i2c_slave_inst_state_reg_1, B0=>n14324, 
                C0=>i2c_slave_i2c_slave_inst_n22, D0=>'X', M0=>'X', CE=>'X', 
                CLK=>'X', LSR=>'X', OFX1=>open, F1=>open, Q1=>open, OFX0=>open, 
                F0=>i2c_slave_i2c_slave_inst_int_clk_out_enable_188, Q0=>open);
    i2c_slave_i2c_slave_inst_SLICE_862I: SLOGICB
      generic map (LUT0_INITVAL=>X"BFB0")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', 
                A0=>i2c_slave_i2c_slave_inst_n14372, 
                B0=>i2c_slave_i2c_slave_inst_n14318, 
                C0=>i2c_slave_i2c_slave_inst_state_reg_1, 
                D0=>i2c_slave_i2c_slave_inst_n14323, M0=>'X', CE=>'X', 
                CLK=>'X', LSR=>'X', OFX1=>open, F1=>open, Q1=>open, OFX0=>open, 
                F0=>i2c_slave_i2c_slave_inst_n8344, Q0=>open);
    i2c_slave_i2c_slave_inst_SLICE_863I: SLOGICB
      generic map (M0MUX=>"SIG", CLKMUX=>"SIG", CEMUX=>"VHI", 
                   REG0_REGSET=>"SET", GSR=>"DISABLED", SRMODE=>"ASYNC", 
                   LUT0_INITVAL=>X"EEEE", CHECK_M0=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', 
                A0=>i2c_slave_i2c_slave_inst_last_scl_i_reg, B0=>sda_i_reg, 
                C0=>'X', D0=>'X', M0=>i2c_slave_i2c_slave_inst_scl_i_reg, 
                CE=>'X', CLK=>int_clk_out, LSR=>'X', OFX1=>open, F1=>open, 
                Q1=>open, OFX0=>open, F0=>i2c_slave_i2c_slave_inst_n12470, 
                Q0=>i2c_slave_i2c_slave_inst_last_scl_i_reg);
    lvds_rx_24_inst_SLICE_864I: SLOGICB
      generic map (LUT0_INITVAL=>X"EEEE")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>lvds_rx_24_inst_match_count_2, 
                B0=>lvds_rx_24_inst_match_count_1, C0=>'X', D0=>'X', M0=>'X', 
                CE=>'X', CLK=>'X', LSR=>'X', OFX1=>open, F1=>open, Q1=>open, 
                OFX0=>open, F0=>lvds_rx_24_inst_n14357, Q0=>open);
    lvds_rx_24_inst_SLICE_865I: SLOGICB
      generic map (LUT0_INITVAL=>X"8888")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>lvds_rx_24_inst_sr_14, 
                B0=>lvds_rx_24_inst_sr_31, C0=>'X', D0=>'X', M0=>'X', CE=>'X', 
                CLK=>'X', LSR=>'X', OFX1=>open, F1=>open, Q1=>open, OFX0=>open, 
                F0=>lvds_rx_24_inst_n68, Q0=>open);
    lvds_rx_24_inst_SLICE_866I: SLOGICB
      generic map (LUT0_INITVAL=>X"BBBB")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>r_state_0_adj_1181, 
                B0=>r_state_1_adj_1180, C0=>'X', D0=>'X', M0=>'X', CE=>'X', 
                CLK=>'X', LSR=>'X', OFX1=>open, F1=>open, Q1=>open, OFX0=>open, 
                F0=>lvds_rx_24_inst_sdr_rxclk_c_enable_80, Q0=>open);
    lvds_rx_24_inst_SLICE_867I: SLOGICB
      generic map (LUT0_INITVAL=>X"FFFB")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>sample_count_6_adj_1183, 
                B0=>sample_count_0_adj_1187, 
                C0=>lvds_rx_24_inst_sample_count_5, 
                D0=>lvds_rx_24_inst_sample_count_4, M0=>'X', CE=>'X', CLK=>'X', 
                LSR=>'X', OFX1=>open, F1=>open, Q1=>open, OFX0=>open, 
                F0=>lvds_rx_24_inst_n12254, Q0=>open);
    lvds_rx_24_inst_SLICE_868I: SLOGICB
      generic map (LUT0_INITVAL=>X"EAEA")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>lvds_rx_24_inst_sr_9, 
                B0=>lvds_rx_24_inst_r_candidate_offset, 
                C0=>lvds_rx_24_inst_sr_14, D0=>'X', M0=>'X', CE=>'X', CLK=>'X', 
                LSR=>'X', OFX1=>open, F1=>open, Q1=>open, OFX0=>open, 
                F0=>lvds_rx_24_inst_n24, Q0=>open);
    lvds_rx_24_inst_SLICE_869I: SLOGICB
      generic map (LUT0_INITVAL=>X"8000")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>sample_count_1_adj_1186, 
                B0=>sample_count_0_adj_1187, C0=>sample_count_3_adj_1184, 
                D0=>sample_count_2_adj_1185, M0=>'X', CE=>'X', CLK=>'X', 
                LSR=>'X', OFX1=>open, F1=>open, Q1=>open, OFX0=>open, 
                F0=>lvds_rx_24_inst_n14283, Q0=>open);
    lvds_rx_24_inst_SLICE_870I: SLOGICB
      generic map (LUT0_INITVAL=>X"FFFE")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>lvds_rx_24_inst_sr_15, 
                B0=>lvds_rx_24_inst_sr_30, C0=>lvds_rx_24_inst_sr_16, 
                D0=>lvds_rx_24_inst_sr_0, M0=>'X', CE=>'X', CLK=>'X', LSR=>'X', 
                OFX1=>open, F1=>open, Q1=>open, OFX0=>open, 
                F0=>lvds_rx_24_inst_n40, Q0=>open);
    SLICE_871I: SLOGICB
      generic map (M0MUX=>"SIG", CLKMUX=>"SIG", CEMUX=>"SIG", LSRMUX=>"INV", 
                   GSR=>"DISABLED", LUT0_INITVAL=>X"CACA", CHECK_M0=>TRUE, 
                   CHECK_CE=>TRUE, CHECK_LSR=>TRUE)
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>spi2_test_pattern_12, 
                B0=>spi2_test_pattern_4, C0=>wb_adr_o_0, D0=>'X', 
                M0=>wb_dat_o_4, CE=>int_clk_out_enable_111, CLK=>int_clk_out, 
                LSR=>stm_fpga_spare5_c, OFX1=>open, F1=>open, Q1=>open, 
                OFX0=>open, F0=>n2843, Q0=>spi2_test_pattern_4);
    wifi_q_fifo_dc_SLICE_872I: SLOGICB
      generic map (LUT0_INITVAL=>X"6666")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>wifi_q_fifo_dc_w_gcount_r22, 
                B0=>wifi_q_fifo_dc_w_gcount_r21, C0=>'X', D0=>'X', M0=>'X', 
                CE=>'X', CLK=>'X', LSR=>'X', OFX1=>open, F1=>open, Q1=>open, 
                OFX0=>open, F0=>wifi_q_fifo_dc_wcount_r1, Q0=>open);
    wifi_q_fifo_dc_SLICE_873I: SLOGICB
      generic map (LUT0_INITVAL=>X"9696")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>wifi_q_fifo_dc_w_gcount_r22, 
                B0=>wifi_q_fifo_dc_w_gcount_r21, 
                C0=>wifi_q_fifo_dc_w_gcount_r20, D0=>'X', M0=>'X', CE=>'X', 
                CLK=>'X', LSR=>'X', OFX1=>open, F1=>open, Q1=>open, OFX0=>open, 
                F0=>wifi_q_fifo_dc_wcount_r0, Q0=>open);
    wifi_q_fifo_dc_SLICE_874I: SLOGICB
      generic map (LUT0_INITVAL=>X"6666")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>wifi_q_fifo_dc_r_gcount_w22, 
                B0=>wifi_q_fifo_dc_r_gcount_w21, C0=>'X', D0=>'X', M0=>'X', 
                CE=>'X', CLK=>'X', LSR=>'X', OFX1=>open, F1=>open, Q1=>open, 
                OFX0=>open, F0=>wifi_q_fifo_dc_rcount_w1, Q0=>open);
    wifi_q_fifo_dc_SLICE_875I: SLOGICB
      generic map (LUT0_INITVAL=>X"9696")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>wifi_q_fifo_dc_r_gcount_w22, 
                B0=>wifi_q_fifo_dc_r_gcount_w21, 
                C0=>wifi_q_fifo_dc_r_gcount_w20, D0=>'X', M0=>'X', CE=>'X', 
                CLK=>'X', LSR=>'X', OFX1=>open, F1=>open, Q1=>open, OFX0=>open, 
                F0=>wifi_q_fifo_dc_rcount_w0, Q0=>open);
    wifi_q_fifo_dc_SLICE_876I: SLOGICB
      generic map (LUT0_INITVAL=>X"2222")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>w_rx_24_fifo_push, 
                B0=>wifi_q_fifo_dc_Full, C0=>'X', D0=>'X', M0=>'X', CE=>'X', 
                CLK=>'X', LSR=>'X', OFX1=>open, F1=>open, Q1=>open, OFX0=>open, 
                F0=>wifi_q_fifo_dc_wren_i, Q0=>open);
    SLICE_877I: SLOGICB
      generic map (LUT0_INITVAL=>X"0000")
      port map (M1=>'X', FXA=>'X', FXB=>'X', A1=>'X', B1=>'X', C1=>'X', 
                D1=>'X', DI1=>'X', DI0=>'X', A0=>'X', B0=>'X', C0=>'X', 
                D0=>'X', M0=>'X', CE=>'X', CLK=>'X', LSR=>'X', OFX1=>open, 
                F1=>open, Q1=>open, OFX0=>open, F0=>GND_net, Q0=>open);
    fpga_sclI: fpga_sclB
      port map (PADDI=>fpga_scl_in, PADDO=>fpga_scl_out, PADDT=>fpga_scl_out, 
                fpgascl=>fpga_scl);
    sdr_txclkI: sdr_txclkB
      port map (PADDO=>sdr_txclk_c, sdrtxclk=>sdr_txclk);
    fpga_sdaI: fpga_sdaB
      port map (PADDI=>fpga_sda_in, PADDO=>fpga_sda_out, PADDT=>fpga_sda_out, 
                fpgasda=>fpga_sda);
    fpga_neopixelI: fpga_neopixelB
      port map (fpganeopixel=>fpga_neopixel);
    fpga_ledI: fpga_ledB
      port map (PADDO=>fpga_led_c, fpgaled=>fpga_led);
    sdr_txdataI: sdr_txdataB
      port map (IOLDO=>sdr_txdata_c, sdrtxdata=>sdr_txdata);
    sdr_txdata_MGIOLI: sdr_txdata_MGIOL
      port map (IOLDO=>sdr_txdata_c, TXDATA0=>tx_ddr_data_31_N_385, 
                TXDATA1=>tx_ddr_data_30_N_387, LSR=>sdr_txdata_N_388, 
                CLK=>internal_64MHz);
    rf_sel_0I: rf_sel_0B
      port map (rfsel0=>rf_sel_0);
    rf_sel_1I: rf_sel_1B
      port map (rfsel1=>rf_sel_1);
    rf_sel_2I: rf_sel_2B
      port map (rfsel2=>rf_sel_2);
    rf_sel_3I: rf_sel_3B
      port map (rfsel3=>rf_sel_3);
    subg_fem_sel0I: subg_fem_sel0B
      port map (subgfemsel0=>subg_fem_sel0);
    subg_fem_sel1I: subg_fem_sel1B
      port map (subgfemsel1=>subg_fem_sel1);
    wifi_fem_sel0I: wifi_fem_sel0B
      port map (wififemsel0=>wifi_fem_sel0);
    wifi_fem_sel1I: wifi_fem_sel1B
      port map (wififemsel1=>wifi_fem_sel1);
    wifi_fem_csdI: wifi_fem_csdB
      port map (wififemcsd=>wifi_fem_csd);
    wifi_fem_cpsI: wifi_fem_cpsB
      port map (wififemcps=>wifi_fem_cps);
    wifi_fem_crxI: wifi_fem_crxB
      port map (wififemcrx=>wifi_fem_crx);
    wifi_fem_ctxI: wifi_fem_ctxB
      port map (wififemctx=>wifi_fem_ctx);
    wifi_fem_chlI: wifi_fem_chlB
      port map (wififemchl=>wifi_fem_chl);
    subg_fem_cpsI: subg_fem_cpsB
      port map (subgfemcps=>subg_fem_cps);
    subg_fem_ctxI: subg_fem_ctxB
      port map (subgfemctx=>subg_fem_ctx);
    subg_fem_csdI: subg_fem_csdB
      port map (subgfemcsd=>subg_fem_csd);
    spi1_sckI: spi1_sckB
      port map (IOLDO=>spi1_sck_c, spi1sck=>spi1_sck);
    spi1_sck_MGIOLI: spi1_sck_MGIOL
      port map (IOLDO=>spi1_sck_c, TXDATA0=>shift_reg_15_N_1175, 
                LSR=>main_reset_n_N_208, CLK=>internal_80MHz);
    spi1_mosiI: spi1_mosiB
      port map (IOLDO=>spi1_mosi_c, spi1mosi=>spi1_mosi);
    spi1_mosi_MGIOLI: spi1_mosi_MGIOL
      port map (IOLDO=>spi1_mosi_c, TXDATA0=>subg_i_spi_o_mosi_N_1176, 
                TXDATA1=>subg_i_spi_o_mosi_N_1176, LSR=>main_reset_n_N_208, 
                CLK=>internal_80MHz);
    spi2_sckI: spi2_sckB
      port map (IOLDO=>spi2_sck_c, spi2sck=>spi2_sck);
    spi2_sck_MGIOLI: spi2_sck_MGIOL
      port map (IOLDO=>spi2_sck_c, TXDATA0=>shift_reg_15_N_1175_adj_1193, 
                LSR=>main_reset_n_N_208, CLK=>internal_80MHz);
    spi2_mosiI: spi2_mosiB
      port map (IOLDO=>spi2_mosi_c, spi2mosi=>spi2_mosi);
    spi2_mosi_MGIOLI: spi2_mosi_MGIOL
      port map (IOLDO=>spi2_mosi_c, TXDATA0=>subg_q_spi_o_mosi_N_1176, 
                TXDATA1=>subg_q_spi_o_mosi_N_1176, LSR=>main_reset_n_N_208, 
                CLK=>internal_80MHz);
    spi3_sckI: spi3_sckB
      port map (IOLDO=>spi3_sck_c, spi3sck=>spi3_sck);
    spi3_sck_MGIOLI: spi3_sck_MGIOL
      port map (IOLDO=>spi3_sck_c, TXDATA0=>shift_reg_15_N_1175_adj_1194, 
                LSR=>main_reset_n_N_208, CLK=>internal_80MHz);
    spi3_mosiI: spi3_mosiB
      port map (IOLDO=>spi3_mosi_c, spi3mosi=>spi3_mosi);
    spi3_mosi_MGIOLI: spi3_mosi_MGIOL
      port map (IOLDO=>spi3_mosi_c, TXDATA0=>wifi_i_spi_o_mosi_N_1176, 
                TXDATA1=>wifi_i_spi_o_mosi_N_1176, LSR=>main_reset_n_N_208, 
                CLK=>internal_80MHz);
    spi4_sckI: spi4_sckB
      port map (IOLDO=>spi4_sck_c, spi4sck=>spi4_sck);
    spi4_sck_MGIOLI: spi4_sck_MGIOL
      port map (IOLDO=>spi4_sck_c, TXDATA0=>shift_reg_15_N_1175_adj_1195, 
                LSR=>main_reset_n_N_208, CLK=>internal_80MHz);
    spi4_mosiI: spi4_mosiB
      port map (IOLDO=>spi4_mosi_c, spi4mosi=>spi4_mosi);
    spi4_mosi_MGIOLI: spi4_mosi_MGIOL
      port map (IOLDO=>spi4_mosi_c, TXDATA0=>wifi_q_spi_o_mosi_N_1176, 
                TXDATA1=>wifi_q_spi_o_mosi_N_1176, LSR=>main_reset_n_N_208, 
                CLK=>internal_80MHz);
    fpga_ufl_p7I: fpga_ufl_p7B
      port map (PADDO=>sdr_rxclk_c, fpgauflp7=>fpga_ufl_p7);
    fpga_ufl_p8I: fpga_ufl_p8B
      port map (PADDO=>fpga_ufl_p8_c_c, fpgauflp8=>fpga_ufl_p8);
    dpll_clkout2I: dpll_clkout2B
      port map (PADDI=>dpll_clkout2_c, dpllclkout2=>dpll_clkout2);
    dpll_clkout0I: dpll_clkout0B
      port map (PADDI=>dpll_clkout0_c, dpllclkout0=>dpll_clkout0);
    sdr_rx_wifiI: sdr_rx_wifiB
      port map (PADDI=>sdr_rx_wifi_c, sdrrxwifi=>sdr_rx_wifi);
    sdr_rx_wifi_MGIOLI: sdr_rx_wifi_MGIOL
      port map (DI=>sdr_rx_wifi_c, LSR=>main_reset_n_N_208, CLK=>sdr_rxclk_c, 
                RXDATA0=>w_lvds_rx_24_d0, RXDATA1=>w_lvds_rx_24_d1);
    sdr_rx_subgI: sdr_rx_subgB
      port map (PADDI=>fpga_ufl_p8_c_c, sdrrxsubg=>sdr_rx_subg);
    sdr_rx_subg_MGIOLI: sdr_rx_subg_MGIOL
      port map (DI=>fpga_ufl_p8_c_c, LSR=>main_reset_n_N_208, CLK=>sdr_rxclk_c, 
                RXDATA0=>w_lvds_rx_09_d0, RXDATA1=>w_lvds_rx_09_d1);
    sdr_rxclkI: sdr_rxclkB
      port map (PADDI=>sdr_rxclk_c, sdrrxclk=>sdr_rxclk);
    stm_fpga_spare1I: stm_fpga_spare1B
      port map (PADDI=>stm_fpga_spare1_c, stmfpgaspare1=>stm_fpga_spare1);
    stm_fpga_spare2I: stm_fpga_spare2B
      port map (PADDI=>stm_fpga_spare2_c, stmfpgaspare2=>stm_fpga_spare2);
    stm_fpga_spare5I: stm_fpga_spare5B
      port map (PADDI=>stm_fpga_spare5_c, stmfpgaspare5=>stm_fpga_spare5);
    my_pll_PLLInst_0I: my_pll_PLLInst_0
      port map (CLKI=>dpll_clkout2_c, CLKFB=>internal_64MHz, STDBY=>GND_net, 
                RST=>n14343, LOCK=>pll_lock, CLKOS3=>sdr_txclk_c, 
                CLKOS2=>internal_80MHz, CLKOP=>internal_64MHz);
    osch_instI: osch_inst
      port map (OSC=>int_clk_out);
    subg_i_fifo_dc_pdp_ram_0_0_0I: subg_i_fifo_dc_pdp_ram_0_0_0
      port map (DIA15=>w_rx_09_fifo_data_31, DIA14=>w_rx_09_fifo_data_30, 
                DIA13=>w_rx_09_fifo_data_29, DIA12=>w_rx_09_fifo_data_28, 
                DIA11=>w_rx_09_fifo_data_27, DIA10=>w_rx_09_fifo_data_26, 
                DIA9=>w_rx_09_fifo_data_25, DIA8=>w_rx_09_fifo_data_24, 
                DIA7=>w_rx_09_fifo_data_23, DIA6=>w_rx_09_fifo_data_22, 
                DIA5=>w_rx_09_fifo_data_21, DIA4=>w_rx_09_fifo_data_20, 
                DIA3=>w_rx_09_fifo_data_19, DIA2=>w_rx_09_fifo_data_18, 
                DIA1=>w_rx_09_fifo_data_17, DIA0=>w_rx_09_fifo_data_16, 
                ADA5=>subg_i_fifo_dc_wptr_1, ADA4=>subg_i_fifo_dc_wptr_0, 
                CEA=>subg_i_fifo_dc_wren_i, OCEA=>subg_i_fifo_dc_wren_i, 
                RSTA=>main_reset_n_N_208, CLKA=>sdr_rxclk_c, 
                CLKB=>internal_80MHz, RSTB=>main_reset_n_N_208, 
                OCEB=>subg_i_empty, CEB=>subg_i_empty, 
                DOB0=>subg_i_fifo_data_out_0, DOB1=>subg_i_fifo_data_out_1, 
                DOB2=>subg_i_fifo_data_out_2, DOB3=>subg_i_fifo_data_out_3, 
                DOB4=>subg_i_fifo_data_out_4, DOB5=>subg_i_fifo_data_out_5, 
                DOB6=>subg_i_fifo_data_out_6, DOB7=>subg_i_fifo_data_out_7, 
                DOB8=>subg_i_fifo_data_out_8, DOB9=>subg_i_fifo_data_out_9, 
                DOB10=>subg_i_fifo_data_out_10, DOB11=>subg_i_fifo_data_out_11, 
                DOB12=>subg_i_fifo_data_out_12, DOB13=>subg_i_fifo_data_out_13, 
                DOB14=>subg_i_fifo_data_out_14, DOB15=>subg_i_fifo_data_out_15, 
                ADB4=>subg_i_fifo_dc_rptr_0, ADB5=>subg_i_fifo_dc_rptr_1);
    wifi_i_fifo_dc_pdp_ram_0_0_0I: wifi_i_fifo_dc_pdp_ram_0_0_0
      port map (DIA15=>w_rx_24_fifo_data_31, DIA14=>w_rx_24_fifo_data_30, 
                DIA13=>w_rx_24_fifo_data_29, DIA12=>w_rx_24_fifo_data_28, 
                DIA11=>w_rx_24_fifo_data_27, DIA10=>w_rx_24_fifo_data_26, 
                DIA9=>w_rx_24_fifo_data_25, DIA8=>w_rx_24_fifo_data_24, 
                DIA7=>w_rx_24_fifo_data_23, DIA6=>w_rx_24_fifo_data_22, 
                DIA5=>w_rx_24_fifo_data_21, DIA4=>w_rx_24_fifo_data_20, 
                DIA3=>w_rx_24_fifo_data_19, DIA2=>w_rx_24_fifo_data_18, 
                DIA1=>w_rx_24_fifo_data_17, DIA0=>w_rx_24_fifo_data_16, 
                ADA5=>wifi_i_fifo_dc_wptr_1, ADA4=>wifi_i_fifo_dc_wptr_0, 
                CEA=>wifi_i_fifo_dc_wren_i, OCEA=>wifi_i_fifo_dc_wren_i, 
                RSTA=>main_reset_n_N_208, CLKA=>sdr_rxclk_c, 
                CLKB=>internal_80MHz, RSTB=>main_reset_n_N_208, 
                OCEB=>wifi_i_empty, CEB=>wifi_i_empty, 
                DOB0=>wifi_i_fifo_data_out_0, DOB1=>wifi_i_fifo_data_out_1, 
                DOB2=>wifi_i_fifo_data_out_2, DOB3=>wifi_i_fifo_data_out_3, 
                DOB4=>wifi_i_fifo_data_out_4, DOB5=>wifi_i_fifo_data_out_5, 
                DOB6=>wifi_i_fifo_data_out_6, DOB7=>wifi_i_fifo_data_out_7, 
                DOB8=>wifi_i_fifo_data_out_8, DOB9=>wifi_i_fifo_data_out_9, 
                DOB10=>wifi_i_fifo_data_out_10, DOB11=>wifi_i_fifo_data_out_11, 
                DOB12=>wifi_i_fifo_data_out_12, DOB13=>wifi_i_fifo_data_out_13, 
                DOB14=>wifi_i_fifo_data_out_14, DOB15=>wifi_i_fifo_data_out_15, 
                ADB4=>wifi_i_fifo_dc_rptr_0, ADB5=>wifi_i_fifo_dc_rptr_1);
    subg_q_fifo_dc_pdp_ram_0_0_0I: subg_q_fifo_dc_pdp_ram_0_0_0
      port map (DIA15=>w_rx_09_fifo_data_15, DIA14=>w_rx_09_fifo_data_14, 
                DIA13=>w_rx_09_fifo_data_13, DIA12=>w_rx_09_fifo_data_12, 
                DIA11=>w_rx_09_fifo_data_11, DIA10=>w_rx_09_fifo_data_10, 
                DIA9=>w_rx_09_fifo_data_9, DIA8=>w_rx_09_fifo_data_8, 
                DIA7=>w_rx_09_fifo_data_7, DIA6=>w_rx_09_fifo_data_6, 
                DIA5=>w_rx_09_fifo_data_5, DIA4=>w_rx_09_fifo_data_4, 
                DIA3=>w_rx_09_fifo_data_3, DIA2=>w_rx_09_fifo_data_2, 
                DIA1=>w_rx_09_fifo_data_1, DIA0=>w_rx_09_fifo_data_0, 
                ADA5=>subg_q_fifo_dc_wptr_1, ADA4=>subg_q_fifo_dc_wptr_0, 
                CEA=>subg_q_fifo_dc_wren_i, OCEA=>subg_q_fifo_dc_wren_i, 
                RSTA=>main_reset_n_N_208, CLKA=>sdr_rxclk_c, 
                CLKB=>internal_80MHz, RSTB=>main_reset_n_N_208, 
                OCEB=>subg_q_empty, CEB=>subg_q_empty, 
                DOB0=>subg_q_fifo_data_out_0, DOB1=>subg_q_fifo_data_out_1, 
                DOB2=>subg_q_fifo_data_out_2, DOB3=>subg_q_fifo_data_out_3, 
                DOB4=>subg_q_fifo_data_out_4, DOB5=>subg_q_fifo_data_out_5, 
                DOB6=>subg_q_fifo_data_out_6, DOB7=>subg_q_fifo_data_out_7, 
                DOB8=>subg_q_fifo_data_out_8, DOB9=>subg_q_fifo_data_out_9, 
                DOB10=>subg_q_fifo_data_out_10, DOB11=>subg_q_fifo_data_out_11, 
                DOB12=>subg_q_fifo_data_out_12, DOB13=>subg_q_fifo_data_out_13, 
                DOB14=>subg_q_fifo_data_out_14, DOB15=>subg_q_fifo_data_out_15, 
                ADB4=>subg_q_fifo_dc_rptr_0, ADB5=>subg_q_fifo_dc_rptr_1);
    second_pll_PLLInst_0I: second_pll_PLLInst_0
      port map (CLKI=>dpll_clkout0_c, CLKFB=>second_pll_CLKOP, STDBY=>GND_net, 
                RST=>n14343, LOCK=>second_pll_lock, CLKOP=>second_pll_CLKOP);
    GSR_INST: GSR_INSTB
      port map (GSRNET=>n14366);
    wifi_q_fifo_dc_pdp_ram_0_0_0I: wifi_q_fifo_dc_pdp_ram_0_0_0
      port map (DIA15=>w_rx_24_fifo_data_15, DIA14=>w_rx_24_fifo_data_14, 
                DIA13=>w_rx_24_fifo_data_13, DIA12=>w_rx_24_fifo_data_12, 
                DIA11=>w_rx_24_fifo_data_11, DIA10=>w_rx_24_fifo_data_10, 
                DIA9=>w_rx_24_fifo_data_9, DIA8=>w_rx_24_fifo_data_8, 
                DIA7=>w_rx_24_fifo_data_7, DIA6=>w_rx_24_fifo_data_6, 
                DIA5=>w_rx_24_fifo_data_5, DIA4=>w_rx_24_fifo_data_4, 
                DIA3=>w_rx_24_fifo_data_3, DIA2=>w_rx_24_fifo_data_2, 
                DIA1=>w_rx_24_fifo_data_1, DIA0=>w_rx_24_fifo_data_0, 
                ADA5=>wifi_q_fifo_dc_wptr_1, ADA4=>wifi_q_fifo_dc_wptr_0, 
                CEA=>wifi_q_fifo_dc_wren_i, OCEA=>wifi_q_fifo_dc_wren_i, 
                RSTA=>main_reset_n_N_208, CLKA=>sdr_rxclk_c, 
                CLKB=>internal_80MHz, RSTB=>main_reset_n_N_208, 
                OCEB=>wifi_q_empty, CEB=>wifi_q_empty, 
                DOB0=>wifi_q_fifo_data_out_0, DOB1=>wifi_q_fifo_data_out_1, 
                DOB2=>wifi_q_fifo_data_out_2, DOB3=>wifi_q_fifo_data_out_3, 
                DOB4=>wifi_q_fifo_data_out_4, DOB5=>wifi_q_fifo_data_out_5, 
                DOB6=>wifi_q_fifo_data_out_6, DOB7=>wifi_q_fifo_data_out_7, 
                DOB8=>wifi_q_fifo_data_out_8, DOB9=>wifi_q_fifo_data_out_9, 
                DOB10=>wifi_q_fifo_data_out_10, DOB11=>wifi_q_fifo_data_out_11, 
                DOB12=>wifi_q_fifo_data_out_12, DOB13=>wifi_q_fifo_data_out_13, 
                DOB14=>wifi_q_fifo_data_out_14, DOB15=>wifi_q_fifo_data_out_15, 
                ADB4=>wifi_q_fifo_dc_rptr_0, ADB5=>wifi_q_fifo_dc_rptr_1);
    VHI_INST: VHI
      port map (Z=>VCCI);
    PUR_INST: PUR
      port map (PUR=>VCCI);
  end Structure;



  library IEEE, vital2000, ECP5U;
  configuration Structure_CON of top is
    for Structure
    end for;
  end Structure_CON;


